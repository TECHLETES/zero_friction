openapi: 3.0.1
info:
  title: Billing
  description: Billing API
  version: '1.0'
servers:
  - url: https://api.zerofriction.co/api/bill
paths:
  /AnnualStatements/filter:
    post:
      tags:
        - AnnualStatements
      summary: Retrieves all annual statements based on the provided query parameters.
      description: Retrieves all annual statements based on the provided query parameters.
      operationId: post-annualstatements-filter
      parameters:
        - name: orderBy
          in: query
          description: The order by clause.
          schema:
            type: string
        - name: continuationToken
          in: header
          description: The continuation token for pagination.
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: The query parameters for filtering annual statements.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/GetAnnualStatementsQueryParams'
            example:
              flexSearch: string
              includeOnlyIds:
                - string
              excludeIds:
                - string
              customerId: string
              statuses:
                - string
              year: 0
              limit: 0
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/GetAnnualStatementsQueryParams'
            example:
              flexSearch: string
              includeOnlyIds:
                - string
              excludeIds:
                - string
              customerId: string
              statuses:
                - string
              year: 0
              limit: 0
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/GetAnnualStatementsQueryParams'
            example:
              flexSearch: string
              includeOnlyIds:
                - string
              excludeIds:
                - string
              customerId: string
              statuses:
                - string
              year: 0
              limit: 0
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AnnualStatementDTOPagedResponseModelDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/AnnualStatementDTOPagedResponseModelDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  results:
                    - id: string
                      entityType: { }
                      createdDateTime: string
                      discriminator: string
                      _etag: string
                      requireAttention: true
                      hasErrors: true
                      hasWarnings: true
                      isReadOnly: true
                      organisationId: string
                      annualStatementNumber: string
                      year: 0
                      version: 0
                      startDateTime: string
                      endDateTime: string
                      status: { }
                      generationDate: string
                      sent: { }
                      failureReasonCode:
                        key: { }
                        correlationId: string
                        message: string
                        messageValues:
                          - dataType: { }
                            value: string
                            capitalize: true
                      failureDetails: string
                      supportsExternalPrinting: true
                      attachmentId: string
                      debtor:
                        customerId: string
                        displayName: string
                        customerAccountNumber: string
                        customerType: { }
                        customerGroup:
                          id: string
                          name: string
                      propertyGroups:
                        - id: string
                          name: string
                  hasNextPage: true
                  nextPageToken: string
                  totalRecords: 0
                  sortableFields:
                    - string
                  aggregateDetails:
                    - code: string
                      translation: string
                      value: 0
                      valueDate: string
            text/json:
              schema:
                $ref: '#/components/schemas/AnnualStatementDTOPagedResponseModelDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  results:
                    - id: string
                      entityType: { }
                      createdDateTime: string
                      discriminator: string
                      _etag: string
                      requireAttention: true
                      hasErrors: true
                      hasWarnings: true
                      isReadOnly: true
                      organisationId: string
                      annualStatementNumber: string
                      year: 0
                      version: 0
                      startDateTime: string
                      endDateTime: string
                      status: { }
                      generationDate: string
                      sent: { }
                      failureReasonCode:
                        key: { }
                        correlationId: string
                        message: string
                        messageValues:
                          - dataType: { }
                            value: string
                            capitalize: true
                      failureDetails: string
                      supportsExternalPrinting: true
                      attachmentId: string
                      debtor:
                        customerId: string
                        displayName: string
                        customerAccountNumber: string
                        customerType: { }
                        customerGroup:
                          id: string
                          name: string
                      propertyGroups:
                        - id: string
                          name: string
                  hasNextPage: true
                  nextPageToken: string
                  totalRecords: 0
                  sortableFields:
                    - string
                  aggregateDetails:
                    - code: string
                      translation: string
                      value: 0
                      valueDate: string
  '/AnnualStatements/customer/{customerId}':
    post:
      tags:
        - AnnualStatements
      summary: Creates a new annual statement for a specific customer.
      description: Creates a new annual statement for a specific customer.
      operationId: post-annualstatements-customer-customerid
      parameters:
        - name: customerId
          in: path
          description: The ID of the customer.
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: The request containing the details for the new annual statement.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/CreateAnnualStatementRequest'
              description: "Represents a request to create an annual statement.\r\nThis DTO is used to generate an annual statement for a specific year."
            example:
              year: 0
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/CreateAnnualStatementRequest'
              description: "Represents a request to create an annual statement.\r\nThis DTO is used to generate an annual statement for a specific year."
            example:
              year: 0
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/CreateAnnualStatementRequest'
              description: "Represents a request to create an annual statement.\r\nThis DTO is used to generate an annual statement for a specific year."
            example:
              year: 0
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AnnualStatementDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/AnnualStatementDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  annualStatementNumber: string
                  year: 0
                  version: 0
                  startDateTime: string
                  endDateTime: string
                  status: { }
                  generationDate: string
                  sent: { }
                  failureReasonCode:
                    key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                  failureDetails: string
                  supportsExternalPrinting: true
                  attachmentId: string
                  debtor:
                    customerId: string
                    displayName: string
                    customerAccountNumber: string
                    customerType: { }
                    customerGroup:
                      id: string
                      name: string
                  propertyGroups:
                    - id: string
                      name: string
            text/json:
              schema:
                $ref: '#/components/schemas/AnnualStatementDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  annualStatementNumber: string
                  year: 0
                  version: 0
                  startDateTime: string
                  endDateTime: string
                  status: { }
                  generationDate: string
                  sent: { }
                  failureReasonCode:
                    key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                  failureDetails: string
                  supportsExternalPrinting: true
                  attachmentId: string
                  debtor:
                    customerId: string
                    displayName: string
                    customerAccountNumber: string
                    customerType: { }
                    customerGroup:
                      id: string
                      name: string
                  propertyGroups:
                    - id: string
                      name: string
  '/AnnualStatements/{annualStatementuuid}/send':
    post:
      tags:
        - AnnualStatements
      summary: Sends an annual statement via email.
      description: Sends an annual statement via email.
      operationId: post-annualstatements-annualstatementuuid-send
      parameters:
        - name: annualStatementuuid
          in: path
          description: The ID of the annual statement.
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AnnualStatementDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/AnnualStatementDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  annualStatementNumber: string
                  year: 0
                  version: 0
                  startDateTime: string
                  endDateTime: string
                  status: { }
                  generationDate: string
                  sent: { }
                  failureReasonCode:
                    key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                  failureDetails: string
                  supportsExternalPrinting: true
                  attachmentId: string
                  debtor:
                    customerId: string
                    displayName: string
                    customerAccountNumber: string
                    customerType: { }
                    customerGroup:
                      id: string
                      name: string
                  propertyGroups:
                    - id: string
                      name: string
            text/json:
              schema:
                $ref: '#/components/schemas/AnnualStatementDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  annualStatementNumber: string
                  year: 0
                  version: 0
                  startDateTime: string
                  endDateTime: string
                  status: { }
                  generationDate: string
                  sent: { }
                  failureReasonCode:
                    key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                  failureDetails: string
                  supportsExternalPrinting: true
                  attachmentId: string
                  debtor:
                    customerId: string
                    displayName: string
                    customerAccountNumber: string
                    customerType: { }
                    customerGroup:
                      id: string
                      name: string
                  propertyGroups:
                    - id: string
                      name: string
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
  '/AnnualStatements/{annualStatementuuid}/sendviapostal':
    post:
      tags:
        - AnnualStatements
      summary: Sends an annual statement via postal mail.
      description: Sends an annual statement via postal mail.
      operationId: post-annualstatements-annualstatementuuid-sendviapostal
      parameters:
        - name: annualStatementuuid
          in: path
          description: The ID of the annual statement.
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AnnualStatementDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/AnnualStatementDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  annualStatementNumber: string
                  year: 0
                  version: 0
                  startDateTime: string
                  endDateTime: string
                  status: { }
                  generationDate: string
                  sent: { }
                  failureReasonCode:
                    key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                  failureDetails: string
                  supportsExternalPrinting: true
                  attachmentId: string
                  debtor:
                    customerId: string
                    displayName: string
                    customerAccountNumber: string
                    customerType: { }
                    customerGroup:
                      id: string
                      name: string
                  propertyGroups:
                    - id: string
                      name: string
            text/json:
              schema:
                $ref: '#/components/schemas/AnnualStatementDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  annualStatementNumber: string
                  year: 0
                  version: 0
                  startDateTime: string
                  endDateTime: string
                  status: { }
                  generationDate: string
                  sent: { }
                  failureReasonCode:
                    key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                  failureDetails: string
                  supportsExternalPrinting: true
                  attachmentId: string
                  debtor:
                    customerId: string
                    displayName: string
                    customerAccountNumber: string
                    customerType: { }
                    customerGroup:
                      id: string
                      name: string
                  propertyGroups:
                    - id: string
                      name: string
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
  /AnnualStatements/bulk/send:
    post:
      tags:
        - AnnualStatements
      summary: Sends multiple annual statements via email in bulk.
      description: Sends multiple annual statements via email in bulk.
      operationId: post-annualstatements-bulk-send
      parameters:
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: The bulk send annual statement via email request containing the details of the annual statements to be sent.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BulkSendAnnualStatementViaMailRequest'
            example:
              onlyValidate: true
              queryParams:
                flexSearch: string
                includeOnlyIds:
                  - string
                excludeIds:
                  - string
                customerId: string
                statuses:
                  - string
                year: 0
                limit: 0
              quickFilter: string
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BulkSendAnnualStatementViaMailRequest'
            example:
              onlyValidate: true
              queryParams:
                flexSearch: string
                includeOnlyIds:
                  - string
                excludeIds:
                  - string
                customerId: string
                statuses:
                  - string
                year: 0
                limit: 0
              quickFilter: string
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BulkSendAnnualStatementViaMailRequest'
            example:
              onlyValidate: true
              queryParams:
                flexSearch: string
                includeOnlyIds:
                  - string
                excludeIds:
                  - string
                customerId: string
                statuses:
                  - string
                year: 0
                limit: 0
              quickFilter: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
  /AnnualStatements/bulk/sendviapostal:
    post:
      tags:
        - AnnualStatements
      summary: Sends multiple annual statements via postal mail in bulk.
      description: Sends multiple annual statements via postal mail in bulk.
      operationId: post-annualstatements-bulk-sendviapostal
      parameters:
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: The bulk send annual statement via postal request containing the details of the annual statements to be sent.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BulkSendAnnualStatementViaPostalRequest'
            example:
              onlyValidate: true
              queryParams:
                flexSearch: string
                includeOnlyIds:
                  - string
                excludeIds:
                  - string
                customerId: string
                statuses:
                  - string
                year: 0
                limit: 0
              quickFilter: string
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BulkSendAnnualStatementViaPostalRequest'
            example:
              onlyValidate: true
              queryParams:
                flexSearch: string
                includeOnlyIds:
                  - string
                excludeIds:
                  - string
                customerId: string
                statuses:
                  - string
                year: 0
                limit: 0
              quickFilter: string
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BulkSendAnnualStatementViaPostalRequest'
            example:
              onlyValidate: true
              queryParams:
                flexSearch: string
                includeOnlyIds:
                  - string
                excludeIds:
                  - string
                customerId: string
                statuses:
                  - string
                year: 0
                limit: 0
              quickFilter: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
  /BillingCompletenesses/filter:
    post:
      tags:
        - BillingCompletenesses
      summary: Retrieves all billing completenesses based on the provided query parameters.
      description: Retrieves all billing completenesses based on the provided query parameters.
      operationId: FilterAllBillingCompletenesses
      parameters:
        - name: Name
          in: query
          schema:
            type: string
        - name: Id
          in: query
          description: Format - int32.
          schema:
            type: integer
            format: int32
        - name: orderBy
          in: query
          description: The order by clause.
          schema:
            type: string
        - name: continuationToken
          in: header
          description: The continuation token for pagination.
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: The query parameters for filtering billing completenesses.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/GetBillingCompletenessQueryParams'
            example:
              flexSearch: string
              includeOnlyIds:
                - string
              excludeIds:
                - string
              billingRelationId: string
              customerId: string
              propertyGroupIds:
                - string
              contractId: string
              invoiceType: string
              status: string
              onlyOpen: true
              skipBlocked: true
              periodStartDateTime: string
              periodEndDateTime: string
              invoicingCheckpointStartDateTime: string
              invoicingCheckpointEndDateTime: string
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/GetBillingCompletenessQueryParams'
            example:
              flexSearch: string
              includeOnlyIds:
                - string
              excludeIds:
                - string
              billingRelationId: string
              customerId: string
              propertyGroupIds:
                - string
              contractId: string
              invoiceType: string
              status: string
              onlyOpen: true
              skipBlocked: true
              periodStartDateTime: string
              periodEndDateTime: string
              invoicingCheckpointStartDateTime: string
              invoicingCheckpointEndDateTime: string
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/GetBillingCompletenessQueryParams'
            example:
              flexSearch: string
              includeOnlyIds:
                - string
              excludeIds:
                - string
              billingRelationId: string
              customerId: string
              propertyGroupIds:
                - string
              contractId: string
              invoiceType: string
              status: string
              onlyOpen: true
              skipBlocked: true
              periodStartDateTime: string
              periodEndDateTime: string
              invoicingCheckpointStartDateTime: string
              invoicingCheckpointEndDateTime: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/BillingCompletenessDTOPagedResponseModelDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/BillingCompletenessDTOPagedResponseModelDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  results:
                    - id: string
                      entityType: { }
                      createdDateTime: string
                      discriminator: string
                      _etag: string
                      requireAttention: true
                      hasErrors: true
                      hasWarnings: true
                      isReadOnly: true
                      organisationId: string
                      contractId: string
                      contractNum: string
                      debtor:
                        customerId: string
                        displayName: string
                        customerAccountNumber: string
                        customerType: { }
                        customerGroup:
                          id: string
                          name: string
                      billingRelationId: string
                      periodStartDateTime: string
                      periodEndDateTime: string
                      status: { }
                      inputMissingDetails:
                        reason: { }
                        extraInfo: string
                      hasCorrections: true
                      invoiceType: { }
                      blocked: true
                      requiredQuantitiesGrouped:
                        contractRequiredQuantities:
                          - billingItemId: string
                            requiredQuantities:
                              - billingItemId: string
                                serviceLocationId: string
                                calculationGroupId: string
                                complete: true
                                errors:
                                  - key: { }
                                    correlationId: string
                                    message: string
                                    messageValues:
                                      - dataType: { }
                                        value: string
                                        capitalize: true
                                validationErrors:
                                  - reason: { }
                                    error: { }
                                    problemEntity:
                                      entitySubjectType: { }
                                      entitySubjectId: string
                                    impactedEntity:
                                      entitySubjectType: { }
                                      entitySubjectId: string
                                    relatedEntities:
                                      - entitySubjectType: { }
                                        entitySubjectId: string
                        locationRequiredQuantities:
                          - serviceLocationId: string
                            requiredQuantities:
                              - billingItemId: string
                                serviceLocationId: string
                                calculationGroupId: string
                                complete: true
                                errors:
                                  - key: { }
                                    correlationId: string
                                    message: string
                                    messageValues:
                                      - dataType: { }
                                        value: string
                                        capitalize: true
                                validationErrors:
                                  - reason: { }
                                    error: { }
                                    problemEntity:
                                      entitySubjectType: { }
                                      entitySubjectId: string
                                    impactedEntity:
                                      entitySubjectType: { }
                                      entitySubjectId: string
                                    relatedEntities:
                                      - entitySubjectType: { }
                                        entitySubjectId: string
                      advancePeriods:
                        - startDateTime: string
                          endDateTime: string
                          advanceAmountExclVAT: 0
                          invoiceId: string
                          invoiceNum: string
                          invoiceDate: string
                          sentStatus: { }
                          paid: true
                          automaticallyDeleted: true
                          manuallyDeleted: true
                      expectAdvancesToBeImportedPeriodically: true
                      costAllocationBillable: true
                      invoicingUpfront: true
                      invoicingCheckpointDateTime: string
                      productId: string
                      propertyGroups:
                        - id: string
                          name: string
                  hasNextPage: true
                  nextPageToken: string
                  totalRecords: 0
                  sortableFields:
                    - string
                  aggregateDetails:
                    - code: string
                      translation: string
                      value: 0
                      valueDate: string
            text/json:
              schema:
                $ref: '#/components/schemas/BillingCompletenessDTOPagedResponseModelDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  results:
                    - id: string
                      entityType: { }
                      createdDateTime: string
                      discriminator: string
                      _etag: string
                      requireAttention: true
                      hasErrors: true
                      hasWarnings: true
                      isReadOnly: true
                      organisationId: string
                      contractId: string
                      contractNum: string
                      debtor:
                        customerId: string
                        displayName: string
                        customerAccountNumber: string
                        customerType: { }
                        customerGroup:
                          id: string
                          name: string
                      billingRelationId: string
                      periodStartDateTime: string
                      periodEndDateTime: string
                      status: { }
                      inputMissingDetails:
                        reason: { }
                        extraInfo: string
                      hasCorrections: true
                      invoiceType: { }
                      blocked: true
                      requiredQuantitiesGrouped:
                        contractRequiredQuantities:
                          - billingItemId: string
                            requiredQuantities:
                              - billingItemId: string
                                serviceLocationId: string
                                calculationGroupId: string
                                complete: true
                                errors:
                                  - key: { }
                                    correlationId: string
                                    message: string
                                    messageValues:
                                      - dataType: { }
                                        value: string
                                        capitalize: true
                                validationErrors:
                                  - reason: { }
                                    error: { }
                                    problemEntity:
                                      entitySubjectType: { }
                                      entitySubjectId: string
                                    impactedEntity:
                                      entitySubjectType: { }
                                      entitySubjectId: string
                                    relatedEntities:
                                      - entitySubjectType: { }
                                        entitySubjectId: string
                        locationRequiredQuantities:
                          - serviceLocationId: string
                            requiredQuantities:
                              - billingItemId: string
                                serviceLocationId: string
                                calculationGroupId: string
                                complete: true
                                errors:
                                  - key: { }
                                    correlationId: string
                                    message: string
                                    messageValues:
                                      - dataType: { }
                                        value: string
                                        capitalize: true
                                validationErrors:
                                  - reason: { }
                                    error: { }
                                    problemEntity:
                                      entitySubjectType: { }
                                      entitySubjectId: string
                                    impactedEntity:
                                      entitySubjectType: { }
                                      entitySubjectId: string
                                    relatedEntities:
                                      - entitySubjectType: { }
                                        entitySubjectId: string
                      advancePeriods:
                        - startDateTime: string
                          endDateTime: string
                          advanceAmountExclVAT: 0
                          invoiceId: string
                          invoiceNum: string
                          invoiceDate: string
                          sentStatus: { }
                          paid: true
                          automaticallyDeleted: true
                          manuallyDeleted: true
                      expectAdvancesToBeImportedPeriodically: true
                      costAllocationBillable: true
                      invoicingUpfront: true
                      invoicingCheckpointDateTime: string
                      productId: string
                      propertyGroups:
                        - id: string
                          name: string
                  hasNextPage: true
                  nextPageToken: string
                  totalRecords: 0
                  sortableFields:
                    - string
                  aggregateDetails:
                    - code: string
                      translation: string
                      value: 0
                      valueDate: string
  /BillingCompletenesses/filter/overviewcount:
    post:
      tags:
        - BillingCompletenesses
      summary: Retrieves the overview count of billing completeness based on the provided query parameters.
      description: Retrieves the overview count of billing completeness based on the provided query parameters.
      operationId: post-billingcompletenesses-filter-overviewcount
      parameters:
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: The query parameters for filtering invoices.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/GetBillingCompletenessQueryParams'
            example:
              flexSearch: string
              includeOnlyIds:
                - string
              excludeIds:
                - string
              billingRelationId: string
              customerId: string
              propertyGroupIds:
                - string
              contractId: string
              invoiceType: string
              status: string
              onlyOpen: true
              skipBlocked: true
              periodStartDateTime: string
              periodEndDateTime: string
              invoicingCheckpointStartDateTime: string
              invoicingCheckpointEndDateTime: string
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/GetBillingCompletenessQueryParams'
            example:
              flexSearch: string
              includeOnlyIds:
                - string
              excludeIds:
                - string
              billingRelationId: string
              customerId: string
              propertyGroupIds:
                - string
              contractId: string
              invoiceType: string
              status: string
              onlyOpen: true
              skipBlocked: true
              periodStartDateTime: string
              periodEndDateTime: string
              invoicingCheckpointStartDateTime: string
              invoicingCheckpointEndDateTime: string
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/GetBillingCompletenessQueryParams'
            example:
              flexSearch: string
              includeOnlyIds:
                - string
              excludeIds:
                - string
              billingRelationId: string
              customerId: string
              propertyGroupIds:
                - string
              contractId: string
              invoiceType: string
              status: string
              onlyOpen: true
              skipBlocked: true
              periodStartDateTime: string
              periodEndDateTime: string
              invoicingCheckpointStartDateTime: string
              invoicingCheckpointEndDateTime: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/BillingCompletenessOverviewCountDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/BillingCompletenessOverviewCountDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  all: 0
                  waiting: 0
                  inputMissing: 0
                  manuallyCorrected: 0
                  previousStillOpen: 0
                  missingAdvances: 0
            text/json:
              schema:
                $ref: '#/components/schemas/BillingCompletenessOverviewCountDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  all: 0
                  waiting: 0
                  inputMissing: 0
                  manuallyCorrected: 0
                  previousStillOpen: 0
                  missingAdvances: 0
  '/BillingCompletenesses/{billingCompletenessId}':
    get:
      tags:
        - BillingCompletenesses
      summary: Retrieves a specific billing completeness by its ID.
      description: Retrieves a specific billing completeness by its ID.
      operationId: GetBillingCompleteness
      parameters:
        - name: billingCompletenessId
          in: path
          description: The ID of the billing completeness.
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/BillingCompletenessDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/BillingCompletenessDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  contractId: string
                  contractNum: string
                  debtor:
                    customerId: string
                    displayName: string
                    customerAccountNumber: string
                    customerType: { }
                    customerGroup:
                      id: string
                      name: string
                  billingRelationId: string
                  periodStartDateTime: string
                  periodEndDateTime: string
                  status: { }
                  inputMissingDetails:
                    reason: { }
                    extraInfo: string
                  hasCorrections: true
                  invoiceType: { }
                  blocked: true
                  requiredQuantitiesGrouped:
                    contractRequiredQuantities:
                      - billingItemId: string
                        requiredQuantities:
                          - billingItemId: string
                            serviceLocationId: string
                            calculationGroupId: string
                            complete: true
                            errors:
                              - key: { }
                                correlationId: string
                                message: string
                                messageValues:
                                  - dataType: { }
                                    value: string
                                    capitalize: true
                            validationErrors:
                              - reason: { }
                                error: { }
                                problemEntity:
                                  entitySubjectType: { }
                                  entitySubjectId: string
                                impactedEntity:
                                  entitySubjectType: { }
                                  entitySubjectId: string
                                relatedEntities:
                                  - entitySubjectType: { }
                                    entitySubjectId: string
                    locationRequiredQuantities:
                      - serviceLocationId: string
                        requiredQuantities:
                          - billingItemId: string
                            serviceLocationId: string
                            calculationGroupId: string
                            complete: true
                            errors:
                              - key: { }
                                correlationId: string
                                message: string
                                messageValues:
                                  - dataType: { }
                                    value: string
                                    capitalize: true
                            validationErrors:
                              - reason: { }
                                error: { }
                                problemEntity:
                                  entitySubjectType: { }
                                  entitySubjectId: string
                                impactedEntity:
                                  entitySubjectType: { }
                                  entitySubjectId: string
                                relatedEntities:
                                  - entitySubjectType: { }
                                    entitySubjectId: string
                  advancePeriods:
                    - startDateTime: string
                      endDateTime: string
                      advanceAmountExclVAT: 0
                      invoiceId: string
                      invoiceNum: string
                      invoiceDate: string
                      sentStatus: { }
                      paid: true
                      automaticallyDeleted: true
                      manuallyDeleted: true
                  expectAdvancesToBeImportedPeriodically: true
                  costAllocationBillable: true
                  invoicingUpfront: true
                  invoicingCheckpointDateTime: string
                  productId: string
                  propertyGroups:
                    - id: string
                      name: string
            text/json:
              schema:
                $ref: '#/components/schemas/BillingCompletenessDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  contractId: string
                  contractNum: string
                  debtor:
                    customerId: string
                    displayName: string
                    customerAccountNumber: string
                    customerType: { }
                    customerGroup:
                      id: string
                      name: string
                  billingRelationId: string
                  periodStartDateTime: string
                  periodEndDateTime: string
                  status: { }
                  inputMissingDetails:
                    reason: { }
                    extraInfo: string
                  hasCorrections: true
                  invoiceType: { }
                  blocked: true
                  requiredQuantitiesGrouped:
                    contractRequiredQuantities:
                      - billingItemId: string
                        requiredQuantities:
                          - billingItemId: string
                            serviceLocationId: string
                            calculationGroupId: string
                            complete: true
                            errors:
                              - key: { }
                                correlationId: string
                                message: string
                                messageValues:
                                  - dataType: { }
                                    value: string
                                    capitalize: true
                            validationErrors:
                              - reason: { }
                                error: { }
                                problemEntity:
                                  entitySubjectType: { }
                                  entitySubjectId: string
                                impactedEntity:
                                  entitySubjectType: { }
                                  entitySubjectId: string
                                relatedEntities:
                                  - entitySubjectType: { }
                                    entitySubjectId: string
                    locationRequiredQuantities:
                      - serviceLocationId: string
                        requiredQuantities:
                          - billingItemId: string
                            serviceLocationId: string
                            calculationGroupId: string
                            complete: true
                            errors:
                              - key: { }
                                correlationId: string
                                message: string
                                messageValues:
                                  - dataType: { }
                                    value: string
                                    capitalize: true
                            validationErrors:
                              - reason: { }
                                error: { }
                                problemEntity:
                                  entitySubjectType: { }
                                  entitySubjectId: string
                                impactedEntity:
                                  entitySubjectType: { }
                                  entitySubjectId: string
                                relatedEntities:
                                  - entitySubjectType: { }
                                    entitySubjectId: string
                  advancePeriods:
                    - startDateTime: string
                      endDateTime: string
                      advanceAmountExclVAT: 0
                      invoiceId: string
                      invoiceNum: string
                      invoiceDate: string
                      sentStatus: { }
                      paid: true
                      automaticallyDeleted: true
                      manuallyDeleted: true
                  expectAdvancesToBeImportedPeriodically: true
                  costAllocationBillable: true
                  invoicingUpfront: true
                  invoicingCheckpointDateTime: string
                  productId: string
                  propertyGroups:
                    - id: string
                      name: string
    post:
      tags:
        - BillingCompletenesses
      summary: Triggers billing for a specific billing completeness.
      description: Triggers billing for a specific billing completeness.
      operationId: post-billingcompletenesses-billingcompletenessid
      parameters:
        - name: billingCompletenessId
          in: path
          description: The ID of the billing completeness.
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: The request containing the details for triggering billing.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/TriggerBillingCompletenessRequest'
              description: Represents a request to trigger billing completeness calculation
            example:
              onlyAdvances: true
              recalculateIfNeeded: true
              advanceUntilDateTime: string
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/TriggerBillingCompletenessRequest'
              description: Represents a request to trigger billing completeness calculation
            example:
              onlyAdvances: true
              recalculateIfNeeded: true
              advanceUntilDateTime: string
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/TriggerBillingCompletenessRequest'
              description: Represents a request to trigger billing completeness calculation
            example:
              onlyAdvances: true
              recalculateIfNeeded: true
              advanceUntilDateTime: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/BillingCompletenessDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/BillingCompletenessDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  contractId: string
                  contractNum: string
                  debtor:
                    customerId: string
                    displayName: string
                    customerAccountNumber: string
                    customerType: { }
                    customerGroup:
                      id: string
                      name: string
                  billingRelationId: string
                  periodStartDateTime: string
                  periodEndDateTime: string
                  status: { }
                  inputMissingDetails:
                    reason: { }
                    extraInfo: string
                  hasCorrections: true
                  invoiceType: { }
                  blocked: true
                  requiredQuantitiesGrouped:
                    contractRequiredQuantities:
                      - billingItemId: string
                        requiredQuantities:
                          - billingItemId: string
                            serviceLocationId: string
                            calculationGroupId: string
                            complete: true
                            errors:
                              - key: { }
                                correlationId: string
                                message: string
                                messageValues:
                                  - dataType: { }
                                    value: string
                                    capitalize: true
                            validationErrors:
                              - reason: { }
                                error: { }
                                problemEntity:
                                  entitySubjectType: { }
                                  entitySubjectId: string
                                impactedEntity:
                                  entitySubjectType: { }
                                  entitySubjectId: string
                                relatedEntities:
                                  - entitySubjectType: { }
                                    entitySubjectId: string
                    locationRequiredQuantities:
                      - serviceLocationId: string
                        requiredQuantities:
                          - billingItemId: string
                            serviceLocationId: string
                            calculationGroupId: string
                            complete: true
                            errors:
                              - key: { }
                                correlationId: string
                                message: string
                                messageValues:
                                  - dataType: { }
                                    value: string
                                    capitalize: true
                            validationErrors:
                              - reason: { }
                                error: { }
                                problemEntity:
                                  entitySubjectType: { }
                                  entitySubjectId: string
                                impactedEntity:
                                  entitySubjectType: { }
                                  entitySubjectId: string
                                relatedEntities:
                                  - entitySubjectType: { }
                                    entitySubjectId: string
                  advancePeriods:
                    - startDateTime: string
                      endDateTime: string
                      advanceAmountExclVAT: 0
                      invoiceId: string
                      invoiceNum: string
                      invoiceDate: string
                      sentStatus: { }
                      paid: true
                      automaticallyDeleted: true
                      manuallyDeleted: true
                  expectAdvancesToBeImportedPeriodically: true
                  costAllocationBillable: true
                  invoicingUpfront: true
                  invoicingCheckpointDateTime: string
                  productId: string
                  propertyGroups:
                    - id: string
                      name: string
            text/json:
              schema:
                $ref: '#/components/schemas/BillingCompletenessDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  contractId: string
                  contractNum: string
                  debtor:
                    customerId: string
                    displayName: string
                    customerAccountNumber: string
                    customerType: { }
                    customerGroup:
                      id: string
                      name: string
                  billingRelationId: string
                  periodStartDateTime: string
                  periodEndDateTime: string
                  status: { }
                  inputMissingDetails:
                    reason: { }
                    extraInfo: string
                  hasCorrections: true
                  invoiceType: { }
                  blocked: true
                  requiredQuantitiesGrouped:
                    contractRequiredQuantities:
                      - billingItemId: string
                        requiredQuantities:
                          - billingItemId: string
                            serviceLocationId: string
                            calculationGroupId: string
                            complete: true
                            errors:
                              - key: { }
                                correlationId: string
                                message: string
                                messageValues:
                                  - dataType: { }
                                    value: string
                                    capitalize: true
                            validationErrors:
                              - reason: { }
                                error: { }
                                problemEntity:
                                  entitySubjectType: { }
                                  entitySubjectId: string
                                impactedEntity:
                                  entitySubjectType: { }
                                  entitySubjectId: string
                                relatedEntities:
                                  - entitySubjectType: { }
                                    entitySubjectId: string
                    locationRequiredQuantities:
                      - serviceLocationId: string
                        requiredQuantities:
                          - billingItemId: string
                            serviceLocationId: string
                            calculationGroupId: string
                            complete: true
                            errors:
                              - key: { }
                                correlationId: string
                                message: string
                                messageValues:
                                  - dataType: { }
                                    value: string
                                    capitalize: true
                            validationErrors:
                              - reason: { }
                                error: { }
                                problemEntity:
                                  entitySubjectType: { }
                                  entitySubjectId: string
                                impactedEntity:
                                  entitySubjectType: { }
                                  entitySubjectId: string
                                relatedEntities:
                                  - entitySubjectType: { }
                                    entitySubjectId: string
                  advancePeriods:
                    - startDateTime: string
                      endDateTime: string
                      advanceAmountExclVAT: 0
                      invoiceId: string
                      invoiceNum: string
                      invoiceDate: string
                      sentStatus: { }
                      paid: true
                      automaticallyDeleted: true
                      manuallyDeleted: true
                  expectAdvancesToBeImportedPeriodically: true
                  costAllocationBillable: true
                  invoicingUpfront: true
                  invoicingCheckpointDateTime: string
                  productId: string
                  propertyGroups:
                    - id: string
                      name: string
  '/BillingCompletenesses/{billingRelationId}/insights':
    get:
      tags:
        - BillingCompletenesses
      summary: Retrieves billing completeness insights for a specific billing relation ID.
      description: Retrieves billing completeness insights for a specific billing relation ID.
      operationId: get-billingcompletenesses-billingrelationid-insights
      parameters:
        - name: billingRelationId
          in: path
          description: The ID of the billing relation.
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/BillingCompletenessInsightsResponseDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/BillingCompletenessInsightsResponseDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  nextAdvanceStartDateTime: string
                  advanceFrequency: { }
                  advanceAmount: 0
                  advancesCreated: 0
                  advancesNeeded: 0
                  invoiceFrequency: { }
                  activeInvoiceStartDateTime: string
                  activeInvoiceEndDateTime: string
                  activeStatus: { }
                  activeBillingCompletenessId: string
                  estimatedInvoiceId: string
                  estimatedInvoiceAmount: 0
                  hasOpenAdvancePeriodsWithDifferentTaxRate: true
                  accuracyState: { }
                  draftInvoiceId: string
                  draftInvoiceAmount: 0
            text/json:
              schema:
                $ref: '#/components/schemas/BillingCompletenessInsightsResponseDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  nextAdvanceStartDateTime: string
                  advanceFrequency: { }
                  advanceAmount: 0
                  advancesCreated: 0
                  advancesNeeded: 0
                  invoiceFrequency: { }
                  activeInvoiceStartDateTime: string
                  activeInvoiceEndDateTime: string
                  activeStatus: { }
                  activeBillingCompletenessId: string
                  estimatedInvoiceId: string
                  estimatedInvoiceAmount: 0
                  hasOpenAdvancePeriodsWithDifferentTaxRate: true
                  accuracyState: { }
                  draftInvoiceId: string
                  draftInvoiceAmount: 0
  '/BillingCompletenesses/{billingCompletenessId}/estimations':
    get:
      tags:
        - BillingCompletenesses
      summary: Retrieves the estimated billing completeness for a specific billing completeness ID.
      description: Retrieves the estimated billing completeness for a specific billing completeness ID.
      operationId: GetEstimatedBillingCompleteness
      parameters:
        - name: billingCompletenessId
          in: path
          description: The ID of the billing completeness.
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/EstimatedBillingCompletenessDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/EstimatedBillingCompletenessDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  contractId: string
                  contractNum: string
                  debtor:
                    customerId: string
                    displayName: string
                    customerAccountNumber: string
                    customerType: { }
                    customerGroup:
                      id: string
                      name: string
                  billingRelationId: string
                  periodStartDateTime: string
                  periodEndDateTime: string
                  status: { }
                  inputMissingDetails:
                    reason: { }
                    extraInfo: string
                  hasCorrections: true
                  invoiceType: { }
                  blocked: true
                  requiredQuantitiesGrouped:
                    contractRequiredQuantities:
                      - billingItemId: string
                        requiredQuantities:
                          - billingItemId: string
                            serviceLocationId: string
                            calculationGroupId: string
                            complete: true
                            errors:
                              - key: { }
                                correlationId: string
                                message: string
                                messageValues:
                                  - dataType: { }
                                    value: string
                                    capitalize: true
                            validationErrors:
                              - reason: { }
                                error: { }
                                problemEntity:
                                  entitySubjectType: { }
                                  entitySubjectId: string
                                impactedEntity:
                                  entitySubjectType: { }
                                  entitySubjectId: string
                                relatedEntities:
                                  - entitySubjectType: { }
                                    entitySubjectId: string
                    locationRequiredQuantities:
                      - serviceLocationId: string
                        requiredQuantities:
                          - billingItemId: string
                            serviceLocationId: string
                            calculationGroupId: string
                            complete: true
                            errors:
                              - key: { }
                                correlationId: string
                                message: string
                                messageValues:
                                  - dataType: { }
                                    value: string
                                    capitalize: true
                            validationErrors:
                              - reason: { }
                                error: { }
                                problemEntity:
                                  entitySubjectType: { }
                                  entitySubjectId: string
                                impactedEntity:
                                  entitySubjectType: { }
                                  entitySubjectId: string
                                relatedEntities:
                                  - entitySubjectType: { }
                                    entitySubjectId: string
                  advancePeriods:
                    - startDateTime: string
                      endDateTime: string
                      advanceAmountExclVAT: 0
                      invoiceId: string
                      invoiceNum: string
                      invoiceDate: string
                      sentStatus: { }
                      paid: true
                      automaticallyDeleted: true
                      manuallyDeleted: true
                  expectAdvancesToBeImportedPeriodically: true
                  costAllocationBillable: true
                  invoicingUpfront: true
                  invoicingCheckpointDateTime: string
                  productId: string
                  propertyGroups:
                    - id: string
                      name: string
                  originalBillingCompletenessId: string
                  estimationMessagesRequested:
                    - string
                  validationErrors:
                    - errorCode: { }
                      values:
                        - dataType: { }
                          value: string
                          capitalize: true
            text/json:
              schema:
                $ref: '#/components/schemas/EstimatedBillingCompletenessDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  contractId: string
                  contractNum: string
                  debtor:
                    customerId: string
                    displayName: string
                    customerAccountNumber: string
                    customerType: { }
                    customerGroup:
                      id: string
                      name: string
                  billingRelationId: string
                  periodStartDateTime: string
                  periodEndDateTime: string
                  status: { }
                  inputMissingDetails:
                    reason: { }
                    extraInfo: string
                  hasCorrections: true
                  invoiceType: { }
                  blocked: true
                  requiredQuantitiesGrouped:
                    contractRequiredQuantities:
                      - billingItemId: string
                        requiredQuantities:
                          - billingItemId: string
                            serviceLocationId: string
                            calculationGroupId: string
                            complete: true
                            errors:
                              - key: { }
                                correlationId: string
                                message: string
                                messageValues:
                                  - dataType: { }
                                    value: string
                                    capitalize: true
                            validationErrors:
                              - reason: { }
                                error: { }
                                problemEntity:
                                  entitySubjectType: { }
                                  entitySubjectId: string
                                impactedEntity:
                                  entitySubjectType: { }
                                  entitySubjectId: string
                                relatedEntities:
                                  - entitySubjectType: { }
                                    entitySubjectId: string
                    locationRequiredQuantities:
                      - serviceLocationId: string
                        requiredQuantities:
                          - billingItemId: string
                            serviceLocationId: string
                            calculationGroupId: string
                            complete: true
                            errors:
                              - key: { }
                                correlationId: string
                                message: string
                                messageValues:
                                  - dataType: { }
                                    value: string
                                    capitalize: true
                            validationErrors:
                              - reason: { }
                                error: { }
                                problemEntity:
                                  entitySubjectType: { }
                                  entitySubjectId: string
                                impactedEntity:
                                  entitySubjectType: { }
                                  entitySubjectId: string
                                relatedEntities:
                                  - entitySubjectType: { }
                                    entitySubjectId: string
                  advancePeriods:
                    - startDateTime: string
                      endDateTime: string
                      advanceAmountExclVAT: 0
                      invoiceId: string
                      invoiceNum: string
                      invoiceDate: string
                      sentStatus: { }
                      paid: true
                      automaticallyDeleted: true
                      manuallyDeleted: true
                  expectAdvancesToBeImportedPeriodically: true
                  costAllocationBillable: true
                  invoicingUpfront: true
                  invoicingCheckpointDateTime: string
                  productId: string
                  propertyGroups:
                    - id: string
                      name: string
                  originalBillingCompletenessId: string
                  estimationMessagesRequested:
                    - string
                  validationErrors:
                    - errorCode: { }
                      values:
                        - dataType: { }
                          value: string
                          capitalize: true
  '/BillingCompletenesses/{billingCompletenessId}/estimations/errors':
    get:
      tags:
        - BillingCompletenesses
      summary: Retrieves validation errors for the estimated billing completeness by its ID.
      description: Retrieves validation errors for the estimated billing completeness by its ID.
      operationId: get-billingcompletenesses-billingcompletenessid-estimations-errors
      parameters:
        - name: billingCompletenessId
          in: path
          description: The ID of the billing completeness.
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/LocalisedErrorDTOListApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/LocalisedErrorDTOListApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
            text/json:
              schema:
                $ref: '#/components/schemas/LocalisedErrorDTOListApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
  '/BillingCompletenesses/{billingCompletenessId}/manuallyclose':
    post:
      tags:
        - BillingCompletenesses
      summary: Manually closes a specific billing completeness.
      description: Manually closes a specific billing completeness.
      operationId: post-billingcompletenesses-billingcompletenessid-manuallyclose
      parameters:
        - name: billingCompletenessId
          in: path
          description: The ID of the billing completeness.
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/BillingCompletenessDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/BillingCompletenessDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  contractId: string
                  contractNum: string
                  debtor:
                    customerId: string
                    displayName: string
                    customerAccountNumber: string
                    customerType: { }
                    customerGroup:
                      id: string
                      name: string
                  billingRelationId: string
                  periodStartDateTime: string
                  periodEndDateTime: string
                  status: { }
                  inputMissingDetails:
                    reason: { }
                    extraInfo: string
                  hasCorrections: true
                  invoiceType: { }
                  blocked: true
                  requiredQuantitiesGrouped:
                    contractRequiredQuantities:
                      - billingItemId: string
                        requiredQuantities:
                          - billingItemId: string
                            serviceLocationId: string
                            calculationGroupId: string
                            complete: true
                            errors:
                              - key: { }
                                correlationId: string
                                message: string
                                messageValues:
                                  - dataType: { }
                                    value: string
                                    capitalize: true
                            validationErrors:
                              - reason: { }
                                error: { }
                                problemEntity:
                                  entitySubjectType: { }
                                  entitySubjectId: string
                                impactedEntity:
                                  entitySubjectType: { }
                                  entitySubjectId: string
                                relatedEntities:
                                  - entitySubjectType: { }
                                    entitySubjectId: string
                    locationRequiredQuantities:
                      - serviceLocationId: string
                        requiredQuantities:
                          - billingItemId: string
                            serviceLocationId: string
                            calculationGroupId: string
                            complete: true
                            errors:
                              - key: { }
                                correlationId: string
                                message: string
                                messageValues:
                                  - dataType: { }
                                    value: string
                                    capitalize: true
                            validationErrors:
                              - reason: { }
                                error: { }
                                problemEntity:
                                  entitySubjectType: { }
                                  entitySubjectId: string
                                impactedEntity:
                                  entitySubjectType: { }
                                  entitySubjectId: string
                                relatedEntities:
                                  - entitySubjectType: { }
                                    entitySubjectId: string
                  advancePeriods:
                    - startDateTime: string
                      endDateTime: string
                      advanceAmountExclVAT: 0
                      invoiceId: string
                      invoiceNum: string
                      invoiceDate: string
                      sentStatus: { }
                      paid: true
                      automaticallyDeleted: true
                      manuallyDeleted: true
                  expectAdvancesToBeImportedPeriodically: true
                  costAllocationBillable: true
                  invoicingUpfront: true
                  invoicingCheckpointDateTime: string
                  productId: string
                  propertyGroups:
                    - id: string
                      name: string
            text/json:
              schema:
                $ref: '#/components/schemas/BillingCompletenessDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  contractId: string
                  contractNum: string
                  debtor:
                    customerId: string
                    displayName: string
                    customerAccountNumber: string
                    customerType: { }
                    customerGroup:
                      id: string
                      name: string
                  billingRelationId: string
                  periodStartDateTime: string
                  periodEndDateTime: string
                  status: { }
                  inputMissingDetails:
                    reason: { }
                    extraInfo: string
                  hasCorrections: true
                  invoiceType: { }
                  blocked: true
                  requiredQuantitiesGrouped:
                    contractRequiredQuantities:
                      - billingItemId: string
                        requiredQuantities:
                          - billingItemId: string
                            serviceLocationId: string
                            calculationGroupId: string
                            complete: true
                            errors:
                              - key: { }
                                correlationId: string
                                message: string
                                messageValues:
                                  - dataType: { }
                                    value: string
                                    capitalize: true
                            validationErrors:
                              - reason: { }
                                error: { }
                                problemEntity:
                                  entitySubjectType: { }
                                  entitySubjectId: string
                                impactedEntity:
                                  entitySubjectType: { }
                                  entitySubjectId: string
                                relatedEntities:
                                  - entitySubjectType: { }
                                    entitySubjectId: string
                    locationRequiredQuantities:
                      - serviceLocationId: string
                        requiredQuantities:
                          - billingItemId: string
                            serviceLocationId: string
                            calculationGroupId: string
                            complete: true
                            errors:
                              - key: { }
                                correlationId: string
                                message: string
                                messageValues:
                                  - dataType: { }
                                    value: string
                                    capitalize: true
                            validationErrors:
                              - reason: { }
                                error: { }
                                problemEntity:
                                  entitySubjectType: { }
                                  entitySubjectId: string
                                impactedEntity:
                                  entitySubjectType: { }
                                  entitySubjectId: string
                                relatedEntities:
                                  - entitySubjectType: { }
                                    entitySubjectId: string
                  advancePeriods:
                    - startDateTime: string
                      endDateTime: string
                      advanceAmountExclVAT: 0
                      invoiceId: string
                      invoiceNum: string
                      invoiceDate: string
                      sentStatus: { }
                      paid: true
                      automaticallyDeleted: true
                      manuallyDeleted: true
                  expectAdvancesToBeImportedPeriodically: true
                  costAllocationBillable: true
                  invoicingUpfront: true
                  invoicingCheckpointDateTime: string
                  productId: string
                  propertyGroups:
                    - id: string
                      name: string
  '/BillingCompletenesses/{billingCompletenessId}/reopen':
    post:
      tags:
        - BillingCompletenesses
      summary: Reopens a manually closed billing completeness.
      description: Reopens a manually closed billing completeness.
      operationId: post-billingcompletenesses-billingcompletenessid-reopen
      parameters:
        - name: billingCompletenessId
          in: path
          description: The ID of the billing completeness.
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/BillingCompletenessDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/BillingCompletenessDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  contractId: string
                  contractNum: string
                  debtor:
                    customerId: string
                    displayName: string
                    customerAccountNumber: string
                    customerType: { }
                    customerGroup:
                      id: string
                      name: string
                  billingRelationId: string
                  periodStartDateTime: string
                  periodEndDateTime: string
                  status: { }
                  inputMissingDetails:
                    reason: { }
                    extraInfo: string
                  hasCorrections: true
                  invoiceType: { }
                  blocked: true
                  requiredQuantitiesGrouped:
                    contractRequiredQuantities:
                      - billingItemId: string
                        requiredQuantities:
                          - billingItemId: string
                            serviceLocationId: string
                            calculationGroupId: string
                            complete: true
                            errors:
                              - key: { }
                                correlationId: string
                                message: string
                                messageValues:
                                  - dataType: { }
                                    value: string
                                    capitalize: true
                            validationErrors:
                              - reason: { }
                                error: { }
                                problemEntity:
                                  entitySubjectType: { }
                                  entitySubjectId: string
                                impactedEntity:
                                  entitySubjectType: { }
                                  entitySubjectId: string
                                relatedEntities:
                                  - entitySubjectType: { }
                                    entitySubjectId: string
                    locationRequiredQuantities:
                      - serviceLocationId: string
                        requiredQuantities:
                          - billingItemId: string
                            serviceLocationId: string
                            calculationGroupId: string
                            complete: true
                            errors:
                              - key: { }
                                correlationId: string
                                message: string
                                messageValues:
                                  - dataType: { }
                                    value: string
                                    capitalize: true
                            validationErrors:
                              - reason: { }
                                error: { }
                                problemEntity:
                                  entitySubjectType: { }
                                  entitySubjectId: string
                                impactedEntity:
                                  entitySubjectType: { }
                                  entitySubjectId: string
                                relatedEntities:
                                  - entitySubjectType: { }
                                    entitySubjectId: string
                  advancePeriods:
                    - startDateTime: string
                      endDateTime: string
                      advanceAmountExclVAT: 0
                      invoiceId: string
                      invoiceNum: string
                      invoiceDate: string
                      sentStatus: { }
                      paid: true
                      automaticallyDeleted: true
                      manuallyDeleted: true
                  expectAdvancesToBeImportedPeriodically: true
                  costAllocationBillable: true
                  invoicingUpfront: true
                  invoicingCheckpointDateTime: string
                  productId: string
                  propertyGroups:
                    - id: string
                      name: string
            text/json:
              schema:
                $ref: '#/components/schemas/BillingCompletenessDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  contractId: string
                  contractNum: string
                  debtor:
                    customerId: string
                    displayName: string
                    customerAccountNumber: string
                    customerType: { }
                    customerGroup:
                      id: string
                      name: string
                  billingRelationId: string
                  periodStartDateTime: string
                  periodEndDateTime: string
                  status: { }
                  inputMissingDetails:
                    reason: { }
                    extraInfo: string
                  hasCorrections: true
                  invoiceType: { }
                  blocked: true
                  requiredQuantitiesGrouped:
                    contractRequiredQuantities:
                      - billingItemId: string
                        requiredQuantities:
                          - billingItemId: string
                            serviceLocationId: string
                            calculationGroupId: string
                            complete: true
                            errors:
                              - key: { }
                                correlationId: string
                                message: string
                                messageValues:
                                  - dataType: { }
                                    value: string
                                    capitalize: true
                            validationErrors:
                              - reason: { }
                                error: { }
                                problemEntity:
                                  entitySubjectType: { }
                                  entitySubjectId: string
                                impactedEntity:
                                  entitySubjectType: { }
                                  entitySubjectId: string
                                relatedEntities:
                                  - entitySubjectType: { }
                                    entitySubjectId: string
                    locationRequiredQuantities:
                      - serviceLocationId: string
                        requiredQuantities:
                          - billingItemId: string
                            serviceLocationId: string
                            calculationGroupId: string
                            complete: true
                            errors:
                              - key: { }
                                correlationId: string
                                message: string
                                messageValues:
                                  - dataType: { }
                                    value: string
                                    capitalize: true
                            validationErrors:
                              - reason: { }
                                error: { }
                                problemEntity:
                                  entitySubjectType: { }
                                  entitySubjectId: string
                                impactedEntity:
                                  entitySubjectType: { }
                                  entitySubjectId: string
                                relatedEntities:
                                  - entitySubjectType: { }
                                    entitySubjectId: string
                  advancePeriods:
                    - startDateTime: string
                      endDateTime: string
                      advanceAmountExclVAT: 0
                      invoiceId: string
                      invoiceNum: string
                      invoiceDate: string
                      sentStatus: { }
                      paid: true
                      automaticallyDeleted: true
                      manuallyDeleted: true
                  expectAdvancesToBeImportedPeriodically: true
                  costAllocationBillable: true
                  invoicingUpfront: true
                  invoicingCheckpointDateTime: string
                  productId: string
                  propertyGroups:
                    - id: string
                      name: string
  '/BillingCompletenesses/{billingCompletenessId}/billintermediately':
    post:
      tags:
        - BillingCompletenesses
      summary: Bills a specific billing completeness intermediately.
      description: Bills a specific billing completeness intermediately.
      operationId: post-billingcompletenesses-billingcompletenessid-billintermediately
      parameters:
        - name: billingCompletenessId
          in: path
          description: The ID of the billing completeness.
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: The request containing the details for intermediate billing.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BillBillingCompletenessIntermediatelyRequest'
              description: Represents a request to perform intermediate billing for billing completeness
            example:
              endDateTime: string
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BillBillingCompletenessIntermediatelyRequest'
              description: Represents a request to perform intermediate billing for billing completeness
            example:
              endDateTime: string
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BillBillingCompletenessIntermediatelyRequest'
              description: Represents a request to perform intermediate billing for billing completeness
            example:
              endDateTime: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/BillingCompletenessDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/BillingCompletenessDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  contractId: string
                  contractNum: string
                  debtor:
                    customerId: string
                    displayName: string
                    customerAccountNumber: string
                    customerType: { }
                    customerGroup:
                      id: string
                      name: string
                  billingRelationId: string
                  periodStartDateTime: string
                  periodEndDateTime: string
                  status: { }
                  inputMissingDetails:
                    reason: { }
                    extraInfo: string
                  hasCorrections: true
                  invoiceType: { }
                  blocked: true
                  requiredQuantitiesGrouped:
                    contractRequiredQuantities:
                      - billingItemId: string
                        requiredQuantities:
                          - billingItemId: string
                            serviceLocationId: string
                            calculationGroupId: string
                            complete: true
                            errors:
                              - key: { }
                                correlationId: string
                                message: string
                                messageValues:
                                  - dataType: { }
                                    value: string
                                    capitalize: true
                            validationErrors:
                              - reason: { }
                                error: { }
                                problemEntity:
                                  entitySubjectType: { }
                                  entitySubjectId: string
                                impactedEntity:
                                  entitySubjectType: { }
                                  entitySubjectId: string
                                relatedEntities:
                                  - entitySubjectType: { }
                                    entitySubjectId: string
                    locationRequiredQuantities:
                      - serviceLocationId: string
                        requiredQuantities:
                          - billingItemId: string
                            serviceLocationId: string
                            calculationGroupId: string
                            complete: true
                            errors:
                              - key: { }
                                correlationId: string
                                message: string
                                messageValues:
                                  - dataType: { }
                                    value: string
                                    capitalize: true
                            validationErrors:
                              - reason: { }
                                error: { }
                                problemEntity:
                                  entitySubjectType: { }
                                  entitySubjectId: string
                                impactedEntity:
                                  entitySubjectType: { }
                                  entitySubjectId: string
                                relatedEntities:
                                  - entitySubjectType: { }
                                    entitySubjectId: string
                  advancePeriods:
                    - startDateTime: string
                      endDateTime: string
                      advanceAmountExclVAT: 0
                      invoiceId: string
                      invoiceNum: string
                      invoiceDate: string
                      sentStatus: { }
                      paid: true
                      automaticallyDeleted: true
                      manuallyDeleted: true
                  expectAdvancesToBeImportedPeriodically: true
                  costAllocationBillable: true
                  invoicingUpfront: true
                  invoicingCheckpointDateTime: string
                  productId: string
                  propertyGroups:
                    - id: string
                      name: string
            text/json:
              schema:
                $ref: '#/components/schemas/BillingCompletenessDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  contractId: string
                  contractNum: string
                  debtor:
                    customerId: string
                    displayName: string
                    customerAccountNumber: string
                    customerType: { }
                    customerGroup:
                      id: string
                      name: string
                  billingRelationId: string
                  periodStartDateTime: string
                  periodEndDateTime: string
                  status: { }
                  inputMissingDetails:
                    reason: { }
                    extraInfo: string
                  hasCorrections: true
                  invoiceType: { }
                  blocked: true
                  requiredQuantitiesGrouped:
                    contractRequiredQuantities:
                      - billingItemId: string
                        requiredQuantities:
                          - billingItemId: string
                            serviceLocationId: string
                            calculationGroupId: string
                            complete: true
                            errors:
                              - key: { }
                                correlationId: string
                                message: string
                                messageValues:
                                  - dataType: { }
                                    value: string
                                    capitalize: true
                            validationErrors:
                              - reason: { }
                                error: { }
                                problemEntity:
                                  entitySubjectType: { }
                                  entitySubjectId: string
                                impactedEntity:
                                  entitySubjectType: { }
                                  entitySubjectId: string
                                relatedEntities:
                                  - entitySubjectType: { }
                                    entitySubjectId: string
                    locationRequiredQuantities:
                      - serviceLocationId: string
                        requiredQuantities:
                          - billingItemId: string
                            serviceLocationId: string
                            calculationGroupId: string
                            complete: true
                            errors:
                              - key: { }
                                correlationId: string
                                message: string
                                messageValues:
                                  - dataType: { }
                                    value: string
                                    capitalize: true
                            validationErrors:
                              - reason: { }
                                error: { }
                                problemEntity:
                                  entitySubjectType: { }
                                  entitySubjectId: string
                                impactedEntity:
                                  entitySubjectType: { }
                                  entitySubjectId: string
                                relatedEntities:
                                  - entitySubjectType: { }
                                    entitySubjectId: string
                  advancePeriods:
                    - startDateTime: string
                      endDateTime: string
                      advanceAmountExclVAT: 0
                      invoiceId: string
                      invoiceNum: string
                      invoiceDate: string
                      sentStatus: { }
                      paid: true
                      automaticallyDeleted: true
                      manuallyDeleted: true
                  expectAdvancesToBeImportedPeriodically: true
                  costAllocationBillable: true
                  invoicingUpfront: true
                  invoicingCheckpointDateTime: string
                  productId: string
                  propertyGroups:
                    - id: string
                      name: string
  '/BillingCompletenesses/{billingRelationId}/changenextinvoiceenddate':
    post:
      tags:
        - BillingCompletenesses
      summary: Changes the next invoice end date for a specific billing relation.
      description: Changes the next invoice end date for a specific billing relation.
      operationId: post-billingcompletenesses-billingrelationid-changenextinvoiceenddate
      parameters:
        - name: billingRelationId
          in: path
          description: The ID of the billing relation.
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: The request containing the new end date.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ChangeNextInvoiceEndDateRequest'
              description: Represents a request to change the end date of the next invoice
            example:
              fromFirstOpenPeriod: true
              endDateTime: string
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ChangeNextInvoiceEndDateRequest'
              description: Represents a request to change the end date of the next invoice
            example:
              fromFirstOpenPeriod: true
              endDateTime: string
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ChangeNextInvoiceEndDateRequest'
              description: Represents a request to change the end date of the next invoice
            example:
              fromFirstOpenPeriod: true
              endDateTime: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/BillingCompletenessDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/BillingCompletenessDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  contractId: string
                  contractNum: string
                  debtor:
                    customerId: string
                    displayName: string
                    customerAccountNumber: string
                    customerType: { }
                    customerGroup:
                      id: string
                      name: string
                  billingRelationId: string
                  periodStartDateTime: string
                  periodEndDateTime: string
                  status: { }
                  inputMissingDetails:
                    reason: { }
                    extraInfo: string
                  hasCorrections: true
                  invoiceType: { }
                  blocked: true
                  requiredQuantitiesGrouped:
                    contractRequiredQuantities:
                      - billingItemId: string
                        requiredQuantities:
                          - billingItemId: string
                            serviceLocationId: string
                            calculationGroupId: string
                            complete: true
                            errors:
                              - key: { }
                                correlationId: string
                                message: string
                                messageValues:
                                  - dataType: { }
                                    value: string
                                    capitalize: true
                            validationErrors:
                              - reason: { }
                                error: { }
                                problemEntity:
                                  entitySubjectType: { }
                                  entitySubjectId: string
                                impactedEntity:
                                  entitySubjectType: { }
                                  entitySubjectId: string
                                relatedEntities:
                                  - entitySubjectType: { }
                                    entitySubjectId: string
                    locationRequiredQuantities:
                      - serviceLocationId: string
                        requiredQuantities:
                          - billingItemId: string
                            serviceLocationId: string
                            calculationGroupId: string
                            complete: true
                            errors:
                              - key: { }
                                correlationId: string
                                message: string
                                messageValues:
                                  - dataType: { }
                                    value: string
                                    capitalize: true
                            validationErrors:
                              - reason: { }
                                error: { }
                                problemEntity:
                                  entitySubjectType: { }
                                  entitySubjectId: string
                                impactedEntity:
                                  entitySubjectType: { }
                                  entitySubjectId: string
                                relatedEntities:
                                  - entitySubjectType: { }
                                    entitySubjectId: string
                  advancePeriods:
                    - startDateTime: string
                      endDateTime: string
                      advanceAmountExclVAT: 0
                      invoiceId: string
                      invoiceNum: string
                      invoiceDate: string
                      sentStatus: { }
                      paid: true
                      automaticallyDeleted: true
                      manuallyDeleted: true
                  expectAdvancesToBeImportedPeriodically: true
                  costAllocationBillable: true
                  invoicingUpfront: true
                  invoicingCheckpointDateTime: string
                  productId: string
                  propertyGroups:
                    - id: string
                      name: string
            text/json:
              schema:
                $ref: '#/components/schemas/BillingCompletenessDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  contractId: string
                  contractNum: string
                  debtor:
                    customerId: string
                    displayName: string
                    customerAccountNumber: string
                    customerType: { }
                    customerGroup:
                      id: string
                      name: string
                  billingRelationId: string
                  periodStartDateTime: string
                  periodEndDateTime: string
                  status: { }
                  inputMissingDetails:
                    reason: { }
                    extraInfo: string
                  hasCorrections: true
                  invoiceType: { }
                  blocked: true
                  requiredQuantitiesGrouped:
                    contractRequiredQuantities:
                      - billingItemId: string
                        requiredQuantities:
                          - billingItemId: string
                            serviceLocationId: string
                            calculationGroupId: string
                            complete: true
                            errors:
                              - key: { }
                                correlationId: string
                                message: string
                                messageValues:
                                  - dataType: { }
                                    value: string
                                    capitalize: true
                            validationErrors:
                              - reason: { }
                                error: { }
                                problemEntity:
                                  entitySubjectType: { }
                                  entitySubjectId: string
                                impactedEntity:
                                  entitySubjectType: { }
                                  entitySubjectId: string
                                relatedEntities:
                                  - entitySubjectType: { }
                                    entitySubjectId: string
                    locationRequiredQuantities:
                      - serviceLocationId: string
                        requiredQuantities:
                          - billingItemId: string
                            serviceLocationId: string
                            calculationGroupId: string
                            complete: true
                            errors:
                              - key: { }
                                correlationId: string
                                message: string
                                messageValues:
                                  - dataType: { }
                                    value: string
                                    capitalize: true
                            validationErrors:
                              - reason: { }
                                error: { }
                                problemEntity:
                                  entitySubjectType: { }
                                  entitySubjectId: string
                                impactedEntity:
                                  entitySubjectType: { }
                                  entitySubjectId: string
                                relatedEntities:
                                  - entitySubjectType: { }
                                    entitySubjectId: string
                  advancePeriods:
                    - startDateTime: string
                      endDateTime: string
                      advanceAmountExclVAT: 0
                      invoiceId: string
                      invoiceNum: string
                      invoiceDate: string
                      sentStatus: { }
                      paid: true
                      automaticallyDeleted: true
                      manuallyDeleted: true
                  expectAdvancesToBeImportedPeriodically: true
                  costAllocationBillable: true
                  invoicingUpfront: true
                  invoicingCheckpointDateTime: string
                  productId: string
                  propertyGroups:
                    - id: string
                      name: string
  /BillingCompletenesses/bulk/triggerbilling:
    post:
      tags:
        - BillingCompletenesses
      summary: Triggers billing for multiple billing completenesses in bulk.
      description: Triggers billing for multiple billing completenesses in bulk.
      operationId: post-billingcompletenesses-bulk-triggerbilling
      parameters:
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: The bulk request containing the details for triggering billing.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BulkTriggerBillingCompletenessRequest'
              description: Represents a bulk request to trigger billing completeness calculation for multiple items
            example:
              onlyAdvances: true
              recalculateIfNeeded: true
              advanceUntilDateTime: string
              onlyValidate: true
              queryParams:
                flexSearch: string
                includeOnlyIds:
                  - string
                excludeIds:
                  - string
                billingRelationId: string
                customerId: string
                propertyGroupIds:
                  - string
                contractId: string
                invoiceType: string
                status: string
                onlyOpen: true
                skipBlocked: true
                periodStartDateTime: string
                periodEndDateTime: string
                invoicingCheckpointStartDateTime: string
                invoicingCheckpointEndDateTime: string
              quickFilter: string
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BulkTriggerBillingCompletenessRequest'
              description: Represents a bulk request to trigger billing completeness calculation for multiple items
            example:
              onlyAdvances: true
              recalculateIfNeeded: true
              advanceUntilDateTime: string
              onlyValidate: true
              queryParams:
                flexSearch: string
                includeOnlyIds:
                  - string
                excludeIds:
                  - string
                billingRelationId: string
                customerId: string
                propertyGroupIds:
                  - string
                contractId: string
                invoiceType: string
                status: string
                onlyOpen: true
                skipBlocked: true
                periodStartDateTime: string
                periodEndDateTime: string
                invoicingCheckpointStartDateTime: string
                invoicingCheckpointEndDateTime: string
              quickFilter: string
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BulkTriggerBillingCompletenessRequest'
              description: Represents a bulk request to trigger billing completeness calculation for multiple items
            example:
              onlyAdvances: true
              recalculateIfNeeded: true
              advanceUntilDateTime: string
              onlyValidate: true
              queryParams:
                flexSearch: string
                includeOnlyIds:
                  - string
                excludeIds:
                  - string
                billingRelationId: string
                customerId: string
                propertyGroupIds:
                  - string
                contractId: string
                invoiceType: string
                status: string
                onlyOpen: true
                skipBlocked: true
                periodStartDateTime: string
                periodEndDateTime: string
                invoicingCheckpointStartDateTime: string
                invoicingCheckpointEndDateTime: string
              quickFilter: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
  /BillingCompletenesses/bulk/billintermediately:
    post:
      tags:
        - BillingCompletenesses
      summary: Bills multiple billing completenesses intermediately in bulk.
      description: Bills multiple billing completenesses intermediately in bulk.
      operationId: post-billingcompletenesses-bulk-billintermediately
      parameters:
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: The bulk request containing the details for intermediate billing.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BulkBillBillingCompletenessIntermediatelyRequest'
              description: Represents a bulk request to perform intermediate billing for multiple billing completeness items
            example:
              endDateTime: string
              onlyValidate: true
              queryParams:
                flexSearch: string
                includeOnlyIds:
                  - string
                excludeIds:
                  - string
                billingRelationId: string
                customerId: string
                propertyGroupIds:
                  - string
                contractId: string
                invoiceType: string
                status: string
                onlyOpen: true
                skipBlocked: true
                periodStartDateTime: string
                periodEndDateTime: string
                invoicingCheckpointStartDateTime: string
                invoicingCheckpointEndDateTime: string
              quickFilter: string
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BulkBillBillingCompletenessIntermediatelyRequest'
              description: Represents a bulk request to perform intermediate billing for multiple billing completeness items
            example:
              endDateTime: string
              onlyValidate: true
              queryParams:
                flexSearch: string
                includeOnlyIds:
                  - string
                excludeIds:
                  - string
                billingRelationId: string
                customerId: string
                propertyGroupIds:
                  - string
                contractId: string
                invoiceType: string
                status: string
                onlyOpen: true
                skipBlocked: true
                periodStartDateTime: string
                periodEndDateTime: string
                invoicingCheckpointStartDateTime: string
                invoicingCheckpointEndDateTime: string
              quickFilter: string
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BulkBillBillingCompletenessIntermediatelyRequest'
              description: Represents a bulk request to perform intermediate billing for multiple billing completeness items
            example:
              endDateTime: string
              onlyValidate: true
              queryParams:
                flexSearch: string
                includeOnlyIds:
                  - string
                excludeIds:
                  - string
                billingRelationId: string
                customerId: string
                propertyGroupIds:
                  - string
                contractId: string
                invoiceType: string
                status: string
                onlyOpen: true
                skipBlocked: true
                periodStartDateTime: string
                periodEndDateTime: string
                invoicingCheckpointStartDateTime: string
                invoicingCheckpointEndDateTime: string
              quickFilter: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
  /BillingCompletenesses/bulk/manuallyclose:
    post:
      tags:
        - BillingCompletenesses
      summary: Manually closes multiple billing completenesses in bulk.
      description: Manually closes multiple billing completenesses in bulk.
      operationId: post-billingcompletenesses-bulk-manuallyclose
      parameters:
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: The bulk request containing the details for manually closing billing completenesses.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BulkManuallyCloseBillingCompletenessRequest'
              description: "Represents a bulk request to manually close multiple billing completeness records.\r\nThis request allows closing multiple billing completeness records in a single operation."
            example:
              onlyValidate: true
              queryParams:
                flexSearch: string
                includeOnlyIds:
                  - string
                excludeIds:
                  - string
                billingRelationId: string
                customerId: string
                propertyGroupIds:
                  - string
                contractId: string
                invoiceType: string
                status: string
                onlyOpen: true
                skipBlocked: true
                periodStartDateTime: string
                periodEndDateTime: string
                invoicingCheckpointStartDateTime: string
                invoicingCheckpointEndDateTime: string
              quickFilter: string
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BulkManuallyCloseBillingCompletenessRequest'
              description: "Represents a bulk request to manually close multiple billing completeness records.\r\nThis request allows closing multiple billing completeness records in a single operation."
            example:
              onlyValidate: true
              queryParams:
                flexSearch: string
                includeOnlyIds:
                  - string
                excludeIds:
                  - string
                billingRelationId: string
                customerId: string
                propertyGroupIds:
                  - string
                contractId: string
                invoiceType: string
                status: string
                onlyOpen: true
                skipBlocked: true
                periodStartDateTime: string
                periodEndDateTime: string
                invoicingCheckpointStartDateTime: string
                invoicingCheckpointEndDateTime: string
              quickFilter: string
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BulkManuallyCloseBillingCompletenessRequest'
              description: "Represents a bulk request to manually close multiple billing completeness records.\r\nThis request allows closing multiple billing completeness records in a single operation."
            example:
              onlyValidate: true
              queryParams:
                flexSearch: string
                includeOnlyIds:
                  - string
                excludeIds:
                  - string
                billingRelationId: string
                customerId: string
                propertyGroupIds:
                  - string
                contractId: string
                invoiceType: string
                status: string
                onlyOpen: true
                skipBlocked: true
                periodStartDateTime: string
                periodEndDateTime: string
                invoicingCheckpointStartDateTime: string
                invoicingCheckpointEndDateTime: string
              quickFilter: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
  /BillingCompletenesses/bulk/reopen:
    post:
      tags:
        - BillingCompletenesses
      summary: Reopens multiple manually closed billing completenesses in bulk.
      description: Reopens multiple manually closed billing completenesses in bulk.
      operationId: post-billingcompletenesses-bulk-reopen
      parameters:
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: The bulk request containing the details for reopening billing completenesses.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BulkReopenBillingCompletenessRequest'
              description: "Represents a bulk request to reopen multiple billing completeness records.\r\nThis request allows reopening multiple billing completeness records in a single operation."
            example:
              onlyValidate: true
              queryParams:
                flexSearch: string
                includeOnlyIds:
                  - string
                excludeIds:
                  - string
                billingRelationId: string
                customerId: string
                propertyGroupIds:
                  - string
                contractId: string
                invoiceType: string
                status: string
                onlyOpen: true
                skipBlocked: true
                periodStartDateTime: string
                periodEndDateTime: string
                invoicingCheckpointStartDateTime: string
                invoicingCheckpointEndDateTime: string
              quickFilter: string
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BulkReopenBillingCompletenessRequest'
              description: "Represents a bulk request to reopen multiple billing completeness records.\r\nThis request allows reopening multiple billing completeness records in a single operation."
            example:
              onlyValidate: true
              queryParams:
                flexSearch: string
                includeOnlyIds:
                  - string
                excludeIds:
                  - string
                billingRelationId: string
                customerId: string
                propertyGroupIds:
                  - string
                contractId: string
                invoiceType: string
                status: string
                onlyOpen: true
                skipBlocked: true
                periodStartDateTime: string
                periodEndDateTime: string
                invoicingCheckpointStartDateTime: string
                invoicingCheckpointEndDateTime: string
              quickFilter: string
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BulkReopenBillingCompletenessRequest'
              description: "Represents a bulk request to reopen multiple billing completeness records.\r\nThis request allows reopening multiple billing completeness records in a single operation."
            example:
              onlyValidate: true
              queryParams:
                flexSearch: string
                includeOnlyIds:
                  - string
                excludeIds:
                  - string
                billingRelationId: string
                customerId: string
                propertyGroupIds:
                  - string
                contractId: string
                invoiceType: string
                status: string
                onlyOpen: true
                skipBlocked: true
                periodStartDateTime: string
                periodEndDateTime: string
                invoicingCheckpointStartDateTime: string
                invoicingCheckpointEndDateTime: string
              quickFilter: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
  '/BillingRelations/{customeruuid}':
    get:
      tags:
        - BillingRelations
      summary: Retrieves billing relations for a specific customer.
      description: Retrieves billing relations for a specific customer.
      operationId: get-billingrelations-customeruuid
      parameters:
        - name: customeruuid
          in: path
          description: The UUID of the customer.
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: string
                title: string
                status: 0
                detail: string
                instance: string
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: string
                title: string
                status: 0
                detail: string
                instance: string
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/BillingRelationDTOPagedResponseModelDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/BillingRelationDTOPagedResponseModelDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  results:
                    - id: string
                      debtor:
                        customerId: string
                        displayName: string
                        customerAccountNumber: string
                        customerType: { }
                        customerGroup:
                          id: string
                          name: string
                      paymentTermsId: string
                      paymentMethod: { }
                      advanceDetails:
                        advanceAmount: 0
                        originalAmount: 0
                        changedBy: { }
                        changedByUserId: string
                        changedDate: string
                        advanceAmountExclVAT: 0
                        advanceFrequency: { }
                      invoiceDetails:
                        invoiceFrequency: { }
                        firstInvoiceStartDateTime: string
                        firstInvoiceEndDateTime: string
                      contract:
                        contractId: string
                        contractNumber: string
                        products:
                          - productId: string
                            productName: string
                            startDateTime: string
                            endDateTime: string
                        services:
                          - utilityType: { }
                            serviceLocationId: string
                            supplyStartDateTime: string
                            supplyEndDateTime: string
                            externalIdentifier: string
                        usePropertyGroupProduct: true
                        propertyGroups:
                          - id: string
                            name: string
                        billingMethod: { }
                      contractStartDateTime: string
                      contractEndDateTime: string
                      blockDetails:
                        blocked: true
                        blockedOn: string
                        blockedBy: string
                        blockedComment: string
                      expectAdvancesToBeImportedPeriodically: true
                      timeZone: string
                  hasNextPage: true
                  nextPageToken: string
                  totalRecords: 0
                  sortableFields:
                    - string
                  aggregateDetails:
                    - code: string
                      translation: string
                      value: 0
                      valueDate: string
            text/json:
              schema:
                $ref: '#/components/schemas/BillingRelationDTOPagedResponseModelDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  results:
                    - id: string
                      debtor:
                        customerId: string
                        displayName: string
                        customerAccountNumber: string
                        customerType: { }
                        customerGroup:
                          id: string
                          name: string
                      paymentTermsId: string
                      paymentMethod: { }
                      advanceDetails:
                        advanceAmount: 0
                        originalAmount: 0
                        changedBy: { }
                        changedByUserId: string
                        changedDate: string
                        advanceAmountExclVAT: 0
                        advanceFrequency: { }
                      invoiceDetails:
                        invoiceFrequency: { }
                        firstInvoiceStartDateTime: string
                        firstInvoiceEndDateTime: string
                      contract:
                        contractId: string
                        contractNumber: string
                        products:
                          - productId: string
                            productName: string
                            startDateTime: string
                            endDateTime: string
                        services:
                          - utilityType: { }
                            serviceLocationId: string
                            supplyStartDateTime: string
                            supplyEndDateTime: string
                            externalIdentifier: string
                        usePropertyGroupProduct: true
                        propertyGroups:
                          - id: string
                            name: string
                        billingMethod: { }
                      contractStartDateTime: string
                      contractEndDateTime: string
                      blockDetails:
                        blocked: true
                        blockedOn: string
                        blockedBy: string
                        blockedComment: string
                      expectAdvancesToBeImportedPeriodically: true
                      timeZone: string
                  hasNextPage: true
                  nextPageToken: string
                  totalRecords: 0
                  sortableFields:
                    - string
                  aggregateDetails:
                    - code: string
                      translation: string
                      value: 0
                      valueDate: string
  '/BillingRelations/{customeruuid}/{contractuuid}':
    get:
      tags:
        - BillingRelations
      summary: Retrieves a billing relation for a specific customer and contract.
      description: Retrieves a billing relation for a specific customer and contract.
      operationId: get-billingrelations-customeruuid-contractuuid
      parameters:
        - name: customeruuid
          in: path
          description: The UUID of the customer.
          required: true
          schema:
            type: string
        - name: contractuuid
          in: path
          description: The UUID of the contract.
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: string
                title: string
                status: 0
                detail: string
                instance: string
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: string
                title: string
                status: 0
                detail: string
                instance: string
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/BillingRelationDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/BillingRelationDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  debtor:
                    customerId: string
                    displayName: string
                    customerAccountNumber: string
                    customerType: { }
                    customerGroup:
                      id: string
                      name: string
                  paymentTermsId: string
                  paymentMethod: { }
                  advanceDetails:
                    advanceAmount: 0
                    originalAmount: 0
                    changedBy: { }
                    changedByUserId: string
                    changedDate: string
                    advanceAmountExclVAT: 0
                    advanceFrequency: { }
                  invoiceDetails:
                    invoiceFrequency: { }
                    firstInvoiceStartDateTime: string
                    firstInvoiceEndDateTime: string
                  contract:
                    contractId: string
                    contractNumber: string
                    products:
                      - productId: string
                        productName: string
                        startDateTime: string
                        endDateTime: string
                    services:
                      - utilityType: { }
                        serviceLocationId: string
                        supplyStartDateTime: string
                        supplyEndDateTime: string
                        externalIdentifier: string
                    usePropertyGroupProduct: true
                    propertyGroups:
                      - id: string
                        name: string
                    billingMethod: { }
                  contractStartDateTime: string
                  contractEndDateTime: string
                  blockDetails:
                    blocked: true
                    blockedOn: string
                    blockedBy: string
                    blockedComment: string
                  expectAdvancesToBeImportedPeriodically: true
                  timeZone: string
            text/json:
              schema:
                $ref: '#/components/schemas/BillingRelationDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  debtor:
                    customerId: string
                    displayName: string
                    customerAccountNumber: string
                    customerType: { }
                    customerGroup:
                      id: string
                      name: string
                  paymentTermsId: string
                  paymentMethod: { }
                  advanceDetails:
                    advanceAmount: 0
                    originalAmount: 0
                    changedBy: { }
                    changedByUserId: string
                    changedDate: string
                    advanceAmountExclVAT: 0
                    advanceFrequency: { }
                  invoiceDetails:
                    invoiceFrequency: { }
                    firstInvoiceStartDateTime: string
                    firstInvoiceEndDateTime: string
                  contract:
                    contractId: string
                    contractNumber: string
                    products:
                      - productId: string
                        productName: string
                        startDateTime: string
                        endDateTime: string
                    services:
                      - utilityType: { }
                        serviceLocationId: string
                        supplyStartDateTime: string
                        supplyEndDateTime: string
                        externalIdentifier: string
                    usePropertyGroupProduct: true
                    propertyGroups:
                      - id: string
                        name: string
                    billingMethod: { }
                  contractStartDateTime: string
                  contractEndDateTime: string
                  blockDetails:
                    blocked: true
                    blockedOn: string
                    blockedBy: string
                    blockedComment: string
                  expectAdvancesToBeImportedPeriodically: true
                  timeZone: string
  '/BillingRelations/b/{billreluuid}/changeadvanceamount':
    post:
      tags:
        - BillingRelations
      summary: Changes the advance amount for a specific billing relation.
      description: Changes the advance amount for a specific billing relation.
      operationId: ChangeAdvanceAmount
      parameters:
        - name: billreluuid
          in: path
          description: The UUID of the billing relation.
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: The request containing the new advance amount details.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ChangeAdvanceAmountRequest'
              description: "Represents a request to change the advance amount for a billing relation.\r\nThis DTO is used to update the monthly advance payment amount for a customer."
            example:
              newAdvanceAmount: 0
              changedBy: { }
              sendConfirmationEmail: true
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ChangeAdvanceAmountRequest'
              description: "Represents a request to change the advance amount for a billing relation.\r\nThis DTO is used to update the monthly advance payment amount for a customer."
            example:
              newAdvanceAmount: 0
              changedBy: { }
              sendConfirmationEmail: true
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ChangeAdvanceAmountRequest'
              description: "Represents a request to change the advance amount for a billing relation.\r\nThis DTO is used to update the monthly advance payment amount for a customer."
            example:
              newAdvanceAmount: 0
              changedBy: { }
              sendConfirmationEmail: true
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/BillingRelationDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/BillingRelationDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  debtor:
                    customerId: string
                    displayName: string
                    customerAccountNumber: string
                    customerType: { }
                    customerGroup:
                      id: string
                      name: string
                  paymentTermsId: string
                  paymentMethod: { }
                  advanceDetails:
                    advanceAmount: 0
                    originalAmount: 0
                    changedBy: { }
                    changedByUserId: string
                    changedDate: string
                    advanceAmountExclVAT: 0
                    advanceFrequency: { }
                  invoiceDetails:
                    invoiceFrequency: { }
                    firstInvoiceStartDateTime: string
                    firstInvoiceEndDateTime: string
                  contract:
                    contractId: string
                    contractNumber: string
                    products:
                      - productId: string
                        productName: string
                        startDateTime: string
                        endDateTime: string
                    services:
                      - utilityType: { }
                        serviceLocationId: string
                        supplyStartDateTime: string
                        supplyEndDateTime: string
                        externalIdentifier: string
                    usePropertyGroupProduct: true
                    propertyGroups:
                      - id: string
                        name: string
                    billingMethod: { }
                  contractStartDateTime: string
                  contractEndDateTime: string
                  blockDetails:
                    blocked: true
                    blockedOn: string
                    blockedBy: string
                    blockedComment: string
                  expectAdvancesToBeImportedPeriodically: true
                  timeZone: string
            text/json:
              schema:
                $ref: '#/components/schemas/BillingRelationDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  debtor:
                    customerId: string
                    displayName: string
                    customerAccountNumber: string
                    customerType: { }
                    customerGroup:
                      id: string
                      name: string
                  paymentTermsId: string
                  paymentMethod: { }
                  advanceDetails:
                    advanceAmount: 0
                    originalAmount: 0
                    changedBy: { }
                    changedByUserId: string
                    changedDate: string
                    advanceAmountExclVAT: 0
                    advanceFrequency: { }
                  invoiceDetails:
                    invoiceFrequency: { }
                    firstInvoiceStartDateTime: string
                    firstInvoiceEndDateTime: string
                  contract:
                    contractId: string
                    contractNumber: string
                    products:
                      - productId: string
                        productName: string
                        startDateTime: string
                        endDateTime: string
                    services:
                      - utilityType: { }
                        serviceLocationId: string
                        supplyStartDateTime: string
                        supplyEndDateTime: string
                        externalIdentifier: string
                    usePropertyGroupProduct: true
                    propertyGroups:
                      - id: string
                        name: string
                    billingMethod: { }
                  contractStartDateTime: string
                  contractEndDateTime: string
                  blockDetails:
                    blocked: true
                    blockedOn: string
                    blockedBy: string
                    blockedComment: string
                  expectAdvancesToBeImportedPeriodically: true
                  timeZone: string
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
  '/BillingRelations/b/{billreluuid}/block':
    post:
      tags:
        - BillingRelations
      summary: Blocks a specific billing relation from billing.
      description: Blocks a specific billing relation from billing.
      operationId: post-billingrelations-b-billreluuid-block
      parameters:
        - name: billreluuid
          in: path
          description: The UUID of the billing relation.
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: The request containing the block details.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BillingBlockRequest'
              description: "Represents a request to block a billing relation.\r\nThis DTO is used to temporarily prevent billing operations on a billing relation."
            example:
              comment: string
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BillingBlockRequest'
              description: "Represents a request to block a billing relation.\r\nThis DTO is used to temporarily prevent billing operations on a billing relation."
            example:
              comment: string
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BillingBlockRequest'
              description: "Represents a request to block a billing relation.\r\nThis DTO is used to temporarily prevent billing operations on a billing relation."
            example:
              comment: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/BillingRelationDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/BillingRelationDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  debtor:
                    customerId: string
                    displayName: string
                    customerAccountNumber: string
                    customerType: { }
                    customerGroup:
                      id: string
                      name: string
                  paymentTermsId: string
                  paymentMethod: { }
                  advanceDetails:
                    advanceAmount: 0
                    originalAmount: 0
                    changedBy: { }
                    changedByUserId: string
                    changedDate: string
                    advanceAmountExclVAT: 0
                    advanceFrequency: { }
                  invoiceDetails:
                    invoiceFrequency: { }
                    firstInvoiceStartDateTime: string
                    firstInvoiceEndDateTime: string
                  contract:
                    contractId: string
                    contractNumber: string
                    products:
                      - productId: string
                        productName: string
                        startDateTime: string
                        endDateTime: string
                    services:
                      - utilityType: { }
                        serviceLocationId: string
                        supplyStartDateTime: string
                        supplyEndDateTime: string
                        externalIdentifier: string
                    usePropertyGroupProduct: true
                    propertyGroups:
                      - id: string
                        name: string
                    billingMethod: { }
                  contractStartDateTime: string
                  contractEndDateTime: string
                  blockDetails:
                    blocked: true
                    blockedOn: string
                    blockedBy: string
                    blockedComment: string
                  expectAdvancesToBeImportedPeriodically: true
                  timeZone: string
            text/json:
              schema:
                $ref: '#/components/schemas/BillingRelationDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  debtor:
                    customerId: string
                    displayName: string
                    customerAccountNumber: string
                    customerType: { }
                    customerGroup:
                      id: string
                      name: string
                  paymentTermsId: string
                  paymentMethod: { }
                  advanceDetails:
                    advanceAmount: 0
                    originalAmount: 0
                    changedBy: { }
                    changedByUserId: string
                    changedDate: string
                    advanceAmountExclVAT: 0
                    advanceFrequency: { }
                  invoiceDetails:
                    invoiceFrequency: { }
                    firstInvoiceStartDateTime: string
                    firstInvoiceEndDateTime: string
                  contract:
                    contractId: string
                    contractNumber: string
                    products:
                      - productId: string
                        productName: string
                        startDateTime: string
                        endDateTime: string
                    services:
                      - utilityType: { }
                        serviceLocationId: string
                        supplyStartDateTime: string
                        supplyEndDateTime: string
                        externalIdentifier: string
                    usePropertyGroupProduct: true
                    propertyGroups:
                      - id: string
                        name: string
                    billingMethod: { }
                  contractStartDateTime: string
                  contractEndDateTime: string
                  blockDetails:
                    blocked: true
                    blockedOn: string
                    blockedBy: string
                    blockedComment: string
                  expectAdvancesToBeImportedPeriodically: true
                  timeZone: string
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
  '/BillingRelations/b/{billreluuid}/unblock':
    post:
      tags:
        - BillingRelations
      summary: Unblocks a specific billing relation from billing.
      description: Unblocks a specific billing relation from billing.
      operationId: post-billingrelations-b-billreluuid-unblock
      parameters:
        - name: billreluuid
          in: path
          description: The UUID of the billing relation.
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: The request containing the unblock details.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BillingBlockRequest'
              description: "Represents a request to block a billing relation.\r\nThis DTO is used to temporarily prevent billing operations on a billing relation."
            example:
              comment: string
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BillingBlockRequest'
              description: "Represents a request to block a billing relation.\r\nThis DTO is used to temporarily prevent billing operations on a billing relation."
            example:
              comment: string
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BillingBlockRequest'
              description: "Represents a request to block a billing relation.\r\nThis DTO is used to temporarily prevent billing operations on a billing relation."
            example:
              comment: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/BillingRelationDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/BillingRelationDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  debtor:
                    customerId: string
                    displayName: string
                    customerAccountNumber: string
                    customerType: { }
                    customerGroup:
                      id: string
                      name: string
                  paymentTermsId: string
                  paymentMethod: { }
                  advanceDetails:
                    advanceAmount: 0
                    originalAmount: 0
                    changedBy: { }
                    changedByUserId: string
                    changedDate: string
                    advanceAmountExclVAT: 0
                    advanceFrequency: { }
                  invoiceDetails:
                    invoiceFrequency: { }
                    firstInvoiceStartDateTime: string
                    firstInvoiceEndDateTime: string
                  contract:
                    contractId: string
                    contractNumber: string
                    products:
                      - productId: string
                        productName: string
                        startDateTime: string
                        endDateTime: string
                    services:
                      - utilityType: { }
                        serviceLocationId: string
                        supplyStartDateTime: string
                        supplyEndDateTime: string
                        externalIdentifier: string
                    usePropertyGroupProduct: true
                    propertyGroups:
                      - id: string
                        name: string
                    billingMethod: { }
                  contractStartDateTime: string
                  contractEndDateTime: string
                  blockDetails:
                    blocked: true
                    blockedOn: string
                    blockedBy: string
                    blockedComment: string
                  expectAdvancesToBeImportedPeriodically: true
                  timeZone: string
            text/json:
              schema:
                $ref: '#/components/schemas/BillingRelationDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  debtor:
                    customerId: string
                    displayName: string
                    customerAccountNumber: string
                    customerType: { }
                    customerGroup:
                      id: string
                      name: string
                  paymentTermsId: string
                  paymentMethod: { }
                  advanceDetails:
                    advanceAmount: 0
                    originalAmount: 0
                    changedBy: { }
                    changedByUserId: string
                    changedDate: string
                    advanceAmountExclVAT: 0
                    advanceFrequency: { }
                  invoiceDetails:
                    invoiceFrequency: { }
                    firstInvoiceStartDateTime: string
                    firstInvoiceEndDateTime: string
                  contract:
                    contractId: string
                    contractNumber: string
                    products:
                      - productId: string
                        productName: string
                        startDateTime: string
                        endDateTime: string
                    services:
                      - utilityType: { }
                        serviceLocationId: string
                        supplyStartDateTime: string
                        supplyEndDateTime: string
                        externalIdentifier: string
                    usePropertyGroupProduct: true
                    propertyGroups:
                      - id: string
                        name: string
                    billingMethod: { }
                  contractStartDateTime: string
                  contractEndDateTime: string
                  blockDetails:
                    blocked: true
                    blockedOn: string
                    blockedBy: string
                    blockedComment: string
                  expectAdvancesToBeImportedPeriodically: true
                  timeZone: string
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
  /CollectionCases:
    get:
      tags:
        - CollectionCases
      summary: Retrieves all collection cases based on the provided query parameters.
      description: Retrieves all collection cases based on the provided query parameters.
      operationId: get-collectioncases
      parameters:
        - name: WorkflowId
          in: query
          schema:
            type: string
        - name: CustomerId
          in: query
          schema:
            type: string
        - name: PropertyGroupIds
          in: query
          schema:
            type: array
            items:
              type: string
        - name: NextActionDueFrom
          in: query
          description: Format - date-time (as date-time in RFC3339).
          schema:
            type: string
            format: date-time
            nullable: true
        - name: NextActionDueTo
          in: query
          description: Format - date-time (as date-time in RFC3339).
          schema:
            type: string
            format: date-time
            nullable: true
        - name: OpenAmountLowerLimit
          in: query
          description: Format - double.
          schema:
            type: number
            format: double
            nullable: true
        - name: CustomerGroupId
          in: query
          schema:
            type: string
        - name: FlexSearch
          in: query
          schema:
            type: string
        - name: IncludeOnlyIds
          in: query
          schema:
            type: array
            items:
              type: string
        - name: ExcludeIds
          in: query
          schema:
            type: array
            items:
              type: string
        - name: Name
          in: query
          schema:
            type: string
        - name: Id
          in: query
          description: Format - int32.
          schema:
            type: integer
            format: int32
        - name: orderBy
          in: query
          description: The order by clause.
          schema:
            type: string
        - name: continuationToken
          in: header
          description: The continuation token for pagination.
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CollectionCaseDTOPagedResponseModelDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionCaseDTOPagedResponseModelDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  results:
                    - id: string
                      entityType: { }
                      createdDateTime: string
                      discriminator: string
                      _etag: string
                      requireAttention: true
                      hasErrors: true
                      hasWarnings: true
                      isReadOnly: true
                      organisationId: string
                      collectionNum: string
                      sequenceNum: 0
                      workflowId: string
                      workflowName: string
                      debtor:
                        customerId: string
                        displayName: string
                        customerAccountNumber: string
                        customerType: { }
                        customerGroup:
                          id: string
                          name: string
                      manualInterventionRequired: true
                      status: { }
                      steps:
                        - id: string
                          stepId: string
                          order: 0
                          name: string
                          triggerDays: 0
                          executeAt: string
                          stepType: { }
                          communicationType: { }
                          communicationLevel: { }
                          chargeType: { }
                          charges:
                            stepChargeAmountInclVAT: 0
                            stepVATAmount: 0
                            transactionId: string
                          executedAt: string
                          documentsSentAt: string
                          documentId: string
                          emailId: string
                          status: { }
                          failureReasonCode:
                            key: { }
                            correlationId: string
                            message: string
                            messageValues:
                              - dataType: { }
                                value: string
                                capitalize: true
                          failureDetails: string
                          supportsExternalPrinting: true
                          retryCount: 0
                      lastStep:
                        id: string
                        stepId: string
                        order: 0
                        name: string
                        triggerDays: 0
                        executeAt: string
                        stepType: { }
                        communicationType: { }
                        communicationLevel: { }
                        chargeType: { }
                        charges:
                          stepChargeAmountInclVAT: 0
                          stepVATAmount: 0
                          transactionId: string
                        executedAt: string
                        documentsSentAt: string
                        documentId: string
                        emailId: string
                        status: { }
                        failureReasonCode:
                          key: { }
                          correlationId: string
                          message: string
                          messageValues:
                            - dataType: { }
                              value: string
                              capitalize: true
                        failureDetails: string
                        supportsExternalPrinting: true
                        retryCount: 0
                      nextStep:
                        id: string
                        stepId: string
                        order: 0
                        name: string
                        triggerDays: 0
                        executeAt: string
                        stepType: { }
                        communicationType: { }
                        communicationLevel: { }
                        chargeType: { }
                        charges:
                          stepChargeAmountInclVAT: 0
                          stepVATAmount: 0
                          transactionId: string
                        executedAt: string
                        documentsSentAt: string
                        documentId: string
                        emailId: string
                        status: { }
                        failureReasonCode:
                          key: { }
                          correlationId: string
                          message: string
                          messageValues:
                            - dataType: { }
                              value: string
                              capitalize: true
                        failureDetails: string
                        supportsExternalPrinting: true
                        retryCount: 0
                      nextActionDue: string
                      referencedTransactions:
                        - string
                      paymentReference: string
                      propertyGroups:
                        - id: string
                          name: string
                      totalOpenAmountInclVAT: 0
                      customProperties:
                        - customEntityPropertyTypeId: string
                          values:
                            - valueDecimal: 0
                              valueString: string
                              valueBoolean: true
                              valueNumber: 0
                              valueDateTime: string
                              valueDropdown:
                                - string
                              startDateTime: string
                              endDateTime: string
                  hasNextPage: true
                  nextPageToken: string
                  totalRecords: 0
                  sortableFields:
                    - string
                  aggregateDetails:
                    - code: string
                      translation: string
                      value: 0
                      valueDate: string
            text/json:
              schema:
                $ref: '#/components/schemas/CollectionCaseDTOPagedResponseModelDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  results:
                    - id: string
                      entityType: { }
                      createdDateTime: string
                      discriminator: string
                      _etag: string
                      requireAttention: true
                      hasErrors: true
                      hasWarnings: true
                      isReadOnly: true
                      organisationId: string
                      collectionNum: string
                      sequenceNum: 0
                      workflowId: string
                      workflowName: string
                      debtor:
                        customerId: string
                        displayName: string
                        customerAccountNumber: string
                        customerType: { }
                        customerGroup:
                          id: string
                          name: string
                      manualInterventionRequired: true
                      status: { }
                      steps:
                        - id: string
                          stepId: string
                          order: 0
                          name: string
                          triggerDays: 0
                          executeAt: string
                          stepType: { }
                          communicationType: { }
                          communicationLevel: { }
                          chargeType: { }
                          charges:
                            stepChargeAmountInclVAT: 0
                            stepVATAmount: 0
                            transactionId: string
                          executedAt: string
                          documentsSentAt: string
                          documentId: string
                          emailId: string
                          status: { }
                          failureReasonCode:
                            key: { }
                            correlationId: string
                            message: string
                            messageValues:
                              - dataType: { }
                                value: string
                                capitalize: true
                          failureDetails: string
                          supportsExternalPrinting: true
                          retryCount: 0
                      lastStep:
                        id: string
                        stepId: string
                        order: 0
                        name: string
                        triggerDays: 0
                        executeAt: string
                        stepType: { }
                        communicationType: { }
                        communicationLevel: { }
                        chargeType: { }
                        charges:
                          stepChargeAmountInclVAT: 0
                          stepVATAmount: 0
                          transactionId: string
                        executedAt: string
                        documentsSentAt: string
                        documentId: string
                        emailId: string
                        status: { }
                        failureReasonCode:
                          key: { }
                          correlationId: string
                          message: string
                          messageValues:
                            - dataType: { }
                              value: string
                              capitalize: true
                        failureDetails: string
                        supportsExternalPrinting: true
                        retryCount: 0
                      nextStep:
                        id: string
                        stepId: string
                        order: 0
                        name: string
                        triggerDays: 0
                        executeAt: string
                        stepType: { }
                        communicationType: { }
                        communicationLevel: { }
                        chargeType: { }
                        charges:
                          stepChargeAmountInclVAT: 0
                          stepVATAmount: 0
                          transactionId: string
                        executedAt: string
                        documentsSentAt: string
                        documentId: string
                        emailId: string
                        status: { }
                        failureReasonCode:
                          key: { }
                          correlationId: string
                          message: string
                          messageValues:
                            - dataType: { }
                              value: string
                              capitalize: true
                        failureDetails: string
                        supportsExternalPrinting: true
                        retryCount: 0
                      nextActionDue: string
                      referencedTransactions:
                        - string
                      paymentReference: string
                      propertyGroups:
                        - id: string
                          name: string
                      totalOpenAmountInclVAT: 0
                      customProperties:
                        - customEntityPropertyTypeId: string
                          values:
                            - valueDecimal: 0
                              valueString: string
                              valueBoolean: true
                              valueNumber: 0
                              valueDateTime: string
                              valueDropdown:
                                - string
                              startDateTime: string
                              endDateTime: string
                  hasNextPage: true
                  nextPageToken: string
                  totalRecords: 0
                  sortableFields:
                    - string
                  aggregateDetails:
                    - code: string
                      translation: string
                      value: 0
                      valueDate: string
  /CollectionCases/overviewcount:
    get:
      tags:
        - CollectionCases
      summary: Retrieves the overview count of collection cases based on the provided query parameters.
      description: Retrieves the overview count of collection cases based on the provided query parameters.
      operationId: get-collectioncases-overviewcount
      parameters:
        - name: WorkflowId
          in: query
          schema:
            type: string
        - name: CustomerId
          in: query
          schema:
            type: string
        - name: PropertyGroupIds
          in: query
          schema:
            type: array
            items:
              type: string
        - name: NextActionDueFrom
          in: query
          description: Format - date-time (as date-time in RFC3339).
          schema:
            type: string
            format: date-time
            nullable: true
        - name: NextActionDueTo
          in: query
          description: Format - date-time (as date-time in RFC3339).
          schema:
            type: string
            format: date-time
            nullable: true
        - name: OpenAmountLowerLimit
          in: query
          description: Format - double.
          schema:
            type: number
            format: double
            nullable: true
        - name: CustomerGroupId
          in: query
          schema:
            type: string
        - name: FlexSearch
          in: query
          schema:
            type: string
        - name: IncludeOnlyIds
          in: query
          schema:
            type: array
            items:
              type: string
        - name: ExcludeIds
          in: query
          schema:
            type: array
            items:
              type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CollectionCaseOverviewCountResponseDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionCaseOverviewCountResponseDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  all: 0
                  active: 0
                  closed: 0
                  requiresManualIntervention: 0
                  requireAttention: 0
            text/json:
              schema:
                $ref: '#/components/schemas/CollectionCaseOverviewCountResponseDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  all: 0
                  active: 0
                  closed: 0
                  requiresManualIntervention: 0
                  requireAttention: 0
  '/CollectionCases/{collectioncaseid}/{stepId}/skip':
    post:
      tags:
        - CollectionCases
      summary: Skips a specific collection case step.
      description: Skips a specific collection case step.
      operationId: post-collectioncases-collectioncaseid-stepid-skip
      parameters:
        - name: collectioncaseid
          in: path
          description: The ID of the collection case.
          required: true
          schema:
            type: string
        - name: stepId
          in: path
          description: The ID of the step to skip.
          required: true
          schema:
            type: string
        - name: executeNextStepImmediately
          in: query
          description: Whether to execute the next step immediately.
          schema:
            type: boolean
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CollectionCaseDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionCaseDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  collectionNum: string
                  sequenceNum: 0
                  workflowId: string
                  workflowName: string
                  debtor:
                    customerId: string
                    displayName: string
                    customerAccountNumber: string
                    customerType: { }
                    customerGroup:
                      id: string
                      name: string
                  manualInterventionRequired: true
                  status: { }
                  steps:
                    - id: string
                      stepId: string
                      order: 0
                      name: string
                      triggerDays: 0
                      executeAt: string
                      stepType: { }
                      communicationType: { }
                      communicationLevel: { }
                      chargeType: { }
                      charges:
                        stepChargeAmountInclVAT: 0
                        stepVATAmount: 0
                        transactionId: string
                      executedAt: string
                      documentsSentAt: string
                      documentId: string
                      emailId: string
                      status: { }
                      failureReasonCode:
                        key: { }
                        correlationId: string
                        message: string
                        messageValues:
                          - dataType: { }
                            value: string
                            capitalize: true
                      failureDetails: string
                      supportsExternalPrinting: true
                      retryCount: 0
                  lastStep:
                    id: string
                    stepId: string
                    order: 0
                    name: string
                    triggerDays: 0
                    executeAt: string
                    stepType: { }
                    communicationType: { }
                    communicationLevel: { }
                    chargeType: { }
                    charges:
                      stepChargeAmountInclVAT: 0
                      stepVATAmount: 0
                      transactionId: string
                    executedAt: string
                    documentsSentAt: string
                    documentId: string
                    emailId: string
                    status: { }
                    failureReasonCode:
                      key: { }
                      correlationId: string
                      message: string
                      messageValues:
                        - dataType: { }
                          value: string
                          capitalize: true
                    failureDetails: string
                    supportsExternalPrinting: true
                    retryCount: 0
                  nextStep:
                    id: string
                    stepId: string
                    order: 0
                    name: string
                    triggerDays: 0
                    executeAt: string
                    stepType: { }
                    communicationType: { }
                    communicationLevel: { }
                    chargeType: { }
                    charges:
                      stepChargeAmountInclVAT: 0
                      stepVATAmount: 0
                      transactionId: string
                    executedAt: string
                    documentsSentAt: string
                    documentId: string
                    emailId: string
                    status: { }
                    failureReasonCode:
                      key: { }
                      correlationId: string
                      message: string
                      messageValues:
                        - dataType: { }
                          value: string
                          capitalize: true
                    failureDetails: string
                    supportsExternalPrinting: true
                    retryCount: 0
                  nextActionDue: string
                  referencedTransactions:
                    - string
                  paymentReference: string
                  propertyGroups:
                    - id: string
                      name: string
                  totalOpenAmountInclVAT: 0
                  customProperties:
                    - customEntityPropertyTypeId: string
                      values:
                        - valueDecimal: 0
                          valueString: string
                          valueBoolean: true
                          valueNumber: 0
                          valueDateTime: string
                          valueDropdown:
                            - string
                          startDateTime: string
                          endDateTime: string
            text/json:
              schema:
                $ref: '#/components/schemas/CollectionCaseDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  collectionNum: string
                  sequenceNum: 0
                  workflowId: string
                  workflowName: string
                  debtor:
                    customerId: string
                    displayName: string
                    customerAccountNumber: string
                    customerType: { }
                    customerGroup:
                      id: string
                      name: string
                  manualInterventionRequired: true
                  status: { }
                  steps:
                    - id: string
                      stepId: string
                      order: 0
                      name: string
                      triggerDays: 0
                      executeAt: string
                      stepType: { }
                      communicationType: { }
                      communicationLevel: { }
                      chargeType: { }
                      charges:
                        stepChargeAmountInclVAT: 0
                        stepVATAmount: 0
                        transactionId: string
                      executedAt: string
                      documentsSentAt: string
                      documentId: string
                      emailId: string
                      status: { }
                      failureReasonCode:
                        key: { }
                        correlationId: string
                        message: string
                        messageValues:
                          - dataType: { }
                            value: string
                            capitalize: true
                      failureDetails: string
                      supportsExternalPrinting: true
                      retryCount: 0
                  lastStep:
                    id: string
                    stepId: string
                    order: 0
                    name: string
                    triggerDays: 0
                    executeAt: string
                    stepType: { }
                    communicationType: { }
                    communicationLevel: { }
                    chargeType: { }
                    charges:
                      stepChargeAmountInclVAT: 0
                      stepVATAmount: 0
                      transactionId: string
                    executedAt: string
                    documentsSentAt: string
                    documentId: string
                    emailId: string
                    status: { }
                    failureReasonCode:
                      key: { }
                      correlationId: string
                      message: string
                      messageValues:
                        - dataType: { }
                          value: string
                          capitalize: true
                    failureDetails: string
                    supportsExternalPrinting: true
                    retryCount: 0
                  nextStep:
                    id: string
                    stepId: string
                    order: 0
                    name: string
                    triggerDays: 0
                    executeAt: string
                    stepType: { }
                    communicationType: { }
                    communicationLevel: { }
                    chargeType: { }
                    charges:
                      stepChargeAmountInclVAT: 0
                      stepVATAmount: 0
                      transactionId: string
                    executedAt: string
                    documentsSentAt: string
                    documentId: string
                    emailId: string
                    status: { }
                    failureReasonCode:
                      key: { }
                      correlationId: string
                      message: string
                      messageValues:
                        - dataType: { }
                          value: string
                          capitalize: true
                    failureDetails: string
                    supportsExternalPrinting: true
                    retryCount: 0
                  nextActionDue: string
                  referencedTransactions:
                    - string
                  paymentReference: string
                  propertyGroups:
                    - id: string
                      name: string
                  totalOpenAmountInclVAT: 0
                  customProperties:
                    - customEntityPropertyTypeId: string
                      values:
                        - valueDecimal: 0
                          valueString: string
                          valueBoolean: true
                          valueNumber: 0
                          valueDateTime: string
                          valueDropdown:
                            - string
                          startDateTime: string
                          endDateTime: string
  '/CollectionCases/{collectioncaseid}/{stepId}/retry':
    post:
      tags:
        - CollectionCases
      summary: Retries a specific collection case step.
      description: Retries a specific collection case step.
      operationId: post-collectioncases-collectioncaseid-stepid-retry
      parameters:
        - name: collectioncaseid
          in: path
          description: The ID of the collection case.
          required: true
          schema:
            type: string
        - name: stepId
          in: path
          description: The ID of the step to retry.
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CollectionCaseDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionCaseDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  collectionNum: string
                  sequenceNum: 0
                  workflowId: string
                  workflowName: string
                  debtor:
                    customerId: string
                    displayName: string
                    customerAccountNumber: string
                    customerType: { }
                    customerGroup:
                      id: string
                      name: string
                  manualInterventionRequired: true
                  status: { }
                  steps:
                    - id: string
                      stepId: string
                      order: 0
                      name: string
                      triggerDays: 0
                      executeAt: string
                      stepType: { }
                      communicationType: { }
                      communicationLevel: { }
                      chargeType: { }
                      charges:
                        stepChargeAmountInclVAT: 0
                        stepVATAmount: 0
                        transactionId: string
                      executedAt: string
                      documentsSentAt: string
                      documentId: string
                      emailId: string
                      status: { }
                      failureReasonCode:
                        key: { }
                        correlationId: string
                        message: string
                        messageValues:
                          - dataType: { }
                            value: string
                            capitalize: true
                      failureDetails: string
                      supportsExternalPrinting: true
                      retryCount: 0
                  lastStep:
                    id: string
                    stepId: string
                    order: 0
                    name: string
                    triggerDays: 0
                    executeAt: string
                    stepType: { }
                    communicationType: { }
                    communicationLevel: { }
                    chargeType: { }
                    charges:
                      stepChargeAmountInclVAT: 0
                      stepVATAmount: 0
                      transactionId: string
                    executedAt: string
                    documentsSentAt: string
                    documentId: string
                    emailId: string
                    status: { }
                    failureReasonCode:
                      key: { }
                      correlationId: string
                      message: string
                      messageValues:
                        - dataType: { }
                          value: string
                          capitalize: true
                    failureDetails: string
                    supportsExternalPrinting: true
                    retryCount: 0
                  nextStep:
                    id: string
                    stepId: string
                    order: 0
                    name: string
                    triggerDays: 0
                    executeAt: string
                    stepType: { }
                    communicationType: { }
                    communicationLevel: { }
                    chargeType: { }
                    charges:
                      stepChargeAmountInclVAT: 0
                      stepVATAmount: 0
                      transactionId: string
                    executedAt: string
                    documentsSentAt: string
                    documentId: string
                    emailId: string
                    status: { }
                    failureReasonCode:
                      key: { }
                      correlationId: string
                      message: string
                      messageValues:
                        - dataType: { }
                          value: string
                          capitalize: true
                    failureDetails: string
                    supportsExternalPrinting: true
                    retryCount: 0
                  nextActionDue: string
                  referencedTransactions:
                    - string
                  paymentReference: string
                  propertyGroups:
                    - id: string
                      name: string
                  totalOpenAmountInclVAT: 0
                  customProperties:
                    - customEntityPropertyTypeId: string
                      values:
                        - valueDecimal: 0
                          valueString: string
                          valueBoolean: true
                          valueNumber: 0
                          valueDateTime: string
                          valueDropdown:
                            - string
                          startDateTime: string
                          endDateTime: string
            text/json:
              schema:
                $ref: '#/components/schemas/CollectionCaseDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  collectionNum: string
                  sequenceNum: 0
                  workflowId: string
                  workflowName: string
                  debtor:
                    customerId: string
                    displayName: string
                    customerAccountNumber: string
                    customerType: { }
                    customerGroup:
                      id: string
                      name: string
                  manualInterventionRequired: true
                  status: { }
                  steps:
                    - id: string
                      stepId: string
                      order: 0
                      name: string
                      triggerDays: 0
                      executeAt: string
                      stepType: { }
                      communicationType: { }
                      communicationLevel: { }
                      chargeType: { }
                      charges:
                        stepChargeAmountInclVAT: 0
                        stepVATAmount: 0
                        transactionId: string
                      executedAt: string
                      documentsSentAt: string
                      documentId: string
                      emailId: string
                      status: { }
                      failureReasonCode:
                        key: { }
                        correlationId: string
                        message: string
                        messageValues:
                          - dataType: { }
                            value: string
                            capitalize: true
                      failureDetails: string
                      supportsExternalPrinting: true
                      retryCount: 0
                  lastStep:
                    id: string
                    stepId: string
                    order: 0
                    name: string
                    triggerDays: 0
                    executeAt: string
                    stepType: { }
                    communicationType: { }
                    communicationLevel: { }
                    chargeType: { }
                    charges:
                      stepChargeAmountInclVAT: 0
                      stepVATAmount: 0
                      transactionId: string
                    executedAt: string
                    documentsSentAt: string
                    documentId: string
                    emailId: string
                    status: { }
                    failureReasonCode:
                      key: { }
                      correlationId: string
                      message: string
                      messageValues:
                        - dataType: { }
                          value: string
                          capitalize: true
                    failureDetails: string
                    supportsExternalPrinting: true
                    retryCount: 0
                  nextStep:
                    id: string
                    stepId: string
                    order: 0
                    name: string
                    triggerDays: 0
                    executeAt: string
                    stepType: { }
                    communicationType: { }
                    communicationLevel: { }
                    chargeType: { }
                    charges:
                      stepChargeAmountInclVAT: 0
                      stepVATAmount: 0
                      transactionId: string
                    executedAt: string
                    documentsSentAt: string
                    documentId: string
                    emailId: string
                    status: { }
                    failureReasonCode:
                      key: { }
                      correlationId: string
                      message: string
                      messageValues:
                        - dataType: { }
                          value: string
                          capitalize: true
                    failureDetails: string
                    supportsExternalPrinting: true
                    retryCount: 0
                  nextActionDue: string
                  referencedTransactions:
                    - string
                  paymentReference: string
                  propertyGroups:
                    - id: string
                      name: string
                  totalOpenAmountInclVAT: 0
                  customProperties:
                    - customEntityPropertyTypeId: string
                      values:
                        - valueDecimal: 0
                          valueString: string
                          valueBoolean: true
                          valueNumber: 0
                          valueDateTime: string
                          valueDropdown:
                            - string
                          startDateTime: string
                          endDateTime: string
  '/CollectionCases/{collectioncaseid}/{stepId}/sendviapostal':
    post:
      tags:
        - CollectionCases
      summary: Sends a specific collection case step via postal mail.
      description: Sends a specific collection case step via postal mail.
      operationId: post-collectioncases-collectioncaseid-stepid-sendviapostal
      parameters:
        - name: collectioncaseid
          in: path
          description: The ID of the collection case.
          required: true
          schema:
            type: string
        - name: stepId
          in: path
          description: The ID of the step to send via postal mail.
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CollectionCaseDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionCaseDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  collectionNum: string
                  sequenceNum: 0
                  workflowId: string
                  workflowName: string
                  debtor:
                    customerId: string
                    displayName: string
                    customerAccountNumber: string
                    customerType: { }
                    customerGroup:
                      id: string
                      name: string
                  manualInterventionRequired: true
                  status: { }
                  steps:
                    - id: string
                      stepId: string
                      order: 0
                      name: string
                      triggerDays: 0
                      executeAt: string
                      stepType: { }
                      communicationType: { }
                      communicationLevel: { }
                      chargeType: { }
                      charges:
                        stepChargeAmountInclVAT: 0
                        stepVATAmount: 0
                        transactionId: string
                      executedAt: string
                      documentsSentAt: string
                      documentId: string
                      emailId: string
                      status: { }
                      failureReasonCode:
                        key: { }
                        correlationId: string
                        message: string
                        messageValues:
                          - dataType: { }
                            value: string
                            capitalize: true
                      failureDetails: string
                      supportsExternalPrinting: true
                      retryCount: 0
                  lastStep:
                    id: string
                    stepId: string
                    order: 0
                    name: string
                    triggerDays: 0
                    executeAt: string
                    stepType: { }
                    communicationType: { }
                    communicationLevel: { }
                    chargeType: { }
                    charges:
                      stepChargeAmountInclVAT: 0
                      stepVATAmount: 0
                      transactionId: string
                    executedAt: string
                    documentsSentAt: string
                    documentId: string
                    emailId: string
                    status: { }
                    failureReasonCode:
                      key: { }
                      correlationId: string
                      message: string
                      messageValues:
                        - dataType: { }
                          value: string
                          capitalize: true
                    failureDetails: string
                    supportsExternalPrinting: true
                    retryCount: 0
                  nextStep:
                    id: string
                    stepId: string
                    order: 0
                    name: string
                    triggerDays: 0
                    executeAt: string
                    stepType: { }
                    communicationType: { }
                    communicationLevel: { }
                    chargeType: { }
                    charges:
                      stepChargeAmountInclVAT: 0
                      stepVATAmount: 0
                      transactionId: string
                    executedAt: string
                    documentsSentAt: string
                    documentId: string
                    emailId: string
                    status: { }
                    failureReasonCode:
                      key: { }
                      correlationId: string
                      message: string
                      messageValues:
                        - dataType: { }
                          value: string
                          capitalize: true
                    failureDetails: string
                    supportsExternalPrinting: true
                    retryCount: 0
                  nextActionDue: string
                  referencedTransactions:
                    - string
                  paymentReference: string
                  propertyGroups:
                    - id: string
                      name: string
                  totalOpenAmountInclVAT: 0
                  customProperties:
                    - customEntityPropertyTypeId: string
                      values:
                        - valueDecimal: 0
                          valueString: string
                          valueBoolean: true
                          valueNumber: 0
                          valueDateTime: string
                          valueDropdown:
                            - string
                          startDateTime: string
                          endDateTime: string
            text/json:
              schema:
                $ref: '#/components/schemas/CollectionCaseDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  collectionNum: string
                  sequenceNum: 0
                  workflowId: string
                  workflowName: string
                  debtor:
                    customerId: string
                    displayName: string
                    customerAccountNumber: string
                    customerType: { }
                    customerGroup:
                      id: string
                      name: string
                  manualInterventionRequired: true
                  status: { }
                  steps:
                    - id: string
                      stepId: string
                      order: 0
                      name: string
                      triggerDays: 0
                      executeAt: string
                      stepType: { }
                      communicationType: { }
                      communicationLevel: { }
                      chargeType: { }
                      charges:
                        stepChargeAmountInclVAT: 0
                        stepVATAmount: 0
                        transactionId: string
                      executedAt: string
                      documentsSentAt: string
                      documentId: string
                      emailId: string
                      status: { }
                      failureReasonCode:
                        key: { }
                        correlationId: string
                        message: string
                        messageValues:
                          - dataType: { }
                            value: string
                            capitalize: true
                      failureDetails: string
                      supportsExternalPrinting: true
                      retryCount: 0
                  lastStep:
                    id: string
                    stepId: string
                    order: 0
                    name: string
                    triggerDays: 0
                    executeAt: string
                    stepType: { }
                    communicationType: { }
                    communicationLevel: { }
                    chargeType: { }
                    charges:
                      stepChargeAmountInclVAT: 0
                      stepVATAmount: 0
                      transactionId: string
                    executedAt: string
                    documentsSentAt: string
                    documentId: string
                    emailId: string
                    status: { }
                    failureReasonCode:
                      key: { }
                      correlationId: string
                      message: string
                      messageValues:
                        - dataType: { }
                          value: string
                          capitalize: true
                    failureDetails: string
                    supportsExternalPrinting: true
                    retryCount: 0
                  nextStep:
                    id: string
                    stepId: string
                    order: 0
                    name: string
                    triggerDays: 0
                    executeAt: string
                    stepType: { }
                    communicationType: { }
                    communicationLevel: { }
                    chargeType: { }
                    charges:
                      stepChargeAmountInclVAT: 0
                      stepVATAmount: 0
                      transactionId: string
                    executedAt: string
                    documentsSentAt: string
                    documentId: string
                    emailId: string
                    status: { }
                    failureReasonCode:
                      key: { }
                      correlationId: string
                      message: string
                      messageValues:
                        - dataType: { }
                          value: string
                          capitalize: true
                    failureDetails: string
                    supportsExternalPrinting: true
                    retryCount: 0
                  nextActionDue: string
                  referencedTransactions:
                    - string
                  paymentReference: string
                  propertyGroups:
                    - id: string
                      name: string
                  totalOpenAmountInclVAT: 0
                  customProperties:
                    - customEntityPropertyTypeId: string
                      values:
                        - valueDecimal: 0
                          valueString: string
                          valueBoolean: true
                          valueNumber: 0
                          valueDateTime: string
                          valueDropdown:
                            - string
                          startDateTime: string
                          endDateTime: string
  '/CollectionCases/{collectioncaseid}/{stepId}/sendviamail':
    post:
      tags:
        - CollectionCases
      summary: Sends a specific collection case step via email.
      description: Sends a specific collection case step via email.
      operationId: post-collectioncases-collectioncaseid-stepid-sendviamail
      parameters:
        - name: collectioncaseid
          in: path
          description: The ID of the collection case.
          required: true
          schema:
            type: string
        - name: stepId
          in: path
          description: The ID of the step to send via email.
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CollectionCaseDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionCaseDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  collectionNum: string
                  sequenceNum: 0
                  workflowId: string
                  workflowName: string
                  debtor:
                    customerId: string
                    displayName: string
                    customerAccountNumber: string
                    customerType: { }
                    customerGroup:
                      id: string
                      name: string
                  manualInterventionRequired: true
                  status: { }
                  steps:
                    - id: string
                      stepId: string
                      order: 0
                      name: string
                      triggerDays: 0
                      executeAt: string
                      stepType: { }
                      communicationType: { }
                      communicationLevel: { }
                      chargeType: { }
                      charges:
                        stepChargeAmountInclVAT: 0
                        stepVATAmount: 0
                        transactionId: string
                      executedAt: string
                      documentsSentAt: string
                      documentId: string
                      emailId: string
                      status: { }
                      failureReasonCode:
                        key: { }
                        correlationId: string
                        message: string
                        messageValues:
                          - dataType: { }
                            value: string
                            capitalize: true
                      failureDetails: string
                      supportsExternalPrinting: true
                      retryCount: 0
                  lastStep:
                    id: string
                    stepId: string
                    order: 0
                    name: string
                    triggerDays: 0
                    executeAt: string
                    stepType: { }
                    communicationType: { }
                    communicationLevel: { }
                    chargeType: { }
                    charges:
                      stepChargeAmountInclVAT: 0
                      stepVATAmount: 0
                      transactionId: string
                    executedAt: string
                    documentsSentAt: string
                    documentId: string
                    emailId: string
                    status: { }
                    failureReasonCode:
                      key: { }
                      correlationId: string
                      message: string
                      messageValues:
                        - dataType: { }
                          value: string
                          capitalize: true
                    failureDetails: string
                    supportsExternalPrinting: true
                    retryCount: 0
                  nextStep:
                    id: string
                    stepId: string
                    order: 0
                    name: string
                    triggerDays: 0
                    executeAt: string
                    stepType: { }
                    communicationType: { }
                    communicationLevel: { }
                    chargeType: { }
                    charges:
                      stepChargeAmountInclVAT: 0
                      stepVATAmount: 0
                      transactionId: string
                    executedAt: string
                    documentsSentAt: string
                    documentId: string
                    emailId: string
                    status: { }
                    failureReasonCode:
                      key: { }
                      correlationId: string
                      message: string
                      messageValues:
                        - dataType: { }
                          value: string
                          capitalize: true
                    failureDetails: string
                    supportsExternalPrinting: true
                    retryCount: 0
                  nextActionDue: string
                  referencedTransactions:
                    - string
                  paymentReference: string
                  propertyGroups:
                    - id: string
                      name: string
                  totalOpenAmountInclVAT: 0
                  customProperties:
                    - customEntityPropertyTypeId: string
                      values:
                        - valueDecimal: 0
                          valueString: string
                          valueBoolean: true
                          valueNumber: 0
                          valueDateTime: string
                          valueDropdown:
                            - string
                          startDateTime: string
                          endDateTime: string
            text/json:
              schema:
                $ref: '#/components/schemas/CollectionCaseDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  collectionNum: string
                  sequenceNum: 0
                  workflowId: string
                  workflowName: string
                  debtor:
                    customerId: string
                    displayName: string
                    customerAccountNumber: string
                    customerType: { }
                    customerGroup:
                      id: string
                      name: string
                  manualInterventionRequired: true
                  status: { }
                  steps:
                    - id: string
                      stepId: string
                      order: 0
                      name: string
                      triggerDays: 0
                      executeAt: string
                      stepType: { }
                      communicationType: { }
                      communicationLevel: { }
                      chargeType: { }
                      charges:
                        stepChargeAmountInclVAT: 0
                        stepVATAmount: 0
                        transactionId: string
                      executedAt: string
                      documentsSentAt: string
                      documentId: string
                      emailId: string
                      status: { }
                      failureReasonCode:
                        key: { }
                        correlationId: string
                        message: string
                        messageValues:
                          - dataType: { }
                            value: string
                            capitalize: true
                      failureDetails: string
                      supportsExternalPrinting: true
                      retryCount: 0
                  lastStep:
                    id: string
                    stepId: string
                    order: 0
                    name: string
                    triggerDays: 0
                    executeAt: string
                    stepType: { }
                    communicationType: { }
                    communicationLevel: { }
                    chargeType: { }
                    charges:
                      stepChargeAmountInclVAT: 0
                      stepVATAmount: 0
                      transactionId: string
                    executedAt: string
                    documentsSentAt: string
                    documentId: string
                    emailId: string
                    status: { }
                    failureReasonCode:
                      key: { }
                      correlationId: string
                      message: string
                      messageValues:
                        - dataType: { }
                          value: string
                          capitalize: true
                    failureDetails: string
                    supportsExternalPrinting: true
                    retryCount: 0
                  nextStep:
                    id: string
                    stepId: string
                    order: 0
                    name: string
                    triggerDays: 0
                    executeAt: string
                    stepType: { }
                    communicationType: { }
                    communicationLevel: { }
                    chargeType: { }
                    charges:
                      stepChargeAmountInclVAT: 0
                      stepVATAmount: 0
                      transactionId: string
                    executedAt: string
                    documentsSentAt: string
                    documentId: string
                    emailId: string
                    status: { }
                    failureReasonCode:
                      key: { }
                      correlationId: string
                      message: string
                      messageValues:
                        - dataType: { }
                          value: string
                          capitalize: true
                    failureDetails: string
                    supportsExternalPrinting: true
                    retryCount: 0
                  nextActionDue: string
                  referencedTransactions:
                    - string
                  paymentReference: string
                  propertyGroups:
                    - id: string
                      name: string
                  totalOpenAmountInclVAT: 0
                  customProperties:
                    - customEntityPropertyTypeId: string
                      values:
                        - valueDecimal: 0
                          valueString: string
                          valueBoolean: true
                          valueNumber: 0
                          valueDateTime: string
                          valueDropdown:
                            - string
                          startDateTime: string
                          endDateTime: string
  '/CollectionCases/{collectioncaseid}/{stepId}/execute':
    post:
      tags:
        - CollectionCases
      summary: Executes a specific collection case step.
      description: Executes a specific collection case step.
      operationId: post-collectioncases-collectioncaseid-stepid-execute
      parameters:
        - name: collectioncaseid
          in: path
          description: The ID of the collection case.
          required: true
          schema:
            type: string
        - name: stepId
          in: path
          description: The ID of the step to execute.
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CollectionCaseDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionCaseDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  collectionNum: string
                  sequenceNum: 0
                  workflowId: string
                  workflowName: string
                  debtor:
                    customerId: string
                    displayName: string
                    customerAccountNumber: string
                    customerType: { }
                    customerGroup:
                      id: string
                      name: string
                  manualInterventionRequired: true
                  status: { }
                  steps:
                    - id: string
                      stepId: string
                      order: 0
                      name: string
                      triggerDays: 0
                      executeAt: string
                      stepType: { }
                      communicationType: { }
                      communicationLevel: { }
                      chargeType: { }
                      charges:
                        stepChargeAmountInclVAT: 0
                        stepVATAmount: 0
                        transactionId: string
                      executedAt: string
                      documentsSentAt: string
                      documentId: string
                      emailId: string
                      status: { }
                      failureReasonCode:
                        key: { }
                        correlationId: string
                        message: string
                        messageValues:
                          - dataType: { }
                            value: string
                            capitalize: true
                      failureDetails: string
                      supportsExternalPrinting: true
                      retryCount: 0
                  lastStep:
                    id: string
                    stepId: string
                    order: 0
                    name: string
                    triggerDays: 0
                    executeAt: string
                    stepType: { }
                    communicationType: { }
                    communicationLevel: { }
                    chargeType: { }
                    charges:
                      stepChargeAmountInclVAT: 0
                      stepVATAmount: 0
                      transactionId: string
                    executedAt: string
                    documentsSentAt: string
                    documentId: string
                    emailId: string
                    status: { }
                    failureReasonCode:
                      key: { }
                      correlationId: string
                      message: string
                      messageValues:
                        - dataType: { }
                          value: string
                          capitalize: true
                    failureDetails: string
                    supportsExternalPrinting: true
                    retryCount: 0
                  nextStep:
                    id: string
                    stepId: string
                    order: 0
                    name: string
                    triggerDays: 0
                    executeAt: string
                    stepType: { }
                    communicationType: { }
                    communicationLevel: { }
                    chargeType: { }
                    charges:
                      stepChargeAmountInclVAT: 0
                      stepVATAmount: 0
                      transactionId: string
                    executedAt: string
                    documentsSentAt: string
                    documentId: string
                    emailId: string
                    status: { }
                    failureReasonCode:
                      key: { }
                      correlationId: string
                      message: string
                      messageValues:
                        - dataType: { }
                          value: string
                          capitalize: true
                    failureDetails: string
                    supportsExternalPrinting: true
                    retryCount: 0
                  nextActionDue: string
                  referencedTransactions:
                    - string
                  paymentReference: string
                  propertyGroups:
                    - id: string
                      name: string
                  totalOpenAmountInclVAT: 0
                  customProperties:
                    - customEntityPropertyTypeId: string
                      values:
                        - valueDecimal: 0
                          valueString: string
                          valueBoolean: true
                          valueNumber: 0
                          valueDateTime: string
                          valueDropdown:
                            - string
                          startDateTime: string
                          endDateTime: string
            text/json:
              schema:
                $ref: '#/components/schemas/CollectionCaseDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  collectionNum: string
                  sequenceNum: 0
                  workflowId: string
                  workflowName: string
                  debtor:
                    customerId: string
                    displayName: string
                    customerAccountNumber: string
                    customerType: { }
                    customerGroup:
                      id: string
                      name: string
                  manualInterventionRequired: true
                  status: { }
                  steps:
                    - id: string
                      stepId: string
                      order: 0
                      name: string
                      triggerDays: 0
                      executeAt: string
                      stepType: { }
                      communicationType: { }
                      communicationLevel: { }
                      chargeType: { }
                      charges:
                        stepChargeAmountInclVAT: 0
                        stepVATAmount: 0
                        transactionId: string
                      executedAt: string
                      documentsSentAt: string
                      documentId: string
                      emailId: string
                      status: { }
                      failureReasonCode:
                        key: { }
                        correlationId: string
                        message: string
                        messageValues:
                          - dataType: { }
                            value: string
                            capitalize: true
                      failureDetails: string
                      supportsExternalPrinting: true
                      retryCount: 0
                  lastStep:
                    id: string
                    stepId: string
                    order: 0
                    name: string
                    triggerDays: 0
                    executeAt: string
                    stepType: { }
                    communicationType: { }
                    communicationLevel: { }
                    chargeType: { }
                    charges:
                      stepChargeAmountInclVAT: 0
                      stepVATAmount: 0
                      transactionId: string
                    executedAt: string
                    documentsSentAt: string
                    documentId: string
                    emailId: string
                    status: { }
                    failureReasonCode:
                      key: { }
                      correlationId: string
                      message: string
                      messageValues:
                        - dataType: { }
                          value: string
                          capitalize: true
                    failureDetails: string
                    supportsExternalPrinting: true
                    retryCount: 0
                  nextStep:
                    id: string
                    stepId: string
                    order: 0
                    name: string
                    triggerDays: 0
                    executeAt: string
                    stepType: { }
                    communicationType: { }
                    communicationLevel: { }
                    chargeType: { }
                    charges:
                      stepChargeAmountInclVAT: 0
                      stepVATAmount: 0
                      transactionId: string
                    executedAt: string
                    documentsSentAt: string
                    documentId: string
                    emailId: string
                    status: { }
                    failureReasonCode:
                      key: { }
                      correlationId: string
                      message: string
                      messageValues:
                        - dataType: { }
                          value: string
                          capitalize: true
                    failureDetails: string
                    supportsExternalPrinting: true
                    retryCount: 0
                  nextActionDue: string
                  referencedTransactions:
                    - string
                  paymentReference: string
                  propertyGroups:
                    - id: string
                      name: string
                  totalOpenAmountInclVAT: 0
                  customProperties:
                    - customEntityPropertyTypeId: string
                      values:
                        - valueDecimal: 0
                          valueString: string
                          valueBoolean: true
                          valueNumber: 0
                          valueDateTime: string
                          valueDropdown:
                            - string
                          startDateTime: string
                          endDateTime: string
  '/CollectionCases/{collectioncaseid}/markclosed':
    post:
      tags:
        - CollectionCases
      summary: Marks a collection case as manually closed.
      description: Marks a collection case as manually closed.
      operationId: post-collectioncases-collectioncaseid-markclosed
      parameters:
        - name: collectioncaseid
          in: path
          description: The ID of the collection case.
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: The request containing the details for marking the case as closed.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/MarkCollectionCaseManuallyClosedRequest'
              description: "Represents a request to manually close a collection case.\r\nThis DTO is used to close a collection case and optionally handle any associated fees."
            example:
              writeOffFees: true
              writeOffHandlingType: { }
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/MarkCollectionCaseManuallyClosedRequest'
              description: "Represents a request to manually close a collection case.\r\nThis DTO is used to close a collection case and optionally handle any associated fees."
            example:
              writeOffFees: true
              writeOffHandlingType: { }
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/MarkCollectionCaseManuallyClosedRequest'
              description: "Represents a request to manually close a collection case.\r\nThis DTO is used to close a collection case and optionally handle any associated fees."
            example:
              writeOffFees: true
              writeOffHandlingType: { }
      responses:
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: string
                title: string
                status: 0
                detail: string
                instance: string
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: string
                title: string
                status: 0
                detail: string
                instance: string
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CollectionCaseDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionCaseDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  collectionNum: string
                  sequenceNum: 0
                  workflowId: string
                  workflowName: string
                  debtor:
                    customerId: string
                    displayName: string
                    customerAccountNumber: string
                    customerType: { }
                    customerGroup:
                      id: string
                      name: string
                  manualInterventionRequired: true
                  status: { }
                  steps:
                    - id: string
                      stepId: string
                      order: 0
                      name: string
                      triggerDays: 0
                      executeAt: string
                      stepType: { }
                      communicationType: { }
                      communicationLevel: { }
                      chargeType: { }
                      charges:
                        stepChargeAmountInclVAT: 0
                        stepVATAmount: 0
                        transactionId: string
                      executedAt: string
                      documentsSentAt: string
                      documentId: string
                      emailId: string
                      status: { }
                      failureReasonCode:
                        key: { }
                        correlationId: string
                        message: string
                        messageValues:
                          - dataType: { }
                            value: string
                            capitalize: true
                      failureDetails: string
                      supportsExternalPrinting: true
                      retryCount: 0
                  lastStep:
                    id: string
                    stepId: string
                    order: 0
                    name: string
                    triggerDays: 0
                    executeAt: string
                    stepType: { }
                    communicationType: { }
                    communicationLevel: { }
                    chargeType: { }
                    charges:
                      stepChargeAmountInclVAT: 0
                      stepVATAmount: 0
                      transactionId: string
                    executedAt: string
                    documentsSentAt: string
                    documentId: string
                    emailId: string
                    status: { }
                    failureReasonCode:
                      key: { }
                      correlationId: string
                      message: string
                      messageValues:
                        - dataType: { }
                          value: string
                          capitalize: true
                    failureDetails: string
                    supportsExternalPrinting: true
                    retryCount: 0
                  nextStep:
                    id: string
                    stepId: string
                    order: 0
                    name: string
                    triggerDays: 0
                    executeAt: string
                    stepType: { }
                    communicationType: { }
                    communicationLevel: { }
                    chargeType: { }
                    charges:
                      stepChargeAmountInclVAT: 0
                      stepVATAmount: 0
                      transactionId: string
                    executedAt: string
                    documentsSentAt: string
                    documentId: string
                    emailId: string
                    status: { }
                    failureReasonCode:
                      key: { }
                      correlationId: string
                      message: string
                      messageValues:
                        - dataType: { }
                          value: string
                          capitalize: true
                    failureDetails: string
                    supportsExternalPrinting: true
                    retryCount: 0
                  nextActionDue: string
                  referencedTransactions:
                    - string
                  paymentReference: string
                  propertyGroups:
                    - id: string
                      name: string
                  totalOpenAmountInclVAT: 0
                  customProperties:
                    - customEntityPropertyTypeId: string
                      values:
                        - valueDecimal: 0
                          valueString: string
                          valueBoolean: true
                          valueNumber: 0
                          valueDateTime: string
                          valueDropdown:
                            - string
                          startDateTime: string
                          endDateTime: string
            text/json:
              schema:
                $ref: '#/components/schemas/CollectionCaseDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  collectionNum: string
                  sequenceNum: 0
                  workflowId: string
                  workflowName: string
                  debtor:
                    customerId: string
                    displayName: string
                    customerAccountNumber: string
                    customerType: { }
                    customerGroup:
                      id: string
                      name: string
                  manualInterventionRequired: true
                  status: { }
                  steps:
                    - id: string
                      stepId: string
                      order: 0
                      name: string
                      triggerDays: 0
                      executeAt: string
                      stepType: { }
                      communicationType: { }
                      communicationLevel: { }
                      chargeType: { }
                      charges:
                        stepChargeAmountInclVAT: 0
                        stepVATAmount: 0
                        transactionId: string
                      executedAt: string
                      documentsSentAt: string
                      documentId: string
                      emailId: string
                      status: { }
                      failureReasonCode:
                        key: { }
                        correlationId: string
                        message: string
                        messageValues:
                          - dataType: { }
                            value: string
                            capitalize: true
                      failureDetails: string
                      supportsExternalPrinting: true
                      retryCount: 0
                  lastStep:
                    id: string
                    stepId: string
                    order: 0
                    name: string
                    triggerDays: 0
                    executeAt: string
                    stepType: { }
                    communicationType: { }
                    communicationLevel: { }
                    chargeType: { }
                    charges:
                      stepChargeAmountInclVAT: 0
                      stepVATAmount: 0
                      transactionId: string
                    executedAt: string
                    documentsSentAt: string
                    documentId: string
                    emailId: string
                    status: { }
                    failureReasonCode:
                      key: { }
                      correlationId: string
                      message: string
                      messageValues:
                        - dataType: { }
                          value: string
                          capitalize: true
                    failureDetails: string
                    supportsExternalPrinting: true
                    retryCount: 0
                  nextStep:
                    id: string
                    stepId: string
                    order: 0
                    name: string
                    triggerDays: 0
                    executeAt: string
                    stepType: { }
                    communicationType: { }
                    communicationLevel: { }
                    chargeType: { }
                    charges:
                      stepChargeAmountInclVAT: 0
                      stepVATAmount: 0
                      transactionId: string
                    executedAt: string
                    documentsSentAt: string
                    documentId: string
                    emailId: string
                    status: { }
                    failureReasonCode:
                      key: { }
                      correlationId: string
                      message: string
                      messageValues:
                        - dataType: { }
                          value: string
                          capitalize: true
                    failureDetails: string
                    supportsExternalPrinting: true
                    retryCount: 0
                  nextActionDue: string
                  referencedTransactions:
                    - string
                  paymentReference: string
                  propertyGroups:
                    - id: string
                      name: string
                  totalOpenAmountInclVAT: 0
                  customProperties:
                    - customEntityPropertyTypeId: string
                      values:
                        - valueDecimal: 0
                          valueString: string
                          valueBoolean: true
                          valueNumber: 0
                          valueDateTime: string
                          valueDropdown:
                            - string
                          startDateTime: string
                          endDateTime: string
  '/CollectionCases/{collectioncaseid}/process':
    post:
      tags:
        - CollectionCases
      summary: Processes the collection case
      description: Processes the collection case
      operationId: post-collectioncases-collectioncaseid-process
      parameters:
        - name: collectioncaseid
          in: path
          description: The ID of the collection case.
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: The request containing the details for processing the collectio ncase.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ManuallyProcessCollectionCaseRequest'
              description: "Represents a request to manually process a collection case.\r\nThis DTO is used to trigger manual processing of a collection case up to a specified date."
            example:
              executeUntil: string
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ManuallyProcessCollectionCaseRequest'
              description: "Represents a request to manually process a collection case.\r\nThis DTO is used to trigger manual processing of a collection case up to a specified date."
            example:
              executeUntil: string
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ManuallyProcessCollectionCaseRequest'
              description: "Represents a request to manually process a collection case.\r\nThis DTO is used to trigger manual processing of a collection case up to a specified date."
            example:
              executeUntil: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CollectionCaseDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionCaseDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  collectionNum: string
                  sequenceNum: 0
                  workflowId: string
                  workflowName: string
                  debtor:
                    customerId: string
                    displayName: string
                    customerAccountNumber: string
                    customerType: { }
                    customerGroup:
                      id: string
                      name: string
                  manualInterventionRequired: true
                  status: { }
                  steps:
                    - id: string
                      stepId: string
                      order: 0
                      name: string
                      triggerDays: 0
                      executeAt: string
                      stepType: { }
                      communicationType: { }
                      communicationLevel: { }
                      chargeType: { }
                      charges:
                        stepChargeAmountInclVAT: 0
                        stepVATAmount: 0
                        transactionId: string
                      executedAt: string
                      documentsSentAt: string
                      documentId: string
                      emailId: string
                      status: { }
                      failureReasonCode:
                        key: { }
                        correlationId: string
                        message: string
                        messageValues:
                          - dataType: { }
                            value: string
                            capitalize: true
                      failureDetails: string
                      supportsExternalPrinting: true
                      retryCount: 0
                  lastStep:
                    id: string
                    stepId: string
                    order: 0
                    name: string
                    triggerDays: 0
                    executeAt: string
                    stepType: { }
                    communicationType: { }
                    communicationLevel: { }
                    chargeType: { }
                    charges:
                      stepChargeAmountInclVAT: 0
                      stepVATAmount: 0
                      transactionId: string
                    executedAt: string
                    documentsSentAt: string
                    documentId: string
                    emailId: string
                    status: { }
                    failureReasonCode:
                      key: { }
                      correlationId: string
                      message: string
                      messageValues:
                        - dataType: { }
                          value: string
                          capitalize: true
                    failureDetails: string
                    supportsExternalPrinting: true
                    retryCount: 0
                  nextStep:
                    id: string
                    stepId: string
                    order: 0
                    name: string
                    triggerDays: 0
                    executeAt: string
                    stepType: { }
                    communicationType: { }
                    communicationLevel: { }
                    chargeType: { }
                    charges:
                      stepChargeAmountInclVAT: 0
                      stepVATAmount: 0
                      transactionId: string
                    executedAt: string
                    documentsSentAt: string
                    documentId: string
                    emailId: string
                    status: { }
                    failureReasonCode:
                      key: { }
                      correlationId: string
                      message: string
                      messageValues:
                        - dataType: { }
                          value: string
                          capitalize: true
                    failureDetails: string
                    supportsExternalPrinting: true
                    retryCount: 0
                  nextActionDue: string
                  referencedTransactions:
                    - string
                  paymentReference: string
                  propertyGroups:
                    - id: string
                      name: string
                  totalOpenAmountInclVAT: 0
                  customProperties:
                    - customEntityPropertyTypeId: string
                      values:
                        - valueDecimal: 0
                          valueString: string
                          valueBoolean: true
                          valueNumber: 0
                          valueDateTime: string
                          valueDropdown:
                            - string
                          startDateTime: string
                          endDateTime: string
            text/json:
              schema:
                $ref: '#/components/schemas/CollectionCaseDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  collectionNum: string
                  sequenceNum: 0
                  workflowId: string
                  workflowName: string
                  debtor:
                    customerId: string
                    displayName: string
                    customerAccountNumber: string
                    customerType: { }
                    customerGroup:
                      id: string
                      name: string
                  manualInterventionRequired: true
                  status: { }
                  steps:
                    - id: string
                      stepId: string
                      order: 0
                      name: string
                      triggerDays: 0
                      executeAt: string
                      stepType: { }
                      communicationType: { }
                      communicationLevel: { }
                      chargeType: { }
                      charges:
                        stepChargeAmountInclVAT: 0
                        stepVATAmount: 0
                        transactionId: string
                      executedAt: string
                      documentsSentAt: string
                      documentId: string
                      emailId: string
                      status: { }
                      failureReasonCode:
                        key: { }
                        correlationId: string
                        message: string
                        messageValues:
                          - dataType: { }
                            value: string
                            capitalize: true
                      failureDetails: string
                      supportsExternalPrinting: true
                      retryCount: 0
                  lastStep:
                    id: string
                    stepId: string
                    order: 0
                    name: string
                    triggerDays: 0
                    executeAt: string
                    stepType: { }
                    communicationType: { }
                    communicationLevel: { }
                    chargeType: { }
                    charges:
                      stepChargeAmountInclVAT: 0
                      stepVATAmount: 0
                      transactionId: string
                    executedAt: string
                    documentsSentAt: string
                    documentId: string
                    emailId: string
                    status: { }
                    failureReasonCode:
                      key: { }
                      correlationId: string
                      message: string
                      messageValues:
                        - dataType: { }
                          value: string
                          capitalize: true
                    failureDetails: string
                    supportsExternalPrinting: true
                    retryCount: 0
                  nextStep:
                    id: string
                    stepId: string
                    order: 0
                    name: string
                    triggerDays: 0
                    executeAt: string
                    stepType: { }
                    communicationType: { }
                    communicationLevel: { }
                    chargeType: { }
                    charges:
                      stepChargeAmountInclVAT: 0
                      stepVATAmount: 0
                      transactionId: string
                    executedAt: string
                    documentsSentAt: string
                    documentId: string
                    emailId: string
                    status: { }
                    failureReasonCode:
                      key: { }
                      correlationId: string
                      message: string
                      messageValues:
                        - dataType: { }
                          value: string
                          capitalize: true
                    failureDetails: string
                    supportsExternalPrinting: true
                    retryCount: 0
                  nextActionDue: string
                  referencedTransactions:
                    - string
                  paymentReference: string
                  propertyGroups:
                    - id: string
                      name: string
                  totalOpenAmountInclVAT: 0
                  customProperties:
                    - customEntityPropertyTypeId: string
                      values:
                        - valueDecimal: 0
                          valueString: string
                          valueBoolean: true
                          valueNumber: 0
                          valueDateTime: string
                          valueDropdown:
                            - string
                          startDateTime: string
                          endDateTime: string
  '/CollectionCases/{collectioncaseid}':
    get:
      tags:
        - CollectionCases
      summary: Retrieves the details of a specific collection case.
      description: Retrieves the details of a specific collection case.
      operationId: get-collectioncases-collectioncaseid
      parameters:
        - name: collectioncaseid
          in: path
          description: The ID of the collection case.
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CollectionCaseDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionCaseDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  collectionNum: string
                  sequenceNum: 0
                  workflowId: string
                  workflowName: string
                  debtor:
                    customerId: string
                    displayName: string
                    customerAccountNumber: string
                    customerType: { }
                    customerGroup:
                      id: string
                      name: string
                  manualInterventionRequired: true
                  status: { }
                  steps:
                    - id: string
                      stepId: string
                      order: 0
                      name: string
                      triggerDays: 0
                      executeAt: string
                      stepType: { }
                      communicationType: { }
                      communicationLevel: { }
                      chargeType: { }
                      charges:
                        stepChargeAmountInclVAT: 0
                        stepVATAmount: 0
                        transactionId: string
                      executedAt: string
                      documentsSentAt: string
                      documentId: string
                      emailId: string
                      status: { }
                      failureReasonCode:
                        key: { }
                        correlationId: string
                        message: string
                        messageValues:
                          - dataType: { }
                            value: string
                            capitalize: true
                      failureDetails: string
                      supportsExternalPrinting: true
                      retryCount: 0
                  lastStep:
                    id: string
                    stepId: string
                    order: 0
                    name: string
                    triggerDays: 0
                    executeAt: string
                    stepType: { }
                    communicationType: { }
                    communicationLevel: { }
                    chargeType: { }
                    charges:
                      stepChargeAmountInclVAT: 0
                      stepVATAmount: 0
                      transactionId: string
                    executedAt: string
                    documentsSentAt: string
                    documentId: string
                    emailId: string
                    status: { }
                    failureReasonCode:
                      key: { }
                      correlationId: string
                      message: string
                      messageValues:
                        - dataType: { }
                          value: string
                          capitalize: true
                    failureDetails: string
                    supportsExternalPrinting: true
                    retryCount: 0
                  nextStep:
                    id: string
                    stepId: string
                    order: 0
                    name: string
                    triggerDays: 0
                    executeAt: string
                    stepType: { }
                    communicationType: { }
                    communicationLevel: { }
                    chargeType: { }
                    charges:
                      stepChargeAmountInclVAT: 0
                      stepVATAmount: 0
                      transactionId: string
                    executedAt: string
                    documentsSentAt: string
                    documentId: string
                    emailId: string
                    status: { }
                    failureReasonCode:
                      key: { }
                      correlationId: string
                      message: string
                      messageValues:
                        - dataType: { }
                          value: string
                          capitalize: true
                    failureDetails: string
                    supportsExternalPrinting: true
                    retryCount: 0
                  nextActionDue: string
                  referencedTransactions:
                    - string
                  paymentReference: string
                  propertyGroups:
                    - id: string
                      name: string
                  totalOpenAmountInclVAT: 0
                  customProperties:
                    - customEntityPropertyTypeId: string
                      values:
                        - valueDecimal: 0
                          valueString: string
                          valueBoolean: true
                          valueNumber: 0
                          valueDateTime: string
                          valueDropdown:
                            - string
                          startDateTime: string
                          endDateTime: string
            text/json:
              schema:
                $ref: '#/components/schemas/CollectionCaseDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  collectionNum: string
                  sequenceNum: 0
                  workflowId: string
                  workflowName: string
                  debtor:
                    customerId: string
                    displayName: string
                    customerAccountNumber: string
                    customerType: { }
                    customerGroup:
                      id: string
                      name: string
                  manualInterventionRequired: true
                  status: { }
                  steps:
                    - id: string
                      stepId: string
                      order: 0
                      name: string
                      triggerDays: 0
                      executeAt: string
                      stepType: { }
                      communicationType: { }
                      communicationLevel: { }
                      chargeType: { }
                      charges:
                        stepChargeAmountInclVAT: 0
                        stepVATAmount: 0
                        transactionId: string
                      executedAt: string
                      documentsSentAt: string
                      documentId: string
                      emailId: string
                      status: { }
                      failureReasonCode:
                        key: { }
                        correlationId: string
                        message: string
                        messageValues:
                          - dataType: { }
                            value: string
                            capitalize: true
                      failureDetails: string
                      supportsExternalPrinting: true
                      retryCount: 0
                  lastStep:
                    id: string
                    stepId: string
                    order: 0
                    name: string
                    triggerDays: 0
                    executeAt: string
                    stepType: { }
                    communicationType: { }
                    communicationLevel: { }
                    chargeType: { }
                    charges:
                      stepChargeAmountInclVAT: 0
                      stepVATAmount: 0
                      transactionId: string
                    executedAt: string
                    documentsSentAt: string
                    documentId: string
                    emailId: string
                    status: { }
                    failureReasonCode:
                      key: { }
                      correlationId: string
                      message: string
                      messageValues:
                        - dataType: { }
                          value: string
                          capitalize: true
                    failureDetails: string
                    supportsExternalPrinting: true
                    retryCount: 0
                  nextStep:
                    id: string
                    stepId: string
                    order: 0
                    name: string
                    triggerDays: 0
                    executeAt: string
                    stepType: { }
                    communicationType: { }
                    communicationLevel: { }
                    chargeType: { }
                    charges:
                      stepChargeAmountInclVAT: 0
                      stepVATAmount: 0
                      transactionId: string
                    executedAt: string
                    documentsSentAt: string
                    documentId: string
                    emailId: string
                    status: { }
                    failureReasonCode:
                      key: { }
                      correlationId: string
                      message: string
                      messageValues:
                        - dataType: { }
                          value: string
                          capitalize: true
                    failureDetails: string
                    supportsExternalPrinting: true
                    retryCount: 0
                  nextActionDue: string
                  referencedTransactions:
                    - string
                  paymentReference: string
                  propertyGroups:
                    - id: string
                      name: string
                  totalOpenAmountInclVAT: 0
                  customProperties:
                    - customEntityPropertyTypeId: string
                      values:
                        - valueDecimal: 0
                          valueString: string
                          valueBoolean: true
                          valueNumber: 0
                          valueDateTime: string
                          valueDropdown:
                            - string
                          startDateTime: string
                          endDateTime: string
  '/CollectionCases/invoice/{invoiceid}/submit':
    post:
      tags:
        - CollectionCases
      summary: Creates a collection case for a specific invoice.
      description: Creates a collection case for a specific invoice.
      operationId: post-collectioncases-invoice-invoiceid-submit
      parameters:
        - name: invoiceid
          in: path
          description: The ID of the invoice.
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: The request containing the details for creating the collection case.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/AssignInvoiceToCollectionCaseRequest'
              description: "Represents a request to assign an invoice to a collection case.\r\nThis DTO is used to link an invoice to a specific collection case for debt recovery purposes."
            example:
              collectionFlowId: string
              collectionCaseNumber: string
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/AssignInvoiceToCollectionCaseRequest'
              description: "Represents a request to assign an invoice to a collection case.\r\nThis DTO is used to link an invoice to a specific collection case for debt recovery purposes."
            example:
              collectionFlowId: string
              collectionCaseNumber: string
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/AssignInvoiceToCollectionCaseRequest'
              description: "Represents a request to assign an invoice to a collection case.\r\nThis DTO is used to link an invoice to a specific collection case for debt recovery purposes."
            example:
              collectionFlowId: string
              collectionCaseNumber: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CollectionCaseDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionCaseDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  collectionNum: string
                  sequenceNum: 0
                  workflowId: string
                  workflowName: string
                  debtor:
                    customerId: string
                    displayName: string
                    customerAccountNumber: string
                    customerType: { }
                    customerGroup:
                      id: string
                      name: string
                  manualInterventionRequired: true
                  status: { }
                  steps:
                    - id: string
                      stepId: string
                      order: 0
                      name: string
                      triggerDays: 0
                      executeAt: string
                      stepType: { }
                      communicationType: { }
                      communicationLevel: { }
                      chargeType: { }
                      charges:
                        stepChargeAmountInclVAT: 0
                        stepVATAmount: 0
                        transactionId: string
                      executedAt: string
                      documentsSentAt: string
                      documentId: string
                      emailId: string
                      status: { }
                      failureReasonCode:
                        key: { }
                        correlationId: string
                        message: string
                        messageValues:
                          - dataType: { }
                            value: string
                            capitalize: true
                      failureDetails: string
                      supportsExternalPrinting: true
                      retryCount: 0
                  lastStep:
                    id: string
                    stepId: string
                    order: 0
                    name: string
                    triggerDays: 0
                    executeAt: string
                    stepType: { }
                    communicationType: { }
                    communicationLevel: { }
                    chargeType: { }
                    charges:
                      stepChargeAmountInclVAT: 0
                      stepVATAmount: 0
                      transactionId: string
                    executedAt: string
                    documentsSentAt: string
                    documentId: string
                    emailId: string
                    status: { }
                    failureReasonCode:
                      key: { }
                      correlationId: string
                      message: string
                      messageValues:
                        - dataType: { }
                          value: string
                          capitalize: true
                    failureDetails: string
                    supportsExternalPrinting: true
                    retryCount: 0
                  nextStep:
                    id: string
                    stepId: string
                    order: 0
                    name: string
                    triggerDays: 0
                    executeAt: string
                    stepType: { }
                    communicationType: { }
                    communicationLevel: { }
                    chargeType: { }
                    charges:
                      stepChargeAmountInclVAT: 0
                      stepVATAmount: 0
                      transactionId: string
                    executedAt: string
                    documentsSentAt: string
                    documentId: string
                    emailId: string
                    status: { }
                    failureReasonCode:
                      key: { }
                      correlationId: string
                      message: string
                      messageValues:
                        - dataType: { }
                          value: string
                          capitalize: true
                    failureDetails: string
                    supportsExternalPrinting: true
                    retryCount: 0
                  nextActionDue: string
                  referencedTransactions:
                    - string
                  paymentReference: string
                  propertyGroups:
                    - id: string
                      name: string
                  totalOpenAmountInclVAT: 0
                  customProperties:
                    - customEntityPropertyTypeId: string
                      values:
                        - valueDecimal: 0
                          valueString: string
                          valueBoolean: true
                          valueNumber: 0
                          valueDateTime: string
                          valueDropdown:
                            - string
                          startDateTime: string
                          endDateTime: string
            text/json:
              schema:
                $ref: '#/components/schemas/CollectionCaseDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  collectionNum: string
                  sequenceNum: 0
                  workflowId: string
                  workflowName: string
                  debtor:
                    customerId: string
                    displayName: string
                    customerAccountNumber: string
                    customerType: { }
                    customerGroup:
                      id: string
                      name: string
                  manualInterventionRequired: true
                  status: { }
                  steps:
                    - id: string
                      stepId: string
                      order: 0
                      name: string
                      triggerDays: 0
                      executeAt: string
                      stepType: { }
                      communicationType: { }
                      communicationLevel: { }
                      chargeType: { }
                      charges:
                        stepChargeAmountInclVAT: 0
                        stepVATAmount: 0
                        transactionId: string
                      executedAt: string
                      documentsSentAt: string
                      documentId: string
                      emailId: string
                      status: { }
                      failureReasonCode:
                        key: { }
                        correlationId: string
                        message: string
                        messageValues:
                          - dataType: { }
                            value: string
                            capitalize: true
                      failureDetails: string
                      supportsExternalPrinting: true
                      retryCount: 0
                  lastStep:
                    id: string
                    stepId: string
                    order: 0
                    name: string
                    triggerDays: 0
                    executeAt: string
                    stepType: { }
                    communicationType: { }
                    communicationLevel: { }
                    chargeType: { }
                    charges:
                      stepChargeAmountInclVAT: 0
                      stepVATAmount: 0
                      transactionId: string
                    executedAt: string
                    documentsSentAt: string
                    documentId: string
                    emailId: string
                    status: { }
                    failureReasonCode:
                      key: { }
                      correlationId: string
                      message: string
                      messageValues:
                        - dataType: { }
                          value: string
                          capitalize: true
                    failureDetails: string
                    supportsExternalPrinting: true
                    retryCount: 0
                  nextStep:
                    id: string
                    stepId: string
                    order: 0
                    name: string
                    triggerDays: 0
                    executeAt: string
                    stepType: { }
                    communicationType: { }
                    communicationLevel: { }
                    chargeType: { }
                    charges:
                      stepChargeAmountInclVAT: 0
                      stepVATAmount: 0
                      transactionId: string
                    executedAt: string
                    documentsSentAt: string
                    documentId: string
                    emailId: string
                    status: { }
                    failureReasonCode:
                      key: { }
                      correlationId: string
                      message: string
                      messageValues:
                        - dataType: { }
                          value: string
                          capitalize: true
                    failureDetails: string
                    supportsExternalPrinting: true
                    retryCount: 0
                  nextActionDue: string
                  referencedTransactions:
                    - string
                  paymentReference: string
                  propertyGroups:
                    - id: string
                      name: string
                  totalOpenAmountInclVAT: 0
                  customProperties:
                    - customEntityPropertyTypeId: string
                      values:
                        - valueDecimal: 0
                          valueString: string
                          valueBoolean: true
                          valueNumber: 0
                          valueDateTime: string
                          valueDropdown:
                            - string
                          startDateTime: string
                          endDateTime: string
  '/CollectionCases/{collectioncaseid}/{stepId}/preview':
    post:
      tags:
        - CollectionCases
      summary: Previews a collection case document.
      description: Previews a collection case document.
      operationId: post-collectioncases-collectioncaseid-stepid-preview
      parameters:
        - name: collectioncaseid
          in: path
          description: The ID of the collection case.
          required: true
          schema:
            type: string
        - name: stepId
          in: path
          description: The ID of the step to preview.
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '200':
          description: Success
          content:
            text/html:
              schema:
                $ref: '#/components/schemas/ContentResult'
              example: <ContentResult> <content>string</content> <contentType>string</contentType> <statusCode>0</statusCode> </ContentResult>
        '400':
          description: Bad Request
          content:
            text/html:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example: <ApiResponseDTO> <errors> <key /> <correlationId>string</correlationId> <message>string</message> <messageValues> <dataType /> <value>string</value> <capitalize>true</capitalize> </messageValues> </errors> <success>true</success> <applicableEntitiesCount>0</applicableEntitiesCount> <requestedEntitiesCount>0</requestedEntitiesCount> <succeededEntitiesCount>0</succeededEntitiesCount> <isSynchronous>true</isSynchronous> </ApiResponseDTO>
  '/CollectionCases/{collectioncaseid}/{stepId}/previewpdf':
    post:
      tags:
        - CollectionCases
      summary: Previews a collection case document as a PDF.
      description: Previews a collection case document as a PDF.
      operationId: post-collectioncases-collectioncaseid-stepid-previewpdf
      parameters:
        - name: collectioncaseid
          in: path
          description: The ID of the collection case.
          required: true
          schema:
            type: string
        - name: stepId
          in: path
          description: The ID of the step to preview.
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: string
                format: binary
              examples:
                default:
                  value: 
            application/json:
              schema:
                type: string
                format: binary
              example: string
            text/json:
              schema:
                type: string
                format: binary
              example: string
  '/CollectionCases/{entityId}/customproperties':
    post:
      tags:
        - CollectionCases
      summary: '/CollectionCases/{entityId}/customproperties - POST'
      operationId: post-collectioncases-entityid-customproperties
      parameters:
        - name: entityId
          in: path
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/UpdateCustomEntityPropertiesRequest'
            example:
              properties:
                - customEntityPropertyTypeId: string
                  values:
                    - startDateTime: string
                      endDateTime: string
                      valueDecimal: 0
                      valueString: string
                      valueBoolean: true
                      valueNumber: 0
                      valueDateTime: string
                      valueDropdown:
                        - string
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/UpdateCustomEntityPropertiesRequest'
            example:
              properties:
                - customEntityPropertyTypeId: string
                  values:
                    - startDateTime: string
                      endDateTime: string
                      valueDecimal: 0
                      valueString: string
                      valueBoolean: true
                      valueNumber: 0
                      valueDateTime: string
                      valueDropdown:
                        - string
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/UpdateCustomEntityPropertiesRequest'
            example:
              properties:
                - customEntityPropertyTypeId: string
                  values:
                    - startDateTime: string
                      endDateTime: string
                      valueDecimal: 0
                      valueString: string
                      valueBoolean: true
                      valueNumber: 0
                      valueDateTime: string
                      valueDropdown:
                        - string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CollectionCaseDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionCaseDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  collectionNum: string
                  sequenceNum: 0
                  workflowId: string
                  workflowName: string
                  debtor:
                    customerId: string
                    displayName: string
                    customerAccountNumber: string
                    customerType: { }
                    customerGroup:
                      id: string
                      name: string
                  manualInterventionRequired: true
                  status: { }
                  steps:
                    - id: string
                      stepId: string
                      order: 0
                      name: string
                      triggerDays: 0
                      executeAt: string
                      stepType: { }
                      communicationType: { }
                      communicationLevel: { }
                      chargeType: { }
                      charges:
                        stepChargeAmountInclVAT: 0
                        stepVATAmount: 0
                        transactionId: string
                      executedAt: string
                      documentsSentAt: string
                      documentId: string
                      emailId: string
                      status: { }
                      failureReasonCode:
                        key: { }
                        correlationId: string
                        message: string
                        messageValues:
                          - dataType: { }
                            value: string
                            capitalize: true
                      failureDetails: string
                      supportsExternalPrinting: true
                      retryCount: 0
                  lastStep:
                    id: string
                    stepId: string
                    order: 0
                    name: string
                    triggerDays: 0
                    executeAt: string
                    stepType: { }
                    communicationType: { }
                    communicationLevel: { }
                    chargeType: { }
                    charges:
                      stepChargeAmountInclVAT: 0
                      stepVATAmount: 0
                      transactionId: string
                    executedAt: string
                    documentsSentAt: string
                    documentId: string
                    emailId: string
                    status: { }
                    failureReasonCode:
                      key: { }
                      correlationId: string
                      message: string
                      messageValues:
                        - dataType: { }
                          value: string
                          capitalize: true
                    failureDetails: string
                    supportsExternalPrinting: true
                    retryCount: 0
                  nextStep:
                    id: string
                    stepId: string
                    order: 0
                    name: string
                    triggerDays: 0
                    executeAt: string
                    stepType: { }
                    communicationType: { }
                    communicationLevel: { }
                    chargeType: { }
                    charges:
                      stepChargeAmountInclVAT: 0
                      stepVATAmount: 0
                      transactionId: string
                    executedAt: string
                    documentsSentAt: string
                    documentId: string
                    emailId: string
                    status: { }
                    failureReasonCode:
                      key: { }
                      correlationId: string
                      message: string
                      messageValues:
                        - dataType: { }
                          value: string
                          capitalize: true
                    failureDetails: string
                    supportsExternalPrinting: true
                    retryCount: 0
                  nextActionDue: string
                  referencedTransactions:
                    - string
                  paymentReference: string
                  propertyGroups:
                    - id: string
                      name: string
                  totalOpenAmountInclVAT: 0
                  customProperties:
                    - customEntityPropertyTypeId: string
                      values:
                        - valueDecimal: 0
                          valueString: string
                          valueBoolean: true
                          valueNumber: 0
                          valueDateTime: string
                          valueDropdown:
                            - string
                          startDateTime: string
                          endDateTime: string
            text/json:
              schema:
                $ref: '#/components/schemas/CollectionCaseDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  collectionNum: string
                  sequenceNum: 0
                  workflowId: string
                  workflowName: string
                  debtor:
                    customerId: string
                    displayName: string
                    customerAccountNumber: string
                    customerType: { }
                    customerGroup:
                      id: string
                      name: string
                  manualInterventionRequired: true
                  status: { }
                  steps:
                    - id: string
                      stepId: string
                      order: 0
                      name: string
                      triggerDays: 0
                      executeAt: string
                      stepType: { }
                      communicationType: { }
                      communicationLevel: { }
                      chargeType: { }
                      charges:
                        stepChargeAmountInclVAT: 0
                        stepVATAmount: 0
                        transactionId: string
                      executedAt: string
                      documentsSentAt: string
                      documentId: string
                      emailId: string
                      status: { }
                      failureReasonCode:
                        key: { }
                        correlationId: string
                        message: string
                        messageValues:
                          - dataType: { }
                            value: string
                            capitalize: true
                      failureDetails: string
                      supportsExternalPrinting: true
                      retryCount: 0
                  lastStep:
                    id: string
                    stepId: string
                    order: 0
                    name: string
                    triggerDays: 0
                    executeAt: string
                    stepType: { }
                    communicationType: { }
                    communicationLevel: { }
                    chargeType: { }
                    charges:
                      stepChargeAmountInclVAT: 0
                      stepVATAmount: 0
                      transactionId: string
                    executedAt: string
                    documentsSentAt: string
                    documentId: string
                    emailId: string
                    status: { }
                    failureReasonCode:
                      key: { }
                      correlationId: string
                      message: string
                      messageValues:
                        - dataType: { }
                          value: string
                          capitalize: true
                    failureDetails: string
                    supportsExternalPrinting: true
                    retryCount: 0
                  nextStep:
                    id: string
                    stepId: string
                    order: 0
                    name: string
                    triggerDays: 0
                    executeAt: string
                    stepType: { }
                    communicationType: { }
                    communicationLevel: { }
                    chargeType: { }
                    charges:
                      stepChargeAmountInclVAT: 0
                      stepVATAmount: 0
                      transactionId: string
                    executedAt: string
                    documentsSentAt: string
                    documentId: string
                    emailId: string
                    status: { }
                    failureReasonCode:
                      key: { }
                      correlationId: string
                      message: string
                      messageValues:
                        - dataType: { }
                          value: string
                          capitalize: true
                    failureDetails: string
                    supportsExternalPrinting: true
                    retryCount: 0
                  nextActionDue: string
                  referencedTransactions:
                    - string
                  paymentReference: string
                  propertyGroups:
                    - id: string
                      name: string
                  totalOpenAmountInclVAT: 0
                  customProperties:
                    - customEntityPropertyTypeId: string
                      values:
                        - valueDecimal: 0
                          valueString: string
                          valueBoolean: true
                          valueNumber: 0
                          valueDateTime: string
                          valueDropdown:
                            - string
                          startDateTime: string
                          endDateTime: string
  /CustAging:
    get:
      tags:
        - CustAging
      summary: Retrieves all customer aging headers based on the provided query parameters.
      description: Retrieves all customer aging headers based on the provided query parameters.
      operationId: get-custaging
      parameters:
        - name: BucketType
          in: query
          schema:
            type: array
            items:
              type: string
        - name: HideCredits
          in: query
          schema:
            type: boolean
        - name: OnlyOverdue
          in: query
          schema:
            type: boolean
        - name: PropertyGroupIds
          in: query
          schema:
            type: array
            items:
              type: string
        - name: OrderBy
          in: query
          schema:
            type: string
        - name: ReferenceDate
          in: query
          description: Format - date-time (as date-time in RFC3339).
          schema:
            type: string
            format: date-time
            nullable: true
        - name: FlexSearch
          in: query
          schema:
            type: string
        - name: IncludeOnlyIds
          in: query
          schema:
            type: array
            items:
              type: string
        - name: ExcludeIds
          in: query
          schema:
            type: array
            items:
              type: string
        - name: continuationToken
          in: header
          description: The continuation token for pagination.
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CustAgingHeaderDTOPagedResponseModelDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/CustAgingHeaderDTOPagedResponseModelDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  results:
                    - debtor:
                        customerId: string
                        displayName: string
                        customerAccountNumber: string
                        customerType: { }
                        customerGroup:
                          id: string
                          name: string
                      lastPaymentDate: string
                      oldestOpenDebitTransactionReference: string
                      openCredits: 0
                      totalCreditTxOpen: 0
                      openDebits: 0
                      totalDebitTxOpen: 0
                      totalOpenNotOverdue: 0
                      totalOpenNotOverdueTx: 0
                      totalOverdue30D: 0
                      totalOverdue30DTx: 0
                      totalOverdue60D: 0
                      totalOverdue60DTx: 0
                      totalOverdue90D: 0
                      totalOverdue90DTx: 0
                      totalOverdueOver90D: 0
                      totalOverdueOver90DTx: 0
                      totalCollectionCostsOpen: 0
                      totalCollectionCostTx: 0
                      totalOpen: 0
                      totalOpenTx: 0
                      flowActive: true
                      propertyGroups:
                        - id: string
                          name: string
                  hasNextPage: true
                  nextPageToken: string
                  totalRecords: 0
                  sortableFields:
                    - string
                  aggregateDetails:
                    - code: string
                      translation: string
                      value: 0
                      valueDate: string
            text/json:
              schema:
                $ref: '#/components/schemas/CustAgingHeaderDTOPagedResponseModelDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  results:
                    - debtor:
                        customerId: string
                        displayName: string
                        customerAccountNumber: string
                        customerType: { }
                        customerGroup:
                          id: string
                          name: string
                      lastPaymentDate: string
                      oldestOpenDebitTransactionReference: string
                      openCredits: 0
                      totalCreditTxOpen: 0
                      openDebits: 0
                      totalDebitTxOpen: 0
                      totalOpenNotOverdue: 0
                      totalOpenNotOverdueTx: 0
                      totalOverdue30D: 0
                      totalOverdue30DTx: 0
                      totalOverdue60D: 0
                      totalOverdue60DTx: 0
                      totalOverdue90D: 0
                      totalOverdue90DTx: 0
                      totalOverdueOver90D: 0
                      totalOverdueOver90DTx: 0
                      totalCollectionCostsOpen: 0
                      totalCollectionCostTx: 0
                      totalOpen: 0
                      totalOpenTx: 0
                      flowActive: true
                      propertyGroups:
                        - id: string
                          name: string
                  hasNextPage: true
                  nextPageToken: string
                  totalRecords: 0
                  sortableFields:
                    - string
                  aggregateDetails:
                    - code: string
                      translation: string
                      value: 0
                      valueDate: string
  /CustAging/overviewcount:
    get:
      tags:
        - CustAging
      summary: Retrieves the overview count of customer aging lines based on the provided query parameters.
      description: Retrieves the overview count of customer aging lines based on the provided query parameters.
      operationId: get-custaging-overviewcount
      parameters:
        - name: BucketType
          in: query
          schema:
            type: array
            items:
              type: string
        - name: HideCredits
          in: query
          schema:
            type: boolean
        - name: OnlyOverdue
          in: query
          schema:
            type: boolean
        - name: PropertyGroupIds
          in: query
          schema:
            type: array
            items:
              type: string
        - name: OrderBy
          in: query
          schema:
            type: string
        - name: ReferenceDate
          in: query
          description: Format - date-time (as date-time in RFC3339).
          schema:
            type: string
            format: date-time
            nullable: true
        - name: FlexSearch
          in: query
          schema:
            type: string
        - name: IncludeOnlyIds
          in: query
          schema:
            type: array
            items:
              type: string
        - name: ExcludeIds
          in: query
          schema:
            type: array
            items:
              type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CustAgingOverviewCountResponseDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/CustAgingOverviewCountResponseDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  openCredits: 0
                  openDebits: 0
                  totalOpenNotOverdue: 0
                  totalOverdue30D: 0
                  totalOverdue60D: 0
                  totalOverdue90D: 0
                  totalOverdueOver90D: 0
                  totalCollectionCostsOpen: 0
                  totalOpen: 0
            text/json:
              schema:
                $ref: '#/components/schemas/CustAgingOverviewCountResponseDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  openCredits: 0
                  openDebits: 0
                  totalOpenNotOverdue: 0
                  totalOverdue30D: 0
                  totalOverdue60D: 0
                  totalOverdue90D: 0
                  totalOverdueOver90D: 0
                  totalCollectionCostsOpen: 0
                  totalOpen: 0
  '/CustAging/{customerId}':
    get:
      tags:
        - CustAging
      summary: Retrieves customer aging lines for a specific customer.
      description: Retrieves customer aging lines for a specific customer.
      operationId: get-custaging-customerid
      parameters:
        - name: customerId
          in: path
          description: The ID of the customer.
          required: true
          schema:
            type: string
        - name: continuationToken
          in: header
          description: The continuation token for pagination.
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CustAgingLineDTOPagedResponseModelDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/CustAgingLineDTOPagedResponseModelDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  results:
                    - transactionId: string
                      transactionReferenceType: string
                      transactionReferenceId: string
                      referenceNumber: string
                      openAmount: 0
                      displayName: string
                      customerAccountNumber: string
                      customerType: { }
                      transactionType: { }
                      transactionDate: string
                      transactionDueDate: string
                      openCredit: 0
                      totalOpenNotOverdue: 0
                      totalOverdue30D: 0
                      totalOverdue60D: 0
                      totalOverdue90D: 0
                      totalOverdueOver90D: 0
                      propertyGroups:
                        - id: string
                          name: string
                      collectionCaseDetails:
                        collectionCaseId: string
                        closed: true
                        workflowId: string
                        workflowName: string
                        previousStepId: string
                        previousStepName: string
                        previousStepExecutedAt: string
                        previousStepStatus: { }
                        nextStepId: string
                        nextStepName: string
                        nextStepExecutionDate: string
                  hasNextPage: true
                  nextPageToken: string
                  totalRecords: 0
                  sortableFields:
                    - string
                  aggregateDetails:
                    - code: string
                      translation: string
                      value: 0
                      valueDate: string
            text/json:
              schema:
                $ref: '#/components/schemas/CustAgingLineDTOPagedResponseModelDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  results:
                    - transactionId: string
                      transactionReferenceType: string
                      transactionReferenceId: string
                      referenceNumber: string
                      openAmount: 0
                      displayName: string
                      customerAccountNumber: string
                      customerType: { }
                      transactionType: { }
                      transactionDate: string
                      transactionDueDate: string
                      openCredit: 0
                      totalOpenNotOverdue: 0
                      totalOverdue30D: 0
                      totalOverdue60D: 0
                      totalOverdue90D: 0
                      totalOverdueOver90D: 0
                      propertyGroups:
                        - id: string
                          name: string
                      collectionCaseDetails:
                        collectionCaseId: string
                        closed: true
                        workflowId: string
                        workflowName: string
                        previousStepId: string
                        previousStepName: string
                        previousStepExecutedAt: string
                        previousStepStatus: { }
                        nextStepId: string
                        nextStepName: string
                        nextStepExecutionDate: string
                  hasNextPage: true
                  nextPageToken: string
                  totalRecords: 0
                  sortableFields:
                    - string
                  aggregateDetails:
                    - code: string
                      translation: string
                      value: 0
                      valueDate: string
  /CustAging/detailed:
    get:
      tags:
        - CustAging
      summary: Retrieves detailed customer aging lines based on the provided query parameters.
      description: Retrieves detailed customer aging lines based on the provided query parameters.
      operationId: get-custaging-detailed
      parameters:
        - name: BucketType
          in: query
          schema:
            type: array
            items:
              type: string
        - name: HideCredits
          in: query
          schema:
            type: boolean
        - name: OnlyOverdue
          in: query
          schema:
            type: boolean
        - name: PropertyGroupIds
          in: query
          schema:
            type: array
            items:
              type: string
        - name: OrderBy
          in: query
          schema:
            type: string
        - name: ReferenceDate
          in: query
          description: Format - date-time (as date-time in RFC3339).
          schema:
            type: string
            format: date-time
            nullable: true
        - name: FlexSearch
          in: query
          schema:
            type: string
        - name: IncludeOnlyIds
          in: query
          schema:
            type: array
            items:
              type: string
        - name: ExcludeIds
          in: query
          schema:
            type: array
            items:
              type: string
        - name: continuationToken
          in: header
          description: The continuation token for pagination.
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CustAgingLineDTOPagedResponseModelDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/CustAgingLineDTOPagedResponseModelDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  results:
                    - transactionId: string
                      transactionReferenceType: string
                      transactionReferenceId: string
                      referenceNumber: string
                      openAmount: 0
                      displayName: string
                      customerAccountNumber: string
                      customerType: { }
                      transactionType: { }
                      transactionDate: string
                      transactionDueDate: string
                      openCredit: 0
                      totalOpenNotOverdue: 0
                      totalOverdue30D: 0
                      totalOverdue60D: 0
                      totalOverdue90D: 0
                      totalOverdueOver90D: 0
                      propertyGroups:
                        - id: string
                          name: string
                      collectionCaseDetails:
                        collectionCaseId: string
                        closed: true
                        workflowId: string
                        workflowName: string
                        previousStepId: string
                        previousStepName: string
                        previousStepExecutedAt: string
                        previousStepStatus: { }
                        nextStepId: string
                        nextStepName: string
                        nextStepExecutionDate: string
                  hasNextPage: true
                  nextPageToken: string
                  totalRecords: 0
                  sortableFields:
                    - string
                  aggregateDetails:
                    - code: string
                      translation: string
                      value: 0
                      valueDate: string
            text/json:
              schema:
                $ref: '#/components/schemas/CustAgingLineDTOPagedResponseModelDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  results:
                    - transactionId: string
                      transactionReferenceType: string
                      transactionReferenceId: string
                      referenceNumber: string
                      openAmount: 0
                      displayName: string
                      customerAccountNumber: string
                      customerType: { }
                      transactionType: { }
                      transactionDate: string
                      transactionDueDate: string
                      openCredit: 0
                      totalOpenNotOverdue: 0
                      totalOverdue30D: 0
                      totalOverdue60D: 0
                      totalOverdue90D: 0
                      totalOverdueOver90D: 0
                      propertyGroups:
                        - id: string
                          name: string
                      collectionCaseDetails:
                        collectionCaseId: string
                        closed: true
                        workflowId: string
                        workflowName: string
                        previousStepId: string
                        previousStepName: string
                        previousStepExecutedAt: string
                        previousStepStatus: { }
                        nextStepId: string
                        nextStepName: string
                        nextStepExecutionDate: string
                  hasNextPage: true
                  nextPageToken: string
                  totalRecords: 0
                  sortableFields:
                    - string
                  aggregateDetails:
                    - code: string
                      translation: string
                      value: 0
                      valueDate: string
  '/CustomerBankAccounts/c/{customeruuid}':
    get:
      tags:
        - CustomerBankAccounts
      summary: Retrieves all bank accounts for a specific customer.
      description: Retrieves all bank accounts for a specific customer.
      operationId: get-customerbankaccounts-c-customeruuid
      parameters:
        - name: customeruuid
          in: path
          description: The UUID of the customer.
          required: true
          schema:
            type: string
        - name: hasMandate
          in: query
          description: Optional filter to include only bank accounts with a mandate.
          schema:
            type: boolean
            nullable: true
        - name: orderBy
          in: query
          description: The order by clause.
          schema:
            type: string
        - name: continuationToken
          in: header
          description: The continuation token for pagination.
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CustomerBankAccountDTOPagedResponseModelDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerBankAccountDTOPagedResponseModelDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  results:
                    - id: string
                      entityType: { }
                      createdDateTime: string
                      discriminator: string
                      _etag: string
                      requireAttention: true
                      hasErrors: true
                      hasWarnings: true
                      isReadOnly: true
                      organisationId: string
                      customerId: string
                      activeMandate:
                        number: string
                        signedDateTime: string
                        cancelledDateTime: string
                        type: { }
                        status: { }
                      customerMandates:
                        - number: string
                          signedDateTime: string
                          cancelledDateTime: string
                          type: { }
                          status: { }
                      iban: string
                      bic: string
                      addedFromIncomingBankingTransaction: true
                      isDefault: true
                      lastUsedDate: string
                  hasNextPage: true
                  nextPageToken: string
                  totalRecords: 0
                  sortableFields:
                    - string
                  aggregateDetails:
                    - code: string
                      translation: string
                      value: 0
                      valueDate: string
            text/json:
              schema:
                $ref: '#/components/schemas/CustomerBankAccountDTOPagedResponseModelDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  results:
                    - id: string
                      entityType: { }
                      createdDateTime: string
                      discriminator: string
                      _etag: string
                      requireAttention: true
                      hasErrors: true
                      hasWarnings: true
                      isReadOnly: true
                      organisationId: string
                      customerId: string
                      activeMandate:
                        number: string
                        signedDateTime: string
                        cancelledDateTime: string
                        type: { }
                        status: { }
                      customerMandates:
                        - number: string
                          signedDateTime: string
                          cancelledDateTime: string
                          type: { }
                          status: { }
                      iban: string
                      bic: string
                      addedFromIncomingBankingTransaction: true
                      isDefault: true
                      lastUsedDate: string
                  hasNextPage: true
                  nextPageToken: string
                  totalRecords: 0
                  sortableFields:
                    - string
                  aggregateDetails:
                    - code: string
                      translation: string
                      value: 0
                      valueDate: string
  '/CustomerBankAccounts/{customerBankAccountId}/confirm':
    post:
      tags:
        - CustomerBankAccounts
      summary: Confirms a specific customer bank account.
      description: Confirms a specific customer bank account.
      operationId: Confirm
      parameters:
        - name: customerBankAccountId
          in: path
          description: The ID of the customer bank account.
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CustomerBankAccountDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerBankAccountDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  customerId: string
                  activeMandate:
                    number: string
                    signedDateTime: string
                    cancelledDateTime: string
                    type: { }
                    status: { }
                  customerMandates:
                    - number: string
                      signedDateTime: string
                      cancelledDateTime: string
                      type: { }
                      status: { }
                  iban: string
                  bic: string
                  addedFromIncomingBankingTransaction: true
                  isDefault: true
                  lastUsedDate: string
            text/json:
              schema:
                $ref: '#/components/schemas/CustomerBankAccountDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  customerId: string
                  activeMandate:
                    number: string
                    signedDateTime: string
                    cancelledDateTime: string
                    type: { }
                    status: { }
                  customerMandates:
                    - number: string
                      signedDateTime: string
                      cancelledDateTime: string
                      type: { }
                      status: { }
                  iban: string
                  bic: string
                  addedFromIncomingBankingTransaction: true
                  isDefault: true
                  lastUsedDate: string
  '/CustomerBankAccounts/c/{customeruuid}/add':
    post:
      tags:
        - CustomerBankAccounts
      summary: Adds a new bank account for a specific customer.
      description: Adds a new bank account for a specific customer.
      operationId: Add
      parameters:
        - name: customeruuid
          in: path
          description: The UUID of the customer.
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: The request containing the details for the new bank account.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/AddCustomerBankAccountRequest'
              description: "Represents a request to add a new bank account for a customer.\r\nThis DTO is used to register a new bank account with associated mandate information."
            example:
              iban: string
              bic: string
              isDefault: true
              activeMandate:
                type: { }
                signedDateTime: string
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/AddCustomerBankAccountRequest'
              description: "Represents a request to add a new bank account for a customer.\r\nThis DTO is used to register a new bank account with associated mandate information."
            example:
              iban: string
              bic: string
              isDefault: true
              activeMandate:
                type: { }
                signedDateTime: string
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/AddCustomerBankAccountRequest'
              description: "Represents a request to add a new bank account for a customer.\r\nThis DTO is used to register a new bank account with associated mandate information."
            example:
              iban: string
              bic: string
              isDefault: true
              activeMandate:
                type: { }
                signedDateTime: string
      responses:
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CustomerBankAccountDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerBankAccountDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  customerId: string
                  activeMandate:
                    number: string
                    signedDateTime: string
                    cancelledDateTime: string
                    type: { }
                    status: { }
                  customerMandates:
                    - number: string
                      signedDateTime: string
                      cancelledDateTime: string
                      type: { }
                      status: { }
                  iban: string
                  bic: string
                  addedFromIncomingBankingTransaction: true
                  isDefault: true
                  lastUsedDate: string
            text/json:
              schema:
                $ref: '#/components/schemas/CustomerBankAccountDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  customerId: string
                  activeMandate:
                    number: string
                    signedDateTime: string
                    cancelledDateTime: string
                    type: { }
                    status: { }
                  customerMandates:
                    - number: string
                      signedDateTime: string
                      cancelledDateTime: string
                      type: { }
                      status: { }
                  iban: string
                  bic: string
                  addedFromIncomingBankingTransaction: true
                  isDefault: true
                  lastUsedDate: string
  '/CustomerBankAccounts/{customerBankAccountId}/update':
    post:
      tags:
        - CustomerBankAccounts
      summary: Updates a specific customer bank account.
      description: Updates a specific customer bank account.
      operationId: Update
      parameters:
        - name: customerBankAccountId
          in: path
          description: The ID of the customer bank account.
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: The request containing the updated details for the bank account.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/UpdateCustomerBankAccountRequest'
              description: "Represents a request to update an existing customer bank account.\r\nThis DTO is used to modify the details of a customer's bank account and its associated mandate information."
            example:
              iban: string
              bic: string
              isDefault: true
              activeMandate:
                number: string
                type: { }
                signedDateTime: string
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/UpdateCustomerBankAccountRequest'
              description: "Represents a request to update an existing customer bank account.\r\nThis DTO is used to modify the details of a customer's bank account and its associated mandate information."
            example:
              iban: string
              bic: string
              isDefault: true
              activeMandate:
                number: string
                type: { }
                signedDateTime: string
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/UpdateCustomerBankAccountRequest'
              description: "Represents a request to update an existing customer bank account.\r\nThis DTO is used to modify the details of a customer's bank account and its associated mandate information."
            example:
              iban: string
              bic: string
              isDefault: true
              activeMandate:
                number: string
                type: { }
                signedDateTime: string
      responses:
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CustomerBankAccountDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerBankAccountDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  customerId: string
                  activeMandate:
                    number: string
                    signedDateTime: string
                    cancelledDateTime: string
                    type: { }
                    status: { }
                  customerMandates:
                    - number: string
                      signedDateTime: string
                      cancelledDateTime: string
                      type: { }
                      status: { }
                  iban: string
                  bic: string
                  addedFromIncomingBankingTransaction: true
                  isDefault: true
                  lastUsedDate: string
            text/json:
              schema:
                $ref: '#/components/schemas/CustomerBankAccountDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  customerId: string
                  activeMandate:
                    number: string
                    signedDateTime: string
                    cancelledDateTime: string
                    type: { }
                    status: { }
                  customerMandates:
                    - number: string
                      signedDateTime: string
                      cancelledDateTime: string
                      type: { }
                      status: { }
                  iban: string
                  bic: string
                  addedFromIncomingBankingTransaction: true
                  isDefault: true
                  lastUsedDate: string
  '/CustomerBankAccounts/{customerBankAccountId}/delete':
    delete:
      tags:
        - CustomerBankAccounts
      summary: Deletes a specific customer bank account.
      description: Deletes a specific customer bank account.
      operationId: Delete
      parameters:
        - name: customerBankAccountId
          in: path
          description: The ID of the customer bank account.
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
        '204':
          description: No Content
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/BooleanApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/BooleanApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data: true
            text/json:
              schema:
                $ref: '#/components/schemas/BooleanApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data: true
  '/Customers/{customeruuid}':
    get:
      tags:
        - Customers
      summary: Retrieves a billing customer by their UUID.
      description: Retrieves a billing customer by their UUID.
      operationId: get-customers-customeruuid
      parameters:
        - name: customeruuid
          in: path
          description: The UUID of the customer.
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: string
                title: string
                status: 0
                detail: string
                instance: string
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: string
                title: string
                status: 0
                detail: string
                instance: string
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/BillingCustomerDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/BillingCustomerDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  accountNumber: string
                  shortDisplayName: string
                  paymentTermsId: string
                  defaultPaymentMethod: { }
                  customerType: { }
                  customerGroup:
                    id: string
                    name: string
                  propertyGroups:
                    - id: string
                      name: string
                  culture: { }
                  collectionFlowId: string
                  billingSettings:
                    automaticSettlementSetting:
                      automaticSettlement: true
                      originatorType: { }
                      originatorId: string
                  organizationNumber: string
                  vatNumber: string
            text/json:
              schema:
                $ref: '#/components/schemas/BillingCustomerDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  accountNumber: string
                  shortDisplayName: string
                  paymentTermsId: string
                  defaultPaymentMethod: { }
                  customerType: { }
                  customerGroup:
                    id: string
                    name: string
                  propertyGroups:
                    - id: string
                      name: string
                  culture: { }
                  collectionFlowId: string
                  billingSettings:
                    automaticSettlementSetting:
                      automaticSettlement: true
                      originatorType: { }
                      originatorId: string
                  organizationNumber: string
                  vatNumber: string
  '/EstimatedInvoices/{estimatedinvoiceuuid}':
    get:
      tags:
        - EstimatedInvoices
      summary: Retrieves an estimated invoice by its UUID.
      description: Retrieves an estimated invoice by its UUID.
      operationId: get-estimatedinvoices-estimatedinvoiceuuid
      parameters:
        - name: estimatedinvoiceuuid
          in: path
          description: The UUID of the estimated invoice.
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: string
                title: string
                status: 0
                detail: string
                instance: string
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: string
                title: string
                status: 0
                detail: string
                instance: string
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/EstimatedInvoiceDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/EstimatedInvoiceDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  customerId: string
                  contractId: string
                  originalBillingCompletenessId: string
                  product:
                    id: string
                    name: string
                    productId: string
                    productName: string
                  calculationDate: string
                  periodEndDateTime: string
                  periodStartDateTime: string
                  totalAmountInclVAT: 0
                  totalAmountExclVAT: 0
                  totalVATAmount: 0
                  remainingAmount: 0
                  lines:
                    - calculationType: { }
                      billingItemReference:
                        billingItemId: string
                        billingItemName: string
                      startDateTime: string
                      endDateTime: string
                      amountExclVAT: 0
                      vat: 0
                      amountInclVAT: 0
                      quantity: 0
                      rawQuantity: 0
                      unitPrice: 0
                      vatRate: 0
                      unitOfMeasure: { }
                      utilityType: { }
                      serviceLocationId: string
                      billingTariffAccuracy:
                        entityId: string
                        entityPeriod:
                          startDateTime: string
                          endDateTime: string
                        outDated: true
                      costComponentAccuracies:
                        - entityId: string
                          entityPeriod:
                            startDateTime: string
                            endDateTime: string
                          outDated: true
                      taxAccuracy:
                        entityId: string
                        entityPeriod:
                          startDateTime: string
                          endDateTime: string
                        outDated: true
                      accuracy: { }
                      quantityAccuracy: { }
                  advances:
                    - periodStartDateTime: string
                      periodEndDateTime: string
                      amountExclVAT: 0
                      vat: 0
                      amountInclVAT: 0
                      quantity: 0
                      unitPrice: 0
                      vatRate: 0
                      paid: true
                      invoiceId: string
                  accuracy: { }
            text/json:
              schema:
                $ref: '#/components/schemas/EstimatedInvoiceDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  customerId: string
                  contractId: string
                  originalBillingCompletenessId: string
                  product:
                    id: string
                    name: string
                    productId: string
                    productName: string
                  calculationDate: string
                  periodEndDateTime: string
                  periodStartDateTime: string
                  totalAmountInclVAT: 0
                  totalAmountExclVAT: 0
                  totalVATAmount: 0
                  remainingAmount: 0
                  lines:
                    - calculationType: { }
                      billingItemReference:
                        billingItemId: string
                        billingItemName: string
                      startDateTime: string
                      endDateTime: string
                      amountExclVAT: 0
                      vat: 0
                      amountInclVAT: 0
                      quantity: 0
                      rawQuantity: 0
                      unitPrice: 0
                      vatRate: 0
                      unitOfMeasure: { }
                      utilityType: { }
                      serviceLocationId: string
                      billingTariffAccuracy:
                        entityId: string
                        entityPeriod:
                          startDateTime: string
                          endDateTime: string
                        outDated: true
                      costComponentAccuracies:
                        - entityId: string
                          entityPeriod:
                            startDateTime: string
                            endDateTime: string
                          outDated: true
                      taxAccuracy:
                        entityId: string
                        entityPeriod:
                          startDateTime: string
                          endDateTime: string
                        outDated: true
                      accuracy: { }
                      quantityAccuracy: { }
                  advances:
                    - periodStartDateTime: string
                      periodEndDateTime: string
                      amountExclVAT: 0
                      vat: 0
                      amountInclVAT: 0
                      quantity: 0
                      unitPrice: 0
                      vatRate: 0
                      paid: true
                      invoiceId: string
                  accuracy: { }
  '/EstimatedInvoices/bc/{billingcompletenessid}':
    get:
      tags:
        - EstimatedInvoices
      summary: Retrieves an estimated invoice by its associated billing completeness ID.
      description: Retrieves an estimated invoice by its associated billing completeness ID.
      operationId: get-estimatedinvoices-bc-billingcompletenessid
      parameters:
        - name: billingcompletenessid
          in: path
          description: The ID of the billing completeness.
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: string
                title: string
                status: 0
                detail: string
                instance: string
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: string
                title: string
                status: 0
                detail: string
                instance: string
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/EstimatedInvoiceDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/EstimatedInvoiceDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  customerId: string
                  contractId: string
                  originalBillingCompletenessId: string
                  product:
                    id: string
                    name: string
                    productId: string
                    productName: string
                  calculationDate: string
                  periodEndDateTime: string
                  periodStartDateTime: string
                  totalAmountInclVAT: 0
                  totalAmountExclVAT: 0
                  totalVATAmount: 0
                  remainingAmount: 0
                  lines:
                    - calculationType: { }
                      billingItemReference:
                        billingItemId: string
                        billingItemName: string
                      startDateTime: string
                      endDateTime: string
                      amountExclVAT: 0
                      vat: 0
                      amountInclVAT: 0
                      quantity: 0
                      rawQuantity: 0
                      unitPrice: 0
                      vatRate: 0
                      unitOfMeasure: { }
                      utilityType: { }
                      serviceLocationId: string
                      billingTariffAccuracy:
                        entityId: string
                        entityPeriod:
                          startDateTime: string
                          endDateTime: string
                        outDated: true
                      costComponentAccuracies:
                        - entityId: string
                          entityPeriod:
                            startDateTime: string
                            endDateTime: string
                          outDated: true
                      taxAccuracy:
                        entityId: string
                        entityPeriod:
                          startDateTime: string
                          endDateTime: string
                        outDated: true
                      accuracy: { }
                      quantityAccuracy: { }
                  advances:
                    - periodStartDateTime: string
                      periodEndDateTime: string
                      amountExclVAT: 0
                      vat: 0
                      amountInclVAT: 0
                      quantity: 0
                      unitPrice: 0
                      vatRate: 0
                      paid: true
                      invoiceId: string
                  accuracy: { }
            text/json:
              schema:
                $ref: '#/components/schemas/EstimatedInvoiceDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  customerId: string
                  contractId: string
                  originalBillingCompletenessId: string
                  product:
                    id: string
                    name: string
                    productId: string
                    productName: string
                  calculationDate: string
                  periodEndDateTime: string
                  periodStartDateTime: string
                  totalAmountInclVAT: 0
                  totalAmountExclVAT: 0
                  totalVATAmount: 0
                  remainingAmount: 0
                  lines:
                    - calculationType: { }
                      billingItemReference:
                        billingItemId: string
                        billingItemName: string
                      startDateTime: string
                      endDateTime: string
                      amountExclVAT: 0
                      vat: 0
                      amountInclVAT: 0
                      quantity: 0
                      rawQuantity: 0
                      unitPrice: 0
                      vatRate: 0
                      unitOfMeasure: { }
                      utilityType: { }
                      serviceLocationId: string
                      billingTariffAccuracy:
                        entityId: string
                        entityPeriod:
                          startDateTime: string
                          endDateTime: string
                        outDated: true
                      costComponentAccuracies:
                        - entityId: string
                          entityPeriod:
                            startDateTime: string
                            endDateTime: string
                          outDated: true
                      taxAccuracy:
                        entityId: string
                        entityPeriod:
                          startDateTime: string
                          endDateTime: string
                        outDated: true
                      accuracy: { }
                      quantityAccuracy: { }
                  advances:
                    - periodStartDateTime: string
                      periodEndDateTime: string
                      amountExclVAT: 0
                      vat: 0
                      amountInclVAT: 0
                      quantity: 0
                      unitPrice: 0
                      vatRate: 0
                      paid: true
                      invoiceId: string
                  accuracy: { }
  '/EstimatedInvoices/br/{billingRelationId}':
    post:
      tags:
        - EstimatedInvoices
      summary: Manually triggers invoice estimation for a specific billing relation.
      description: Manually triggers invoice estimation for a specific billing relation.
      operationId: post-estimatedinvoices-br-billingrelationid
      parameters:
        - name: billingRelationId
          in: path
          description: The ID of the billing relation.
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: string
                title: string
                status: 0
                detail: string
                instance: string
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: string
                title: string
                status: 0
                detail: string
                instance: string
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/BooleanApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/BooleanApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data: true
            text/json:
              schema:
                $ref: '#/components/schemas/BooleanApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data: true
  /IncomingBankingTransactions:
    get:
      tags:
        - IncomingBankingTransactions
      summary: Retrieves all incoming banking transactions based on the provided query parameters and filters.
      description: Retrieves all incoming banking transactions based on the provided query parameters and filters.
      operationId: get-incomingbankingtransactions
      parameters:
        - name: CompanyBankAccountId
          in: query
          schema:
            type: string
        - name: MutationDateTimeStart
          in: query
          description: Format - date-time (as date-time in RFC3339).
          schema:
            type: string
            format: date-time
            nullable: true
        - name: MutationDateTimeEnd
          in: query
          description: Format - date-time (as date-time in RFC3339).
          schema:
            type: string
            format: date-time
            nullable: true
        - name: OpeningBalanceDateStart
          in: query
          description: Format - date-time (as date-time in RFC3339).
          schema:
            type: string
            format: date-time
            nullable: true
        - name: OpeningBalanceDateEnd
          in: query
          description: Format - date-time (as date-time in RFC3339).
          schema:
            type: string
            format: date-time
            nullable: true
        - name: FlexSearch
          in: query
          schema:
            type: string
        - name: IncludeOnlyIds
          in: query
          schema:
            type: array
            items:
              type: string
        - name: ExcludeIds
          in: query
          schema:
            type: array
            items:
              type: string
        - name: Name
          in: query
          schema:
            type: string
        - name: Id
          in: query
          description: Format - int32.
          schema:
            type: integer
            format: int32
        - name: orderBy
          in: query
          description: Order by clause for sorting incoming banking transactions.
          schema:
            type: string
        - name: continuationToken
          in: header
          description: Continuation token for pagination.
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/IncomingBankingTransactionDTOPagedResponseModelDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/IncomingBankingTransactionDTOPagedResponseModelDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  results:
                    - id: string
                      entityType: { }
                      createdDateTime: string
                      discriminator: string
                      _etag: string
                      requireAttention: true
                      hasErrors: true
                      hasWarnings: true
                      isReadOnly: true
                      organisationId: string
                      identification: string
                      sequenceNum: 0
                      status: { }
                      fileCreationDateTime: string
                      openingBalance: 0
                      closingBalance: 0
                      openingBalanceDate: string
                      closingBalanceDate: string
                      companyBankAccount:
                        id: string
                        iban: string
                        bic: string
                        accountHolder: string
                        sepaCreditorId: string
                      fileName: string
                      internalFilePath: string
                      entityCounts:
                        numberOfBankTransfers: 0
                        numberOfReversals: 0
                        numberOfConfirmations: 0
                        processedBankTransfers: 0
                        processedReversals: 0
                        processedConfirmations: 0
                        failedBankTransfers: 0
                        failedReversals: 0
                        failedConfirmations: 0
                      locked: true
                      errors:
                        - key: { }
                          correlationId: string
                          message: string
                          messageValues:
                            - dataType: { }
                              value: string
                              capitalize: true
                      automaticallyCreated: true
                      ibanConfirmations:
                        - customerId: string
                          iban: string
                  hasNextPage: true
                  nextPageToken: string
                  totalRecords: 0
                  sortableFields:
                    - string
                  aggregateDetails:
                    - code: string
                      translation: string
                      value: 0
                      valueDate: string
            text/json:
              schema:
                $ref: '#/components/schemas/IncomingBankingTransactionDTOPagedResponseModelDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  results:
                    - id: string
                      entityType: { }
                      createdDateTime: string
                      discriminator: string
                      _etag: string
                      requireAttention: true
                      hasErrors: true
                      hasWarnings: true
                      isReadOnly: true
                      organisationId: string
                      identification: string
                      sequenceNum: 0
                      status: { }
                      fileCreationDateTime: string
                      openingBalance: 0
                      closingBalance: 0
                      openingBalanceDate: string
                      closingBalanceDate: string
                      companyBankAccount:
                        id: string
                        iban: string
                        bic: string
                        accountHolder: string
                        sepaCreditorId: string
                      fileName: string
                      internalFilePath: string
                      entityCounts:
                        numberOfBankTransfers: 0
                        numberOfReversals: 0
                        numberOfConfirmations: 0
                        processedBankTransfers: 0
                        processedReversals: 0
                        processedConfirmations: 0
                        failedBankTransfers: 0
                        failedReversals: 0
                        failedConfirmations: 0
                      locked: true
                      errors:
                        - key: { }
                          correlationId: string
                          message: string
                          messageValues:
                            - dataType: { }
                              value: string
                              capitalize: true
                      automaticallyCreated: true
                      ibanConfirmations:
                        - customerId: string
                          iban: string
                  hasNextPage: true
                  nextPageToken: string
                  totalRecords: 0
                  sortableFields:
                    - string
                  aggregateDetails:
                    - code: string
                      translation: string
                      value: 0
                      valueDate: string
  /IncomingBankingTransactions/insights/lastupdated:
    get:
      tags:
        - IncomingBankingTransactions
      summary: 'Retrieves last updated insights about the incoming banking transactions, grouped by company bank account'
      description: 'Retrieves last updated insights about the incoming banking transactions, grouped by company bank account'
      operationId: get-incomingbankingtransactions-insights-lastupdated
      parameters:
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/IncomingBankingTransactionBankAccountsInsightDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/IncomingBankingTransactionBankAccountsInsightDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  companyBankAccounts:
                    - iban: string
                      lastFetchedDateTime: string
                      pluginRunStatus: { }
            text/json:
              schema:
                $ref: '#/components/schemas/IncomingBankingTransactionBankAccountsInsightDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  companyBankAccounts:
                    - iban: string
                      lastFetchedDateTime: string
                      pluginRunStatus: { }
  '/IncomingBankingTransactions/{incomingBankingTransactionId}/insights':
    get:
      tags:
        - IncomingBankingTransactions
      summary: Retrieves insights for a specific incoming banking transaction.
      description: Retrieves insights for a specific incoming banking transaction.
      operationId: get-incomingbankingtransactions-incomingbankingtransactionid-insights
      parameters:
        - name: incomingBankingTransactionId
          in: path
          description: ID of the incoming banking transaction.
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/IncomingBankingTransactionInsightsDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/IncomingBankingTransactionInsightsDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  incomingBankingTransactionId: string
                  identification: string
                  openingBalance: 0
                  closingBalance: 0
                  balanceDifference: 0
                  openingBalanceDate: string
                  closingBalanceDate: string
                  statusDetails: { }
                  mutationTypeDetails: { }
                  paymentMethodDetails: { }
            text/json:
              schema:
                $ref: '#/components/schemas/IncomingBankingTransactionInsightsDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  incomingBankingTransactionId: string
                  identification: string
                  openingBalance: 0
                  closingBalance: 0
                  balanceDifference: 0
                  openingBalanceDate: string
                  closingBalanceDate: string
                  statusDetails: { }
                  mutationTypeDetails: { }
                  paymentMethodDetails: { }
  '/IncomingBankingTransactions/{incomingBankingTransactionId}/mutations':
    get:
      tags:
        - IncomingBankingTransactions
      summary: Retrieves all incoming mutations for a specific incoming banking transaction.
      description: Retrieves all incoming mutations for a specific incoming banking transaction.
      operationId: get-incomingbankingtransactions-incomingbankingtransactionid-mutations
      parameters:
        - name: incomingBankingTransactionId
          in: path
          description: ID of the incoming banking transaction.
          required: true
          schema:
            type: string
        - name: Status
          in: query
          schema:
            type: string
        - name: IncomingMutationType
          in: query
          schema:
            type: string
        - name: IncomingBankingTransactionId
          in: query
          schema:
            type: string
        - name: TransactionDateStart
          in: query
          description: Format - date-time (as date-time in RFC3339).
          schema:
            type: string
            format: date-time
            nullable: true
        - name: TransactionDateEnd
          in: query
          description: Format - date-time (as date-time in RFC3339).
          schema:
            type: string
            format: date-time
            nullable: true
        - name: FlexSearch
          in: query
          schema:
            type: string
        - name: IncludeOnlyIds
          in: query
          schema:
            type: array
            items:
              type: string
        - name: ExcludeIds
          in: query
          schema:
            type: array
            items:
              type: string
        - name: Name
          in: query
          schema:
            type: string
        - name: Id
          in: query
          description: Format - int32.
          schema:
            type: integer
            format: int32
        - name: orderBy
          in: query
          description: Order by clause for sorting mutations.
          schema:
            type: string
        - name: continuationToken
          in: header
          description: Continuation token for pagination.
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/IncomingMutationDTOPagedResponseModelDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/IncomingMutationDTOPagedResponseModelDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  results:
                    - id: string
                      entityType: { }
                      createdDateTime: string
                      discriminator: string
                      _etag: string
                      requireAttention: true
                      hasErrors: true
                      hasWarnings: true
                      isReadOnly: true
                      organisationId: string
                      incomingBankingTransactionId: string
                      transactionDate: string
                      type: { }
                      status: { }
                      amount: 0
                      isManualMatch: true
                      details: { }
                      errors:
                        - key: { }
                          correlationId: string
                          message: string
                          messageValues:
                            - dataType: { }
                              value: string
                              capitalize: true
                  hasNextPage: true
                  nextPageToken: string
                  totalRecords: 0
                  sortableFields:
                    - string
                  aggregateDetails:
                    - code: string
                      translation: string
                      value: 0
                      valueDate: string
            text/json:
              schema:
                $ref: '#/components/schemas/IncomingMutationDTOPagedResponseModelDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  results:
                    - id: string
                      entityType: { }
                      createdDateTime: string
                      discriminator: string
                      _etag: string
                      requireAttention: true
                      hasErrors: true
                      hasWarnings: true
                      isReadOnly: true
                      organisationId: string
                      incomingBankingTransactionId: string
                      transactionDate: string
                      type: { }
                      status: { }
                      amount: 0
                      isManualMatch: true
                      details: { }
                      errors:
                        - key: { }
                          correlationId: string
                          message: string
                          messageValues:
                            - dataType: { }
                              value: string
                              capitalize: true
                  hasNextPage: true
                  nextPageToken: string
                  totalRecords: 0
                  sortableFields:
                    - string
                  aggregateDetails:
                    - code: string
                      translation: string
                      value: 0
                      valueDate: string
  '/IncomingBankingTransactions/{incomingBankingTransactionId}/mutations/overviewcount':
    get:
      tags:
        - IncomingBankingTransactions
      summary: Retrieves an overview count of incoming mutations for a specific incoming banking transaction.
      description: Retrieves an overview count of incoming mutations for a specific incoming banking transaction.
      operationId: get-incomingbankingtransactions-incomingbankingtransactionid-mutations-overv
      parameters:
        - name: incomingBankingTransactionId
          in: path
          description: ID of the incoming banking transaction.
          required: true
          schema:
            type: string
        - name: Status
          in: query
          schema:
            type: string
        - name: IncomingMutationType
          in: query
          schema:
            type: string
        - name: IncomingBankingTransactionId
          in: query
          schema:
            type: string
        - name: TransactionDateStart
          in: query
          description: Format - date-time (as date-time in RFC3339).
          schema:
            type: string
            format: date-time
            nullable: true
        - name: TransactionDateEnd
          in: query
          description: Format - date-time (as date-time in RFC3339).
          schema:
            type: string
            format: date-time
            nullable: true
        - name: FlexSearch
          in: query
          schema:
            type: string
        - name: IncludeOnlyIds
          in: query
          schema:
            type: array
            items:
              type: string
        - name: ExcludeIds
          in: query
          schema:
            type: array
            items:
              type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/IncomingMutationsOverviewCountDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/IncomingMutationsOverviewCountDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  all: 0
                  bankTransfers: 0
                  reversals: 0
                  bankConfirmations: 0
                  resolveIssues: 0
            text/json:
              schema:
                $ref: '#/components/schemas/IncomingMutationsOverviewCountDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  all: 0
                  bankTransfers: 0
                  reversals: 0
                  bankConfirmations: 0
                  resolveIssues: 0
  '/IncomingBankingTransactions/{incomingBankingTransactionId}/mutations/ignore':
    post:
      tags:
        - IncomingBankingTransactions
      summary: Ignores multiple incoming mutations for a specific incoming banking transaction.
      description: Ignores multiple incoming mutations for a specific incoming banking transaction.
      operationId: post-incomingbankingtransactions-incomingbankingtransactionid-mutations-igno
      parameters:
        - name: incomingBankingTransactionId
          in: path
          description: ID of the incoming banking transaction.
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: Request containing the IDs of the mutations to ignore.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/IgnoreIncomingMutationsRequest'
              description: "Represents a request to ignore specific incoming banking transactions.\r\nThis DTO is used when certain incoming transactions should be marked as ignored and not processed further."
            example:
              incomingMutationIds:
                - string
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/IgnoreIncomingMutationsRequest'
              description: "Represents a request to ignore specific incoming banking transactions.\r\nThis DTO is used when certain incoming transactions should be marked as ignored and not processed further."
            example:
              incomingMutationIds:
                - string
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/IgnoreIncomingMutationsRequest'
              description: "Represents a request to ignore specific incoming banking transactions.\r\nThis DTO is used when certain incoming transactions should be marked as ignored and not processed further."
            example:
              incomingMutationIds:
                - string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/IncomingMutationDTOPagedResponseModelDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/IncomingMutationDTOPagedResponseModelDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  results:
                    - id: string
                      entityType: { }
                      createdDateTime: string
                      discriminator: string
                      _etag: string
                      requireAttention: true
                      hasErrors: true
                      hasWarnings: true
                      isReadOnly: true
                      organisationId: string
                      incomingBankingTransactionId: string
                      transactionDate: string
                      type: { }
                      status: { }
                      amount: 0
                      isManualMatch: true
                      details: { }
                      errors:
                        - key: { }
                          correlationId: string
                          message: string
                          messageValues:
                            - dataType: { }
                              value: string
                              capitalize: true
                  hasNextPage: true
                  nextPageToken: string
                  totalRecords: 0
                  sortableFields:
                    - string
                  aggregateDetails:
                    - code: string
                      translation: string
                      value: 0
                      valueDate: string
            text/json:
              schema:
                $ref: '#/components/schemas/IncomingMutationDTOPagedResponseModelDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  results:
                    - id: string
                      entityType: { }
                      createdDateTime: string
                      discriminator: string
                      _etag: string
                      requireAttention: true
                      hasErrors: true
                      hasWarnings: true
                      isReadOnly: true
                      organisationId: string
                      incomingBankingTransactionId: string
                      transactionDate: string
                      type: { }
                      status: { }
                      amount: 0
                      isManualMatch: true
                      details: { }
                      errors:
                        - key: { }
                          correlationId: string
                          message: string
                          messageValues:
                            - dataType: { }
                              value: string
                              capitalize: true
                  hasNextPage: true
                  nextPageToken: string
                  totalRecords: 0
                  sortableFields:
                    - string
                  aggregateDetails:
                    - code: string
                      translation: string
                      value: 0
                      valueDate: string
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
  /IncomingBankingTransactions/overviewcount:
    get:
      tags:
        - IncomingBankingTransactions
      summary: Retrieves an overview count of all incoming banking transactions based on the provided query parameters.
      description: Retrieves an overview count of all incoming banking transactions based on the provided query parameters.
      operationId: get-incomingbankingtransactions-overviewcount
      parameters:
        - name: CompanyBankAccountId
          in: query
          schema:
            type: string
        - name: MutationDateTimeStart
          in: query
          description: Format - date-time (as date-time in RFC3339).
          schema:
            type: string
            format: date-time
            nullable: true
        - name: MutationDateTimeEnd
          in: query
          description: Format - date-time (as date-time in RFC3339).
          schema:
            type: string
            format: date-time
            nullable: true
        - name: OpeningBalanceDateStart
          in: query
          description: Format - date-time (as date-time in RFC3339).
          schema:
            type: string
            format: date-time
            nullable: true
        - name: OpeningBalanceDateEnd
          in: query
          description: Format - date-time (as date-time in RFC3339).
          schema:
            type: string
            format: date-time
            nullable: true
        - name: FlexSearch
          in: query
          schema:
            type: string
        - name: IncludeOnlyIds
          in: query
          schema:
            type: array
            items:
              type: string
        - name: ExcludeIds
          in: query
          schema:
            type: array
            items:
              type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/IncomingBankingTransactionOverviewCountDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/IncomingBankingTransactionOverviewCountDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  all: 0
                  ready: 0
                  resolveIssues: 0
                  closed: 0
                  attention: 0
            text/json:
              schema:
                $ref: '#/components/schemas/IncomingBankingTransactionOverviewCountDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  all: 0
                  ready: 0
                  resolveIssues: 0
                  closed: 0
                  attention: 0
  '/IncomingBankingTransactions/{incomingBankingTransactionId}':
    get:
      tags:
        - IncomingBankingTransactions
      summary: Retrieves a specific incoming banking transaction by its ID.
      description: Retrieves a specific incoming banking transaction by its ID.
      operationId: get-incomingbankingtransactions-incomingbankingtransactionid
      parameters:
        - name: incomingBankingTransactionId
          in: path
          description: ID of the incoming banking transaction.
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/IncomingBankingTransactionDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/IncomingBankingTransactionDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  identification: string
                  sequenceNum: 0
                  status: { }
                  fileCreationDateTime: string
                  openingBalance: 0
                  closingBalance: 0
                  openingBalanceDate: string
                  closingBalanceDate: string
                  companyBankAccount:
                    id: string
                    iban: string
                    bic: string
                    accountHolder: string
                    sepaCreditorId: string
                  fileName: string
                  internalFilePath: string
                  entityCounts:
                    numberOfBankTransfers: 0
                    numberOfReversals: 0
                    numberOfConfirmations: 0
                    processedBankTransfers: 0
                    processedReversals: 0
                    processedConfirmations: 0
                    failedBankTransfers: 0
                    failedReversals: 0
                    failedConfirmations: 0
                  locked: true
                  errors:
                    - key: { }
                      correlationId: string
                      message: string
                      messageValues:
                        - dataType: { }
                          value: string
                          capitalize: true
                  automaticallyCreated: true
                  ibanConfirmations:
                    - customerId: string
                      iban: string
            text/json:
              schema:
                $ref: '#/components/schemas/IncomingBankingTransactionDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  identification: string
                  sequenceNum: 0
                  status: { }
                  fileCreationDateTime: string
                  openingBalance: 0
                  closingBalance: 0
                  openingBalanceDate: string
                  closingBalanceDate: string
                  companyBankAccount:
                    id: string
                    iban: string
                    bic: string
                    accountHolder: string
                    sepaCreditorId: string
                  fileName: string
                  internalFilePath: string
                  entityCounts:
                    numberOfBankTransfers: 0
                    numberOfReversals: 0
                    numberOfConfirmations: 0
                    processedBankTransfers: 0
                    processedReversals: 0
                    processedConfirmations: 0
                    failedBankTransfers: 0
                    failedReversals: 0
                    failedConfirmations: 0
                  locked: true
                  errors:
                    - key: { }
                      correlationId: string
                      message: string
                      messageValues:
                        - dataType: { }
                          value: string
                          capitalize: true
                  automaticallyCreated: true
                  ibanConfirmations:
                    - customerId: string
                      iban: string
    delete:
      tags:
        - IncomingBankingTransactions
      summary: Deletes a specific incoming banking transaction by its ID.
      description: Deletes a specific incoming banking transaction by its ID.
      operationId: delete-incomingbankingtransactions-incomingbankingtransactionid
      parameters:
        - name: incomingBankingTransactionId
          in: path
          description: ID of the incoming banking transaction.
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/BooleanApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/BooleanApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data: true
            text/json:
              schema:
                $ref: '#/components/schemas/BooleanApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data: true
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
  '/IncomingBankingTransactions/{incomingBankingTransactionId}/process':
    post:
      tags:
        - IncomingBankingTransactions
      summary: Processes a specific incoming banking transaction by its ID.
      description: Processes a specific incoming banking transaction by its ID.
      operationId: post-incomingbankingtransactions-incomingbankingtransactionid-process
      parameters:
        - name: incomingBankingTransactionId
          in: path
          description: ID of the incoming banking transaction.
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/IncomingBankingTransactionDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/IncomingBankingTransactionDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  identification: string
                  sequenceNum: 0
                  status: { }
                  fileCreationDateTime: string
                  openingBalance: 0
                  closingBalance: 0
                  openingBalanceDate: string
                  closingBalanceDate: string
                  companyBankAccount:
                    id: string
                    iban: string
                    bic: string
                    accountHolder: string
                    sepaCreditorId: string
                  fileName: string
                  internalFilePath: string
                  entityCounts:
                    numberOfBankTransfers: 0
                    numberOfReversals: 0
                    numberOfConfirmations: 0
                    processedBankTransfers: 0
                    processedReversals: 0
                    processedConfirmations: 0
                    failedBankTransfers: 0
                    failedReversals: 0
                    failedConfirmations: 0
                  locked: true
                  errors:
                    - key: { }
                      correlationId: string
                      message: string
                      messageValues:
                        - dataType: { }
                          value: string
                          capitalize: true
                  automaticallyCreated: true
                  ibanConfirmations:
                    - customerId: string
                      iban: string
            text/json:
              schema:
                $ref: '#/components/schemas/IncomingBankingTransactionDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  identification: string
                  sequenceNum: 0
                  status: { }
                  fileCreationDateTime: string
                  openingBalance: 0
                  closingBalance: 0
                  openingBalanceDate: string
                  closingBalanceDate: string
                  companyBankAccount:
                    id: string
                    iban: string
                    bic: string
                    accountHolder: string
                    sepaCreditorId: string
                  fileName: string
                  internalFilePath: string
                  entityCounts:
                    numberOfBankTransfers: 0
                    numberOfReversals: 0
                    numberOfConfirmations: 0
                    processedBankTransfers: 0
                    processedReversals: 0
                    processedConfirmations: 0
                    failedBankTransfers: 0
                    failedReversals: 0
                    failedConfirmations: 0
                  locked: true
                  errors:
                    - key: { }
                      correlationId: string
                      message: string
                      messageValues:
                        - dataType: { }
                          value: string
                          capitalize: true
                  automaticallyCreated: true
                  ibanConfirmations:
                    - customerId: string
                      iban: string
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
  /IncomingBankingTransactions/export:
    post:
      tags:
        - IncomingBankingTransactions
      summary: Exports incoming banking transactions based on the provided request.
      description: Exports incoming banking transactions based on the provided request.
      operationId: post-incomingbankingtransactions-export
      parameters:
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: Request containing the IDs of the transactions to export.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/GetIncomingBankingTransactionExportRequest'
              description: "Represents a request to export data for specific incoming banking transactions.\r\nThis DTO is used to retrieve transaction data in a format suitable for export."
            example:
              incomingBankingTransactionIds:
                - string
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/GetIncomingBankingTransactionExportRequest'
              description: "Represents a request to export data for specific incoming banking transactions.\r\nThis DTO is used to retrieve transaction data in a format suitable for export."
            example:
              incomingBankingTransactionIds:
                - string
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/GetIncomingBankingTransactionExportRequest'
              description: "Represents a request to export data for specific incoming banking transactions.\r\nThis DTO is used to retrieve transaction data in a format suitable for export."
            example:
              incomingBankingTransactionIds:
                - string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/IncomingBankingTransactionsExportDTOListApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/IncomingBankingTransactionsExportDTOListApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  - transactionIdentification: string
                    openingBalanceDate: string
                    closingBalanceDate: string
                    transactionStatus: { }
                    companyBankAccountHolder: string
                    companyBankAccountIban: string
                    mutationType: { }
                    mutationDate: string
                    mutationAmount: 0
                    mutationStatus: { }
                    mutationReference: string
                    accountHolder: string
                    accountIban: string
                    customerAccountNumber: string
                    customerName: string
                    outgoingBankingIdentification: string
                    matchingOutgoingBankingMutationIdentification: string
                    matchingOutgoingMutationDescription: string
                    isManualMatch: true
            text/json:
              schema:
                $ref: '#/components/schemas/IncomingBankingTransactionsExportDTOListApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  - transactionIdentification: string
                    openingBalanceDate: string
                    closingBalanceDate: string
                    transactionStatus: { }
                    companyBankAccountHolder: string
                    companyBankAccountIban: string
                    mutationType: { }
                    mutationDate: string
                    mutationAmount: 0
                    mutationStatus: { }
                    mutationReference: string
                    accountHolder: string
                    accountIban: string
                    customerAccountNumber: string
                    customerName: string
                    outgoingBankingIdentification: string
                    matchingOutgoingBankingMutationIdentification: string
                    matchingOutgoingMutationDescription: string
                    isManualMatch: true
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
  '/IncomingBankingTransactions/{incomingBankingTransactionId}/updateIbanConfirmation':
    post:
      tags:
        - IncomingBankingTransactions
      summary: Updates the IBAN confirmation of an Iban used in a specific incoming banking transaction.
      description: Updates the IBAN confirmation of an Iban used in a specific incoming banking transaction.
      operationId: post-incomingbankingtransactions-incomingbankingtransactionid-updateibanconf
      parameters:
        - name: incomingBankingTransactionId
          in: path
          description: ID of the incoming banking transaction.
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: Request containing the IBAN confirmation details.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/UpdateIncomingBankingTransactionIbanRequest'
              description: "Represents a request to update the IBAN associated with an incoming banking transaction.\r\nThis DTO is used to correct or update the bank account information for a transaction."
            example:
              customerId: string
              iban: string
              confirm: true
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/UpdateIncomingBankingTransactionIbanRequest'
              description: "Represents a request to update the IBAN associated with an incoming banking transaction.\r\nThis DTO is used to correct or update the bank account information for a transaction."
            example:
              customerId: string
              iban: string
              confirm: true
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/UpdateIncomingBankingTransactionIbanRequest'
              description: "Represents a request to update the IBAN associated with an incoming banking transaction.\r\nThis DTO is used to correct or update the bank account information for a transaction."
            example:
              customerId: string
              iban: string
              confirm: true
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/IncomingBankingTransactionDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/IncomingBankingTransactionDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  identification: string
                  sequenceNum: 0
                  status: { }
                  fileCreationDateTime: string
                  openingBalance: 0
                  closingBalance: 0
                  openingBalanceDate: string
                  closingBalanceDate: string
                  companyBankAccount:
                    id: string
                    iban: string
                    bic: string
                    accountHolder: string
                    sepaCreditorId: string
                  fileName: string
                  internalFilePath: string
                  entityCounts:
                    numberOfBankTransfers: 0
                    numberOfReversals: 0
                    numberOfConfirmations: 0
                    processedBankTransfers: 0
                    processedReversals: 0
                    processedConfirmations: 0
                    failedBankTransfers: 0
                    failedReversals: 0
                    failedConfirmations: 0
                  locked: true
                  errors:
                    - key: { }
                      correlationId: string
                      message: string
                      messageValues:
                        - dataType: { }
                          value: string
                          capitalize: true
                  automaticallyCreated: true
                  ibanConfirmations:
                    - customerId: string
                      iban: string
            text/json:
              schema:
                $ref: '#/components/schemas/IncomingBankingTransactionDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  identification: string
                  sequenceNum: 0
                  status: { }
                  fileCreationDateTime: string
                  openingBalance: 0
                  closingBalance: 0
                  openingBalanceDate: string
                  closingBalanceDate: string
                  companyBankAccount:
                    id: string
                    iban: string
                    bic: string
                    accountHolder: string
                    sepaCreditorId: string
                  fileName: string
                  internalFilePath: string
                  entityCounts:
                    numberOfBankTransfers: 0
                    numberOfReversals: 0
                    numberOfConfirmations: 0
                    processedBankTransfers: 0
                    processedReversals: 0
                    processedConfirmations: 0
                    failedBankTransfers: 0
                    failedReversals: 0
                    failedConfirmations: 0
                  locked: true
                  errors:
                    - key: { }
                      correlationId: string
                      message: string
                      messageValues:
                        - dataType: { }
                          value: string
                          capitalize: true
                  automaticallyCreated: true
                  ibanConfirmations:
                    - customerId: string
                      iban: string
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
  /IncomingBankingTransactions/bulk/delete:
    post:
      tags:
        - IncomingBankingTransactions
      summary: Bulk deletes incoming banking transactions based on the provided request.
      description: Bulk deletes incoming banking transactions based on the provided request.
      operationId: post-incomingbankingtransactions-bulk-delete
      parameters:
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: Request containing the details for bulk deletion.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BulkDeleteIncomingBankingTransactionRequest'
              description: "Represents a bulk request to delete multiple incoming banking transactions.\r\nThis DTO allows for batch deletion of transactions based on query parameters and filters."
            example:
              onlyValidate: true
              queryParams:
                flexSearch: string
                includeOnlyIds:
                  - string
                excludeIds:
                  - string
                companyBankAccountId: string
                mutationDateTimeStart: string
                mutationDateTimeEnd: string
                openingBalanceDateStart: string
                openingBalanceDateEnd: string
              quickFilter: string
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BulkDeleteIncomingBankingTransactionRequest'
              description: "Represents a bulk request to delete multiple incoming banking transactions.\r\nThis DTO allows for batch deletion of transactions based on query parameters and filters."
            example:
              onlyValidate: true
              queryParams:
                flexSearch: string
                includeOnlyIds:
                  - string
                excludeIds:
                  - string
                companyBankAccountId: string
                mutationDateTimeStart: string
                mutationDateTimeEnd: string
                openingBalanceDateStart: string
                openingBalanceDateEnd: string
              quickFilter: string
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BulkDeleteIncomingBankingTransactionRequest'
              description: "Represents a bulk request to delete multiple incoming banking transactions.\r\nThis DTO allows for batch deletion of transactions based on query parameters and filters."
            example:
              onlyValidate: true
              queryParams:
                flexSearch: string
                includeOnlyIds:
                  - string
                excludeIds:
                  - string
                companyBankAccountId: string
                mutationDateTimeStart: string
                mutationDateTimeEnd: string
                openingBalanceDateStart: string
                openingBalanceDateEnd: string
              quickFilter: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
  /IncomingBankingTransactions/bulk/process:
    post:
      tags:
        - IncomingBankingTransactions
      summary: Bulk processes incoming banking transactions based on the provided request.
      description: Bulk processes incoming banking transactions based on the provided request.
      operationId: post-incomingbankingtransactions-bulk-process
      parameters:
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: Request containing the details for bulk processing.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BulkProcessIncomingBankingTransactionRequest'
              description: "Represents a bulk request to process multiple incoming banking transactions.\r\nThis DTO allows for batch processing of transactions based on query parameters and filters."
            example:
              onlyValidate: true
              queryParams:
                flexSearch: string
                includeOnlyIds:
                  - string
                excludeIds:
                  - string
                companyBankAccountId: string
                mutationDateTimeStart: string
                mutationDateTimeEnd: string
                openingBalanceDateStart: string
                openingBalanceDateEnd: string
              quickFilter: string
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BulkProcessIncomingBankingTransactionRequest'
              description: "Represents a bulk request to process multiple incoming banking transactions.\r\nThis DTO allows for batch processing of transactions based on query parameters and filters."
            example:
              onlyValidate: true
              queryParams:
                flexSearch: string
                includeOnlyIds:
                  - string
                excludeIds:
                  - string
                companyBankAccountId: string
                mutationDateTimeStart: string
                mutationDateTimeEnd: string
                openingBalanceDateStart: string
                openingBalanceDateEnd: string
              quickFilter: string
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BulkProcessIncomingBankingTransactionRequest'
              description: "Represents a bulk request to process multiple incoming banking transactions.\r\nThis DTO allows for batch processing of transactions based on query parameters and filters."
            example:
              onlyValidate: true
              queryParams:
                flexSearch: string
                includeOnlyIds:
                  - string
                excludeIds:
                  - string
                companyBankAccountId: string
                mutationDateTimeStart: string
                mutationDateTimeEnd: string
                openingBalanceDateStart: string
                openingBalanceDateEnd: string
              quickFilter: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
  /IncomingInvoices:
    get:
      tags:
        - IncomingInvoices
      summary: Retrieves all incoming invoices based on the provided query parameters.
      description: Retrieves all incoming invoices based on the provided query parameters.
      operationId: get-incominginvoices
      parameters:
        - name: propertyGroupId
          in: query
          description: ID of the property group to filter invoices.
          schema:
            type: string
        - name: orderBy
          in: query
          description: Order by clause for sorting invoices.
          schema:
            type: string
        - name: continuationToken
          in: header
          description: Continuation token for pagination.
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/IncomingInvoiceDTOPagedResponseModelDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/IncomingInvoiceDTOPagedResponseModelDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  results:
                    - id: string
                      entityType: { }
                      createdDateTime: string
                      discriminator: string
                      _etag: string
                      requireAttention: true
                      hasErrors: true
                      hasWarnings: true
                      isReadOnly: true
                      organisationId: string
                      propertyGroupId: string
                      invoiceNumber: string
                      invoiceDate: string
                      description: string
                      startDate: string
                      endDate: string
                      totalAmountExclVat: 0
                      totalAmountInclVat: 0
                  hasNextPage: true
                  nextPageToken: string
                  totalRecords: 0
                  sortableFields:
                    - string
                  aggregateDetails:
                    - code: string
                      translation: string
                      value: 0
                      valueDate: string
            text/json:
              schema:
                $ref: '#/components/schemas/IncomingInvoiceDTOPagedResponseModelDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  results:
                    - id: string
                      entityType: { }
                      createdDateTime: string
                      discriminator: string
                      _etag: string
                      requireAttention: true
                      hasErrors: true
                      hasWarnings: true
                      isReadOnly: true
                      organisationId: string
                      propertyGroupId: string
                      invoiceNumber: string
                      invoiceDate: string
                      description: string
                      startDate: string
                      endDate: string
                      totalAmountExclVat: 0
                      totalAmountInclVat: 0
                  hasNextPage: true
                  nextPageToken: string
                  totalRecords: 0
                  sortableFields:
                    - string
                  aggregateDetails:
                    - code: string
                      translation: string
                      value: 0
                      valueDate: string
    post:
      tags:
        - IncomingInvoices
      summary: Creates a new incoming invoice.
      description: Creates a new incoming invoice.
      operationId: post-incominginvoices
      parameters:
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: Request containing the details of the incoming invoice to create.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/CreateIncomingInvoiceRequest'
              description: "Represents a request to create a new incoming invoice.\r\nThis DTO is used to register invoices received from suppliers or service providers."
            example:
              propertyGroupId: string
              invoiceNumber: string
              invoiceDate: string
              description: string
              startDate: string
              endDate: string
              totalAmountExclVat: 0
              totalAmountInclVat: 0
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/CreateIncomingInvoiceRequest'
              description: "Represents a request to create a new incoming invoice.\r\nThis DTO is used to register invoices received from suppliers or service providers."
            example:
              propertyGroupId: string
              invoiceNumber: string
              invoiceDate: string
              description: string
              startDate: string
              endDate: string
              totalAmountExclVat: 0
              totalAmountInclVat: 0
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/CreateIncomingInvoiceRequest'
              description: "Represents a request to create a new incoming invoice.\r\nThis DTO is used to register invoices received from suppliers or service providers."
            example:
              propertyGroupId: string
              invoiceNumber: string
              invoiceDate: string
              description: string
              startDate: string
              endDate: string
              totalAmountExclVat: 0
              totalAmountInclVat: 0
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/IncomingInvoiceDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/IncomingInvoiceDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  propertyGroupId: string
                  invoiceNumber: string
                  invoiceDate: string
                  description: string
                  startDate: string
                  endDate: string
                  totalAmountExclVat: 0
                  totalAmountInclVat: 0
            text/json:
              schema:
                $ref: '#/components/schemas/IncomingInvoiceDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  propertyGroupId: string
                  invoiceNumber: string
                  invoiceDate: string
                  description: string
                  startDate: string
                  endDate: string
                  totalAmountExclVat: 0
                  totalAmountInclVat: 0
  '/IncomingInvoices/{incominginvoiceid}':
    get:
      tags:
        - IncomingInvoices
      summary: Retrieves a specific incoming invoice by its ID.
      description: Retrieves a specific incoming invoice by its ID.
      operationId: get-incominginvoices-incominginvoiceid
      parameters:
        - name: incominginvoiceid
          in: path
          description: ID of the incoming invoice.
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/IncomingInvoiceDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/IncomingInvoiceDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  propertyGroupId: string
                  invoiceNumber: string
                  invoiceDate: string
                  description: string
                  startDate: string
                  endDate: string
                  totalAmountExclVat: 0
                  totalAmountInclVat: 0
            text/json:
              schema:
                $ref: '#/components/schemas/IncomingInvoiceDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  propertyGroupId: string
                  invoiceNumber: string
                  invoiceDate: string
                  description: string
                  startDate: string
                  endDate: string
                  totalAmountExclVat: 0
                  totalAmountInclVat: 0
    post:
      tags:
        - IncomingInvoices
      summary: Updates a specific incoming invoice by its ID.
      description: Updates a specific incoming invoice by its ID.
      operationId: post-incominginvoices-incominginvoiceid
      parameters:
        - name: incominginvoiceid
          in: path
          description: ID of the incoming invoice.
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: Request containing the updated details of the incoming invoice.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/UpdateIncomingInvoiceRequest'
              description: "Represents a request to update an existing incoming invoice.\r\nThis DTO is used to modify the details of a previously registered invoice."
            example:
              invoiceDate: string
              description: string
              startDate: string
              endDate: string
              totalAmountExclVat: 0
              totalAmountInclVat: 0
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/UpdateIncomingInvoiceRequest'
              description: "Represents a request to update an existing incoming invoice.\r\nThis DTO is used to modify the details of a previously registered invoice."
            example:
              invoiceDate: string
              description: string
              startDate: string
              endDate: string
              totalAmountExclVat: 0
              totalAmountInclVat: 0
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/UpdateIncomingInvoiceRequest'
              description: "Represents a request to update an existing incoming invoice.\r\nThis DTO is used to modify the details of a previously registered invoice."
            example:
              invoiceDate: string
              description: string
              startDate: string
              endDate: string
              totalAmountExclVat: 0
              totalAmountInclVat: 0
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/IncomingInvoiceDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/IncomingInvoiceDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  propertyGroupId: string
                  invoiceNumber: string
                  invoiceDate: string
                  description: string
                  startDate: string
                  endDate: string
                  totalAmountExclVat: 0
                  totalAmountInclVat: 0
            text/json:
              schema:
                $ref: '#/components/schemas/IncomingInvoiceDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  propertyGroupId: string
                  invoiceNumber: string
                  invoiceDate: string
                  description: string
                  startDate: string
                  endDate: string
                  totalAmountExclVat: 0
                  totalAmountInclVat: 0
    delete:
      tags:
        - IncomingInvoices
      summary: Deletes a specific incoming invoice by its ID.
      description: Deletes a specific incoming invoice by its ID.
      operationId: delete-incominginvoices-incominginvoiceid
      parameters:
        - name: incominginvoiceid
          in: path
          description: ID of the incoming invoice.
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '204':
          description: No Content
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/BooleanApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/BooleanApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data: true
            text/json:
              schema:
                $ref: '#/components/schemas/BooleanApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data: true
  '/IncomingMutations/{incomingMutationId}':
    get:
      tags:
        - IncomingMutations
      summary: Retrieves a specific incoming mutation by its ID.
      description: Retrieves a specific incoming mutation by its ID.
      operationId: get-incomingmutations-incomingmutationid
      parameters:
        - name: incomingMutationId
          in: path
          description: ID of the incoming mutation.
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/IncomingMutationDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/IncomingMutationDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  incomingBankingTransactionId: string
                  transactionDate: string
                  type: { }
                  status: { }
                  amount: 0
                  isManualMatch: true
                  details: { }
                  errors:
                    - key: { }
                      correlationId: string
                      message: string
                      messageValues:
                        - dataType: { }
                          value: string
                          capitalize: true
            text/json:
              schema:
                $ref: '#/components/schemas/IncomingMutationDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  incomingBankingTransactionId: string
                  transactionDate: string
                  type: { }
                  status: { }
                  amount: 0
                  isManualMatch: true
                  details: { }
                  errors:
                    - key: { }
                      correlationId: string
                      message: string
                      messageValues:
                        - dataType: { }
                          value: string
                          capitalize: true
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
  '/IncomingMutations/{incomingMutationId}/ibanstatus/calculate':
    get:
      tags:
        - IncomingMutations
      summary: Calculates the IBAN confirmation status for a customer based on a specific incoming mutation.
      description: Calculates the IBAN confirmation status for a customer based on a specific incoming mutation.
      operationId: get-incomingmutations-incomingmutationid-ibanstatus-calculate
      parameters:
        - name: incomingMutationId
          in: path
          description: ID of the incoming mutation.
          required: true
          schema:
            type: string
        - name: customerId
          in: query
          description: ID of the customer.
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/IncomingMutationIbanConfirmationStatusDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/IncomingMutationIbanConfirmationStatusDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  customerId: string
                  ibanConfirmationStatus: { }
                  isIbanConfirmedOnTransaction: true
            text/json:
              schema:
                $ref: '#/components/schemas/IncomingMutationIbanConfirmationStatusDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  customerId: string
                  ibanConfirmationStatus: { }
                  isIbanConfirmedOnTransaction: true
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
  '/IncomingMutations/{incomingMutationId}/ignore':
    delete:
      tags:
        - IncomingMutations
      summary: Ignores a specific incoming mutation.
      description: Ignores a specific incoming mutation.
      operationId: delete-incomingmutations-incomingmutationid-ignore
      parameters:
        - name: incomingMutationId
          in: path
          description: ID of the incoming mutation.
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/IncomingMutationDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/IncomingMutationDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  incomingBankingTransactionId: string
                  transactionDate: string
                  type: { }
                  status: { }
                  amount: 0
                  isManualMatch: true
                  details: { }
                  errors:
                    - key: { }
                      correlationId: string
                      message: string
                      messageValues:
                        - dataType: { }
                          value: string
                          capitalize: true
            text/json:
              schema:
                $ref: '#/components/schemas/IncomingMutationDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  incomingBankingTransactionId: string
                  transactionDate: string
                  type: { }
                  status: { }
                  amount: 0
                  isManualMatch: true
                  details: { }
                  errors:
                    - key: { }
                      correlationId: string
                      message: string
                      messageValues:
                        - dataType: { }
                          value: string
                          capitalize: true
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
  '/IncomingMutations/{incomingMutationId}/manualmatch':
    post:
      tags:
        - IncomingMutations
      summary: Manually matches a specific incoming mutation.
      description: Manually matches a specific incoming mutation.
      operationId: post-incomingmutations-incomingmutationid-manualmatch
      parameters:
        - name: incomingMutationId
          in: path
          description: ID of the incoming mutation.
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: Request containing the details for manual matching.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ManualMatchIncomingMutationRequest'
              description: "Represents a request to manually match an incoming banking transaction with outgoing transactions or a customer.\r\nThis DTO allows for flexible matching scenarios including direct transaction matching, customer-based matching,\r\nor matching with specific outgoing transactions."
            example:
              outgoingBankingTransactionId: string
              outgoingMutationId: string
              customerId: string
              matchingTransactions:
                - matchingTransactionId: string
                  amountToSettle: 0
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ManualMatchIncomingMutationRequest'
              description: "Represents a request to manually match an incoming banking transaction with outgoing transactions or a customer.\r\nThis DTO allows for flexible matching scenarios including direct transaction matching, customer-based matching,\r\nor matching with specific outgoing transactions."
            example:
              outgoingBankingTransactionId: string
              outgoingMutationId: string
              customerId: string
              matchingTransactions:
                - matchingTransactionId: string
                  amountToSettle: 0
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ManualMatchIncomingMutationRequest'
              description: "Represents a request to manually match an incoming banking transaction with outgoing transactions or a customer.\r\nThis DTO allows for flexible matching scenarios including direct transaction matching, customer-based matching,\r\nor matching with specific outgoing transactions."
            example:
              outgoingBankingTransactionId: string
              outgoingMutationId: string
              customerId: string
              matchingTransactions:
                - matchingTransactionId: string
                  amountToSettle: 0
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/IncomingMutationDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/IncomingMutationDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  incomingBankingTransactionId: string
                  transactionDate: string
                  type: { }
                  status: { }
                  amount: 0
                  isManualMatch: true
                  details: { }
                  errors:
                    - key: { }
                      correlationId: string
                      message: string
                      messageValues:
                        - dataType: { }
                          value: string
                          capitalize: true
            text/json:
              schema:
                $ref: '#/components/schemas/IncomingMutationDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  incomingBankingTransactionId: string
                  transactionDate: string
                  type: { }
                  status: { }
                  amount: 0
                  isManualMatch: true
                  details: { }
                  errors:
                    - key: { }
                      correlationId: string
                      message: string
                      messageValues:
                        - dataType: { }
                          value: string
                          capitalize: true
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
  '/IncomingMutations/{incomingMutationId}/reset':
    post:
      tags:
        - IncomingMutations
      summary: Resets the matching status of a specific incoming mutation.
      description: Resets the matching status of a specific incoming mutation.
      operationId: post-incomingmutations-incomingmutationid-reset
      parameters:
        - name: incomingMutationId
          in: path
          description: ID of the incoming mutation.
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/IncomingMutationDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/IncomingMutationDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  incomingBankingTransactionId: string
                  transactionDate: string
                  type: { }
                  status: { }
                  amount: 0
                  isManualMatch: true
                  details: { }
                  errors:
                    - key: { }
                      correlationId: string
                      message: string
                      messageValues:
                        - dataType: { }
                          value: string
                          capitalize: true
            text/json:
              schema:
                $ref: '#/components/schemas/IncomingMutationDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  incomingBankingTransactionId: string
                  transactionDate: string
                  type: { }
                  status: { }
                  amount: 0
                  isManualMatch: true
                  details: { }
                  errors:
                    - key: { }
                      correlationId: string
                      message: string
                      messageValues:
                        - dataType: { }
                          value: string
                          capitalize: true
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
  /IncomingMutations/bulk/reset:
    post:
      tags:
        - IncomingMutations
      summary: Bulk resets the matching status of incoming mutations based on the provided request.
      description: Bulk resets the matching status of incoming mutations based on the provided request.
      operationId: post-incomingmutations-bulk-reset
      parameters:
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: Request containing the details for bulk reset.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BulkResetIncomingMutationsRequest'
              description: "Represents a bulk request to reset multiple incoming mutations to their initial state.\r\nThis DTO allows for batch resetting of mutations based on query parameters and filters."
            example:
              onlyValidate: true
              queryParams:
                flexSearch: string
                includeOnlyIds:
                  - string
                excludeIds:
                  - string
                status: string
                incomingMutationType: string
                incomingBankingTransactionId: string
                transactionDateStart: string
                transactionDateEnd: string
              quickFilter: string
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BulkResetIncomingMutationsRequest'
              description: "Represents a bulk request to reset multiple incoming mutations to their initial state.\r\nThis DTO allows for batch resetting of mutations based on query parameters and filters."
            example:
              onlyValidate: true
              queryParams:
                flexSearch: string
                includeOnlyIds:
                  - string
                excludeIds:
                  - string
                status: string
                incomingMutationType: string
                incomingBankingTransactionId: string
                transactionDateStart: string
                transactionDateEnd: string
              quickFilter: string
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BulkResetIncomingMutationsRequest'
              description: "Represents a bulk request to reset multiple incoming mutations to their initial state.\r\nThis DTO allows for batch resetting of mutations based on query parameters and filters."
            example:
              onlyValidate: true
              queryParams:
                flexSearch: string
                includeOnlyIds:
                  - string
                excludeIds:
                  - string
                status: string
                incomingMutationType: string
                incomingBankingTransactionId: string
                transactionDateStart: string
                transactionDateEnd: string
              quickFilter: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
  /IncomingMutations/bulk/ignore:
    post:
      tags:
        - IncomingMutations
      summary: Bulk ignores incoming mutations based on the provided request.
      description: Bulk ignores incoming mutations based on the provided request.
      operationId: post-incomingmutations-bulk-ignore
      parameters:
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: Request containing the details for bulk ignore.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BulkIgnoreIncomingMutationsRequest'
              description: "Represents a bulk request to ignore multiple incoming mutations.\r\nThis DTO allows for batch marking of mutations as ignored based on query parameters and filters."
            example:
              onlyValidate: true
              queryParams:
                flexSearch: string
                includeOnlyIds:
                  - string
                excludeIds:
                  - string
                status: string
                incomingMutationType: string
                incomingBankingTransactionId: string
                transactionDateStart: string
                transactionDateEnd: string
              quickFilter: string
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BulkIgnoreIncomingMutationsRequest'
              description: "Represents a bulk request to ignore multiple incoming mutations.\r\nThis DTO allows for batch marking of mutations as ignored based on query parameters and filters."
            example:
              onlyValidate: true
              queryParams:
                flexSearch: string
                includeOnlyIds:
                  - string
                excludeIds:
                  - string
                status: string
                incomingMutationType: string
                incomingBankingTransactionId: string
                transactionDateStart: string
                transactionDateEnd: string
              quickFilter: string
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BulkIgnoreIncomingMutationsRequest'
              description: "Represents a bulk request to ignore multiple incoming mutations.\r\nThis DTO allows for batch marking of mutations as ignored based on query parameters and filters."
            example:
              onlyValidate: true
              queryParams:
                flexSearch: string
                includeOnlyIds:
                  - string
                excludeIds:
                  - string
                status: string
                incomingMutationType: string
                incomingBankingTransactionId: string
                transactionDateStart: string
                transactionDateEnd: string
              quickFilter: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
  /Integration/import/incomingbankingtransaction/enabledFormats:
    get:
      tags:
        - Integration
      summary: Retrieves all supported formats for importing incoming banking transactions.
      description: Retrieves all supported formats for importing incoming banking transactions.
      operationId: get-integration-import-incomingbankingtransaction-enabledformats
      parameters:
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/IncomingBankingTransactionFormatTypeListApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/IncomingBankingTransactionFormatTypeListApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  - camt053_001_02
            text/json:
              schema:
                $ref: '#/components/schemas/IncomingBankingTransactionFormatTypeListApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  - camt053_001_02
  /Integration/import/incomingbankingtransaction:
    post:
      tags:
        - Integration
      summary: Imports incoming banking transactions from the provided files.
      description: Imports incoming banking transactions from the provided files.
      operationId: post-integration-import-incomingbankingtransaction
      parameters:
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                files:
                  type: array
                  items:
                    type: string
                    format: binary
                ContentType:
                  type: string
                ContentDisposition:
                  type: string
                Headers:
                  type: object
                Length:
                  type: integer
                  format: int64
                Name:
                  type: string
                FileName:
                  type: string
                formatType:
                  type: string
                automaticallyCreated:
                  type: boolean
          application/x-www-form-urlencoded:
            schema:
              properties:
                files:
                  type: array
                  items:
                    type: string
                    format: binary
                ContentType:
                  type: string
                ContentDisposition:
                  type: string
                Headers:
                  type: object
                Length:
                  type: integer
                  format: int64
                Name:
                  type: string
                FileName:
                  type: string
                formatType:
                  type: string
                automaticallyCreated:
                  type: boolean
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/IncomingBankingTransactionDTOListApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/IncomingBankingTransactionDTOListApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  - id: string
                    entityType: { }
                    createdDateTime: string
                    discriminator: string
                    _etag: string
                    requireAttention: true
                    hasErrors: true
                    hasWarnings: true
                    isReadOnly: true
                    organisationId: string
                    identification: string
                    sequenceNum: 0
                    status: { }
                    fileCreationDateTime: string
                    openingBalance: 0
                    closingBalance: 0
                    openingBalanceDate: string
                    closingBalanceDate: string
                    companyBankAccount:
                      id: string
                      iban: string
                      bic: string
                      accountHolder: string
                      sepaCreditorId: string
                    fileName: string
                    internalFilePath: string
                    entityCounts:
                      numberOfBankTransfers: 0
                      numberOfReversals: 0
                      numberOfConfirmations: 0
                      processedBankTransfers: 0
                      processedReversals: 0
                      processedConfirmations: 0
                      failedBankTransfers: 0
                      failedReversals: 0
                      failedConfirmations: 0
                    locked: true
                    errors:
                      - key: { }
                        correlationId: string
                        message: string
                        messageValues:
                          - dataType: { }
                            value: string
                            capitalize: true
                    automaticallyCreated: true
                    ibanConfirmations:
                      - customerId: string
                        iban: string
            text/json:
              schema:
                $ref: '#/components/schemas/IncomingBankingTransactionDTOListApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  - id: string
                    entityType: { }
                    createdDateTime: string
                    discriminator: string
                    _etag: string
                    requireAttention: true
                    hasErrors: true
                    hasWarnings: true
                    isReadOnly: true
                    organisationId: string
                    identification: string
                    sequenceNum: 0
                    status: { }
                    fileCreationDateTime: string
                    openingBalance: 0
                    closingBalance: 0
                    openingBalanceDate: string
                    closingBalanceDate: string
                    companyBankAccount:
                      id: string
                      iban: string
                      bic: string
                      accountHolder: string
                      sepaCreditorId: string
                    fileName: string
                    internalFilePath: string
                    entityCounts:
                      numberOfBankTransfers: 0
                      numberOfReversals: 0
                      numberOfConfirmations: 0
                      processedBankTransfers: 0
                      processedReversals: 0
                      processedConfirmations: 0
                      failedBankTransfers: 0
                      failedReversals: 0
                      failedConfirmations: 0
                    locked: true
                    errors:
                      - key: { }
                        correlationId: string
                        message: string
                        messageValues:
                          - dataType: { }
                            value: string
                            capitalize: true
                    automaticallyCreated: true
                    ibanConfirmations:
                      - customerId: string
                        iban: string
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
  /Integration/export/outgoingbankingtransaction/paymentrefund/enabledFormats:
    get:
      tags:
        - Integration
      summary: Retrieves all supported formats for exporting outgoing banking transaction payment refunds.
      description: Retrieves all supported formats for exporting outgoing banking transaction payment refunds.
      operationId: get-integration-export-outgoingbankingtransaction-paymentrefund-enabledforma
      parameters:
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ExportOutgoingBankingTransactionPaymentRefundFormatTypeListApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ExportOutgoingBankingTransactionPaymentRefundFormatTypeListApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  - pain_001001003
            text/json:
              schema:
                $ref: '#/components/schemas/ExportOutgoingBankingTransactionPaymentRefundFormatTypeListApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  - pain_001001003
  '/Integration/export/outgoingbankingtransaction/paymentrefund/{outgoingbankingtransactionid}':
    post:
      tags:
        - Integration
      summary: Exports an outgoing banking transaction payment refund.
      description: Exports an outgoing banking transaction payment refund.
      operationId: post-integration-export-outgoingbankingtransaction-paymentrefund-outgoingban
      parameters:
        - name: outgoingbankingtransactionid
          in: path
          description: ID of the outgoing banking transaction.
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: Request containing the details for the export.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ExportOutgoingBankingTransactionPaymentRefundRequest'
              description: "Represents a request to export outgoing banking transaction payment refunds.\r\nThis DTO is used to export payment refund transactions in a specified format."
            example:
              formatType: { }
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ExportOutgoingBankingTransactionPaymentRefundRequest'
              description: "Represents a request to export outgoing banking transaction payment refunds.\r\nThis DTO is used to export payment refund transactions in a specified format."
            example:
              formatType: { }
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ExportOutgoingBankingTransactionPaymentRefundRequest'
              description: "Represents a request to export outgoing banking transaction payment refunds.\r\nThis DTO is used to export payment refund transactions in a specified format."
            example:
              formatType: { }
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: string
                format: binary
              examples:
                default:
                  value: 
            application/json:
              schema:
                type: string
                format: binary
              example: string
            text/json:
              schema:
                type: string
                format: binary
              example: string
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
  /Integration/export/outgoingbankingtransaction/paymentrequest/enabledFormats:
    get:
      tags:
        - Integration
      summary: Retrieves all supported formats for exporting outgoing banking transaction payment requests.
      description: Retrieves all supported formats for exporting outgoing banking transaction payment requests.
      operationId: get-integration-export-outgoingbankingtransaction-paymentrequest-enabledform
      parameters:
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ExportOutgoingBankingTransactionPaymentRequestFormatTypeListApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ExportOutgoingBankingTransactionPaymentRequestFormatTypeListApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  - pain_008001002
            text/json:
              schema:
                $ref: '#/components/schemas/ExportOutgoingBankingTransactionPaymentRequestFormatTypeListApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  - pain_008001002
  '/Integration/export/outgoingbankingtransaction/paymentrequest/{outgoingbankingtransactionid}':
    post:
      tags:
        - Integration
      summary: Exports an outgoing banking transaction payment request.
      description: Exports an outgoing banking transaction payment request.
      operationId: post-integration-export-outgoingbankingtransaction-paymentrequest-outgoingba
      parameters:
        - name: outgoingbankingtransactionid
          in: path
          description: ID of the outgoing banking transaction.
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: Request containing the details for the export.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ExportOutgoingBankingTransactionPaymentRequestRequest'
              description: "Represents a request to export outgoing banking transaction payment requests.\r\nThis DTO is used to export payment request transactions in a specified format."
            example:
              formatType: { }
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ExportOutgoingBankingTransactionPaymentRequestRequest'
              description: "Represents a request to export outgoing banking transaction payment requests.\r\nThis DTO is used to export payment request transactions in a specified format."
            example:
              formatType: { }
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ExportOutgoingBankingTransactionPaymentRequestRequest'
              description: "Represents a request to export outgoing banking transaction payment requests.\r\nThis DTO is used to export payment request transactions in a specified format."
            example:
              formatType: { }
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: string
                format: binary
              examples:
                default:
                  value: 
            application/json:
              schema:
                type: string
                format: binary
              example: string
            text/json:
              schema:
                type: string
                format: binary
              example: string
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
  /Integration/export/outgoingbankingtransaction/bulk:
    post:
      tags:
        - Integration
      summary: Exports multiple outgoing banking transactions as a bulk operation.
      description: Exports multiple outgoing banking transactions as a bulk operation.
      operationId: post-integration-export-outgoingbankingtransaction-bulk
      parameters:
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: Request containing the details for the bulk export.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ExportOutgoingBankingTransactionBulkRequest'
              description: "Represents a bulk request to export outgoing banking transactions.\r\nThis DTO is used to export multiple outgoing banking transactions in a single operation."
            example:
              outgoingBankingTransactionIds:
                - string
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ExportOutgoingBankingTransactionBulkRequest'
              description: "Represents a bulk request to export outgoing banking transactions.\r\nThis DTO is used to export multiple outgoing banking transactions in a single operation."
            example:
              outgoingBankingTransactionIds:
                - string
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ExportOutgoingBankingTransactionBulkRequest'
              description: "Represents a bulk request to export outgoing banking transactions.\r\nThis DTO is used to export multiple outgoing banking transactions in a single operation."
            example:
              outgoingBankingTransactionIds:
                - string
      responses:
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: string
                format: binary
              examples:
                default:
                  value: 
            application/json:
              schema:
                type: string
                format: binary
              example: string
            text/json:
              schema:
                type: string
                format: binary
              example: string
  /Integration/export/invoice/ublformat/single:
    post:
      tags:
        - Integration
      summary: Exports a single invoice in UBL format.
      description: Exports a single invoice in UBL format.
      operationId: post-integration-export-invoice-ublformat-single
      parameters:
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: Request containing the details for the export.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ExportUblFormatSingleRequest'
              description: "Represents a request to export a single invoice in UBL format.\r\nThis DTO is used to export one invoice in UBL (Universal Business Language) format."
            example:
              invoiceId: string
              markAsExported: true
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ExportUblFormatSingleRequest'
              description: "Represents a request to export a single invoice in UBL format.\r\nThis DTO is used to export one invoice in UBL (Universal Business Language) format."
            example:
              invoiceId: string
              markAsExported: true
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ExportUblFormatSingleRequest'
              description: "Represents a request to export a single invoice in UBL format.\r\nThis DTO is used to export one invoice in UBL (Universal Business Language) format."
            example:
              invoiceId: string
              markAsExported: true
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: string
                format: binary
              examples:
                default:
                  value: 
            application/json:
              schema:
                type: string
                format: binary
              example: string
            text/json:
              schema:
                type: string
                format: binary
              example: string
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
  /Integration/export/invoice/ublformat/bulk:
    post:
      tags:
        - Integration
      summary: Exports multiple invoices in UBL format as a bulk operation.
      description: Exports multiple invoices in UBL format as a bulk operation.
      operationId: post-integration-export-invoice-ublformat-bulk
      parameters:
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: Request containing the details for the bulk export.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ExportUblFormatBulkRequest'
              description: "Represents a bulk request to export invoices in UBL format.\r\nThis DTO is used to export multiple invoices in UBL (Universal Business Language) format in a single operation."
            example:
              invoiceIds:
                - string
              markAsExported: true
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ExportUblFormatBulkRequest'
              description: "Represents a bulk request to export invoices in UBL format.\r\nThis DTO is used to export multiple invoices in UBL (Universal Business Language) format in a single operation."
            example:
              invoiceIds:
                - string
              markAsExported: true
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ExportUblFormatBulkRequest'
              description: "Represents a bulk request to export invoices in UBL format.\r\nThis DTO is used to export multiple invoices in UBL (Universal Business Language) format in a single operation."
            example:
              invoiceIds:
                - string
              markAsExported: true
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: string
                format: binary
              examples:
                default:
                  value: 
            application/json:
              schema:
                type: string
                format: binary
              example: string
            text/json:
              schema:
                type: string
                format: binary
              example: string
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
  /Integration/export/invoice/ublformat/validate:
    post:
      tags:
        - Integration
      summary: Validates the UBL format of invoices for export.
      description: Validates the UBL format of invoices for export.
      operationId: post-integration-export-invoice-ublformat-validate
      parameters:
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: Request containing the details for the validation.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ExportUblValidateRequest'
              description: "Represents a request to validate invoices in UBL format.\r\nThis DTO is used to validate multiple invoices against UBL (Universal Business Language) format specifications."
            example:
              invoiceIds:
                - string
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ExportUblValidateRequest'
              description: "Represents a request to validate invoices in UBL format.\r\nThis DTO is used to validate multiple invoices against UBL (Universal Business Language) format specifications."
            example:
              invoiceIds:
                - string
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ExportUblValidateRequest'
              description: "Represents a request to validate invoices in UBL format.\r\nThis DTO is used to validate multiple invoices against UBL (Universal Business Language) format specifications."
            example:
              invoiceIds:
                - string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/InvoiceUBLValidationErrorResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceUBLValidationErrorResponseDTO'
              example:
                generalErrors:
                  - errorMessage:
                      key: { }
                      correlationId: string
                      message: string
                      messageValues:
                        - dataType: { }
                          value: string
                          capitalize: true
                specificErrors:
                  - invoiceId: string
                    invoiceNumber: string
                    errorSubject: { }
                    errorSubjectId: string
                    errorMessage:
                      key: { }
                      correlationId: string
                      message: string
                      messageValues:
                        - dataType: { }
                          value: string
                          capitalize: true
                uniqueInvoicesWithErrors: 0
            text/json:
              schema:
                $ref: '#/components/schemas/InvoiceUBLValidationErrorResponseDTO'
              example:
                generalErrors:
                  - errorMessage:
                      key: { }
                      correlationId: string
                      message: string
                      messageValues:
                        - dataType: { }
                          value: string
                          capitalize: true
                specificErrors:
                  - invoiceId: string
                    invoiceNumber: string
                    errorSubject: { }
                    errorSubjectId: string
                    errorMessage:
                      key: { }
                      correlationId: string
                      message: string
                      messageValues:
                        - dataType: { }
                          value: string
                          capitalize: true
                uniqueInvoicesWithErrors: 0
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
  '/Integration/export/incomingbankingtransaction/{incomingBankingTransactionId}':
    post:
      tags:
        - Integration
      summary: Exports a specific incoming banking transaction.
      description: Exports a specific incoming banking transaction.
      operationId: post-integration-export-incomingbankingtransaction-incomingbankingtransactio
      parameters:
        - name: incomingBankingTransactionId
          in: path
          description: ID of the incoming banking transaction.
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '200':
          description: Success
  /Integration/export/incomingbankingtransaction/bulk:
    post:
      tags:
        - Integration
      summary: Exports multiple incoming banking transactions as a bulk operation.
      description: Exports multiple incoming banking transactions as a bulk operation.
      operationId: post-integration-export-incomingbankingtransaction-bulk
      parameters:
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: Request containing the details for the bulk export.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/DownloadIncomingBankingTransactionZipRequest'
              description: "Represents a request to download banking transaction documents as a ZIP file.\r\nThis DTO is used to retrieve transaction-related documents for multiple transactions at once."
            example:
              incomingBankingTransactionIds:
                - string
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/DownloadIncomingBankingTransactionZipRequest'
              description: "Represents a request to download banking transaction documents as a ZIP file.\r\nThis DTO is used to retrieve transaction-related documents for multiple transactions at once."
            example:
              incomingBankingTransactionIds:
                - string
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/DownloadIncomingBankingTransactionZipRequest'
              description: "Represents a request to download banking transaction documents as a ZIP file.\r\nThis DTO is used to retrieve transaction-related documents for multiple transactions at once."
            example:
              incomingBankingTransactionIds:
                - string
      responses:
        '200':
          description: Success
  /Invoices/filter:
    post:
      tags:
        - Invoices
      summary: Retrieves all invoices based on the provided query parameters and filters.
      description: Retrieves all invoices based on the provided query parameters and filters.
      operationId: post-invoices-filter
      parameters:
        - name: Name
          in: query
          schema:
            type: string
        - name: Id
          in: query
          description: Format - int32.
          schema:
            type: integer
            format: int32
        - name: orderBy
          in: query
          description: The order by clause.
          schema:
            type: string
        - name: continuationToken
          in: header
          description: The continuation token for pagination.
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: The query parameters for filtering invoices.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/GetInvoicesQueryParams'
            example:
              flexSearch: string
              includeOnlyIds:
                - string
              excludeIds:
                - string
              invoiceType:
                - string
              propertyGroupIds:
                - string
              productId: string
              customerId: string
              contractId: string
              invoiceStatus:
                - string
              paymentProcessStatus:
                - string
              billingCompletenessId: string
              paymentMethod: string
              startDateTime: string
              endDateTime: string
              periodStartDateTime: string
              periodEndDateTime: string
              periodStartDateTimeBegin: string
              periodStartDateTimeEnd: string
              periodEndDateTimeBegin: string
              periodEndDateTimeEnd: string
              paidDateTimeBegin: string
              exportStatus: string
              collectionCaseId: string
              customerGroupId: string
              companyBankAccountId: string
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/GetInvoicesQueryParams'
            example:
              flexSearch: string
              includeOnlyIds:
                - string
              excludeIds:
                - string
              invoiceType:
                - string
              propertyGroupIds:
                - string
              productId: string
              customerId: string
              contractId: string
              invoiceStatus:
                - string
              paymentProcessStatus:
                - string
              billingCompletenessId: string
              paymentMethod: string
              startDateTime: string
              endDateTime: string
              periodStartDateTime: string
              periodEndDateTime: string
              periodStartDateTimeBegin: string
              periodStartDateTimeEnd: string
              periodEndDateTimeBegin: string
              periodEndDateTimeEnd: string
              paidDateTimeBegin: string
              exportStatus: string
              collectionCaseId: string
              customerGroupId: string
              companyBankAccountId: string
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/GetInvoicesQueryParams'
            example:
              flexSearch: string
              includeOnlyIds:
                - string
              excludeIds:
                - string
              invoiceType:
                - string
              propertyGroupIds:
                - string
              productId: string
              customerId: string
              contractId: string
              invoiceStatus:
                - string
              paymentProcessStatus:
                - string
              billingCompletenessId: string
              paymentMethod: string
              startDateTime: string
              endDateTime: string
              periodStartDateTime: string
              periodEndDateTime: string
              periodStartDateTimeBegin: string
              periodStartDateTimeEnd: string
              periodEndDateTimeBegin: string
              periodEndDateTimeEnd: string
              paidDateTimeBegin: string
              exportStatus: string
              collectionCaseId: string
              customerGroupId: string
              companyBankAccountId: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/InvoiceDTOPagedResponseModelDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceDTOPagedResponseModelDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  results:
                    - id: string
                      entityType: { }
                      createdDateTime: string
                      discriminator: string
                      _etag: string
                      requireAttention: true
                      hasErrors: true
                      hasWarnings: true
                      isReadOnly: true
                      organisationId: string
                      invoiceNum: string
                      sequenceNumber: 0
                      invoiceDate: string
                      type: { }
                      status: { }
                      debtor:
                        customerId: string
                        displayName: string
                        customerAccountNumber: string
                        customerType: { }
                        customerGroup:
                          id: string
                          name: string
                      contractId: string
                      contractNumber: string
                      noteToCustomer: string
                      externalReference: string
                      dueDate: string
                      periodStartDateTime: string
                      periodEndDateTime: string
                      lines:
                        - billingItemId: string
                          billingTariffId: string
                          description: string
                          amountExclVAT: 0
                          amountInclVAT: 0
                          vat: 0
                          quantity: 0
                          rawQuantity: 0
                          unitPrice: 0
                          startDateTime: string
                          endDateTime: string
                          taxCodeId: string
                          taxRate: 0
                          unitOfMeasure: { }
                          utilityType: { }
                          lineType: { }
                          consumptionBased: true
                          serviceLocationId: string
                          originalInvoiceId: string
                          sortOrder: 0
                          id: string
                      remainingInvoiceAmount: 0
                      totalAmountInclVAT: 0
                      totalAmountExclVAT: 0
                      paymentDetails:
                        paid: true
                        currentPaymentStatus: { }
                        paymentReference: string
                        paymentMethod: { }
                        directDebitCollectionDate: string
                        amountOfTimesRetried: 0
                        statusHistory:
                          - paymentStatus: { }
                            outgoingBankingTransactionId: string
                            outgoingBankingTransactionIdentification: string
                            outgoingMutationId: string
                            outgoingMutationDescription: string
                            incomingBankingTransactionId: string
                            incomingBankingTransactionIdentification: string
                            incomingMutationId: string
                            incomingMutationDescription: string
                            reversalReason: { }
                            reversalAdditionalInformation: string
                            mutationDateTime: string
                      attachmentId: string
                      creditedByInvoiceId: string
                      creditedInvoiceId: string
                      billingCompletenessId: string
                      propertyGroups:
                        - id: string
                          name: string
                      product:
                        id: string
                        name: string
                        productId: string
                        productName: string
                      companyBankAccountId: string
                      consumptionCalculationInputs:
                        - serviceLocationId: string
                          externalChannelIdentifier: string
                          meterSerialNumber: string
                          timeZone: string
                          utilityType: { }
                          meteringType: { }
                          unitOfMeasure: { }
                          timeOfUse: string
                          firstMeasurement:
                            value: 0
                            readingDateTime: string
                            unitOfMeasure: { }
                          secondMeasurement:
                            value: 0
                            readingDateTime: string
                            unitOfMeasure: { }
                          consumptionValue: 0
                          startDateTime: string
                          endDateTime: string
                      collectionDetails:
                        collectionCaseId: string
                        closed: true
                        workflowId: string
                        workflowName: string
                        previousStepId: string
                        previousStepName: string
                        previousStepExecutedAt: string
                        previousStepStatus: { }
                        nextStepId: string
                        nextStepName: string
                        nextStepExecutionDate: string
                      sent: { }
                      failureReasonCode:
                        key: { }
                        correlationId: string
                        message: string
                        messageValues:
                          - dataType: { }
                            value: string
                            capitalize: true
                      failureDetails: string
                      supportsExternalPrinting: true
                      exportStatus: { }
                      newAdvanceAmountExclVAT: 0
                      newAdvanceAmountInclVAT: 0
                      advanceCalculationDetails:
                        newAdvanceAmountExclVAT: 0
                        newAdvanceAmountInclVAT: 0
                        oldAdvanceAmountInclVAT: 0
                        nextInvoiceAmountInclVat: 0
                        nextInvoiceAmountAccuracy: { }
                        recalculationType: { }
                        fallbackReason: { }
                        changedByUserId: string
                      ublAttachmentDetails:
                        errors:
                          - originatorType: { }
                            originatorId: string
                            message:
                              key: { }
                              correlationId: string
                              message: string
                              messageValues:
                                - dataType: { }
                                  value: string
                                  capitalize: true
                        attachmentId: string
                        attachmentFileName: string
                  hasNextPage: true
                  nextPageToken: string
                  totalRecords: 0
                  sortableFields:
                    - string
                  aggregateDetails:
                    - code: string
                      translation: string
                      value: 0
                      valueDate: string
            text/json:
              schema:
                $ref: '#/components/schemas/InvoiceDTOPagedResponseModelDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  results:
                    - id: string
                      entityType: { }
                      createdDateTime: string
                      discriminator: string
                      _etag: string
                      requireAttention: true
                      hasErrors: true
                      hasWarnings: true
                      isReadOnly: true
                      organisationId: string
                      invoiceNum: string
                      sequenceNumber: 0
                      invoiceDate: string
                      type: { }
                      status: { }
                      debtor:
                        customerId: string
                        displayName: string
                        customerAccountNumber: string
                        customerType: { }
                        customerGroup:
                          id: string
                          name: string
                      contractId: string
                      contractNumber: string
                      noteToCustomer: string
                      externalReference: string
                      dueDate: string
                      periodStartDateTime: string
                      periodEndDateTime: string
                      lines:
                        - billingItemId: string
                          billingTariffId: string
                          description: string
                          amountExclVAT: 0
                          amountInclVAT: 0
                          vat: 0
                          quantity: 0
                          rawQuantity: 0
                          unitPrice: 0
                          startDateTime: string
                          endDateTime: string
                          taxCodeId: string
                          taxRate: 0
                          unitOfMeasure: { }
                          utilityType: { }
                          lineType: { }
                          consumptionBased: true
                          serviceLocationId: string
                          originalInvoiceId: string
                          sortOrder: 0
                          id: string
                      remainingInvoiceAmount: 0
                      totalAmountInclVAT: 0
                      totalAmountExclVAT: 0
                      paymentDetails:
                        paid: true
                        currentPaymentStatus: { }
                        paymentReference: string
                        paymentMethod: { }
                        directDebitCollectionDate: string
                        amountOfTimesRetried: 0
                        statusHistory:
                          - paymentStatus: { }
                            outgoingBankingTransactionId: string
                            outgoingBankingTransactionIdentification: string
                            outgoingMutationId: string
                            outgoingMutationDescription: string
                            incomingBankingTransactionId: string
                            incomingBankingTransactionIdentification: string
                            incomingMutationId: string
                            incomingMutationDescription: string
                            reversalReason: { }
                            reversalAdditionalInformation: string
                            mutationDateTime: string
                      attachmentId: string
                      creditedByInvoiceId: string
                      creditedInvoiceId: string
                      billingCompletenessId: string
                      propertyGroups:
                        - id: string
                          name: string
                      product:
                        id: string
                        name: string
                        productId: string
                        productName: string
                      companyBankAccountId: string
                      consumptionCalculationInputs:
                        - serviceLocationId: string
                          externalChannelIdentifier: string
                          meterSerialNumber: string
                          timeZone: string
                          utilityType: { }
                          meteringType: { }
                          unitOfMeasure: { }
                          timeOfUse: string
                          firstMeasurement:
                            value: 0
                            readingDateTime: string
                            unitOfMeasure: { }
                          secondMeasurement:
                            value: 0
                            readingDateTime: string
                            unitOfMeasure: { }
                          consumptionValue: 0
                          startDateTime: string
                          endDateTime: string
                      collectionDetails:
                        collectionCaseId: string
                        closed: true
                        workflowId: string
                        workflowName: string
                        previousStepId: string
                        previousStepName: string
                        previousStepExecutedAt: string
                        previousStepStatus: { }
                        nextStepId: string
                        nextStepName: string
                        nextStepExecutionDate: string
                      sent: { }
                      failureReasonCode:
                        key: { }
                        correlationId: string
                        message: string
                        messageValues:
                          - dataType: { }
                            value: string
                            capitalize: true
                      failureDetails: string
                      supportsExternalPrinting: true
                      exportStatus: { }
                      newAdvanceAmountExclVAT: 0
                      newAdvanceAmountInclVAT: 0
                      advanceCalculationDetails:
                        newAdvanceAmountExclVAT: 0
                        newAdvanceAmountInclVAT: 0
                        oldAdvanceAmountInclVAT: 0
                        nextInvoiceAmountInclVat: 0
                        nextInvoiceAmountAccuracy: { }
                        recalculationType: { }
                        fallbackReason: { }
                        changedByUserId: string
                      ublAttachmentDetails:
                        errors:
                          - originatorType: { }
                            originatorId: string
                            message:
                              key: { }
                              correlationId: string
                              message: string
                              messageValues:
                                - dataType: { }
                                  value: string
                                  capitalize: true
                        attachmentId: string
                        attachmentFileName: string
                  hasNextPage: true
                  nextPageToken: string
                  totalRecords: 0
                  sortableFields:
                    - string
                  aggregateDetails:
                    - code: string
                      translation: string
                      value: 0
                      valueDate: string
  /Invoices/filter/overviewcount:
    post:
      tags:
        - Invoices
      summary: Retrieves the overview count of invoices based on the provided query parameters.
      description: Retrieves the overview count of invoices based on the provided query parameters.
      operationId: post-invoices-filter-overviewcount
      parameters:
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: The query parameters for filtering invoices.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/GetInvoicesQueryParams'
            example:
              flexSearch: string
              includeOnlyIds:
                - string
              excludeIds:
                - string
              invoiceType:
                - string
              propertyGroupIds:
                - string
              productId: string
              customerId: string
              contractId: string
              invoiceStatus:
                - string
              paymentProcessStatus:
                - string
              billingCompletenessId: string
              paymentMethod: string
              startDateTime: string
              endDateTime: string
              periodStartDateTime: string
              periodEndDateTime: string
              periodStartDateTimeBegin: string
              periodStartDateTimeEnd: string
              periodEndDateTimeBegin: string
              periodEndDateTimeEnd: string
              paidDateTimeBegin: string
              exportStatus: string
              collectionCaseId: string
              customerGroupId: string
              companyBankAccountId: string
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/GetInvoicesQueryParams'
            example:
              flexSearch: string
              includeOnlyIds:
                - string
              excludeIds:
                - string
              invoiceType:
                - string
              propertyGroupIds:
                - string
              productId: string
              customerId: string
              contractId: string
              invoiceStatus:
                - string
              paymentProcessStatus:
                - string
              billingCompletenessId: string
              paymentMethod: string
              startDateTime: string
              endDateTime: string
              periodStartDateTime: string
              periodEndDateTime: string
              periodStartDateTimeBegin: string
              periodStartDateTimeEnd: string
              periodEndDateTimeBegin: string
              periodEndDateTimeEnd: string
              paidDateTimeBegin: string
              exportStatus: string
              collectionCaseId: string
              customerGroupId: string
              companyBankAccountId: string
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/GetInvoicesQueryParams'
            example:
              flexSearch: string
              includeOnlyIds:
                - string
              excludeIds:
                - string
              invoiceType:
                - string
              propertyGroupIds:
                - string
              productId: string
              customerId: string
              contractId: string
              invoiceStatus:
                - string
              paymentProcessStatus:
                - string
              billingCompletenessId: string
              paymentMethod: string
              startDateTime: string
              endDateTime: string
              periodStartDateTime: string
              periodEndDateTime: string
              periodStartDateTimeBegin: string
              periodStartDateTimeEnd: string
              periodEndDateTimeBegin: string
              periodEndDateTimeEnd: string
              paidDateTimeBegin: string
              exportStatus: string
              collectionCaseId: string
              customerGroupId: string
              companyBankAccountId: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/InvoiceOverviewCountDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceOverviewCountDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  requireAttention: 0
                  all: 0
                  toApprove: 0
                  toSend: 0
                  unpaid: 0
                  overdue: 0
                  readyForPaymentCollection: 0
                  toExport: 0
            text/json:
              schema:
                $ref: '#/components/schemas/InvoiceOverviewCountDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  requireAttention: 0
                  all: 0
                  toApprove: 0
                  toSend: 0
                  unpaid: 0
                  overdue: 0
                  readyForPaymentCollection: 0
                  toExport: 0
  '/Invoices/{invoiceuuid}':
    get:
      tags:
        - Invoices
      summary: Retrieves an invoice by its UUID.
      description: Retrieves an invoice by its UUID.
      operationId: get-invoices-invoiceuuid
      parameters:
        - name: invoiceuuid
          in: path
          description: The UUID of the invoice.
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/InvoiceDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  invoiceNum: string
                  sequenceNumber: 0
                  invoiceDate: string
                  type: { }
                  status: { }
                  debtor:
                    customerId: string
                    displayName: string
                    customerAccountNumber: string
                    customerType: { }
                    customerGroup:
                      id: string
                      name: string
                  contractId: string
                  contractNumber: string
                  noteToCustomer: string
                  externalReference: string
                  dueDate: string
                  periodStartDateTime: string
                  periodEndDateTime: string
                  lines:
                    - billingItemId: string
                      billingTariffId: string
                      description: string
                      amountExclVAT: 0
                      amountInclVAT: 0
                      vat: 0
                      quantity: 0
                      rawQuantity: 0
                      unitPrice: 0
                      startDateTime: string
                      endDateTime: string
                      taxCodeId: string
                      taxRate: 0
                      unitOfMeasure: { }
                      utilityType: { }
                      lineType: { }
                      consumptionBased: true
                      serviceLocationId: string
                      originalInvoiceId: string
                      sortOrder: 0
                      id: string
                  remainingInvoiceAmount: 0
                  totalAmountInclVAT: 0
                  totalAmountExclVAT: 0
                  paymentDetails:
                    paid: true
                    currentPaymentStatus: { }
                    paymentReference: string
                    paymentMethod: { }
                    directDebitCollectionDate: string
                    amountOfTimesRetried: 0
                    statusHistory:
                      - paymentStatus: { }
                        outgoingBankingTransactionId: string
                        outgoingBankingTransactionIdentification: string
                        outgoingMutationId: string
                        outgoingMutationDescription: string
                        incomingBankingTransactionId: string
                        incomingBankingTransactionIdentification: string
                        incomingMutationId: string
                        incomingMutationDescription: string
                        reversalReason: { }
                        reversalAdditionalInformation: string
                        mutationDateTime: string
                  attachmentId: string
                  creditedByInvoiceId: string
                  creditedInvoiceId: string
                  billingCompletenessId: string
                  propertyGroups:
                    - id: string
                      name: string
                  product:
                    id: string
                    name: string
                    productId: string
                    productName: string
                  companyBankAccountId: string
                  consumptionCalculationInputs:
                    - serviceLocationId: string
                      externalChannelIdentifier: string
                      meterSerialNumber: string
                      timeZone: string
                      utilityType: { }
                      meteringType: { }
                      unitOfMeasure: { }
                      timeOfUse: string
                      firstMeasurement:
                        value: 0
                        readingDateTime: string
                        unitOfMeasure: { }
                      secondMeasurement:
                        value: 0
                        readingDateTime: string
                        unitOfMeasure: { }
                      consumptionValue: 0
                      startDateTime: string
                      endDateTime: string
                  collectionDetails:
                    collectionCaseId: string
                    closed: true
                    workflowId: string
                    workflowName: string
                    previousStepId: string
                    previousStepName: string
                    previousStepExecutedAt: string
                    previousStepStatus: { }
                    nextStepId: string
                    nextStepName: string
                    nextStepExecutionDate: string
                  sent: { }
                  failureReasonCode:
                    key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                  failureDetails: string
                  supportsExternalPrinting: true
                  exportStatus: { }
                  newAdvanceAmountExclVAT: 0
                  newAdvanceAmountInclVAT: 0
                  advanceCalculationDetails:
                    newAdvanceAmountExclVAT: 0
                    newAdvanceAmountInclVAT: 0
                    oldAdvanceAmountInclVAT: 0
                    nextInvoiceAmountInclVat: 0
                    nextInvoiceAmountAccuracy: { }
                    recalculationType: { }
                    fallbackReason: { }
                    changedByUserId: string
                  ublAttachmentDetails:
                    errors:
                      - originatorType: { }
                        originatorId: string
                        message:
                          key: { }
                          correlationId: string
                          message: string
                          messageValues:
                            - dataType: { }
                              value: string
                              capitalize: true
                    attachmentId: string
                    attachmentFileName: string
            text/json:
              schema:
                $ref: '#/components/schemas/InvoiceDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  invoiceNum: string
                  sequenceNumber: 0
                  invoiceDate: string
                  type: { }
                  status: { }
                  debtor:
                    customerId: string
                    displayName: string
                    customerAccountNumber: string
                    customerType: { }
                    customerGroup:
                      id: string
                      name: string
                  contractId: string
                  contractNumber: string
                  noteToCustomer: string
                  externalReference: string
                  dueDate: string
                  periodStartDateTime: string
                  periodEndDateTime: string
                  lines:
                    - billingItemId: string
                      billingTariffId: string
                      description: string
                      amountExclVAT: 0
                      amountInclVAT: 0
                      vat: 0
                      quantity: 0
                      rawQuantity: 0
                      unitPrice: 0
                      startDateTime: string
                      endDateTime: string
                      taxCodeId: string
                      taxRate: 0
                      unitOfMeasure: { }
                      utilityType: { }
                      lineType: { }
                      consumptionBased: true
                      serviceLocationId: string
                      originalInvoiceId: string
                      sortOrder: 0
                      id: string
                  remainingInvoiceAmount: 0
                  totalAmountInclVAT: 0
                  totalAmountExclVAT: 0
                  paymentDetails:
                    paid: true
                    currentPaymentStatus: { }
                    paymentReference: string
                    paymentMethod: { }
                    directDebitCollectionDate: string
                    amountOfTimesRetried: 0
                    statusHistory:
                      - paymentStatus: { }
                        outgoingBankingTransactionId: string
                        outgoingBankingTransactionIdentification: string
                        outgoingMutationId: string
                        outgoingMutationDescription: string
                        incomingBankingTransactionId: string
                        incomingBankingTransactionIdentification: string
                        incomingMutationId: string
                        incomingMutationDescription: string
                        reversalReason: { }
                        reversalAdditionalInformation: string
                        mutationDateTime: string
                  attachmentId: string
                  creditedByInvoiceId: string
                  creditedInvoiceId: string
                  billingCompletenessId: string
                  propertyGroups:
                    - id: string
                      name: string
                  product:
                    id: string
                    name: string
                    productId: string
                    productName: string
                  companyBankAccountId: string
                  consumptionCalculationInputs:
                    - serviceLocationId: string
                      externalChannelIdentifier: string
                      meterSerialNumber: string
                      timeZone: string
                      utilityType: { }
                      meteringType: { }
                      unitOfMeasure: { }
                      timeOfUse: string
                      firstMeasurement:
                        value: 0
                        readingDateTime: string
                        unitOfMeasure: { }
                      secondMeasurement:
                        value: 0
                        readingDateTime: string
                        unitOfMeasure: { }
                      consumptionValue: 0
                      startDateTime: string
                      endDateTime: string
                  collectionDetails:
                    collectionCaseId: string
                    closed: true
                    workflowId: string
                    workflowName: string
                    previousStepId: string
                    previousStepName: string
                    previousStepExecutedAt: string
                    previousStepStatus: { }
                    nextStepId: string
                    nextStepName: string
                    nextStepExecutionDate: string
                  sent: { }
                  failureReasonCode:
                    key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                  failureDetails: string
                  supportsExternalPrinting: true
                  exportStatus: { }
                  newAdvanceAmountExclVAT: 0
                  newAdvanceAmountInclVAT: 0
                  advanceCalculationDetails:
                    newAdvanceAmountExclVAT: 0
                    newAdvanceAmountInclVAT: 0
                    oldAdvanceAmountInclVAT: 0
                    nextInvoiceAmountInclVat: 0
                    nextInvoiceAmountAccuracy: { }
                    recalculationType: { }
                    fallbackReason: { }
                    changedByUserId: string
                  ublAttachmentDetails:
                    errors:
                      - originatorType: { }
                        originatorId: string
                        message:
                          key: { }
                          correlationId: string
                          message: string
                          messageValues:
                            - dataType: { }
                              value: string
                              capitalize: true
                    attachmentId: string
                    attachmentFileName: string
    delete:
      tags:
        - Invoices
      summary: Deletes an invoice by its UUID.
      description: Deletes an invoice by its UUID.
      operationId: delete-invoices-invoiceuuid
      parameters:
        - name: invoiceuuid
          in: path
          description: The UUID of the invoice.
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/BooleanApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/BooleanApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data: true
            text/json:
              schema:
                $ref: '#/components/schemas/BooleanApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data: true
  '/Invoices/c/{customeruuid}':
    get:
      tags:
        - Invoices
      summary: Retrieves invoices for a specific customer.
      description: Retrieves invoices for a specific customer.
      operationId: get-invoices-c-customeruuid
      parameters:
        - name: customeruuid
          in: path
          description: The UUID of the customer.
          required: true
          schema:
            type: string
        - name: orderBy
          in: query
          description: The order by clause.
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/InvoiceDTOPagedResponseModelDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceDTOPagedResponseModelDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  results:
                    - id: string
                      entityType: { }
                      createdDateTime: string
                      discriminator: string
                      _etag: string
                      requireAttention: true
                      hasErrors: true
                      hasWarnings: true
                      isReadOnly: true
                      organisationId: string
                      invoiceNum: string
                      sequenceNumber: 0
                      invoiceDate: string
                      type: { }
                      status: { }
                      debtor:
                        customerId: string
                        displayName: string
                        customerAccountNumber: string
                        customerType: { }
                        customerGroup:
                          id: string
                          name: string
                      contractId: string
                      contractNumber: string
                      noteToCustomer: string
                      externalReference: string
                      dueDate: string
                      periodStartDateTime: string
                      periodEndDateTime: string
                      lines:
                        - billingItemId: string
                          billingTariffId: string
                          description: string
                          amountExclVAT: 0
                          amountInclVAT: 0
                          vat: 0
                          quantity: 0
                          rawQuantity: 0
                          unitPrice: 0
                          startDateTime: string
                          endDateTime: string
                          taxCodeId: string
                          taxRate: 0
                          unitOfMeasure: { }
                          utilityType: { }
                          lineType: { }
                          consumptionBased: true
                          serviceLocationId: string
                          originalInvoiceId: string
                          sortOrder: 0
                          id: string
                      remainingInvoiceAmount: 0
                      totalAmountInclVAT: 0
                      totalAmountExclVAT: 0
                      paymentDetails:
                        paid: true
                        currentPaymentStatus: { }
                        paymentReference: string
                        paymentMethod: { }
                        directDebitCollectionDate: string
                        amountOfTimesRetried: 0
                        statusHistory:
                          - paymentStatus: { }
                            outgoingBankingTransactionId: string
                            outgoingBankingTransactionIdentification: string
                            outgoingMutationId: string
                            outgoingMutationDescription: string
                            incomingBankingTransactionId: string
                            incomingBankingTransactionIdentification: string
                            incomingMutationId: string
                            incomingMutationDescription: string
                            reversalReason: { }
                            reversalAdditionalInformation: string
                            mutationDateTime: string
                      attachmentId: string
                      creditedByInvoiceId: string
                      creditedInvoiceId: string
                      billingCompletenessId: string
                      propertyGroups:
                        - id: string
                          name: string
                      product:
                        id: string
                        name: string
                        productId: string
                        productName: string
                      companyBankAccountId: string
                      consumptionCalculationInputs:
                        - serviceLocationId: string
                          externalChannelIdentifier: string
                          meterSerialNumber: string
                          timeZone: string
                          utilityType: { }
                          meteringType: { }
                          unitOfMeasure: { }
                          timeOfUse: string
                          firstMeasurement:
                            value: 0
                            readingDateTime: string
                            unitOfMeasure: { }
                          secondMeasurement:
                            value: 0
                            readingDateTime: string
                            unitOfMeasure: { }
                          consumptionValue: 0
                          startDateTime: string
                          endDateTime: string
                      collectionDetails:
                        collectionCaseId: string
                        closed: true
                        workflowId: string
                        workflowName: string
                        previousStepId: string
                        previousStepName: string
                        previousStepExecutedAt: string
                        previousStepStatus: { }
                        nextStepId: string
                        nextStepName: string
                        nextStepExecutionDate: string
                      sent: { }
                      failureReasonCode:
                        key: { }
                        correlationId: string
                        message: string
                        messageValues:
                          - dataType: { }
                            value: string
                            capitalize: true
                      failureDetails: string
                      supportsExternalPrinting: true
                      exportStatus: { }
                      newAdvanceAmountExclVAT: 0
                      newAdvanceAmountInclVAT: 0
                      advanceCalculationDetails:
                        newAdvanceAmountExclVAT: 0
                        newAdvanceAmountInclVAT: 0
                        oldAdvanceAmountInclVAT: 0
                        nextInvoiceAmountInclVat: 0
                        nextInvoiceAmountAccuracy: { }
                        recalculationType: { }
                        fallbackReason: { }
                        changedByUserId: string
                      ublAttachmentDetails:
                        errors:
                          - originatorType: { }
                            originatorId: string
                            message:
                              key: { }
                              correlationId: string
                              message: string
                              messageValues:
                                - dataType: { }
                                  value: string
                                  capitalize: true
                        attachmentId: string
                        attachmentFileName: string
                  hasNextPage: true
                  nextPageToken: string
                  totalRecords: 0
                  sortableFields:
                    - string
                  aggregateDetails:
                    - code: string
                      translation: string
                      value: 0
                      valueDate: string
            text/json:
              schema:
                $ref: '#/components/schemas/InvoiceDTOPagedResponseModelDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  results:
                    - id: string
                      entityType: { }
                      createdDateTime: string
                      discriminator: string
                      _etag: string
                      requireAttention: true
                      hasErrors: true
                      hasWarnings: true
                      isReadOnly: true
                      organisationId: string
                      invoiceNum: string
                      sequenceNumber: 0
                      invoiceDate: string
                      type: { }
                      status: { }
                      debtor:
                        customerId: string
                        displayName: string
                        customerAccountNumber: string
                        customerType: { }
                        customerGroup:
                          id: string
                          name: string
                      contractId: string
                      contractNumber: string
                      noteToCustomer: string
                      externalReference: string
                      dueDate: string
                      periodStartDateTime: string
                      periodEndDateTime: string
                      lines:
                        - billingItemId: string
                          billingTariffId: string
                          description: string
                          amountExclVAT: 0
                          amountInclVAT: 0
                          vat: 0
                          quantity: 0
                          rawQuantity: 0
                          unitPrice: 0
                          startDateTime: string
                          endDateTime: string
                          taxCodeId: string
                          taxRate: 0
                          unitOfMeasure: { }
                          utilityType: { }
                          lineType: { }
                          consumptionBased: true
                          serviceLocationId: string
                          originalInvoiceId: string
                          sortOrder: 0
                          id: string
                      remainingInvoiceAmount: 0
                      totalAmountInclVAT: 0
                      totalAmountExclVAT: 0
                      paymentDetails:
                        paid: true
                        currentPaymentStatus: { }
                        paymentReference: string
                        paymentMethod: { }
                        directDebitCollectionDate: string
                        amountOfTimesRetried: 0
                        statusHistory:
                          - paymentStatus: { }
                            outgoingBankingTransactionId: string
                            outgoingBankingTransactionIdentification: string
                            outgoingMutationId: string
                            outgoingMutationDescription: string
                            incomingBankingTransactionId: string
                            incomingBankingTransactionIdentification: string
                            incomingMutationId: string
                            incomingMutationDescription: string
                            reversalReason: { }
                            reversalAdditionalInformation: string
                            mutationDateTime: string
                      attachmentId: string
                      creditedByInvoiceId: string
                      creditedInvoiceId: string
                      billingCompletenessId: string
                      propertyGroups:
                        - id: string
                          name: string
                      product:
                        id: string
                        name: string
                        productId: string
                        productName: string
                      companyBankAccountId: string
                      consumptionCalculationInputs:
                        - serviceLocationId: string
                          externalChannelIdentifier: string
                          meterSerialNumber: string
                          timeZone: string
                          utilityType: { }
                          meteringType: { }
                          unitOfMeasure: { }
                          timeOfUse: string
                          firstMeasurement:
                            value: 0
                            readingDateTime: string
                            unitOfMeasure: { }
                          secondMeasurement:
                            value: 0
                            readingDateTime: string
                            unitOfMeasure: { }
                          consumptionValue: 0
                          startDateTime: string
                          endDateTime: string
                      collectionDetails:
                        collectionCaseId: string
                        closed: true
                        workflowId: string
                        workflowName: string
                        previousStepId: string
                        previousStepName: string
                        previousStepExecutedAt: string
                        previousStepStatus: { }
                        nextStepId: string
                        nextStepName: string
                        nextStepExecutionDate: string
                      sent: { }
                      failureReasonCode:
                        key: { }
                        correlationId: string
                        message: string
                        messageValues:
                          - dataType: { }
                            value: string
                            capitalize: true
                      failureDetails: string
                      supportsExternalPrinting: true
                      exportStatus: { }
                      newAdvanceAmountExclVAT: 0
                      newAdvanceAmountInclVAT: 0
                      advanceCalculationDetails:
                        newAdvanceAmountExclVAT: 0
                        newAdvanceAmountInclVAT: 0
                        oldAdvanceAmountInclVAT: 0
                        nextInvoiceAmountInclVat: 0
                        nextInvoiceAmountAccuracy: { }
                        recalculationType: { }
                        fallbackReason: { }
                        changedByUserId: string
                      ublAttachmentDetails:
                        errors:
                          - originatorType: { }
                            originatorId: string
                            message:
                              key: { }
                              correlationId: string
                              message: string
                              messageValues:
                                - dataType: { }
                                  value: string
                                  capitalize: true
                        attachmentId: string
                        attachmentFileName: string
                  hasNextPage: true
                  nextPageToken: string
                  totalRecords: 0
                  sortableFields:
                    - string
                  aggregateDetails:
                    - code: string
                      translation: string
                      value: 0
                      valueDate: string
  '/Invoices/c/{customeruuid}/{contractuuid}':
    get:
      tags:
        - Invoices
      summary: Retrieves invoices for a specific customer and contract.
      description: Retrieves invoices for a specific customer and contract.
      operationId: get-invoices-c-customeruuid-contractuuid
      parameters:
        - name: customeruuid
          in: path
          description: The UUID of the customer.
          required: true
          schema:
            type: string
        - name: contractuuid
          in: path
          description: The UUID of the contract.
          required: true
          schema:
            type: string
        - name: orderBy
          in: query
          description: The order by clause.
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/InvoiceDTOPagedResponseModelDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceDTOPagedResponseModelDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  results:
                    - id: string
                      entityType: { }
                      createdDateTime: string
                      discriminator: string
                      _etag: string
                      requireAttention: true
                      hasErrors: true
                      hasWarnings: true
                      isReadOnly: true
                      organisationId: string
                      invoiceNum: string
                      sequenceNumber: 0
                      invoiceDate: string
                      type: { }
                      status: { }
                      debtor:
                        customerId: string
                        displayName: string
                        customerAccountNumber: string
                        customerType: { }
                        customerGroup:
                          id: string
                          name: string
                      contractId: string
                      contractNumber: string
                      noteToCustomer: string
                      externalReference: string
                      dueDate: string
                      periodStartDateTime: string
                      periodEndDateTime: string
                      lines:
                        - billingItemId: string
                          billingTariffId: string
                          description: string
                          amountExclVAT: 0
                          amountInclVAT: 0
                          vat: 0
                          quantity: 0
                          rawQuantity: 0
                          unitPrice: 0
                          startDateTime: string
                          endDateTime: string
                          taxCodeId: string
                          taxRate: 0
                          unitOfMeasure: { }
                          utilityType: { }
                          lineType: { }
                          consumptionBased: true
                          serviceLocationId: string
                          originalInvoiceId: string
                          sortOrder: 0
                          id: string
                      remainingInvoiceAmount: 0
                      totalAmountInclVAT: 0
                      totalAmountExclVAT: 0
                      paymentDetails:
                        paid: true
                        currentPaymentStatus: { }
                        paymentReference: string
                        paymentMethod: { }
                        directDebitCollectionDate: string
                        amountOfTimesRetried: 0
                        statusHistory:
                          - paymentStatus: { }
                            outgoingBankingTransactionId: string
                            outgoingBankingTransactionIdentification: string
                            outgoingMutationId: string
                            outgoingMutationDescription: string
                            incomingBankingTransactionId: string
                            incomingBankingTransactionIdentification: string
                            incomingMutationId: string
                            incomingMutationDescription: string
                            reversalReason: { }
                            reversalAdditionalInformation: string
                            mutationDateTime: string
                      attachmentId: string
                      creditedByInvoiceId: string
                      creditedInvoiceId: string
                      billingCompletenessId: string
                      propertyGroups:
                        - id: string
                          name: string
                      product:
                        id: string
                        name: string
                        productId: string
                        productName: string
                      companyBankAccountId: string
                      consumptionCalculationInputs:
                        - serviceLocationId: string
                          externalChannelIdentifier: string
                          meterSerialNumber: string
                          timeZone: string
                          utilityType: { }
                          meteringType: { }
                          unitOfMeasure: { }
                          timeOfUse: string
                          firstMeasurement:
                            value: 0
                            readingDateTime: string
                            unitOfMeasure: { }
                          secondMeasurement:
                            value: 0
                            readingDateTime: string
                            unitOfMeasure: { }
                          consumptionValue: 0
                          startDateTime: string
                          endDateTime: string
                      collectionDetails:
                        collectionCaseId: string
                        closed: true
                        workflowId: string
                        workflowName: string
                        previousStepId: string
                        previousStepName: string
                        previousStepExecutedAt: string
                        previousStepStatus: { }
                        nextStepId: string
                        nextStepName: string
                        nextStepExecutionDate: string
                      sent: { }
                      failureReasonCode:
                        key: { }
                        correlationId: string
                        message: string
                        messageValues:
                          - dataType: { }
                            value: string
                            capitalize: true
                      failureDetails: string
                      supportsExternalPrinting: true
                      exportStatus: { }
                      newAdvanceAmountExclVAT: 0
                      newAdvanceAmountInclVAT: 0
                      advanceCalculationDetails:
                        newAdvanceAmountExclVAT: 0
                        newAdvanceAmountInclVAT: 0
                        oldAdvanceAmountInclVAT: 0
                        nextInvoiceAmountInclVat: 0
                        nextInvoiceAmountAccuracy: { }
                        recalculationType: { }
                        fallbackReason: { }
                        changedByUserId: string
                      ublAttachmentDetails:
                        errors:
                          - originatorType: { }
                            originatorId: string
                            message:
                              key: { }
                              correlationId: string
                              message: string
                              messageValues:
                                - dataType: { }
                                  value: string
                                  capitalize: true
                        attachmentId: string
                        attachmentFileName: string
                  hasNextPage: true
                  nextPageToken: string
                  totalRecords: 0
                  sortableFields:
                    - string
                  aggregateDetails:
                    - code: string
                      translation: string
                      value: 0
                      valueDate: string
            text/json:
              schema:
                $ref: '#/components/schemas/InvoiceDTOPagedResponseModelDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  results:
                    - id: string
                      entityType: { }
                      createdDateTime: string
                      discriminator: string
                      _etag: string
                      requireAttention: true
                      hasErrors: true
                      hasWarnings: true
                      isReadOnly: true
                      organisationId: string
                      invoiceNum: string
                      sequenceNumber: 0
                      invoiceDate: string
                      type: { }
                      status: { }
                      debtor:
                        customerId: string
                        displayName: string
                        customerAccountNumber: string
                        customerType: { }
                        customerGroup:
                          id: string
                          name: string
                      contractId: string
                      contractNumber: string
                      noteToCustomer: string
                      externalReference: string
                      dueDate: string
                      periodStartDateTime: string
                      periodEndDateTime: string
                      lines:
                        - billingItemId: string
                          billingTariffId: string
                          description: string
                          amountExclVAT: 0
                          amountInclVAT: 0
                          vat: 0
                          quantity: 0
                          rawQuantity: 0
                          unitPrice: 0
                          startDateTime: string
                          endDateTime: string
                          taxCodeId: string
                          taxRate: 0
                          unitOfMeasure: { }
                          utilityType: { }
                          lineType: { }
                          consumptionBased: true
                          serviceLocationId: string
                          originalInvoiceId: string
                          sortOrder: 0
                          id: string
                      remainingInvoiceAmount: 0
                      totalAmountInclVAT: 0
                      totalAmountExclVAT: 0
                      paymentDetails:
                        paid: true
                        currentPaymentStatus: { }
                        paymentReference: string
                        paymentMethod: { }
                        directDebitCollectionDate: string
                        amountOfTimesRetried: 0
                        statusHistory:
                          - paymentStatus: { }
                            outgoingBankingTransactionId: string
                            outgoingBankingTransactionIdentification: string
                            outgoingMutationId: string
                            outgoingMutationDescription: string
                            incomingBankingTransactionId: string
                            incomingBankingTransactionIdentification: string
                            incomingMutationId: string
                            incomingMutationDescription: string
                            reversalReason: { }
                            reversalAdditionalInformation: string
                            mutationDateTime: string
                      attachmentId: string
                      creditedByInvoiceId: string
                      creditedInvoiceId: string
                      billingCompletenessId: string
                      propertyGroups:
                        - id: string
                          name: string
                      product:
                        id: string
                        name: string
                        productId: string
                        productName: string
                      companyBankAccountId: string
                      consumptionCalculationInputs:
                        - serviceLocationId: string
                          externalChannelIdentifier: string
                          meterSerialNumber: string
                          timeZone: string
                          utilityType: { }
                          meteringType: { }
                          unitOfMeasure: { }
                          timeOfUse: string
                          firstMeasurement:
                            value: 0
                            readingDateTime: string
                            unitOfMeasure: { }
                          secondMeasurement:
                            value: 0
                            readingDateTime: string
                            unitOfMeasure: { }
                          consumptionValue: 0
                          startDateTime: string
                          endDateTime: string
                      collectionDetails:
                        collectionCaseId: string
                        closed: true
                        workflowId: string
                        workflowName: string
                        previousStepId: string
                        previousStepName: string
                        previousStepExecutedAt: string
                        previousStepStatus: { }
                        nextStepId: string
                        nextStepName: string
                        nextStepExecutionDate: string
                      sent: { }
                      failureReasonCode:
                        key: { }
                        correlationId: string
                        message: string
                        messageValues:
                          - dataType: { }
                            value: string
                            capitalize: true
                      failureDetails: string
                      supportsExternalPrinting: true
                      exportStatus: { }
                      newAdvanceAmountExclVAT: 0
                      newAdvanceAmountInclVAT: 0
                      advanceCalculationDetails:
                        newAdvanceAmountExclVAT: 0
                        newAdvanceAmountInclVAT: 0
                        oldAdvanceAmountInclVAT: 0
                        nextInvoiceAmountInclVat: 0
                        nextInvoiceAmountAccuracy: { }
                        recalculationType: { }
                        fallbackReason: { }
                        changedByUserId: string
                      ublAttachmentDetails:
                        errors:
                          - originatorType: { }
                            originatorId: string
                            message:
                              key: { }
                              correlationId: string
                              message: string
                              messageValues:
                                - dataType: { }
                                  value: string
                                  capitalize: true
                        attachmentId: string
                        attachmentFileName: string
                  hasNextPage: true
                  nextPageToken: string
                  totalRecords: 0
                  sortableFields:
                    - string
                  aggregateDetails:
                    - code: string
                      translation: string
                      value: 0
                      valueDate: string
  '/Invoices/c/{customeruuid}/{contractuuid}/productchange':
    get:
      tags:
        - Invoices
      summary: Gets invoices that might be credited from a product change.
      description: Gets invoices that might be credited from a product change.
      operationId: get-invoices-c-customeruuid-contractuuid-productchange
      parameters:
        - name: customeruuid
          in: path
          description: The UUID of the customer.
          required: true
          schema:
            type: string
        - name: contractuuid
          in: path
          description: The UUID of the contract.
          required: true
          schema:
            type: string
        - name: startDate
          in: query
          description: Format - date-time (as date-time in RFC3339). The start date for the product change.
          schema:
            type: string
            format: date-time
        - name: orderBy
          in: query
          description: The order by clause.
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/InvoiceDTOPagedResponseModelDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceDTOPagedResponseModelDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  results:
                    - id: string
                      entityType: { }
                      createdDateTime: string
                      discriminator: string
                      _etag: string
                      requireAttention: true
                      hasErrors: true
                      hasWarnings: true
                      isReadOnly: true
                      organisationId: string
                      invoiceNum: string
                      sequenceNumber: 0
                      invoiceDate: string
                      type: { }
                      status: { }
                      debtor:
                        customerId: string
                        displayName: string
                        customerAccountNumber: string
                        customerType: { }
                        customerGroup:
                          id: string
                          name: string
                      contractId: string
                      contractNumber: string
                      noteToCustomer: string
                      externalReference: string
                      dueDate: string
                      periodStartDateTime: string
                      periodEndDateTime: string
                      lines:
                        - billingItemId: string
                          billingTariffId: string
                          description: string
                          amountExclVAT: 0
                          amountInclVAT: 0
                          vat: 0
                          quantity: 0
                          rawQuantity: 0
                          unitPrice: 0
                          startDateTime: string
                          endDateTime: string
                          taxCodeId: string
                          taxRate: 0
                          unitOfMeasure: { }
                          utilityType: { }
                          lineType: { }
                          consumptionBased: true
                          serviceLocationId: string
                          originalInvoiceId: string
                          sortOrder: 0
                          id: string
                      remainingInvoiceAmount: 0
                      totalAmountInclVAT: 0
                      totalAmountExclVAT: 0
                      paymentDetails:
                        paid: true
                        currentPaymentStatus: { }
                        paymentReference: string
                        paymentMethod: { }
                        directDebitCollectionDate: string
                        amountOfTimesRetried: 0
                        statusHistory:
                          - paymentStatus: { }
                            outgoingBankingTransactionId: string
                            outgoingBankingTransactionIdentification: string
                            outgoingMutationId: string
                            outgoingMutationDescription: string
                            incomingBankingTransactionId: string
                            incomingBankingTransactionIdentification: string
                            incomingMutationId: string
                            incomingMutationDescription: string
                            reversalReason: { }
                            reversalAdditionalInformation: string
                            mutationDateTime: string
                      attachmentId: string
                      creditedByInvoiceId: string
                      creditedInvoiceId: string
                      billingCompletenessId: string
                      propertyGroups:
                        - id: string
                          name: string
                      product:
                        id: string
                        name: string
                        productId: string
                        productName: string
                      companyBankAccountId: string
                      consumptionCalculationInputs:
                        - serviceLocationId: string
                          externalChannelIdentifier: string
                          meterSerialNumber: string
                          timeZone: string
                          utilityType: { }
                          meteringType: { }
                          unitOfMeasure: { }
                          timeOfUse: string
                          firstMeasurement:
                            value: 0
                            readingDateTime: string
                            unitOfMeasure: { }
                          secondMeasurement:
                            value: 0
                            readingDateTime: string
                            unitOfMeasure: { }
                          consumptionValue: 0
                          startDateTime: string
                          endDateTime: string
                      collectionDetails:
                        collectionCaseId: string
                        closed: true
                        workflowId: string
                        workflowName: string
                        previousStepId: string
                        previousStepName: string
                        previousStepExecutedAt: string
                        previousStepStatus: { }
                        nextStepId: string
                        nextStepName: string
                        nextStepExecutionDate: string
                      sent: { }
                      failureReasonCode:
                        key: { }
                        correlationId: string
                        message: string
                        messageValues:
                          - dataType: { }
                            value: string
                            capitalize: true
                      failureDetails: string
                      supportsExternalPrinting: true
                      exportStatus: { }
                      newAdvanceAmountExclVAT: 0
                      newAdvanceAmountInclVAT: 0
                      advanceCalculationDetails:
                        newAdvanceAmountExclVAT: 0
                        newAdvanceAmountInclVAT: 0
                        oldAdvanceAmountInclVAT: 0
                        nextInvoiceAmountInclVat: 0
                        nextInvoiceAmountAccuracy: { }
                        recalculationType: { }
                        fallbackReason: { }
                        changedByUserId: string
                      ublAttachmentDetails:
                        errors:
                          - originatorType: { }
                            originatorId: string
                            message:
                              key: { }
                              correlationId: string
                              message: string
                              messageValues:
                                - dataType: { }
                                  value: string
                                  capitalize: true
                        attachmentId: string
                        attachmentFileName: string
                  hasNextPage: true
                  nextPageToken: string
                  totalRecords: 0
                  sortableFields:
                    - string
                  aggregateDetails:
                    - code: string
                      translation: string
                      value: 0
                      valueDate: string
            text/json:
              schema:
                $ref: '#/components/schemas/InvoiceDTOPagedResponseModelDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  results:
                    - id: string
                      entityType: { }
                      createdDateTime: string
                      discriminator: string
                      _etag: string
                      requireAttention: true
                      hasErrors: true
                      hasWarnings: true
                      isReadOnly: true
                      organisationId: string
                      invoiceNum: string
                      sequenceNumber: 0
                      invoiceDate: string
                      type: { }
                      status: { }
                      debtor:
                        customerId: string
                        displayName: string
                        customerAccountNumber: string
                        customerType: { }
                        customerGroup:
                          id: string
                          name: string
                      contractId: string
                      contractNumber: string
                      noteToCustomer: string
                      externalReference: string
                      dueDate: string
                      periodStartDateTime: string
                      periodEndDateTime: string
                      lines:
                        - billingItemId: string
                          billingTariffId: string
                          description: string
                          amountExclVAT: 0
                          amountInclVAT: 0
                          vat: 0
                          quantity: 0
                          rawQuantity: 0
                          unitPrice: 0
                          startDateTime: string
                          endDateTime: string
                          taxCodeId: string
                          taxRate: 0
                          unitOfMeasure: { }
                          utilityType: { }
                          lineType: { }
                          consumptionBased: true
                          serviceLocationId: string
                          originalInvoiceId: string
                          sortOrder: 0
                          id: string
                      remainingInvoiceAmount: 0
                      totalAmountInclVAT: 0
                      totalAmountExclVAT: 0
                      paymentDetails:
                        paid: true
                        currentPaymentStatus: { }
                        paymentReference: string
                        paymentMethod: { }
                        directDebitCollectionDate: string
                        amountOfTimesRetried: 0
                        statusHistory:
                          - paymentStatus: { }
                            outgoingBankingTransactionId: string
                            outgoingBankingTransactionIdentification: string
                            outgoingMutationId: string
                            outgoingMutationDescription: string
                            incomingBankingTransactionId: string
                            incomingBankingTransactionIdentification: string
                            incomingMutationId: string
                            incomingMutationDescription: string
                            reversalReason: { }
                            reversalAdditionalInformation: string
                            mutationDateTime: string
                      attachmentId: string
                      creditedByInvoiceId: string
                      creditedInvoiceId: string
                      billingCompletenessId: string
                      propertyGroups:
                        - id: string
                          name: string
                      product:
                        id: string
                        name: string
                        productId: string
                        productName: string
                      companyBankAccountId: string
                      consumptionCalculationInputs:
                        - serviceLocationId: string
                          externalChannelIdentifier: string
                          meterSerialNumber: string
                          timeZone: string
                          utilityType: { }
                          meteringType: { }
                          unitOfMeasure: { }
                          timeOfUse: string
                          firstMeasurement:
                            value: 0
                            readingDateTime: string
                            unitOfMeasure: { }
                          secondMeasurement:
                            value: 0
                            readingDateTime: string
                            unitOfMeasure: { }
                          consumptionValue: 0
                          startDateTime: string
                          endDateTime: string
                      collectionDetails:
                        collectionCaseId: string
                        closed: true
                        workflowId: string
                        workflowName: string
                        previousStepId: string
                        previousStepName: string
                        previousStepExecutedAt: string
                        previousStepStatus: { }
                        nextStepId: string
                        nextStepName: string
                        nextStepExecutionDate: string
                      sent: { }
                      failureReasonCode:
                        key: { }
                        correlationId: string
                        message: string
                        messageValues:
                          - dataType: { }
                            value: string
                            capitalize: true
                      failureDetails: string
                      supportsExternalPrinting: true
                      exportStatus: { }
                      newAdvanceAmountExclVAT: 0
                      newAdvanceAmountInclVAT: 0
                      advanceCalculationDetails:
                        newAdvanceAmountExclVAT: 0
                        newAdvanceAmountInclVAT: 0
                        oldAdvanceAmountInclVAT: 0
                        nextInvoiceAmountInclVat: 0
                        nextInvoiceAmountAccuracy: { }
                        recalculationType: { }
                        fallbackReason: { }
                        changedByUserId: string
                      ublAttachmentDetails:
                        errors:
                          - originatorType: { }
                            originatorId: string
                            message:
                              key: { }
                              correlationId: string
                              message: string
                              messageValues:
                                - dataType: { }
                                  value: string
                                  capitalize: true
                        attachmentId: string
                        attachmentFileName: string
                  hasNextPage: true
                  nextPageToken: string
                  totalRecords: 0
                  sortableFields:
                    - string
                  aggregateDetails:
                    - code: string
                      translation: string
                      value: 0
                      valueDate: string
  /Invoices:
    post:
      tags:
        - Invoices
      summary: Creates a new invoice.
      description: Creates a new invoice.
      operationId: post-invoices
      parameters:
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: The request containing the invoice details.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/CreateInvoiceRequest'
              description: "Represents a request to create a new invoice.\r\nThis DTO contains all the necessary information to create a complete invoice including header details and line items."
            example:
              invoiceNum: string
              status: { }
              invoiceDate: string
              invoiceType: { }
              remainingInvoiceAmount: 0
              totalInvoiceAmountExclVAT: 0
              totalInvoiceAmountInclVAT: 0
              contractId: string
              creditedInvoiceId: string
              contractNumber: string
              customerId: string
              companyBankAccountId: string
              propertyGroups:
                - id: string
                  name: string
              paymentMethod: { }
              paymentReference: string
              externalReference: string
              periodStartDateTime: string
              periodEndDateTime: string
              dueDate: string
              noteToCustomer: string
              sent: { }
              lines:
                - quantity: 0
                  unitOfMeasure: { }
                  billingItemId: string
                  unitPrice: 0
                  amountInclVAT: 0
                  amountExclVAT: 0
                  lineType: { }
                  serviceLocationId: string
                  startDateTime: string
                  endDateTime: string
                  taxCodeId: string
                  description: string
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/CreateInvoiceRequest'
              description: "Represents a request to create a new invoice.\r\nThis DTO contains all the necessary information to create a complete invoice including header details and line items."
            example:
              invoiceNum: string
              status: { }
              invoiceDate: string
              invoiceType: { }
              remainingInvoiceAmount: 0
              totalInvoiceAmountExclVAT: 0
              totalInvoiceAmountInclVAT: 0
              contractId: string
              creditedInvoiceId: string
              contractNumber: string
              customerId: string
              companyBankAccountId: string
              propertyGroups:
                - id: string
                  name: string
              paymentMethod: { }
              paymentReference: string
              externalReference: string
              periodStartDateTime: string
              periodEndDateTime: string
              dueDate: string
              noteToCustomer: string
              sent: { }
              lines:
                - quantity: 0
                  unitOfMeasure: { }
                  billingItemId: string
                  unitPrice: 0
                  amountInclVAT: 0
                  amountExclVAT: 0
                  lineType: { }
                  serviceLocationId: string
                  startDateTime: string
                  endDateTime: string
                  taxCodeId: string
                  description: string
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/CreateInvoiceRequest'
              description: "Represents a request to create a new invoice.\r\nThis DTO contains all the necessary information to create a complete invoice including header details and line items."
            example:
              invoiceNum: string
              status: { }
              invoiceDate: string
              invoiceType: { }
              remainingInvoiceAmount: 0
              totalInvoiceAmountExclVAT: 0
              totalInvoiceAmountInclVAT: 0
              contractId: string
              creditedInvoiceId: string
              contractNumber: string
              customerId: string
              companyBankAccountId: string
              propertyGroups:
                - id: string
                  name: string
              paymentMethod: { }
              paymentReference: string
              externalReference: string
              periodStartDateTime: string
              periodEndDateTime: string
              dueDate: string
              noteToCustomer: string
              sent: { }
              lines:
                - quantity: 0
                  unitOfMeasure: { }
                  billingItemId: string
                  unitPrice: 0
                  amountInclVAT: 0
                  amountExclVAT: 0
                  lineType: { }
                  serviceLocationId: string
                  startDateTime: string
                  endDateTime: string
                  taxCodeId: string
                  description: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/InvoiceDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  invoiceNum: string
                  sequenceNumber: 0
                  invoiceDate: string
                  type: { }
                  status: { }
                  debtor:
                    customerId: string
                    displayName: string
                    customerAccountNumber: string
                    customerType: { }
                    customerGroup:
                      id: string
                      name: string
                  contractId: string
                  contractNumber: string
                  noteToCustomer: string
                  externalReference: string
                  dueDate: string
                  periodStartDateTime: string
                  periodEndDateTime: string
                  lines:
                    - billingItemId: string
                      billingTariffId: string
                      description: string
                      amountExclVAT: 0
                      amountInclVAT: 0
                      vat: 0
                      quantity: 0
                      rawQuantity: 0
                      unitPrice: 0
                      startDateTime: string
                      endDateTime: string
                      taxCodeId: string
                      taxRate: 0
                      unitOfMeasure: { }
                      utilityType: { }
                      lineType: { }
                      consumptionBased: true
                      serviceLocationId: string
                      originalInvoiceId: string
                      sortOrder: 0
                      id: string
                  remainingInvoiceAmount: 0
                  totalAmountInclVAT: 0
                  totalAmountExclVAT: 0
                  paymentDetails:
                    paid: true
                    currentPaymentStatus: { }
                    paymentReference: string
                    paymentMethod: { }
                    directDebitCollectionDate: string
                    amountOfTimesRetried: 0
                    statusHistory:
                      - paymentStatus: { }
                        outgoingBankingTransactionId: string
                        outgoingBankingTransactionIdentification: string
                        outgoingMutationId: string
                        outgoingMutationDescription: string
                        incomingBankingTransactionId: string
                        incomingBankingTransactionIdentification: string
                        incomingMutationId: string
                        incomingMutationDescription: string
                        reversalReason: { }
                        reversalAdditionalInformation: string
                        mutationDateTime: string
                  attachmentId: string
                  creditedByInvoiceId: string
                  creditedInvoiceId: string
                  billingCompletenessId: string
                  propertyGroups:
                    - id: string
                      name: string
                  product:
                    id: string
                    name: string
                    productId: string
                    productName: string
                  companyBankAccountId: string
                  consumptionCalculationInputs:
                    - serviceLocationId: string
                      externalChannelIdentifier: string
                      meterSerialNumber: string
                      timeZone: string
                      utilityType: { }
                      meteringType: { }
                      unitOfMeasure: { }
                      timeOfUse: string
                      firstMeasurement:
                        value: 0
                        readingDateTime: string
                        unitOfMeasure: { }
                      secondMeasurement:
                        value: 0
                        readingDateTime: string
                        unitOfMeasure: { }
                      consumptionValue: 0
                      startDateTime: string
                      endDateTime: string
                  collectionDetails:
                    collectionCaseId: string
                    closed: true
                    workflowId: string
                    workflowName: string
                    previousStepId: string
                    previousStepName: string
                    previousStepExecutedAt: string
                    previousStepStatus: { }
                    nextStepId: string
                    nextStepName: string
                    nextStepExecutionDate: string
                  sent: { }
                  failureReasonCode:
                    key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                  failureDetails: string
                  supportsExternalPrinting: true
                  exportStatus: { }
                  newAdvanceAmountExclVAT: 0
                  newAdvanceAmountInclVAT: 0
                  advanceCalculationDetails:
                    newAdvanceAmountExclVAT: 0
                    newAdvanceAmountInclVAT: 0
                    oldAdvanceAmountInclVAT: 0
                    nextInvoiceAmountInclVat: 0
                    nextInvoiceAmountAccuracy: { }
                    recalculationType: { }
                    fallbackReason: { }
                    changedByUserId: string
                  ublAttachmentDetails:
                    errors:
                      - originatorType: { }
                        originatorId: string
                        message:
                          key: { }
                          correlationId: string
                          message: string
                          messageValues:
                            - dataType: { }
                              value: string
                              capitalize: true
                    attachmentId: string
                    attachmentFileName: string
            text/json:
              schema:
                $ref: '#/components/schemas/InvoiceDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  invoiceNum: string
                  sequenceNumber: 0
                  invoiceDate: string
                  type: { }
                  status: { }
                  debtor:
                    customerId: string
                    displayName: string
                    customerAccountNumber: string
                    customerType: { }
                    customerGroup:
                      id: string
                      name: string
                  contractId: string
                  contractNumber: string
                  noteToCustomer: string
                  externalReference: string
                  dueDate: string
                  periodStartDateTime: string
                  periodEndDateTime: string
                  lines:
                    - billingItemId: string
                      billingTariffId: string
                      description: string
                      amountExclVAT: 0
                      amountInclVAT: 0
                      vat: 0
                      quantity: 0
                      rawQuantity: 0
                      unitPrice: 0
                      startDateTime: string
                      endDateTime: string
                      taxCodeId: string
                      taxRate: 0
                      unitOfMeasure: { }
                      utilityType: { }
                      lineType: { }
                      consumptionBased: true
                      serviceLocationId: string
                      originalInvoiceId: string
                      sortOrder: 0
                      id: string
                  remainingInvoiceAmount: 0
                  totalAmountInclVAT: 0
                  totalAmountExclVAT: 0
                  paymentDetails:
                    paid: true
                    currentPaymentStatus: { }
                    paymentReference: string
                    paymentMethod: { }
                    directDebitCollectionDate: string
                    amountOfTimesRetried: 0
                    statusHistory:
                      - paymentStatus: { }
                        outgoingBankingTransactionId: string
                        outgoingBankingTransactionIdentification: string
                        outgoingMutationId: string
                        outgoingMutationDescription: string
                        incomingBankingTransactionId: string
                        incomingBankingTransactionIdentification: string
                        incomingMutationId: string
                        incomingMutationDescription: string
                        reversalReason: { }
                        reversalAdditionalInformation: string
                        mutationDateTime: string
                  attachmentId: string
                  creditedByInvoiceId: string
                  creditedInvoiceId: string
                  billingCompletenessId: string
                  propertyGroups:
                    - id: string
                      name: string
                  product:
                    id: string
                    name: string
                    productId: string
                    productName: string
                  companyBankAccountId: string
                  consumptionCalculationInputs:
                    - serviceLocationId: string
                      externalChannelIdentifier: string
                      meterSerialNumber: string
                      timeZone: string
                      utilityType: { }
                      meteringType: { }
                      unitOfMeasure: { }
                      timeOfUse: string
                      firstMeasurement:
                        value: 0
                        readingDateTime: string
                        unitOfMeasure: { }
                      secondMeasurement:
                        value: 0
                        readingDateTime: string
                        unitOfMeasure: { }
                      consumptionValue: 0
                      startDateTime: string
                      endDateTime: string
                  collectionDetails:
                    collectionCaseId: string
                    closed: true
                    workflowId: string
                    workflowName: string
                    previousStepId: string
                    previousStepName: string
                    previousStepExecutedAt: string
                    previousStepStatus: { }
                    nextStepId: string
                    nextStepName: string
                    nextStepExecutionDate: string
                  sent: { }
                  failureReasonCode:
                    key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                  failureDetails: string
                  supportsExternalPrinting: true
                  exportStatus: { }
                  newAdvanceAmountExclVAT: 0
                  newAdvanceAmountInclVAT: 0
                  advanceCalculationDetails:
                    newAdvanceAmountExclVAT: 0
                    newAdvanceAmountInclVAT: 0
                    oldAdvanceAmountInclVAT: 0
                    nextInvoiceAmountInclVat: 0
                    nextInvoiceAmountAccuracy: { }
                    recalculationType: { }
                    fallbackReason: { }
                    changedByUserId: string
                  ublAttachmentDetails:
                    errors:
                      - originatorType: { }
                        originatorId: string
                        message:
                          key: { }
                          correlationId: string
                          message: string
                          messageValues:
                            - dataType: { }
                              value: string
                              capitalize: true
                    attachmentId: string
                    attachmentFileName: string
  '/Invoices/{invoiceuuid}/approve':
    post:
      tags:
        - Invoices
      summary: Approves an invoice.
      description: Approves an invoice.
      operationId: post-invoices-invoiceuuid-approve
      parameters:
        - name: invoiceuuid
          in: path
          description: The UUID of the invoice.
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: The request containing the approval details.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ApproveInvoiceRequest'
              description: "Represents a request to approve an invoice.\r\nThis DTO is used to approve a single invoice with a specified invoice date."
            example:
              invoiceDate: string
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ApproveInvoiceRequest'
              description: "Represents a request to approve an invoice.\r\nThis DTO is used to approve a single invoice with a specified invoice date."
            example:
              invoiceDate: string
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ApproveInvoiceRequest'
              description: "Represents a request to approve an invoice.\r\nThis DTO is used to approve a single invoice with a specified invoice date."
            example:
              invoiceDate: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/InvoiceDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  invoiceNum: string
                  sequenceNumber: 0
                  invoiceDate: string
                  type: { }
                  status: { }
                  debtor:
                    customerId: string
                    displayName: string
                    customerAccountNumber: string
                    customerType: { }
                    customerGroup:
                      id: string
                      name: string
                  contractId: string
                  contractNumber: string
                  noteToCustomer: string
                  externalReference: string
                  dueDate: string
                  periodStartDateTime: string
                  periodEndDateTime: string
                  lines:
                    - billingItemId: string
                      billingTariffId: string
                      description: string
                      amountExclVAT: 0
                      amountInclVAT: 0
                      vat: 0
                      quantity: 0
                      rawQuantity: 0
                      unitPrice: 0
                      startDateTime: string
                      endDateTime: string
                      taxCodeId: string
                      taxRate: 0
                      unitOfMeasure: { }
                      utilityType: { }
                      lineType: { }
                      consumptionBased: true
                      serviceLocationId: string
                      originalInvoiceId: string
                      sortOrder: 0
                      id: string
                  remainingInvoiceAmount: 0
                  totalAmountInclVAT: 0
                  totalAmountExclVAT: 0
                  paymentDetails:
                    paid: true
                    currentPaymentStatus: { }
                    paymentReference: string
                    paymentMethod: { }
                    directDebitCollectionDate: string
                    amountOfTimesRetried: 0
                    statusHistory:
                      - paymentStatus: { }
                        outgoingBankingTransactionId: string
                        outgoingBankingTransactionIdentification: string
                        outgoingMutationId: string
                        outgoingMutationDescription: string
                        incomingBankingTransactionId: string
                        incomingBankingTransactionIdentification: string
                        incomingMutationId: string
                        incomingMutationDescription: string
                        reversalReason: { }
                        reversalAdditionalInformation: string
                        mutationDateTime: string
                  attachmentId: string
                  creditedByInvoiceId: string
                  creditedInvoiceId: string
                  billingCompletenessId: string
                  propertyGroups:
                    - id: string
                      name: string
                  product:
                    id: string
                    name: string
                    productId: string
                    productName: string
                  companyBankAccountId: string
                  consumptionCalculationInputs:
                    - serviceLocationId: string
                      externalChannelIdentifier: string
                      meterSerialNumber: string
                      timeZone: string
                      utilityType: { }
                      meteringType: { }
                      unitOfMeasure: { }
                      timeOfUse: string
                      firstMeasurement:
                        value: 0
                        readingDateTime: string
                        unitOfMeasure: { }
                      secondMeasurement:
                        value: 0
                        readingDateTime: string
                        unitOfMeasure: { }
                      consumptionValue: 0
                      startDateTime: string
                      endDateTime: string
                  collectionDetails:
                    collectionCaseId: string
                    closed: true
                    workflowId: string
                    workflowName: string
                    previousStepId: string
                    previousStepName: string
                    previousStepExecutedAt: string
                    previousStepStatus: { }
                    nextStepId: string
                    nextStepName: string
                    nextStepExecutionDate: string
                  sent: { }
                  failureReasonCode:
                    key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                  failureDetails: string
                  supportsExternalPrinting: true
                  exportStatus: { }
                  newAdvanceAmountExclVAT: 0
                  newAdvanceAmountInclVAT: 0
                  advanceCalculationDetails:
                    newAdvanceAmountExclVAT: 0
                    newAdvanceAmountInclVAT: 0
                    oldAdvanceAmountInclVAT: 0
                    nextInvoiceAmountInclVat: 0
                    nextInvoiceAmountAccuracy: { }
                    recalculationType: { }
                    fallbackReason: { }
                    changedByUserId: string
                  ublAttachmentDetails:
                    errors:
                      - originatorType: { }
                        originatorId: string
                        message:
                          key: { }
                          correlationId: string
                          message: string
                          messageValues:
                            - dataType: { }
                              value: string
                              capitalize: true
                    attachmentId: string
                    attachmentFileName: string
            text/json:
              schema:
                $ref: '#/components/schemas/InvoiceDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  invoiceNum: string
                  sequenceNumber: 0
                  invoiceDate: string
                  type: { }
                  status: { }
                  debtor:
                    customerId: string
                    displayName: string
                    customerAccountNumber: string
                    customerType: { }
                    customerGroup:
                      id: string
                      name: string
                  contractId: string
                  contractNumber: string
                  noteToCustomer: string
                  externalReference: string
                  dueDate: string
                  periodStartDateTime: string
                  periodEndDateTime: string
                  lines:
                    - billingItemId: string
                      billingTariffId: string
                      description: string
                      amountExclVAT: 0
                      amountInclVAT: 0
                      vat: 0
                      quantity: 0
                      rawQuantity: 0
                      unitPrice: 0
                      startDateTime: string
                      endDateTime: string
                      taxCodeId: string
                      taxRate: 0
                      unitOfMeasure: { }
                      utilityType: { }
                      lineType: { }
                      consumptionBased: true
                      serviceLocationId: string
                      originalInvoiceId: string
                      sortOrder: 0
                      id: string
                  remainingInvoiceAmount: 0
                  totalAmountInclVAT: 0
                  totalAmountExclVAT: 0
                  paymentDetails:
                    paid: true
                    currentPaymentStatus: { }
                    paymentReference: string
                    paymentMethod: { }
                    directDebitCollectionDate: string
                    amountOfTimesRetried: 0
                    statusHistory:
                      - paymentStatus: { }
                        outgoingBankingTransactionId: string
                        outgoingBankingTransactionIdentification: string
                        outgoingMutationId: string
                        outgoingMutationDescription: string
                        incomingBankingTransactionId: string
                        incomingBankingTransactionIdentification: string
                        incomingMutationId: string
                        incomingMutationDescription: string
                        reversalReason: { }
                        reversalAdditionalInformation: string
                        mutationDateTime: string
                  attachmentId: string
                  creditedByInvoiceId: string
                  creditedInvoiceId: string
                  billingCompletenessId: string
                  propertyGroups:
                    - id: string
                      name: string
                  product:
                    id: string
                    name: string
                    productId: string
                    productName: string
                  companyBankAccountId: string
                  consumptionCalculationInputs:
                    - serviceLocationId: string
                      externalChannelIdentifier: string
                      meterSerialNumber: string
                      timeZone: string
                      utilityType: { }
                      meteringType: { }
                      unitOfMeasure: { }
                      timeOfUse: string
                      firstMeasurement:
                        value: 0
                        readingDateTime: string
                        unitOfMeasure: { }
                      secondMeasurement:
                        value: 0
                        readingDateTime: string
                        unitOfMeasure: { }
                      consumptionValue: 0
                      startDateTime: string
                      endDateTime: string
                  collectionDetails:
                    collectionCaseId: string
                    closed: true
                    workflowId: string
                    workflowName: string
                    previousStepId: string
                    previousStepName: string
                    previousStepExecutedAt: string
                    previousStepStatus: { }
                    nextStepId: string
                    nextStepName: string
                    nextStepExecutionDate: string
                  sent: { }
                  failureReasonCode:
                    key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                  failureDetails: string
                  supportsExternalPrinting: true
                  exportStatus: { }
                  newAdvanceAmountExclVAT: 0
                  newAdvanceAmountInclVAT: 0
                  advanceCalculationDetails:
                    newAdvanceAmountExclVAT: 0
                    newAdvanceAmountInclVAT: 0
                    oldAdvanceAmountInclVAT: 0
                    nextInvoiceAmountInclVat: 0
                    nextInvoiceAmountAccuracy: { }
                    recalculationType: { }
                    fallbackReason: { }
                    changedByUserId: string
                  ublAttachmentDetails:
                    errors:
                      - originatorType: { }
                        originatorId: string
                        message:
                          key: { }
                          correlationId: string
                          message: string
                          messageValues:
                            - dataType: { }
                              value: string
                              capitalize: true
                    attachmentId: string
                    attachmentFileName: string
  '/Invoices/{invoiceuuid}/changepaymentdetails':
    post:
      tags:
        - Invoices
      summary: Changes the payment method of an invoice.
      description: Changes the payment method of an invoice.
      operationId: post-invoices-invoiceuuid-changepaymentdetails
      parameters:
        - name: invoiceuuid
          in: path
          description: The UUID of the invoice.
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: The request containing the new payment details.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ChangePaymentDetailsRequest'
              description: "Represents a request to change the payment details of an invoice.\r\nThis DTO is used to update the payment method and collection date for an invoice."
            example:
              newPaymentMethod: { }
              collectionDate: string
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ChangePaymentDetailsRequest'
              description: "Represents a request to change the payment details of an invoice.\r\nThis DTO is used to update the payment method and collection date for an invoice."
            example:
              newPaymentMethod: { }
              collectionDate: string
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ChangePaymentDetailsRequest'
              description: "Represents a request to change the payment details of an invoice.\r\nThis DTO is used to update the payment method and collection date for an invoice."
            example:
              newPaymentMethod: { }
              collectionDate: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/InvoiceDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  invoiceNum: string
                  sequenceNumber: 0
                  invoiceDate: string
                  type: { }
                  status: { }
                  debtor:
                    customerId: string
                    displayName: string
                    customerAccountNumber: string
                    customerType: { }
                    customerGroup:
                      id: string
                      name: string
                  contractId: string
                  contractNumber: string
                  noteToCustomer: string
                  externalReference: string
                  dueDate: string
                  periodStartDateTime: string
                  periodEndDateTime: string
                  lines:
                    - billingItemId: string
                      billingTariffId: string
                      description: string
                      amountExclVAT: 0
                      amountInclVAT: 0
                      vat: 0
                      quantity: 0
                      rawQuantity: 0
                      unitPrice: 0
                      startDateTime: string
                      endDateTime: string
                      taxCodeId: string
                      taxRate: 0
                      unitOfMeasure: { }
                      utilityType: { }
                      lineType: { }
                      consumptionBased: true
                      serviceLocationId: string
                      originalInvoiceId: string
                      sortOrder: 0
                      id: string
                  remainingInvoiceAmount: 0
                  totalAmountInclVAT: 0
                  totalAmountExclVAT: 0
                  paymentDetails:
                    paid: true
                    currentPaymentStatus: { }
                    paymentReference: string
                    paymentMethod: { }
                    directDebitCollectionDate: string
                    amountOfTimesRetried: 0
                    statusHistory:
                      - paymentStatus: { }
                        outgoingBankingTransactionId: string
                        outgoingBankingTransactionIdentification: string
                        outgoingMutationId: string
                        outgoingMutationDescription: string
                        incomingBankingTransactionId: string
                        incomingBankingTransactionIdentification: string
                        incomingMutationId: string
                        incomingMutationDescription: string
                        reversalReason: { }
                        reversalAdditionalInformation: string
                        mutationDateTime: string
                  attachmentId: string
                  creditedByInvoiceId: string
                  creditedInvoiceId: string
                  billingCompletenessId: string
                  propertyGroups:
                    - id: string
                      name: string
                  product:
                    id: string
                    name: string
                    productId: string
                    productName: string
                  companyBankAccountId: string
                  consumptionCalculationInputs:
                    - serviceLocationId: string
                      externalChannelIdentifier: string
                      meterSerialNumber: string
                      timeZone: string
                      utilityType: { }
                      meteringType: { }
                      unitOfMeasure: { }
                      timeOfUse: string
                      firstMeasurement:
                        value: 0
                        readingDateTime: string
                        unitOfMeasure: { }
                      secondMeasurement:
                        value: 0
                        readingDateTime: string
                        unitOfMeasure: { }
                      consumptionValue: 0
                      startDateTime: string
                      endDateTime: string
                  collectionDetails:
                    collectionCaseId: string
                    closed: true
                    workflowId: string
                    workflowName: string
                    previousStepId: string
                    previousStepName: string
                    previousStepExecutedAt: string
                    previousStepStatus: { }
                    nextStepId: string
                    nextStepName: string
                    nextStepExecutionDate: string
                  sent: { }
                  failureReasonCode:
                    key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                  failureDetails: string
                  supportsExternalPrinting: true
                  exportStatus: { }
                  newAdvanceAmountExclVAT: 0
                  newAdvanceAmountInclVAT: 0
                  advanceCalculationDetails:
                    newAdvanceAmountExclVAT: 0
                    newAdvanceAmountInclVAT: 0
                    oldAdvanceAmountInclVAT: 0
                    nextInvoiceAmountInclVat: 0
                    nextInvoiceAmountAccuracy: { }
                    recalculationType: { }
                    fallbackReason: { }
                    changedByUserId: string
                  ublAttachmentDetails:
                    errors:
                      - originatorType: { }
                        originatorId: string
                        message:
                          key: { }
                          correlationId: string
                          message: string
                          messageValues:
                            - dataType: { }
                              value: string
                              capitalize: true
                    attachmentId: string
                    attachmentFileName: string
            text/json:
              schema:
                $ref: '#/components/schemas/InvoiceDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  invoiceNum: string
                  sequenceNumber: 0
                  invoiceDate: string
                  type: { }
                  status: { }
                  debtor:
                    customerId: string
                    displayName: string
                    customerAccountNumber: string
                    customerType: { }
                    customerGroup:
                      id: string
                      name: string
                  contractId: string
                  contractNumber: string
                  noteToCustomer: string
                  externalReference: string
                  dueDate: string
                  periodStartDateTime: string
                  periodEndDateTime: string
                  lines:
                    - billingItemId: string
                      billingTariffId: string
                      description: string
                      amountExclVAT: 0
                      amountInclVAT: 0
                      vat: 0
                      quantity: 0
                      rawQuantity: 0
                      unitPrice: 0
                      startDateTime: string
                      endDateTime: string
                      taxCodeId: string
                      taxRate: 0
                      unitOfMeasure: { }
                      utilityType: { }
                      lineType: { }
                      consumptionBased: true
                      serviceLocationId: string
                      originalInvoiceId: string
                      sortOrder: 0
                      id: string
                  remainingInvoiceAmount: 0
                  totalAmountInclVAT: 0
                  totalAmountExclVAT: 0
                  paymentDetails:
                    paid: true
                    currentPaymentStatus: { }
                    paymentReference: string
                    paymentMethod: { }
                    directDebitCollectionDate: string
                    amountOfTimesRetried: 0
                    statusHistory:
                      - paymentStatus: { }
                        outgoingBankingTransactionId: string
                        outgoingBankingTransactionIdentification: string
                        outgoingMutationId: string
                        outgoingMutationDescription: string
                        incomingBankingTransactionId: string
                        incomingBankingTransactionIdentification: string
                        incomingMutationId: string
                        incomingMutationDescription: string
                        reversalReason: { }
                        reversalAdditionalInformation: string
                        mutationDateTime: string
                  attachmentId: string
                  creditedByInvoiceId: string
                  creditedInvoiceId: string
                  billingCompletenessId: string
                  propertyGroups:
                    - id: string
                      name: string
                  product:
                    id: string
                    name: string
                    productId: string
                    productName: string
                  companyBankAccountId: string
                  consumptionCalculationInputs:
                    - serviceLocationId: string
                      externalChannelIdentifier: string
                      meterSerialNumber: string
                      timeZone: string
                      utilityType: { }
                      meteringType: { }
                      unitOfMeasure: { }
                      timeOfUse: string
                      firstMeasurement:
                        value: 0
                        readingDateTime: string
                        unitOfMeasure: { }
                      secondMeasurement:
                        value: 0
                        readingDateTime: string
                        unitOfMeasure: { }
                      consumptionValue: 0
                      startDateTime: string
                      endDateTime: string
                  collectionDetails:
                    collectionCaseId: string
                    closed: true
                    workflowId: string
                    workflowName: string
                    previousStepId: string
                    previousStepName: string
                    previousStepExecutedAt: string
                    previousStepStatus: { }
                    nextStepId: string
                    nextStepName: string
                    nextStepExecutionDate: string
                  sent: { }
                  failureReasonCode:
                    key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                  failureDetails: string
                  supportsExternalPrinting: true
                  exportStatus: { }
                  newAdvanceAmountExclVAT: 0
                  newAdvanceAmountInclVAT: 0
                  advanceCalculationDetails:
                    newAdvanceAmountExclVAT: 0
                    newAdvanceAmountInclVAT: 0
                    oldAdvanceAmountInclVAT: 0
                    nextInvoiceAmountInclVat: 0
                    nextInvoiceAmountAccuracy: { }
                    recalculationType: { }
                    fallbackReason: { }
                    changedByUserId: string
                  ublAttachmentDetails:
                    errors:
                      - originatorType: { }
                        originatorId: string
                        message:
                          key: { }
                          correlationId: string
                          message: string
                          messageValues:
                            - dataType: { }
                              value: string
                              capitalize: true
                    attachmentId: string
                    attachmentFileName: string
  '/Invoices/{invoiceuuid}/changenewadvanceamount':
    post:
      tags:
        - Invoices
      summary: Changes the new advance amount of an invoice.
      description: Changes the new advance amount of an invoice.
      operationId: post-invoices-invoiceuuid-changenewadvanceamount
      parameters:
        - name: invoiceuuid
          in: path
          description: The UUID of the invoice.
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: The request containing the new advance amount.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ChangeNewAdvanceAmountRequest'
              description: "Represents a request to change the advance amount for an invoice.\r\nThis DTO is used to update the advance payment amount that will be charged to the customer."
            example:
              newAdvanceAmountInclVAT: 0
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ChangeNewAdvanceAmountRequest'
              description: "Represents a request to change the advance amount for an invoice.\r\nThis DTO is used to update the advance payment amount that will be charged to the customer."
            example:
              newAdvanceAmountInclVAT: 0
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ChangeNewAdvanceAmountRequest'
              description: "Represents a request to change the advance amount for an invoice.\r\nThis DTO is used to update the advance payment amount that will be charged to the customer."
            example:
              newAdvanceAmountInclVAT: 0
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/InvoiceDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  invoiceNum: string
                  sequenceNumber: 0
                  invoiceDate: string
                  type: { }
                  status: { }
                  debtor:
                    customerId: string
                    displayName: string
                    customerAccountNumber: string
                    customerType: { }
                    customerGroup:
                      id: string
                      name: string
                  contractId: string
                  contractNumber: string
                  noteToCustomer: string
                  externalReference: string
                  dueDate: string
                  periodStartDateTime: string
                  periodEndDateTime: string
                  lines:
                    - billingItemId: string
                      billingTariffId: string
                      description: string
                      amountExclVAT: 0
                      amountInclVAT: 0
                      vat: 0
                      quantity: 0
                      rawQuantity: 0
                      unitPrice: 0
                      startDateTime: string
                      endDateTime: string
                      taxCodeId: string
                      taxRate: 0
                      unitOfMeasure: { }
                      utilityType: { }
                      lineType: { }
                      consumptionBased: true
                      serviceLocationId: string
                      originalInvoiceId: string
                      sortOrder: 0
                      id: string
                  remainingInvoiceAmount: 0
                  totalAmountInclVAT: 0
                  totalAmountExclVAT: 0
                  paymentDetails:
                    paid: true
                    currentPaymentStatus: { }
                    paymentReference: string
                    paymentMethod: { }
                    directDebitCollectionDate: string
                    amountOfTimesRetried: 0
                    statusHistory:
                      - paymentStatus: { }
                        outgoingBankingTransactionId: string
                        outgoingBankingTransactionIdentification: string
                        outgoingMutationId: string
                        outgoingMutationDescription: string
                        incomingBankingTransactionId: string
                        incomingBankingTransactionIdentification: string
                        incomingMutationId: string
                        incomingMutationDescription: string
                        reversalReason: { }
                        reversalAdditionalInformation: string
                        mutationDateTime: string
                  attachmentId: string
                  creditedByInvoiceId: string
                  creditedInvoiceId: string
                  billingCompletenessId: string
                  propertyGroups:
                    - id: string
                      name: string
                  product:
                    id: string
                    name: string
                    productId: string
                    productName: string
                  companyBankAccountId: string
                  consumptionCalculationInputs:
                    - serviceLocationId: string
                      externalChannelIdentifier: string
                      meterSerialNumber: string
                      timeZone: string
                      utilityType: { }
                      meteringType: { }
                      unitOfMeasure: { }
                      timeOfUse: string
                      firstMeasurement:
                        value: 0
                        readingDateTime: string
                        unitOfMeasure: { }
                      secondMeasurement:
                        value: 0
                        readingDateTime: string
                        unitOfMeasure: { }
                      consumptionValue: 0
                      startDateTime: string
                      endDateTime: string
                  collectionDetails:
                    collectionCaseId: string
                    closed: true
                    workflowId: string
                    workflowName: string
                    previousStepId: string
                    previousStepName: string
                    previousStepExecutedAt: string
                    previousStepStatus: { }
                    nextStepId: string
                    nextStepName: string
                    nextStepExecutionDate: string
                  sent: { }
                  failureReasonCode:
                    key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                  failureDetails: string
                  supportsExternalPrinting: true
                  exportStatus: { }
                  newAdvanceAmountExclVAT: 0
                  newAdvanceAmountInclVAT: 0
                  advanceCalculationDetails:
                    newAdvanceAmountExclVAT: 0
                    newAdvanceAmountInclVAT: 0
                    oldAdvanceAmountInclVAT: 0
                    nextInvoiceAmountInclVat: 0
                    nextInvoiceAmountAccuracy: { }
                    recalculationType: { }
                    fallbackReason: { }
                    changedByUserId: string
                  ublAttachmentDetails:
                    errors:
                      - originatorType: { }
                        originatorId: string
                        message:
                          key: { }
                          correlationId: string
                          message: string
                          messageValues:
                            - dataType: { }
                              value: string
                              capitalize: true
                    attachmentId: string
                    attachmentFileName: string
            text/json:
              schema:
                $ref: '#/components/schemas/InvoiceDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  invoiceNum: string
                  sequenceNumber: 0
                  invoiceDate: string
                  type: { }
                  status: { }
                  debtor:
                    customerId: string
                    displayName: string
                    customerAccountNumber: string
                    customerType: { }
                    customerGroup:
                      id: string
                      name: string
                  contractId: string
                  contractNumber: string
                  noteToCustomer: string
                  externalReference: string
                  dueDate: string
                  periodStartDateTime: string
                  periodEndDateTime: string
                  lines:
                    - billingItemId: string
                      billingTariffId: string
                      description: string
                      amountExclVAT: 0
                      amountInclVAT: 0
                      vat: 0
                      quantity: 0
                      rawQuantity: 0
                      unitPrice: 0
                      startDateTime: string
                      endDateTime: string
                      taxCodeId: string
                      taxRate: 0
                      unitOfMeasure: { }
                      utilityType: { }
                      lineType: { }
                      consumptionBased: true
                      serviceLocationId: string
                      originalInvoiceId: string
                      sortOrder: 0
                      id: string
                  remainingInvoiceAmount: 0
                  totalAmountInclVAT: 0
                  totalAmountExclVAT: 0
                  paymentDetails:
                    paid: true
                    currentPaymentStatus: { }
                    paymentReference: string
                    paymentMethod: { }
                    directDebitCollectionDate: string
                    amountOfTimesRetried: 0
                    statusHistory:
                      - paymentStatus: { }
                        outgoingBankingTransactionId: string
                        outgoingBankingTransactionIdentification: string
                        outgoingMutationId: string
                        outgoingMutationDescription: string
                        incomingBankingTransactionId: string
                        incomingBankingTransactionIdentification: string
                        incomingMutationId: string
                        incomingMutationDescription: string
                        reversalReason: { }
                        reversalAdditionalInformation: string
                        mutationDateTime: string
                  attachmentId: string
                  creditedByInvoiceId: string
                  creditedInvoiceId: string
                  billingCompletenessId: string
                  propertyGroups:
                    - id: string
                      name: string
                  product:
                    id: string
                    name: string
                    productId: string
                    productName: string
                  companyBankAccountId: string
                  consumptionCalculationInputs:
                    - serviceLocationId: string
                      externalChannelIdentifier: string
                      meterSerialNumber: string
                      timeZone: string
                      utilityType: { }
                      meteringType: { }
                      unitOfMeasure: { }
                      timeOfUse: string
                      firstMeasurement:
                        value: 0
                        readingDateTime: string
                        unitOfMeasure: { }
                      secondMeasurement:
                        value: 0
                        readingDateTime: string
                        unitOfMeasure: { }
                      consumptionValue: 0
                      startDateTime: string
                      endDateTime: string
                  collectionDetails:
                    collectionCaseId: string
                    closed: true
                    workflowId: string
                    workflowName: string
                    previousStepId: string
                    previousStepName: string
                    previousStepExecutedAt: string
                    previousStepStatus: { }
                    nextStepId: string
                    nextStepName: string
                    nextStepExecutionDate: string
                  sent: { }
                  failureReasonCode:
                    key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                  failureDetails: string
                  supportsExternalPrinting: true
                  exportStatus: { }
                  newAdvanceAmountExclVAT: 0
                  newAdvanceAmountInclVAT: 0
                  advanceCalculationDetails:
                    newAdvanceAmountExclVAT: 0
                    newAdvanceAmountInclVAT: 0
                    oldAdvanceAmountInclVAT: 0
                    nextInvoiceAmountInclVat: 0
                    nextInvoiceAmountAccuracy: { }
                    recalculationType: { }
                    fallbackReason: { }
                    changedByUserId: string
                  ublAttachmentDetails:
                    errors:
                      - originatorType: { }
                        originatorId: string
                        message:
                          key: { }
                          correlationId: string
                          message: string
                          messageValues:
                            - dataType: { }
                              value: string
                              capitalize: true
                    attachmentId: string
                    attachmentFileName: string
  '/Invoices/{invoiceuuid}/replacedocument':
    post:
      tags:
        - Invoices
      summary: Replaces the document of an invoice.
      description: Replaces the document of an invoice.
      operationId: post-invoices-invoiceuuid-replacedocument
      parameters:
        - name: invoiceuuid
          in: path
          description: The UUID of the invoice.
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                ContentType:
                  type: string
                ContentDisposition:
                  type: string
                Headers:
                  type: object
                Length:
                  type: integer
                  format: int64
                Name:
                  type: string
                FileName:
                  type: string
          application/x-www-form-urlencoded:
            schema:
              properties:
                ContentType:
                  type: string
                ContentDisposition:
                  type: string
                Headers:
                  type: object
                Length:
                  type: integer
                  format: int64
                Name:
                  type: string
                FileName:
                  type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/InvoiceDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  invoiceNum: string
                  sequenceNumber: 0
                  invoiceDate: string
                  type: { }
                  status: { }
                  debtor:
                    customerId: string
                    displayName: string
                    customerAccountNumber: string
                    customerType: { }
                    customerGroup:
                      id: string
                      name: string
                  contractId: string
                  contractNumber: string
                  noteToCustomer: string
                  externalReference: string
                  dueDate: string
                  periodStartDateTime: string
                  periodEndDateTime: string
                  lines:
                    - billingItemId: string
                      billingTariffId: string
                      description: string
                      amountExclVAT: 0
                      amountInclVAT: 0
                      vat: 0
                      quantity: 0
                      rawQuantity: 0
                      unitPrice: 0
                      startDateTime: string
                      endDateTime: string
                      taxCodeId: string
                      taxRate: 0
                      unitOfMeasure: { }
                      utilityType: { }
                      lineType: { }
                      consumptionBased: true
                      serviceLocationId: string
                      originalInvoiceId: string
                      sortOrder: 0
                      id: string
                  remainingInvoiceAmount: 0
                  totalAmountInclVAT: 0
                  totalAmountExclVAT: 0
                  paymentDetails:
                    paid: true
                    currentPaymentStatus: { }
                    paymentReference: string
                    paymentMethod: { }
                    directDebitCollectionDate: string
                    amountOfTimesRetried: 0
                    statusHistory:
                      - paymentStatus: { }
                        outgoingBankingTransactionId: string
                        outgoingBankingTransactionIdentification: string
                        outgoingMutationId: string
                        outgoingMutationDescription: string
                        incomingBankingTransactionId: string
                        incomingBankingTransactionIdentification: string
                        incomingMutationId: string
                        incomingMutationDescription: string
                        reversalReason: { }
                        reversalAdditionalInformation: string
                        mutationDateTime: string
                  attachmentId: string
                  creditedByInvoiceId: string
                  creditedInvoiceId: string
                  billingCompletenessId: string
                  propertyGroups:
                    - id: string
                      name: string
                  product:
                    id: string
                    name: string
                    productId: string
                    productName: string
                  companyBankAccountId: string
                  consumptionCalculationInputs:
                    - serviceLocationId: string
                      externalChannelIdentifier: string
                      meterSerialNumber: string
                      timeZone: string
                      utilityType: { }
                      meteringType: { }
                      unitOfMeasure: { }
                      timeOfUse: string
                      firstMeasurement:
                        value: 0
                        readingDateTime: string
                        unitOfMeasure: { }
                      secondMeasurement:
                        value: 0
                        readingDateTime: string
                        unitOfMeasure: { }
                      consumptionValue: 0
                      startDateTime: string
                      endDateTime: string
                  collectionDetails:
                    collectionCaseId: string
                    closed: true
                    workflowId: string
                    workflowName: string
                    previousStepId: string
                    previousStepName: string
                    previousStepExecutedAt: string
                    previousStepStatus: { }
                    nextStepId: string
                    nextStepName: string
                    nextStepExecutionDate: string
                  sent: { }
                  failureReasonCode:
                    key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                  failureDetails: string
                  supportsExternalPrinting: true
                  exportStatus: { }
                  newAdvanceAmountExclVAT: 0
                  newAdvanceAmountInclVAT: 0
                  advanceCalculationDetails:
                    newAdvanceAmountExclVAT: 0
                    newAdvanceAmountInclVAT: 0
                    oldAdvanceAmountInclVAT: 0
                    nextInvoiceAmountInclVat: 0
                    nextInvoiceAmountAccuracy: { }
                    recalculationType: { }
                    fallbackReason: { }
                    changedByUserId: string
                  ublAttachmentDetails:
                    errors:
                      - originatorType: { }
                        originatorId: string
                        message:
                          key: { }
                          correlationId: string
                          message: string
                          messageValues:
                            - dataType: { }
                              value: string
                              capitalize: true
                    attachmentId: string
                    attachmentFileName: string
            text/json:
              schema:
                $ref: '#/components/schemas/InvoiceDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  invoiceNum: string
                  sequenceNumber: 0
                  invoiceDate: string
                  type: { }
                  status: { }
                  debtor:
                    customerId: string
                    displayName: string
                    customerAccountNumber: string
                    customerType: { }
                    customerGroup:
                      id: string
                      name: string
                  contractId: string
                  contractNumber: string
                  noteToCustomer: string
                  externalReference: string
                  dueDate: string
                  periodStartDateTime: string
                  periodEndDateTime: string
                  lines:
                    - billingItemId: string
                      billingTariffId: string
                      description: string
                      amountExclVAT: 0
                      amountInclVAT: 0
                      vat: 0
                      quantity: 0
                      rawQuantity: 0
                      unitPrice: 0
                      startDateTime: string
                      endDateTime: string
                      taxCodeId: string
                      taxRate: 0
                      unitOfMeasure: { }
                      utilityType: { }
                      lineType: { }
                      consumptionBased: true
                      serviceLocationId: string
                      originalInvoiceId: string
                      sortOrder: 0
                      id: string
                  remainingInvoiceAmount: 0
                  totalAmountInclVAT: 0
                  totalAmountExclVAT: 0
                  paymentDetails:
                    paid: true
                    currentPaymentStatus: { }
                    paymentReference: string
                    paymentMethod: { }
                    directDebitCollectionDate: string
                    amountOfTimesRetried: 0
                    statusHistory:
                      - paymentStatus: { }
                        outgoingBankingTransactionId: string
                        outgoingBankingTransactionIdentification: string
                        outgoingMutationId: string
                        outgoingMutationDescription: string
                        incomingBankingTransactionId: string
                        incomingBankingTransactionIdentification: string
                        incomingMutationId: string
                        incomingMutationDescription: string
                        reversalReason: { }
                        reversalAdditionalInformation: string
                        mutationDateTime: string
                  attachmentId: string
                  creditedByInvoiceId: string
                  creditedInvoiceId: string
                  billingCompletenessId: string
                  propertyGroups:
                    - id: string
                      name: string
                  product:
                    id: string
                    name: string
                    productId: string
                    productName: string
                  companyBankAccountId: string
                  consumptionCalculationInputs:
                    - serviceLocationId: string
                      externalChannelIdentifier: string
                      meterSerialNumber: string
                      timeZone: string
                      utilityType: { }
                      meteringType: { }
                      unitOfMeasure: { }
                      timeOfUse: string
                      firstMeasurement:
                        value: 0
                        readingDateTime: string
                        unitOfMeasure: { }
                      secondMeasurement:
                        value: 0
                        readingDateTime: string
                        unitOfMeasure: { }
                      consumptionValue: 0
                      startDateTime: string
                      endDateTime: string
                  collectionDetails:
                    collectionCaseId: string
                    closed: true
                    workflowId: string
                    workflowName: string
                    previousStepId: string
                    previousStepName: string
                    previousStepExecutedAt: string
                    previousStepStatus: { }
                    nextStepId: string
                    nextStepName: string
                    nextStepExecutionDate: string
                  sent: { }
                  failureReasonCode:
                    key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                  failureDetails: string
                  supportsExternalPrinting: true
                  exportStatus: { }
                  newAdvanceAmountExclVAT: 0
                  newAdvanceAmountInclVAT: 0
                  advanceCalculationDetails:
                    newAdvanceAmountExclVAT: 0
                    newAdvanceAmountInclVAT: 0
                    oldAdvanceAmountInclVAT: 0
                    nextInvoiceAmountInclVat: 0
                    nextInvoiceAmountAccuracy: { }
                    recalculationType: { }
                    fallbackReason: { }
                    changedByUserId: string
                  ublAttachmentDetails:
                    errors:
                      - originatorType: { }
                        originatorId: string
                        message:
                          key: { }
                          correlationId: string
                          message: string
                          messageValues:
                            - dataType: { }
                              value: string
                              capitalize: true
                    attachmentId: string
                    attachmentFileName: string
  '/Invoices/{invoiceuuid}/marksent':
    post:
      tags:
        - Invoices
      summary: Marks an invoice as sent.
      description: Marks an invoice as sent.
      operationId: post-invoices-invoiceuuid-marksent
      parameters:
        - name: invoiceuuid
          in: path
          description: The UUID of the invoice.
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/InvoiceDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  invoiceNum: string
                  sequenceNumber: 0
                  invoiceDate: string
                  type: { }
                  status: { }
                  debtor:
                    customerId: string
                    displayName: string
                    customerAccountNumber: string
                    customerType: { }
                    customerGroup:
                      id: string
                      name: string
                  contractId: string
                  contractNumber: string
                  noteToCustomer: string
                  externalReference: string
                  dueDate: string
                  periodStartDateTime: string
                  periodEndDateTime: string
                  lines:
                    - billingItemId: string
                      billingTariffId: string
                      description: string
                      amountExclVAT: 0
                      amountInclVAT: 0
                      vat: 0
                      quantity: 0
                      rawQuantity: 0
                      unitPrice: 0
                      startDateTime: string
                      endDateTime: string
                      taxCodeId: string
                      taxRate: 0
                      unitOfMeasure: { }
                      utilityType: { }
                      lineType: { }
                      consumptionBased: true
                      serviceLocationId: string
                      originalInvoiceId: string
                      sortOrder: 0
                      id: string
                  remainingInvoiceAmount: 0
                  totalAmountInclVAT: 0
                  totalAmountExclVAT: 0
                  paymentDetails:
                    paid: true
                    currentPaymentStatus: { }
                    paymentReference: string
                    paymentMethod: { }
                    directDebitCollectionDate: string
                    amountOfTimesRetried: 0
                    statusHistory:
                      - paymentStatus: { }
                        outgoingBankingTransactionId: string
                        outgoingBankingTransactionIdentification: string
                        outgoingMutationId: string
                        outgoingMutationDescription: string
                        incomingBankingTransactionId: string
                        incomingBankingTransactionIdentification: string
                        incomingMutationId: string
                        incomingMutationDescription: string
                        reversalReason: { }
                        reversalAdditionalInformation: string
                        mutationDateTime: string
                  attachmentId: string
                  creditedByInvoiceId: string
                  creditedInvoiceId: string
                  billingCompletenessId: string
                  propertyGroups:
                    - id: string
                      name: string
                  product:
                    id: string
                    name: string
                    productId: string
                    productName: string
                  companyBankAccountId: string
                  consumptionCalculationInputs:
                    - serviceLocationId: string
                      externalChannelIdentifier: string
                      meterSerialNumber: string
                      timeZone: string
                      utilityType: { }
                      meteringType: { }
                      unitOfMeasure: { }
                      timeOfUse: string
                      firstMeasurement:
                        value: 0
                        readingDateTime: string
                        unitOfMeasure: { }
                      secondMeasurement:
                        value: 0
                        readingDateTime: string
                        unitOfMeasure: { }
                      consumptionValue: 0
                      startDateTime: string
                      endDateTime: string
                  collectionDetails:
                    collectionCaseId: string
                    closed: true
                    workflowId: string
                    workflowName: string
                    previousStepId: string
                    previousStepName: string
                    previousStepExecutedAt: string
                    previousStepStatus: { }
                    nextStepId: string
                    nextStepName: string
                    nextStepExecutionDate: string
                  sent: { }
                  failureReasonCode:
                    key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                  failureDetails: string
                  supportsExternalPrinting: true
                  exportStatus: { }
                  newAdvanceAmountExclVAT: 0
                  newAdvanceAmountInclVAT: 0
                  advanceCalculationDetails:
                    newAdvanceAmountExclVAT: 0
                    newAdvanceAmountInclVAT: 0
                    oldAdvanceAmountInclVAT: 0
                    nextInvoiceAmountInclVat: 0
                    nextInvoiceAmountAccuracy: { }
                    recalculationType: { }
                    fallbackReason: { }
                    changedByUserId: string
                  ublAttachmentDetails:
                    errors:
                      - originatorType: { }
                        originatorId: string
                        message:
                          key: { }
                          correlationId: string
                          message: string
                          messageValues:
                            - dataType: { }
                              value: string
                              capitalize: true
                    attachmentId: string
                    attachmentFileName: string
            text/json:
              schema:
                $ref: '#/components/schemas/InvoiceDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  invoiceNum: string
                  sequenceNumber: 0
                  invoiceDate: string
                  type: { }
                  status: { }
                  debtor:
                    customerId: string
                    displayName: string
                    customerAccountNumber: string
                    customerType: { }
                    customerGroup:
                      id: string
                      name: string
                  contractId: string
                  contractNumber: string
                  noteToCustomer: string
                  externalReference: string
                  dueDate: string
                  periodStartDateTime: string
                  periodEndDateTime: string
                  lines:
                    - billingItemId: string
                      billingTariffId: string
                      description: string
                      amountExclVAT: 0
                      amountInclVAT: 0
                      vat: 0
                      quantity: 0
                      rawQuantity: 0
                      unitPrice: 0
                      startDateTime: string
                      endDateTime: string
                      taxCodeId: string
                      taxRate: 0
                      unitOfMeasure: { }
                      utilityType: { }
                      lineType: { }
                      consumptionBased: true
                      serviceLocationId: string
                      originalInvoiceId: string
                      sortOrder: 0
                      id: string
                  remainingInvoiceAmount: 0
                  totalAmountInclVAT: 0
                  totalAmountExclVAT: 0
                  paymentDetails:
                    paid: true
                    currentPaymentStatus: { }
                    paymentReference: string
                    paymentMethod: { }
                    directDebitCollectionDate: string
                    amountOfTimesRetried: 0
                    statusHistory:
                      - paymentStatus: { }
                        outgoingBankingTransactionId: string
                        outgoingBankingTransactionIdentification: string
                        outgoingMutationId: string
                        outgoingMutationDescription: string
                        incomingBankingTransactionId: string
                        incomingBankingTransactionIdentification: string
                        incomingMutationId: string
                        incomingMutationDescription: string
                        reversalReason: { }
                        reversalAdditionalInformation: string
                        mutationDateTime: string
                  attachmentId: string
                  creditedByInvoiceId: string
                  creditedInvoiceId: string
                  billingCompletenessId: string
                  propertyGroups:
                    - id: string
                      name: string
                  product:
                    id: string
                    name: string
                    productId: string
                    productName: string
                  companyBankAccountId: string
                  consumptionCalculationInputs:
                    - serviceLocationId: string
                      externalChannelIdentifier: string
                      meterSerialNumber: string
                      timeZone: string
                      utilityType: { }
                      meteringType: { }
                      unitOfMeasure: { }
                      timeOfUse: string
                      firstMeasurement:
                        value: 0
                        readingDateTime: string
                        unitOfMeasure: { }
                      secondMeasurement:
                        value: 0
                        readingDateTime: string
                        unitOfMeasure: { }
                      consumptionValue: 0
                      startDateTime: string
                      endDateTime: string
                  collectionDetails:
                    collectionCaseId: string
                    closed: true
                    workflowId: string
                    workflowName: string
                    previousStepId: string
                    previousStepName: string
                    previousStepExecutedAt: string
                    previousStepStatus: { }
                    nextStepId: string
                    nextStepName: string
                    nextStepExecutionDate: string
                  sent: { }
                  failureReasonCode:
                    key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                  failureDetails: string
                  supportsExternalPrinting: true
                  exportStatus: { }
                  newAdvanceAmountExclVAT: 0
                  newAdvanceAmountInclVAT: 0
                  advanceCalculationDetails:
                    newAdvanceAmountExclVAT: 0
                    newAdvanceAmountInclVAT: 0
                    oldAdvanceAmountInclVAT: 0
                    nextInvoiceAmountInclVat: 0
                    nextInvoiceAmountAccuracy: { }
                    recalculationType: { }
                    fallbackReason: { }
                    changedByUserId: string
                  ublAttachmentDetails:
                    errors:
                      - originatorType: { }
                        originatorId: string
                        message:
                          key: { }
                          correlationId: string
                          message: string
                          messageValues:
                            - dataType: { }
                              value: string
                              capitalize: true
                    attachmentId: string
                    attachmentFileName: string
  '/Invoices/{invoiceuuid}/regenerate':
    post:
      tags:
        - Invoices
      summary: Regenerates an invoice.
      description: Regenerates an invoice.
      operationId: post-invoices-invoiceuuid-regenerate
      parameters:
        - name: invoiceuuid
          in: path
          description: The UUID of the invoice.
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/InvoiceDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  invoiceNum: string
                  sequenceNumber: 0
                  invoiceDate: string
                  type: { }
                  status: { }
                  debtor:
                    customerId: string
                    displayName: string
                    customerAccountNumber: string
                    customerType: { }
                    customerGroup:
                      id: string
                      name: string
                  contractId: string
                  contractNumber: string
                  noteToCustomer: string
                  externalReference: string
                  dueDate: string
                  periodStartDateTime: string
                  periodEndDateTime: string
                  lines:
                    - billingItemId: string
                      billingTariffId: string
                      description: string
                      amountExclVAT: 0
                      amountInclVAT: 0
                      vat: 0
                      quantity: 0
                      rawQuantity: 0
                      unitPrice: 0
                      startDateTime: string
                      endDateTime: string
                      taxCodeId: string
                      taxRate: 0
                      unitOfMeasure: { }
                      utilityType: { }
                      lineType: { }
                      consumptionBased: true
                      serviceLocationId: string
                      originalInvoiceId: string
                      sortOrder: 0
                      id: string
                  remainingInvoiceAmount: 0
                  totalAmountInclVAT: 0
                  totalAmountExclVAT: 0
                  paymentDetails:
                    paid: true
                    currentPaymentStatus: { }
                    paymentReference: string
                    paymentMethod: { }
                    directDebitCollectionDate: string
                    amountOfTimesRetried: 0
                    statusHistory:
                      - paymentStatus: { }
                        outgoingBankingTransactionId: string
                        outgoingBankingTransactionIdentification: string
                        outgoingMutationId: string
                        outgoingMutationDescription: string
                        incomingBankingTransactionId: string
                        incomingBankingTransactionIdentification: string
                        incomingMutationId: string
                        incomingMutationDescription: string
                        reversalReason: { }
                        reversalAdditionalInformation: string
                        mutationDateTime: string
                  attachmentId: string
                  creditedByInvoiceId: string
                  creditedInvoiceId: string
                  billingCompletenessId: string
                  propertyGroups:
                    - id: string
                      name: string
                  product:
                    id: string
                    name: string
                    productId: string
                    productName: string
                  companyBankAccountId: string
                  consumptionCalculationInputs:
                    - serviceLocationId: string
                      externalChannelIdentifier: string
                      meterSerialNumber: string
                      timeZone: string
                      utilityType: { }
                      meteringType: { }
                      unitOfMeasure: { }
                      timeOfUse: string
                      firstMeasurement:
                        value: 0
                        readingDateTime: string
                        unitOfMeasure: { }
                      secondMeasurement:
                        value: 0
                        readingDateTime: string
                        unitOfMeasure: { }
                      consumptionValue: 0
                      startDateTime: string
                      endDateTime: string
                  collectionDetails:
                    collectionCaseId: string
                    closed: true
                    workflowId: string
                    workflowName: string
                    previousStepId: string
                    previousStepName: string
                    previousStepExecutedAt: string
                    previousStepStatus: { }
                    nextStepId: string
                    nextStepName: string
                    nextStepExecutionDate: string
                  sent: { }
                  failureReasonCode:
                    key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                  failureDetails: string
                  supportsExternalPrinting: true
                  exportStatus: { }
                  newAdvanceAmountExclVAT: 0
                  newAdvanceAmountInclVAT: 0
                  advanceCalculationDetails:
                    newAdvanceAmountExclVAT: 0
                    newAdvanceAmountInclVAT: 0
                    oldAdvanceAmountInclVAT: 0
                    nextInvoiceAmountInclVat: 0
                    nextInvoiceAmountAccuracy: { }
                    recalculationType: { }
                    fallbackReason: { }
                    changedByUserId: string
                  ublAttachmentDetails:
                    errors:
                      - originatorType: { }
                        originatorId: string
                        message:
                          key: { }
                          correlationId: string
                          message: string
                          messageValues:
                            - dataType: { }
                              value: string
                              capitalize: true
                    attachmentId: string
                    attachmentFileName: string
            text/json:
              schema:
                $ref: '#/components/schemas/InvoiceDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  invoiceNum: string
                  sequenceNumber: 0
                  invoiceDate: string
                  type: { }
                  status: { }
                  debtor:
                    customerId: string
                    displayName: string
                    customerAccountNumber: string
                    customerType: { }
                    customerGroup:
                      id: string
                      name: string
                  contractId: string
                  contractNumber: string
                  noteToCustomer: string
                  externalReference: string
                  dueDate: string
                  periodStartDateTime: string
                  periodEndDateTime: string
                  lines:
                    - billingItemId: string
                      billingTariffId: string
                      description: string
                      amountExclVAT: 0
                      amountInclVAT: 0
                      vat: 0
                      quantity: 0
                      rawQuantity: 0
                      unitPrice: 0
                      startDateTime: string
                      endDateTime: string
                      taxCodeId: string
                      taxRate: 0
                      unitOfMeasure: { }
                      utilityType: { }
                      lineType: { }
                      consumptionBased: true
                      serviceLocationId: string
                      originalInvoiceId: string
                      sortOrder: 0
                      id: string
                  remainingInvoiceAmount: 0
                  totalAmountInclVAT: 0
                  totalAmountExclVAT: 0
                  paymentDetails:
                    paid: true
                    currentPaymentStatus: { }
                    paymentReference: string
                    paymentMethod: { }
                    directDebitCollectionDate: string
                    amountOfTimesRetried: 0
                    statusHistory:
                      - paymentStatus: { }
                        outgoingBankingTransactionId: string
                        outgoingBankingTransactionIdentification: string
                        outgoingMutationId: string
                        outgoingMutationDescription: string
                        incomingBankingTransactionId: string
                        incomingBankingTransactionIdentification: string
                        incomingMutationId: string
                        incomingMutationDescription: string
                        reversalReason: { }
                        reversalAdditionalInformation: string
                        mutationDateTime: string
                  attachmentId: string
                  creditedByInvoiceId: string
                  creditedInvoiceId: string
                  billingCompletenessId: string
                  propertyGroups:
                    - id: string
                      name: string
                  product:
                    id: string
                    name: string
                    productId: string
                    productName: string
                  companyBankAccountId: string
                  consumptionCalculationInputs:
                    - serviceLocationId: string
                      externalChannelIdentifier: string
                      meterSerialNumber: string
                      timeZone: string
                      utilityType: { }
                      meteringType: { }
                      unitOfMeasure: { }
                      timeOfUse: string
                      firstMeasurement:
                        value: 0
                        readingDateTime: string
                        unitOfMeasure: { }
                      secondMeasurement:
                        value: 0
                        readingDateTime: string
                        unitOfMeasure: { }
                      consumptionValue: 0
                      startDateTime: string
                      endDateTime: string
                  collectionDetails:
                    collectionCaseId: string
                    closed: true
                    workflowId: string
                    workflowName: string
                    previousStepId: string
                    previousStepName: string
                    previousStepExecutedAt: string
                    previousStepStatus: { }
                    nextStepId: string
                    nextStepName: string
                    nextStepExecutionDate: string
                  sent: { }
                  failureReasonCode:
                    key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                  failureDetails: string
                  supportsExternalPrinting: true
                  exportStatus: { }
                  newAdvanceAmountExclVAT: 0
                  newAdvanceAmountInclVAT: 0
                  advanceCalculationDetails:
                    newAdvanceAmountExclVAT: 0
                    newAdvanceAmountInclVAT: 0
                    oldAdvanceAmountInclVAT: 0
                    nextInvoiceAmountInclVat: 0
                    nextInvoiceAmountAccuracy: { }
                    recalculationType: { }
                    fallbackReason: { }
                    changedByUserId: string
                  ublAttachmentDetails:
                    errors:
                      - originatorType: { }
                        originatorId: string
                        message:
                          key: { }
                          correlationId: string
                          message: string
                          messageValues:
                            - dataType: { }
                              value: string
                              capitalize: true
                    attachmentId: string
                    attachmentFileName: string
  '/Invoices/{invoiceuuid}/credit':
    post:
      tags:
        - Invoices
      summary: Credits an invoice.
      description: Credits an invoice.
      operationId: post-invoices-invoiceuuid-credit
      parameters:
        - name: invoiceuuid
          in: path
          description: The UUID of the invoice.
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/InvoiceDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  invoiceNum: string
                  sequenceNumber: 0
                  invoiceDate: string
                  type: { }
                  status: { }
                  debtor:
                    customerId: string
                    displayName: string
                    customerAccountNumber: string
                    customerType: { }
                    customerGroup:
                      id: string
                      name: string
                  contractId: string
                  contractNumber: string
                  noteToCustomer: string
                  externalReference: string
                  dueDate: string
                  periodStartDateTime: string
                  periodEndDateTime: string
                  lines:
                    - billingItemId: string
                      billingTariffId: string
                      description: string
                      amountExclVAT: 0
                      amountInclVAT: 0
                      vat: 0
                      quantity: 0
                      rawQuantity: 0
                      unitPrice: 0
                      startDateTime: string
                      endDateTime: string
                      taxCodeId: string
                      taxRate: 0
                      unitOfMeasure: { }
                      utilityType: { }
                      lineType: { }
                      consumptionBased: true
                      serviceLocationId: string
                      originalInvoiceId: string
                      sortOrder: 0
                      id: string
                  remainingInvoiceAmount: 0
                  totalAmountInclVAT: 0
                  totalAmountExclVAT: 0
                  paymentDetails:
                    paid: true
                    currentPaymentStatus: { }
                    paymentReference: string
                    paymentMethod: { }
                    directDebitCollectionDate: string
                    amountOfTimesRetried: 0
                    statusHistory:
                      - paymentStatus: { }
                        outgoingBankingTransactionId: string
                        outgoingBankingTransactionIdentification: string
                        outgoingMutationId: string
                        outgoingMutationDescription: string
                        incomingBankingTransactionId: string
                        incomingBankingTransactionIdentification: string
                        incomingMutationId: string
                        incomingMutationDescription: string
                        reversalReason: { }
                        reversalAdditionalInformation: string
                        mutationDateTime: string
                  attachmentId: string
                  creditedByInvoiceId: string
                  creditedInvoiceId: string
                  billingCompletenessId: string
                  propertyGroups:
                    - id: string
                      name: string
                  product:
                    id: string
                    name: string
                    productId: string
                    productName: string
                  companyBankAccountId: string
                  consumptionCalculationInputs:
                    - serviceLocationId: string
                      externalChannelIdentifier: string
                      meterSerialNumber: string
                      timeZone: string
                      utilityType: { }
                      meteringType: { }
                      unitOfMeasure: { }
                      timeOfUse: string
                      firstMeasurement:
                        value: 0
                        readingDateTime: string
                        unitOfMeasure: { }
                      secondMeasurement:
                        value: 0
                        readingDateTime: string
                        unitOfMeasure: { }
                      consumptionValue: 0
                      startDateTime: string
                      endDateTime: string
                  collectionDetails:
                    collectionCaseId: string
                    closed: true
                    workflowId: string
                    workflowName: string
                    previousStepId: string
                    previousStepName: string
                    previousStepExecutedAt: string
                    previousStepStatus: { }
                    nextStepId: string
                    nextStepName: string
                    nextStepExecutionDate: string
                  sent: { }
                  failureReasonCode:
                    key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                  failureDetails: string
                  supportsExternalPrinting: true
                  exportStatus: { }
                  newAdvanceAmountExclVAT: 0
                  newAdvanceAmountInclVAT: 0
                  advanceCalculationDetails:
                    newAdvanceAmountExclVAT: 0
                    newAdvanceAmountInclVAT: 0
                    oldAdvanceAmountInclVAT: 0
                    nextInvoiceAmountInclVat: 0
                    nextInvoiceAmountAccuracy: { }
                    recalculationType: { }
                    fallbackReason: { }
                    changedByUserId: string
                  ublAttachmentDetails:
                    errors:
                      - originatorType: { }
                        originatorId: string
                        message:
                          key: { }
                          correlationId: string
                          message: string
                          messageValues:
                            - dataType: { }
                              value: string
                              capitalize: true
                    attachmentId: string
                    attachmentFileName: string
            text/json:
              schema:
                $ref: '#/components/schemas/InvoiceDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  invoiceNum: string
                  sequenceNumber: 0
                  invoiceDate: string
                  type: { }
                  status: { }
                  debtor:
                    customerId: string
                    displayName: string
                    customerAccountNumber: string
                    customerType: { }
                    customerGroup:
                      id: string
                      name: string
                  contractId: string
                  contractNumber: string
                  noteToCustomer: string
                  externalReference: string
                  dueDate: string
                  periodStartDateTime: string
                  periodEndDateTime: string
                  lines:
                    - billingItemId: string
                      billingTariffId: string
                      description: string
                      amountExclVAT: 0
                      amountInclVAT: 0
                      vat: 0
                      quantity: 0
                      rawQuantity: 0
                      unitPrice: 0
                      startDateTime: string
                      endDateTime: string
                      taxCodeId: string
                      taxRate: 0
                      unitOfMeasure: { }
                      utilityType: { }
                      lineType: { }
                      consumptionBased: true
                      serviceLocationId: string
                      originalInvoiceId: string
                      sortOrder: 0
                      id: string
                  remainingInvoiceAmount: 0
                  totalAmountInclVAT: 0
                  totalAmountExclVAT: 0
                  paymentDetails:
                    paid: true
                    currentPaymentStatus: { }
                    paymentReference: string
                    paymentMethod: { }
                    directDebitCollectionDate: string
                    amountOfTimesRetried: 0
                    statusHistory:
                      - paymentStatus: { }
                        outgoingBankingTransactionId: string
                        outgoingBankingTransactionIdentification: string
                        outgoingMutationId: string
                        outgoingMutationDescription: string
                        incomingBankingTransactionId: string
                        incomingBankingTransactionIdentification: string
                        incomingMutationId: string
                        incomingMutationDescription: string
                        reversalReason: { }
                        reversalAdditionalInformation: string
                        mutationDateTime: string
                  attachmentId: string
                  creditedByInvoiceId: string
                  creditedInvoiceId: string
                  billingCompletenessId: string
                  propertyGroups:
                    - id: string
                      name: string
                  product:
                    id: string
                    name: string
                    productId: string
                    productName: string
                  companyBankAccountId: string
                  consumptionCalculationInputs:
                    - serviceLocationId: string
                      externalChannelIdentifier: string
                      meterSerialNumber: string
                      timeZone: string
                      utilityType: { }
                      meteringType: { }
                      unitOfMeasure: { }
                      timeOfUse: string
                      firstMeasurement:
                        value: 0
                        readingDateTime: string
                        unitOfMeasure: { }
                      secondMeasurement:
                        value: 0
                        readingDateTime: string
                        unitOfMeasure: { }
                      consumptionValue: 0
                      startDateTime: string
                      endDateTime: string
                  collectionDetails:
                    collectionCaseId: string
                    closed: true
                    workflowId: string
                    workflowName: string
                    previousStepId: string
                    previousStepName: string
                    previousStepExecutedAt: string
                    previousStepStatus: { }
                    nextStepId: string
                    nextStepName: string
                    nextStepExecutionDate: string
                  sent: { }
                  failureReasonCode:
                    key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                  failureDetails: string
                  supportsExternalPrinting: true
                  exportStatus: { }
                  newAdvanceAmountExclVAT: 0
                  newAdvanceAmountInclVAT: 0
                  advanceCalculationDetails:
                    newAdvanceAmountExclVAT: 0
                    newAdvanceAmountInclVAT: 0
                    oldAdvanceAmountInclVAT: 0
                    nextInvoiceAmountInclVat: 0
                    nextInvoiceAmountAccuracy: { }
                    recalculationType: { }
                    fallbackReason: { }
                    changedByUserId: string
                  ublAttachmentDetails:
                    errors:
                      - originatorType: { }
                        originatorId: string
                        message:
                          key: { }
                          correlationId: string
                          message: string
                          messageValues:
                            - dataType: { }
                              value: string
                              capitalize: true
                    attachmentId: string
                    attachmentFileName: string
  '/Invoices/{invoiceuuid}/send':
    post:
      tags:
        - Invoices
      summary: Sends an invoice via email.
      description: Sends an invoice via email.
      operationId: post-invoices-invoiceuuid-send
      parameters:
        - name: invoiceuuid
          in: path
          description: The UUID of the invoice.
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/InvoiceDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  invoiceNum: string
                  sequenceNumber: 0
                  invoiceDate: string
                  type: { }
                  status: { }
                  debtor:
                    customerId: string
                    displayName: string
                    customerAccountNumber: string
                    customerType: { }
                    customerGroup:
                      id: string
                      name: string
                  contractId: string
                  contractNumber: string
                  noteToCustomer: string
                  externalReference: string
                  dueDate: string
                  periodStartDateTime: string
                  periodEndDateTime: string
                  lines:
                    - billingItemId: string
                      billingTariffId: string
                      description: string
                      amountExclVAT: 0
                      amountInclVAT: 0
                      vat: 0
                      quantity: 0
                      rawQuantity: 0
                      unitPrice: 0
                      startDateTime: string
                      endDateTime: string
                      taxCodeId: string
                      taxRate: 0
                      unitOfMeasure: { }
                      utilityType: { }
                      lineType: { }
                      consumptionBased: true
                      serviceLocationId: string
                      originalInvoiceId: string
                      sortOrder: 0
                      id: string
                  remainingInvoiceAmount: 0
                  totalAmountInclVAT: 0
                  totalAmountExclVAT: 0
                  paymentDetails:
                    paid: true
                    currentPaymentStatus: { }
                    paymentReference: string
                    paymentMethod: { }
                    directDebitCollectionDate: string
                    amountOfTimesRetried: 0
                    statusHistory:
                      - paymentStatus: { }
                        outgoingBankingTransactionId: string
                        outgoingBankingTransactionIdentification: string
                        outgoingMutationId: string
                        outgoingMutationDescription: string
                        incomingBankingTransactionId: string
                        incomingBankingTransactionIdentification: string
                        incomingMutationId: string
                        incomingMutationDescription: string
                        reversalReason: { }
                        reversalAdditionalInformation: string
                        mutationDateTime: string
                  attachmentId: string
                  creditedByInvoiceId: string
                  creditedInvoiceId: string
                  billingCompletenessId: string
                  propertyGroups:
                    - id: string
                      name: string
                  product:
                    id: string
                    name: string
                    productId: string
                    productName: string
                  companyBankAccountId: string
                  consumptionCalculationInputs:
                    - serviceLocationId: string
                      externalChannelIdentifier: string
                      meterSerialNumber: string
                      timeZone: string
                      utilityType: { }
                      meteringType: { }
                      unitOfMeasure: { }
                      timeOfUse: string
                      firstMeasurement:
                        value: 0
                        readingDateTime: string
                        unitOfMeasure: { }
                      secondMeasurement:
                        value: 0
                        readingDateTime: string
                        unitOfMeasure: { }
                      consumptionValue: 0
                      startDateTime: string
                      endDateTime: string
                  collectionDetails:
                    collectionCaseId: string
                    closed: true
                    workflowId: string
                    workflowName: string
                    previousStepId: string
                    previousStepName: string
                    previousStepExecutedAt: string
                    previousStepStatus: { }
                    nextStepId: string
                    nextStepName: string
                    nextStepExecutionDate: string
                  sent: { }
                  failureReasonCode:
                    key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                  failureDetails: string
                  supportsExternalPrinting: true
                  exportStatus: { }
                  newAdvanceAmountExclVAT: 0
                  newAdvanceAmountInclVAT: 0
                  advanceCalculationDetails:
                    newAdvanceAmountExclVAT: 0
                    newAdvanceAmountInclVAT: 0
                    oldAdvanceAmountInclVAT: 0
                    nextInvoiceAmountInclVat: 0
                    nextInvoiceAmountAccuracy: { }
                    recalculationType: { }
                    fallbackReason: { }
                    changedByUserId: string
                  ublAttachmentDetails:
                    errors:
                      - originatorType: { }
                        originatorId: string
                        message:
                          key: { }
                          correlationId: string
                          message: string
                          messageValues:
                            - dataType: { }
                              value: string
                              capitalize: true
                    attachmentId: string
                    attachmentFileName: string
            text/json:
              schema:
                $ref: '#/components/schemas/InvoiceDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  invoiceNum: string
                  sequenceNumber: 0
                  invoiceDate: string
                  type: { }
                  status: { }
                  debtor:
                    customerId: string
                    displayName: string
                    customerAccountNumber: string
                    customerType: { }
                    customerGroup:
                      id: string
                      name: string
                  contractId: string
                  contractNumber: string
                  noteToCustomer: string
                  externalReference: string
                  dueDate: string
                  periodStartDateTime: string
                  periodEndDateTime: string
                  lines:
                    - billingItemId: string
                      billingTariffId: string
                      description: string
                      amountExclVAT: 0
                      amountInclVAT: 0
                      vat: 0
                      quantity: 0
                      rawQuantity: 0
                      unitPrice: 0
                      startDateTime: string
                      endDateTime: string
                      taxCodeId: string
                      taxRate: 0
                      unitOfMeasure: { }
                      utilityType: { }
                      lineType: { }
                      consumptionBased: true
                      serviceLocationId: string
                      originalInvoiceId: string
                      sortOrder: 0
                      id: string
                  remainingInvoiceAmount: 0
                  totalAmountInclVAT: 0
                  totalAmountExclVAT: 0
                  paymentDetails:
                    paid: true
                    currentPaymentStatus: { }
                    paymentReference: string
                    paymentMethod: { }
                    directDebitCollectionDate: string
                    amountOfTimesRetried: 0
                    statusHistory:
                      - paymentStatus: { }
                        outgoingBankingTransactionId: string
                        outgoingBankingTransactionIdentification: string
                        outgoingMutationId: string
                        outgoingMutationDescription: string
                        incomingBankingTransactionId: string
                        incomingBankingTransactionIdentification: string
                        incomingMutationId: string
                        incomingMutationDescription: string
                        reversalReason: { }
                        reversalAdditionalInformation: string
                        mutationDateTime: string
                  attachmentId: string
                  creditedByInvoiceId: string
                  creditedInvoiceId: string
                  billingCompletenessId: string
                  propertyGroups:
                    - id: string
                      name: string
                  product:
                    id: string
                    name: string
                    productId: string
                    productName: string
                  companyBankAccountId: string
                  consumptionCalculationInputs:
                    - serviceLocationId: string
                      externalChannelIdentifier: string
                      meterSerialNumber: string
                      timeZone: string
                      utilityType: { }
                      meteringType: { }
                      unitOfMeasure: { }
                      timeOfUse: string
                      firstMeasurement:
                        value: 0
                        readingDateTime: string
                        unitOfMeasure: { }
                      secondMeasurement:
                        value: 0
                        readingDateTime: string
                        unitOfMeasure: { }
                      consumptionValue: 0
                      startDateTime: string
                      endDateTime: string
                  collectionDetails:
                    collectionCaseId: string
                    closed: true
                    workflowId: string
                    workflowName: string
                    previousStepId: string
                    previousStepName: string
                    previousStepExecutedAt: string
                    previousStepStatus: { }
                    nextStepId: string
                    nextStepName: string
                    nextStepExecutionDate: string
                  sent: { }
                  failureReasonCode:
                    key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                  failureDetails: string
                  supportsExternalPrinting: true
                  exportStatus: { }
                  newAdvanceAmountExclVAT: 0
                  newAdvanceAmountInclVAT: 0
                  advanceCalculationDetails:
                    newAdvanceAmountExclVAT: 0
                    newAdvanceAmountInclVAT: 0
                    oldAdvanceAmountInclVAT: 0
                    nextInvoiceAmountInclVat: 0
                    nextInvoiceAmountAccuracy: { }
                    recalculationType: { }
                    fallbackReason: { }
                    changedByUserId: string
                  ublAttachmentDetails:
                    errors:
                      - originatorType: { }
                        originatorId: string
                        message:
                          key: { }
                          correlationId: string
                          message: string
                          messageValues:
                            - dataType: { }
                              value: string
                              capitalize: true
                    attachmentId: string
                    attachmentFileName: string
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
  '/Invoices/{invoiceuuid}/sendviapostal':
    post:
      tags:
        - Invoices
      summary: Sends an invoice via postal mail.
      description: Sends an invoice via postal mail.
      operationId: post-invoices-invoiceuuid-sendviapostal
      parameters:
        - name: invoiceuuid
          in: path
          description: The UUID of the invoice.
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/InvoiceDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  invoiceNum: string
                  sequenceNumber: 0
                  invoiceDate: string
                  type: { }
                  status: { }
                  debtor:
                    customerId: string
                    displayName: string
                    customerAccountNumber: string
                    customerType: { }
                    customerGroup:
                      id: string
                      name: string
                  contractId: string
                  contractNumber: string
                  noteToCustomer: string
                  externalReference: string
                  dueDate: string
                  periodStartDateTime: string
                  periodEndDateTime: string
                  lines:
                    - billingItemId: string
                      billingTariffId: string
                      description: string
                      amountExclVAT: 0
                      amountInclVAT: 0
                      vat: 0
                      quantity: 0
                      rawQuantity: 0
                      unitPrice: 0
                      startDateTime: string
                      endDateTime: string
                      taxCodeId: string
                      taxRate: 0
                      unitOfMeasure: { }
                      utilityType: { }
                      lineType: { }
                      consumptionBased: true
                      serviceLocationId: string
                      originalInvoiceId: string
                      sortOrder: 0
                      id: string
                  remainingInvoiceAmount: 0
                  totalAmountInclVAT: 0
                  totalAmountExclVAT: 0
                  paymentDetails:
                    paid: true
                    currentPaymentStatus: { }
                    paymentReference: string
                    paymentMethod: { }
                    directDebitCollectionDate: string
                    amountOfTimesRetried: 0
                    statusHistory:
                      - paymentStatus: { }
                        outgoingBankingTransactionId: string
                        outgoingBankingTransactionIdentification: string
                        outgoingMutationId: string
                        outgoingMutationDescription: string
                        incomingBankingTransactionId: string
                        incomingBankingTransactionIdentification: string
                        incomingMutationId: string
                        incomingMutationDescription: string
                        reversalReason: { }
                        reversalAdditionalInformation: string
                        mutationDateTime: string
                  attachmentId: string
                  creditedByInvoiceId: string
                  creditedInvoiceId: string
                  billingCompletenessId: string
                  propertyGroups:
                    - id: string
                      name: string
                  product:
                    id: string
                    name: string
                    productId: string
                    productName: string
                  companyBankAccountId: string
                  consumptionCalculationInputs:
                    - serviceLocationId: string
                      externalChannelIdentifier: string
                      meterSerialNumber: string
                      timeZone: string
                      utilityType: { }
                      meteringType: { }
                      unitOfMeasure: { }
                      timeOfUse: string
                      firstMeasurement:
                        value: 0
                        readingDateTime: string
                        unitOfMeasure: { }
                      secondMeasurement:
                        value: 0
                        readingDateTime: string
                        unitOfMeasure: { }
                      consumptionValue: 0
                      startDateTime: string
                      endDateTime: string
                  collectionDetails:
                    collectionCaseId: string
                    closed: true
                    workflowId: string
                    workflowName: string
                    previousStepId: string
                    previousStepName: string
                    previousStepExecutedAt: string
                    previousStepStatus: { }
                    nextStepId: string
                    nextStepName: string
                    nextStepExecutionDate: string
                  sent: { }
                  failureReasonCode:
                    key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                  failureDetails: string
                  supportsExternalPrinting: true
                  exportStatus: { }
                  newAdvanceAmountExclVAT: 0
                  newAdvanceAmountInclVAT: 0
                  advanceCalculationDetails:
                    newAdvanceAmountExclVAT: 0
                    newAdvanceAmountInclVAT: 0
                    oldAdvanceAmountInclVAT: 0
                    nextInvoiceAmountInclVat: 0
                    nextInvoiceAmountAccuracy: { }
                    recalculationType: { }
                    fallbackReason: { }
                    changedByUserId: string
                  ublAttachmentDetails:
                    errors:
                      - originatorType: { }
                        originatorId: string
                        message:
                          key: { }
                          correlationId: string
                          message: string
                          messageValues:
                            - dataType: { }
                              value: string
                              capitalize: true
                    attachmentId: string
                    attachmentFileName: string
            text/json:
              schema:
                $ref: '#/components/schemas/InvoiceDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  invoiceNum: string
                  sequenceNumber: 0
                  invoiceDate: string
                  type: { }
                  status: { }
                  debtor:
                    customerId: string
                    displayName: string
                    customerAccountNumber: string
                    customerType: { }
                    customerGroup:
                      id: string
                      name: string
                  contractId: string
                  contractNumber: string
                  noteToCustomer: string
                  externalReference: string
                  dueDate: string
                  periodStartDateTime: string
                  periodEndDateTime: string
                  lines:
                    - billingItemId: string
                      billingTariffId: string
                      description: string
                      amountExclVAT: 0
                      amountInclVAT: 0
                      vat: 0
                      quantity: 0
                      rawQuantity: 0
                      unitPrice: 0
                      startDateTime: string
                      endDateTime: string
                      taxCodeId: string
                      taxRate: 0
                      unitOfMeasure: { }
                      utilityType: { }
                      lineType: { }
                      consumptionBased: true
                      serviceLocationId: string
                      originalInvoiceId: string
                      sortOrder: 0
                      id: string
                  remainingInvoiceAmount: 0
                  totalAmountInclVAT: 0
                  totalAmountExclVAT: 0
                  paymentDetails:
                    paid: true
                    currentPaymentStatus: { }
                    paymentReference: string
                    paymentMethod: { }
                    directDebitCollectionDate: string
                    amountOfTimesRetried: 0
                    statusHistory:
                      - paymentStatus: { }
                        outgoingBankingTransactionId: string
                        outgoingBankingTransactionIdentification: string
                        outgoingMutationId: string
                        outgoingMutationDescription: string
                        incomingBankingTransactionId: string
                        incomingBankingTransactionIdentification: string
                        incomingMutationId: string
                        incomingMutationDescription: string
                        reversalReason: { }
                        reversalAdditionalInformation: string
                        mutationDateTime: string
                  attachmentId: string
                  creditedByInvoiceId: string
                  creditedInvoiceId: string
                  billingCompletenessId: string
                  propertyGroups:
                    - id: string
                      name: string
                  product:
                    id: string
                    name: string
                    productId: string
                    productName: string
                  companyBankAccountId: string
                  consumptionCalculationInputs:
                    - serviceLocationId: string
                      externalChannelIdentifier: string
                      meterSerialNumber: string
                      timeZone: string
                      utilityType: { }
                      meteringType: { }
                      unitOfMeasure: { }
                      timeOfUse: string
                      firstMeasurement:
                        value: 0
                        readingDateTime: string
                        unitOfMeasure: { }
                      secondMeasurement:
                        value: 0
                        readingDateTime: string
                        unitOfMeasure: { }
                      consumptionValue: 0
                      startDateTime: string
                      endDateTime: string
                  collectionDetails:
                    collectionCaseId: string
                    closed: true
                    workflowId: string
                    workflowName: string
                    previousStepId: string
                    previousStepName: string
                    previousStepExecutedAt: string
                    previousStepStatus: { }
                    nextStepId: string
                    nextStepName: string
                    nextStepExecutionDate: string
                  sent: { }
                  failureReasonCode:
                    key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                  failureDetails: string
                  supportsExternalPrinting: true
                  exportStatus: { }
                  newAdvanceAmountExclVAT: 0
                  newAdvanceAmountInclVAT: 0
                  advanceCalculationDetails:
                    newAdvanceAmountExclVAT: 0
                    newAdvanceAmountInclVAT: 0
                    oldAdvanceAmountInclVAT: 0
                    nextInvoiceAmountInclVat: 0
                    nextInvoiceAmountAccuracy: { }
                    recalculationType: { }
                    fallbackReason: { }
                    changedByUserId: string
                  ublAttachmentDetails:
                    errors:
                      - originatorType: { }
                        originatorId: string
                        message:
                          key: { }
                          correlationId: string
                          message: string
                          messageValues:
                            - dataType: { }
                              value: string
                              capitalize: true
                    attachmentId: string
                    attachmentFileName: string
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
  '/Invoices/{invoiceuuid}/changeexportstatus':
    post:
      tags:
        - Invoices
      summary: Changes the export status of an invoice.
      description: Changes the export status of an invoice.
      operationId: post-invoices-invoiceuuid-changeexportstatus
      parameters:
        - name: invoiceuuid
          in: path
          description: The UUID of the invoice.
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: The request containing the new export status.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ChangeExportStatusRequest'
              description: "Represents a request to change the export status of an invoice.\r\nThis DTO is used to update the export status of a single invoice."
            example:
              exportStatus: { }
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ChangeExportStatusRequest'
              description: "Represents a request to change the export status of an invoice.\r\nThis DTO is used to update the export status of a single invoice."
            example:
              exportStatus: { }
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ChangeExportStatusRequest'
              description: "Represents a request to change the export status of an invoice.\r\nThis DTO is used to update the export status of a single invoice."
            example:
              exportStatus: { }
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/InvoiceDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  invoiceNum: string
                  sequenceNumber: 0
                  invoiceDate: string
                  type: { }
                  status: { }
                  debtor:
                    customerId: string
                    displayName: string
                    customerAccountNumber: string
                    customerType: { }
                    customerGroup:
                      id: string
                      name: string
                  contractId: string
                  contractNumber: string
                  noteToCustomer: string
                  externalReference: string
                  dueDate: string
                  periodStartDateTime: string
                  periodEndDateTime: string
                  lines:
                    - billingItemId: string
                      billingTariffId: string
                      description: string
                      amountExclVAT: 0
                      amountInclVAT: 0
                      vat: 0
                      quantity: 0
                      rawQuantity: 0
                      unitPrice: 0
                      startDateTime: string
                      endDateTime: string
                      taxCodeId: string
                      taxRate: 0
                      unitOfMeasure: { }
                      utilityType: { }
                      lineType: { }
                      consumptionBased: true
                      serviceLocationId: string
                      originalInvoiceId: string
                      sortOrder: 0
                      id: string
                  remainingInvoiceAmount: 0
                  totalAmountInclVAT: 0
                  totalAmountExclVAT: 0
                  paymentDetails:
                    paid: true
                    currentPaymentStatus: { }
                    paymentReference: string
                    paymentMethod: { }
                    directDebitCollectionDate: string
                    amountOfTimesRetried: 0
                    statusHistory:
                      - paymentStatus: { }
                        outgoingBankingTransactionId: string
                        outgoingBankingTransactionIdentification: string
                        outgoingMutationId: string
                        outgoingMutationDescription: string
                        incomingBankingTransactionId: string
                        incomingBankingTransactionIdentification: string
                        incomingMutationId: string
                        incomingMutationDescription: string
                        reversalReason: { }
                        reversalAdditionalInformation: string
                        mutationDateTime: string
                  attachmentId: string
                  creditedByInvoiceId: string
                  creditedInvoiceId: string
                  billingCompletenessId: string
                  propertyGroups:
                    - id: string
                      name: string
                  product:
                    id: string
                    name: string
                    productId: string
                    productName: string
                  companyBankAccountId: string
                  consumptionCalculationInputs:
                    - serviceLocationId: string
                      externalChannelIdentifier: string
                      meterSerialNumber: string
                      timeZone: string
                      utilityType: { }
                      meteringType: { }
                      unitOfMeasure: { }
                      timeOfUse: string
                      firstMeasurement:
                        value: 0
                        readingDateTime: string
                        unitOfMeasure: { }
                      secondMeasurement:
                        value: 0
                        readingDateTime: string
                        unitOfMeasure: { }
                      consumptionValue: 0
                      startDateTime: string
                      endDateTime: string
                  collectionDetails:
                    collectionCaseId: string
                    closed: true
                    workflowId: string
                    workflowName: string
                    previousStepId: string
                    previousStepName: string
                    previousStepExecutedAt: string
                    previousStepStatus: { }
                    nextStepId: string
                    nextStepName: string
                    nextStepExecutionDate: string
                  sent: { }
                  failureReasonCode:
                    key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                  failureDetails: string
                  supportsExternalPrinting: true
                  exportStatus: { }
                  newAdvanceAmountExclVAT: 0
                  newAdvanceAmountInclVAT: 0
                  advanceCalculationDetails:
                    newAdvanceAmountExclVAT: 0
                    newAdvanceAmountInclVAT: 0
                    oldAdvanceAmountInclVAT: 0
                    nextInvoiceAmountInclVat: 0
                    nextInvoiceAmountAccuracy: { }
                    recalculationType: { }
                    fallbackReason: { }
                    changedByUserId: string
                  ublAttachmentDetails:
                    errors:
                      - originatorType: { }
                        originatorId: string
                        message:
                          key: { }
                          correlationId: string
                          message: string
                          messageValues:
                            - dataType: { }
                              value: string
                              capitalize: true
                    attachmentId: string
                    attachmentFileName: string
            text/json:
              schema:
                $ref: '#/components/schemas/InvoiceDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  invoiceNum: string
                  sequenceNumber: 0
                  invoiceDate: string
                  type: { }
                  status: { }
                  debtor:
                    customerId: string
                    displayName: string
                    customerAccountNumber: string
                    customerType: { }
                    customerGroup:
                      id: string
                      name: string
                  contractId: string
                  contractNumber: string
                  noteToCustomer: string
                  externalReference: string
                  dueDate: string
                  periodStartDateTime: string
                  periodEndDateTime: string
                  lines:
                    - billingItemId: string
                      billingTariffId: string
                      description: string
                      amountExclVAT: 0
                      amountInclVAT: 0
                      vat: 0
                      quantity: 0
                      rawQuantity: 0
                      unitPrice: 0
                      startDateTime: string
                      endDateTime: string
                      taxCodeId: string
                      taxRate: 0
                      unitOfMeasure: { }
                      utilityType: { }
                      lineType: { }
                      consumptionBased: true
                      serviceLocationId: string
                      originalInvoiceId: string
                      sortOrder: 0
                      id: string
                  remainingInvoiceAmount: 0
                  totalAmountInclVAT: 0
                  totalAmountExclVAT: 0
                  paymentDetails:
                    paid: true
                    currentPaymentStatus: { }
                    paymentReference: string
                    paymentMethod: { }
                    directDebitCollectionDate: string
                    amountOfTimesRetried: 0
                    statusHistory:
                      - paymentStatus: { }
                        outgoingBankingTransactionId: string
                        outgoingBankingTransactionIdentification: string
                        outgoingMutationId: string
                        outgoingMutationDescription: string
                        incomingBankingTransactionId: string
                        incomingBankingTransactionIdentification: string
                        incomingMutationId: string
                        incomingMutationDescription: string
                        reversalReason: { }
                        reversalAdditionalInformation: string
                        mutationDateTime: string
                  attachmentId: string
                  creditedByInvoiceId: string
                  creditedInvoiceId: string
                  billingCompletenessId: string
                  propertyGroups:
                    - id: string
                      name: string
                  product:
                    id: string
                    name: string
                    productId: string
                    productName: string
                  companyBankAccountId: string
                  consumptionCalculationInputs:
                    - serviceLocationId: string
                      externalChannelIdentifier: string
                      meterSerialNumber: string
                      timeZone: string
                      utilityType: { }
                      meteringType: { }
                      unitOfMeasure: { }
                      timeOfUse: string
                      firstMeasurement:
                        value: 0
                        readingDateTime: string
                        unitOfMeasure: { }
                      secondMeasurement:
                        value: 0
                        readingDateTime: string
                        unitOfMeasure: { }
                      consumptionValue: 0
                      startDateTime: string
                      endDateTime: string
                  collectionDetails:
                    collectionCaseId: string
                    closed: true
                    workflowId: string
                    workflowName: string
                    previousStepId: string
                    previousStepName: string
                    previousStepExecutedAt: string
                    previousStepStatus: { }
                    nextStepId: string
                    nextStepName: string
                    nextStepExecutionDate: string
                  sent: { }
                  failureReasonCode:
                    key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                  failureDetails: string
                  supportsExternalPrinting: true
                  exportStatus: { }
                  newAdvanceAmountExclVAT: 0
                  newAdvanceAmountInclVAT: 0
                  advanceCalculationDetails:
                    newAdvanceAmountExclVAT: 0
                    newAdvanceAmountInclVAT: 0
                    oldAdvanceAmountInclVAT: 0
                    nextInvoiceAmountInclVat: 0
                    nextInvoiceAmountAccuracy: { }
                    recalculationType: { }
                    fallbackReason: { }
                    changedByUserId: string
                  ublAttachmentDetails:
                    errors:
                      - originatorType: { }
                        originatorId: string
                        message:
                          key: { }
                          correlationId: string
                          message: string
                          messageValues:
                            - dataType: { }
                              value: string
                              capitalize: true
                    attachmentId: string
                    attachmentFileName: string
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
  '/Invoices/{invoiceuuid}/markskipped':
    post:
      tags:
        - Invoices
      summary: Marks an invoice as skipped.
      description: Marks an invoice as skipped.
      operationId: MarkInvoiceAsSkipped
      parameters:
        - name: invoiceuuid
          in: path
          description: The UUID of the invoice.
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/InvoiceDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  invoiceNum: string
                  sequenceNumber: 0
                  invoiceDate: string
                  type: { }
                  status: { }
                  debtor:
                    customerId: string
                    displayName: string
                    customerAccountNumber: string
                    customerType: { }
                    customerGroup:
                      id: string
                      name: string
                  contractId: string
                  contractNumber: string
                  noteToCustomer: string
                  externalReference: string
                  dueDate: string
                  periodStartDateTime: string
                  periodEndDateTime: string
                  lines:
                    - billingItemId: string
                      billingTariffId: string
                      description: string
                      amountExclVAT: 0
                      amountInclVAT: 0
                      vat: 0
                      quantity: 0
                      rawQuantity: 0
                      unitPrice: 0
                      startDateTime: string
                      endDateTime: string
                      taxCodeId: string
                      taxRate: 0
                      unitOfMeasure: { }
                      utilityType: { }
                      lineType: { }
                      consumptionBased: true
                      serviceLocationId: string
                      originalInvoiceId: string
                      sortOrder: 0
                      id: string
                  remainingInvoiceAmount: 0
                  totalAmountInclVAT: 0
                  totalAmountExclVAT: 0
                  paymentDetails:
                    paid: true
                    currentPaymentStatus: { }
                    paymentReference: string
                    paymentMethod: { }
                    directDebitCollectionDate: string
                    amountOfTimesRetried: 0
                    statusHistory:
                      - paymentStatus: { }
                        outgoingBankingTransactionId: string
                        outgoingBankingTransactionIdentification: string
                        outgoingMutationId: string
                        outgoingMutationDescription: string
                        incomingBankingTransactionId: string
                        incomingBankingTransactionIdentification: string
                        incomingMutationId: string
                        incomingMutationDescription: string
                        reversalReason: { }
                        reversalAdditionalInformation: string
                        mutationDateTime: string
                  attachmentId: string
                  creditedByInvoiceId: string
                  creditedInvoiceId: string
                  billingCompletenessId: string
                  propertyGroups:
                    - id: string
                      name: string
                  product:
                    id: string
                    name: string
                    productId: string
                    productName: string
                  companyBankAccountId: string
                  consumptionCalculationInputs:
                    - serviceLocationId: string
                      externalChannelIdentifier: string
                      meterSerialNumber: string
                      timeZone: string
                      utilityType: { }
                      meteringType: { }
                      unitOfMeasure: { }
                      timeOfUse: string
                      firstMeasurement:
                        value: 0
                        readingDateTime: string
                        unitOfMeasure: { }
                      secondMeasurement:
                        value: 0
                        readingDateTime: string
                        unitOfMeasure: { }
                      consumptionValue: 0
                      startDateTime: string
                      endDateTime: string
                  collectionDetails:
                    collectionCaseId: string
                    closed: true
                    workflowId: string
                    workflowName: string
                    previousStepId: string
                    previousStepName: string
                    previousStepExecutedAt: string
                    previousStepStatus: { }
                    nextStepId: string
                    nextStepName: string
                    nextStepExecutionDate: string
                  sent: { }
                  failureReasonCode:
                    key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                  failureDetails: string
                  supportsExternalPrinting: true
                  exportStatus: { }
                  newAdvanceAmountExclVAT: 0
                  newAdvanceAmountInclVAT: 0
                  advanceCalculationDetails:
                    newAdvanceAmountExclVAT: 0
                    newAdvanceAmountInclVAT: 0
                    oldAdvanceAmountInclVAT: 0
                    nextInvoiceAmountInclVat: 0
                    nextInvoiceAmountAccuracy: { }
                    recalculationType: { }
                    fallbackReason: { }
                    changedByUserId: string
                  ublAttachmentDetails:
                    errors:
                      - originatorType: { }
                        originatorId: string
                        message:
                          key: { }
                          correlationId: string
                          message: string
                          messageValues:
                            - dataType: { }
                              value: string
                              capitalize: true
                    attachmentId: string
                    attachmentFileName: string
            text/json:
              schema:
                $ref: '#/components/schemas/InvoiceDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  invoiceNum: string
                  sequenceNumber: 0
                  invoiceDate: string
                  type: { }
                  status: { }
                  debtor:
                    customerId: string
                    displayName: string
                    customerAccountNumber: string
                    customerType: { }
                    customerGroup:
                      id: string
                      name: string
                  contractId: string
                  contractNumber: string
                  noteToCustomer: string
                  externalReference: string
                  dueDate: string
                  periodStartDateTime: string
                  periodEndDateTime: string
                  lines:
                    - billingItemId: string
                      billingTariffId: string
                      description: string
                      amountExclVAT: 0
                      amountInclVAT: 0
                      vat: 0
                      quantity: 0
                      rawQuantity: 0
                      unitPrice: 0
                      startDateTime: string
                      endDateTime: string
                      taxCodeId: string
                      taxRate: 0
                      unitOfMeasure: { }
                      utilityType: { }
                      lineType: { }
                      consumptionBased: true
                      serviceLocationId: string
                      originalInvoiceId: string
                      sortOrder: 0
                      id: string
                  remainingInvoiceAmount: 0
                  totalAmountInclVAT: 0
                  totalAmountExclVAT: 0
                  paymentDetails:
                    paid: true
                    currentPaymentStatus: { }
                    paymentReference: string
                    paymentMethod: { }
                    directDebitCollectionDate: string
                    amountOfTimesRetried: 0
                    statusHistory:
                      - paymentStatus: { }
                        outgoingBankingTransactionId: string
                        outgoingBankingTransactionIdentification: string
                        outgoingMutationId: string
                        outgoingMutationDescription: string
                        incomingBankingTransactionId: string
                        incomingBankingTransactionIdentification: string
                        incomingMutationId: string
                        incomingMutationDescription: string
                        reversalReason: { }
                        reversalAdditionalInformation: string
                        mutationDateTime: string
                  attachmentId: string
                  creditedByInvoiceId: string
                  creditedInvoiceId: string
                  billingCompletenessId: string
                  propertyGroups:
                    - id: string
                      name: string
                  product:
                    id: string
                    name: string
                    productId: string
                    productName: string
                  companyBankAccountId: string
                  consumptionCalculationInputs:
                    - serviceLocationId: string
                      externalChannelIdentifier: string
                      meterSerialNumber: string
                      timeZone: string
                      utilityType: { }
                      meteringType: { }
                      unitOfMeasure: { }
                      timeOfUse: string
                      firstMeasurement:
                        value: 0
                        readingDateTime: string
                        unitOfMeasure: { }
                      secondMeasurement:
                        value: 0
                        readingDateTime: string
                        unitOfMeasure: { }
                      consumptionValue: 0
                      startDateTime: string
                      endDateTime: string
                  collectionDetails:
                    collectionCaseId: string
                    closed: true
                    workflowId: string
                    workflowName: string
                    previousStepId: string
                    previousStepName: string
                    previousStepExecutedAt: string
                    previousStepStatus: { }
                    nextStepId: string
                    nextStepName: string
                    nextStepExecutionDate: string
                  sent: { }
                  failureReasonCode:
                    key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                  failureDetails: string
                  supportsExternalPrinting: true
                  exportStatus: { }
                  newAdvanceAmountExclVAT: 0
                  newAdvanceAmountInclVAT: 0
                  advanceCalculationDetails:
                    newAdvanceAmountExclVAT: 0
                    newAdvanceAmountInclVAT: 0
                    oldAdvanceAmountInclVAT: 0
                    nextInvoiceAmountInclVat: 0
                    nextInvoiceAmountAccuracy: { }
                    recalculationType: { }
                    fallbackReason: { }
                    changedByUserId: string
                  ublAttachmentDetails:
                    errors:
                      - originatorType: { }
                        originatorId: string
                        message:
                          key: { }
                          correlationId: string
                          message: string
                          messageValues:
                            - dataType: { }
                              value: string
                              capitalize: true
                    attachmentId: string
                    attachmentFileName: string
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
  '/Invoices/{invoiceuuid}/notetocustomer':
    get:
      tags:
        - Invoices
      summary: Gets the note to customer from a specific invoice
      description: Gets the note to customer from a specific invoice
      operationId: get-invoices-invoiceuuid-notetocustomer
      parameters:
        - name: invoiceuuid
          in: path
          description: The UUID of the invoice.
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/StringApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/StringApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data: string
            text/json:
              schema:
                $ref: '#/components/schemas/StringApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data: string
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
    post:
      tags:
        - Invoices
      summary: Update the note to customer from a specific invoice
      description: Update the note to customer from a specific invoice
      operationId: post-invoices-invoiceuuid-notetocustomer
      parameters:
        - name: invoiceuuid
          in: path
          description: The UUID of the invoice.
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ChangeNoteToCustomerRequest'
              description: "Represents a request to change the note to customer on an invoice.\r\nThis DTO is used to update the customer-facing notes or comments on an invoice."
            example:
              noteToCustomer: string
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ChangeNoteToCustomerRequest'
              description: "Represents a request to change the note to customer on an invoice.\r\nThis DTO is used to update the customer-facing notes or comments on an invoice."
            example:
              noteToCustomer: string
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ChangeNoteToCustomerRequest'
              description: "Represents a request to change the note to customer on an invoice.\r\nThis DTO is used to update the customer-facing notes or comments on an invoice."
            example:
              noteToCustomer: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/InvoiceDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  invoiceNum: string
                  sequenceNumber: 0
                  invoiceDate: string
                  type: { }
                  status: { }
                  debtor:
                    customerId: string
                    displayName: string
                    customerAccountNumber: string
                    customerType: { }
                    customerGroup:
                      id: string
                      name: string
                  contractId: string
                  contractNumber: string
                  noteToCustomer: string
                  externalReference: string
                  dueDate: string
                  periodStartDateTime: string
                  periodEndDateTime: string
                  lines:
                    - billingItemId: string
                      billingTariffId: string
                      description: string
                      amountExclVAT: 0
                      amountInclVAT: 0
                      vat: 0
                      quantity: 0
                      rawQuantity: 0
                      unitPrice: 0
                      startDateTime: string
                      endDateTime: string
                      taxCodeId: string
                      taxRate: 0
                      unitOfMeasure: { }
                      utilityType: { }
                      lineType: { }
                      consumptionBased: true
                      serviceLocationId: string
                      originalInvoiceId: string
                      sortOrder: 0
                      id: string
                  remainingInvoiceAmount: 0
                  totalAmountInclVAT: 0
                  totalAmountExclVAT: 0
                  paymentDetails:
                    paid: true
                    currentPaymentStatus: { }
                    paymentReference: string
                    paymentMethod: { }
                    directDebitCollectionDate: string
                    amountOfTimesRetried: 0
                    statusHistory:
                      - paymentStatus: { }
                        outgoingBankingTransactionId: string
                        outgoingBankingTransactionIdentification: string
                        outgoingMutationId: string
                        outgoingMutationDescription: string
                        incomingBankingTransactionId: string
                        incomingBankingTransactionIdentification: string
                        incomingMutationId: string
                        incomingMutationDescription: string
                        reversalReason: { }
                        reversalAdditionalInformation: string
                        mutationDateTime: string
                  attachmentId: string
                  creditedByInvoiceId: string
                  creditedInvoiceId: string
                  billingCompletenessId: string
                  propertyGroups:
                    - id: string
                      name: string
                  product:
                    id: string
                    name: string
                    productId: string
                    productName: string
                  companyBankAccountId: string
                  consumptionCalculationInputs:
                    - serviceLocationId: string
                      externalChannelIdentifier: string
                      meterSerialNumber: string
                      timeZone: string
                      utilityType: { }
                      meteringType: { }
                      unitOfMeasure: { }
                      timeOfUse: string
                      firstMeasurement:
                        value: 0
                        readingDateTime: string
                        unitOfMeasure: { }
                      secondMeasurement:
                        value: 0
                        readingDateTime: string
                        unitOfMeasure: { }
                      consumptionValue: 0
                      startDateTime: string
                      endDateTime: string
                  collectionDetails:
                    collectionCaseId: string
                    closed: true
                    workflowId: string
                    workflowName: string
                    previousStepId: string
                    previousStepName: string
                    previousStepExecutedAt: string
                    previousStepStatus: { }
                    nextStepId: string
                    nextStepName: string
                    nextStepExecutionDate: string
                  sent: { }
                  failureReasonCode:
                    key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                  failureDetails: string
                  supportsExternalPrinting: true
                  exportStatus: { }
                  newAdvanceAmountExclVAT: 0
                  newAdvanceAmountInclVAT: 0
                  advanceCalculationDetails:
                    newAdvanceAmountExclVAT: 0
                    newAdvanceAmountInclVAT: 0
                    oldAdvanceAmountInclVAT: 0
                    nextInvoiceAmountInclVat: 0
                    nextInvoiceAmountAccuracy: { }
                    recalculationType: { }
                    fallbackReason: { }
                    changedByUserId: string
                  ublAttachmentDetails:
                    errors:
                      - originatorType: { }
                        originatorId: string
                        message:
                          key: { }
                          correlationId: string
                          message: string
                          messageValues:
                            - dataType: { }
                              value: string
                              capitalize: true
                    attachmentId: string
                    attachmentFileName: string
            text/json:
              schema:
                $ref: '#/components/schemas/InvoiceDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  invoiceNum: string
                  sequenceNumber: 0
                  invoiceDate: string
                  type: { }
                  status: { }
                  debtor:
                    customerId: string
                    displayName: string
                    customerAccountNumber: string
                    customerType: { }
                    customerGroup:
                      id: string
                      name: string
                  contractId: string
                  contractNumber: string
                  noteToCustomer: string
                  externalReference: string
                  dueDate: string
                  periodStartDateTime: string
                  periodEndDateTime: string
                  lines:
                    - billingItemId: string
                      billingTariffId: string
                      description: string
                      amountExclVAT: 0
                      amountInclVAT: 0
                      vat: 0
                      quantity: 0
                      rawQuantity: 0
                      unitPrice: 0
                      startDateTime: string
                      endDateTime: string
                      taxCodeId: string
                      taxRate: 0
                      unitOfMeasure: { }
                      utilityType: { }
                      lineType: { }
                      consumptionBased: true
                      serviceLocationId: string
                      originalInvoiceId: string
                      sortOrder: 0
                      id: string
                  remainingInvoiceAmount: 0
                  totalAmountInclVAT: 0
                  totalAmountExclVAT: 0
                  paymentDetails:
                    paid: true
                    currentPaymentStatus: { }
                    paymentReference: string
                    paymentMethod: { }
                    directDebitCollectionDate: string
                    amountOfTimesRetried: 0
                    statusHistory:
                      - paymentStatus: { }
                        outgoingBankingTransactionId: string
                        outgoingBankingTransactionIdentification: string
                        outgoingMutationId: string
                        outgoingMutationDescription: string
                        incomingBankingTransactionId: string
                        incomingBankingTransactionIdentification: string
                        incomingMutationId: string
                        incomingMutationDescription: string
                        reversalReason: { }
                        reversalAdditionalInformation: string
                        mutationDateTime: string
                  attachmentId: string
                  creditedByInvoiceId: string
                  creditedInvoiceId: string
                  billingCompletenessId: string
                  propertyGroups:
                    - id: string
                      name: string
                  product:
                    id: string
                    name: string
                    productId: string
                    productName: string
                  companyBankAccountId: string
                  consumptionCalculationInputs:
                    - serviceLocationId: string
                      externalChannelIdentifier: string
                      meterSerialNumber: string
                      timeZone: string
                      utilityType: { }
                      meteringType: { }
                      unitOfMeasure: { }
                      timeOfUse: string
                      firstMeasurement:
                        value: 0
                        readingDateTime: string
                        unitOfMeasure: { }
                      secondMeasurement:
                        value: 0
                        readingDateTime: string
                        unitOfMeasure: { }
                      consumptionValue: 0
                      startDateTime: string
                      endDateTime: string
                  collectionDetails:
                    collectionCaseId: string
                    closed: true
                    workflowId: string
                    workflowName: string
                    previousStepId: string
                    previousStepName: string
                    previousStepExecutedAt: string
                    previousStepStatus: { }
                    nextStepId: string
                    nextStepName: string
                    nextStepExecutionDate: string
                  sent: { }
                  failureReasonCode:
                    key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                  failureDetails: string
                  supportsExternalPrinting: true
                  exportStatus: { }
                  newAdvanceAmountExclVAT: 0
                  newAdvanceAmountInclVAT: 0
                  advanceCalculationDetails:
                    newAdvanceAmountExclVAT: 0
                    newAdvanceAmountInclVAT: 0
                    oldAdvanceAmountInclVAT: 0
                    nextInvoiceAmountInclVat: 0
                    nextInvoiceAmountAccuracy: { }
                    recalculationType: { }
                    fallbackReason: { }
                    changedByUserId: string
                  ublAttachmentDetails:
                    errors:
                      - originatorType: { }
                        originatorId: string
                        message:
                          key: { }
                          correlationId: string
                          message: string
                          messageValues:
                            - dataType: { }
                              value: string
                              capitalize: true
                    attachmentId: string
                    attachmentFileName: string
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
  /Invoices/export:
    post:
      tags:
        - Invoices
      summary: Triggers the integration export for an invoice.
      description: Triggers the integration export for an invoice.
      operationId: post-invoices-export
      parameters:
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: The request containing the export details.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/RequestInvoiceExportRequest'
              description: "Represents a request to export invoices.\r\nThis DTO is used to initiate the export of invoices based on specified criteria and configuration."
            example:
              queryParams:
                flexSearch: string
                includeOnlyIds:
                  - string
                excludeIds:
                  - string
                invoiceType:
                  - string
                propertyGroupIds:
                  - string
                productId: string
                customerId: string
                contractId: string
                invoiceStatus:
                  - string
                paymentProcessStatus:
                  - string
                billingCompletenessId: string
                paymentMethod: string
                startDateTime: string
                endDateTime: string
                periodStartDateTime: string
                periodEndDateTime: string
                periodStartDateTimeBegin: string
                periodStartDateTimeEnd: string
                periodEndDateTimeBegin: string
                periodEndDateTimeEnd: string
                paidDateTimeBegin: string
                exportStatus: string
                collectionCaseId: string
                customerGroupId: string
                companyBankAccountId: string
              quickFilter: string
              configuredPluginId: string
              markAsExported: true
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/RequestInvoiceExportRequest'
              description: "Represents a request to export invoices.\r\nThis DTO is used to initiate the export of invoices based on specified criteria and configuration."
            example:
              queryParams:
                flexSearch: string
                includeOnlyIds:
                  - string
                excludeIds:
                  - string
                invoiceType:
                  - string
                propertyGroupIds:
                  - string
                productId: string
                customerId: string
                contractId: string
                invoiceStatus:
                  - string
                paymentProcessStatus:
                  - string
                billingCompletenessId: string
                paymentMethod: string
                startDateTime: string
                endDateTime: string
                periodStartDateTime: string
                periodEndDateTime: string
                periodStartDateTimeBegin: string
                periodStartDateTimeEnd: string
                periodEndDateTimeBegin: string
                periodEndDateTimeEnd: string
                paidDateTimeBegin: string
                exportStatus: string
                collectionCaseId: string
                customerGroupId: string
                companyBankAccountId: string
              quickFilter: string
              configuredPluginId: string
              markAsExported: true
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/RequestInvoiceExportRequest'
              description: "Represents a request to export invoices.\r\nThis DTO is used to initiate the export of invoices based on specified criteria and configuration."
            example:
              queryParams:
                flexSearch: string
                includeOnlyIds:
                  - string
                excludeIds:
                  - string
                invoiceType:
                  - string
                propertyGroupIds:
                  - string
                productId: string
                customerId: string
                contractId: string
                invoiceStatus:
                  - string
                paymentProcessStatus:
                  - string
                billingCompletenessId: string
                paymentMethod: string
                startDateTime: string
                endDateTime: string
                periodStartDateTime: string
                periodEndDateTime: string
                periodStartDateTimeBegin: string
                periodStartDateTimeEnd: string
                periodEndDateTimeBegin: string
                periodEndDateTimeEnd: string
                paidDateTimeBegin: string
                exportStatus: string
                collectionCaseId: string
                customerGroupId: string
                companyBankAccountId: string
              quickFilter: string
              configuredPluginId: string
              markAsExported: true
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/BooleanApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/BooleanApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data: true
            text/json:
              schema:
                $ref: '#/components/schemas/BooleanApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data: true
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
  /Invoices/bulk/approve:
    post:
      tags:
        - Invoices
      summary: Approves multiple invoices in bulk.
      description: Approves multiple invoices in bulk.
      operationId: post-invoices-bulk-approve
      parameters:
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: The bulk approve invoice request containing the details of the invoices to be approved.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BulkApproveInvoiceRequest'
              description: "Represents a bulk request to approve multiple invoices.\r\nThis DTO allows approving multiple invoices in a single operation."
            example:
              invoiceDate: string
              onlyValidate: true
              queryParams:
                flexSearch: string
                includeOnlyIds:
                  - string
                excludeIds:
                  - string
                invoiceType:
                  - string
                propertyGroupIds:
                  - string
                productId: string
                customerId: string
                contractId: string
                invoiceStatus:
                  - string
                paymentProcessStatus:
                  - string
                billingCompletenessId: string
                paymentMethod: string
                startDateTime: string
                endDateTime: string
                periodStartDateTime: string
                periodEndDateTime: string
                periodStartDateTimeBegin: string
                periodStartDateTimeEnd: string
                periodEndDateTimeBegin: string
                periodEndDateTimeEnd: string
                paidDateTimeBegin: string
                exportStatus: string
                collectionCaseId: string
                customerGroupId: string
                companyBankAccountId: string
              quickFilter: string
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BulkApproveInvoiceRequest'
              description: "Represents a bulk request to approve multiple invoices.\r\nThis DTO allows approving multiple invoices in a single operation."
            example:
              invoiceDate: string
              onlyValidate: true
              queryParams:
                flexSearch: string
                includeOnlyIds:
                  - string
                excludeIds:
                  - string
                invoiceType:
                  - string
                propertyGroupIds:
                  - string
                productId: string
                customerId: string
                contractId: string
                invoiceStatus:
                  - string
                paymentProcessStatus:
                  - string
                billingCompletenessId: string
                paymentMethod: string
                startDateTime: string
                endDateTime: string
                periodStartDateTime: string
                periodEndDateTime: string
                periodStartDateTimeBegin: string
                periodStartDateTimeEnd: string
                periodEndDateTimeBegin: string
                periodEndDateTimeEnd: string
                paidDateTimeBegin: string
                exportStatus: string
                collectionCaseId: string
                customerGroupId: string
                companyBankAccountId: string
              quickFilter: string
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BulkApproveInvoiceRequest'
              description: "Represents a bulk request to approve multiple invoices.\r\nThis DTO allows approving multiple invoices in a single operation."
            example:
              invoiceDate: string
              onlyValidate: true
              queryParams:
                flexSearch: string
                includeOnlyIds:
                  - string
                excludeIds:
                  - string
                invoiceType:
                  - string
                propertyGroupIds:
                  - string
                productId: string
                customerId: string
                contractId: string
                invoiceStatus:
                  - string
                paymentProcessStatus:
                  - string
                billingCompletenessId: string
                paymentMethod: string
                startDateTime: string
                endDateTime: string
                periodStartDateTime: string
                periodEndDateTime: string
                periodStartDateTimeBegin: string
                periodStartDateTimeEnd: string
                periodEndDateTimeBegin: string
                periodEndDateTimeEnd: string
                paidDateTimeBegin: string
                exportStatus: string
                collectionCaseId: string
                customerGroupId: string
                companyBankAccountId: string
              quickFilter: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/InvoiceDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  invoiceNum: string
                  sequenceNumber: 0
                  invoiceDate: string
                  type: { }
                  status: { }
                  debtor:
                    customerId: string
                    displayName: string
                    customerAccountNumber: string
                    customerType: { }
                    customerGroup:
                      id: string
                      name: string
                  contractId: string
                  contractNumber: string
                  noteToCustomer: string
                  externalReference: string
                  dueDate: string
                  periodStartDateTime: string
                  periodEndDateTime: string
                  lines:
                    - billingItemId: string
                      billingTariffId: string
                      description: string
                      amountExclVAT: 0
                      amountInclVAT: 0
                      vat: 0
                      quantity: 0
                      rawQuantity: 0
                      unitPrice: 0
                      startDateTime: string
                      endDateTime: string
                      taxCodeId: string
                      taxRate: 0
                      unitOfMeasure: { }
                      utilityType: { }
                      lineType: { }
                      consumptionBased: true
                      serviceLocationId: string
                      originalInvoiceId: string
                      sortOrder: 0
                      id: string
                  remainingInvoiceAmount: 0
                  totalAmountInclVAT: 0
                  totalAmountExclVAT: 0
                  paymentDetails:
                    paid: true
                    currentPaymentStatus: { }
                    paymentReference: string
                    paymentMethod: { }
                    directDebitCollectionDate: string
                    amountOfTimesRetried: 0
                    statusHistory:
                      - paymentStatus: { }
                        outgoingBankingTransactionId: string
                        outgoingBankingTransactionIdentification: string
                        outgoingMutationId: string
                        outgoingMutationDescription: string
                        incomingBankingTransactionId: string
                        incomingBankingTransactionIdentification: string
                        incomingMutationId: string
                        incomingMutationDescription: string
                        reversalReason: { }
                        reversalAdditionalInformation: string
                        mutationDateTime: string
                  attachmentId: string
                  creditedByInvoiceId: string
                  creditedInvoiceId: string
                  billingCompletenessId: string
                  propertyGroups:
                    - id: string
                      name: string
                  product:
                    id: string
                    name: string
                    productId: string
                    productName: string
                  companyBankAccountId: string
                  consumptionCalculationInputs:
                    - serviceLocationId: string
                      externalChannelIdentifier: string
                      meterSerialNumber: string
                      timeZone: string
                      utilityType: { }
                      meteringType: { }
                      unitOfMeasure: { }
                      timeOfUse: string
                      firstMeasurement:
                        value: 0
                        readingDateTime: string
                        unitOfMeasure: { }
                      secondMeasurement:
                        value: 0
                        readingDateTime: string
                        unitOfMeasure: { }
                      consumptionValue: 0
                      startDateTime: string
                      endDateTime: string
                  collectionDetails:
                    collectionCaseId: string
                    closed: true
                    workflowId: string
                    workflowName: string
                    previousStepId: string
                    previousStepName: string
                    previousStepExecutedAt: string
                    previousStepStatus: { }
                    nextStepId: string
                    nextStepName: string
                    nextStepExecutionDate: string
                  sent: { }
                  failureReasonCode:
                    key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                  failureDetails: string
                  supportsExternalPrinting: true
                  exportStatus: { }
                  newAdvanceAmountExclVAT: 0
                  newAdvanceAmountInclVAT: 0
                  advanceCalculationDetails:
                    newAdvanceAmountExclVAT: 0
                    newAdvanceAmountInclVAT: 0
                    oldAdvanceAmountInclVAT: 0
                    nextInvoiceAmountInclVat: 0
                    nextInvoiceAmountAccuracy: { }
                    recalculationType: { }
                    fallbackReason: { }
                    changedByUserId: string
                  ublAttachmentDetails:
                    errors:
                      - originatorType: { }
                        originatorId: string
                        message:
                          key: { }
                          correlationId: string
                          message: string
                          messageValues:
                            - dataType: { }
                              value: string
                              capitalize: true
                    attachmentId: string
                    attachmentFileName: string
            text/json:
              schema:
                $ref: '#/components/schemas/InvoiceDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  invoiceNum: string
                  sequenceNumber: 0
                  invoiceDate: string
                  type: { }
                  status: { }
                  debtor:
                    customerId: string
                    displayName: string
                    customerAccountNumber: string
                    customerType: { }
                    customerGroup:
                      id: string
                      name: string
                  contractId: string
                  contractNumber: string
                  noteToCustomer: string
                  externalReference: string
                  dueDate: string
                  periodStartDateTime: string
                  periodEndDateTime: string
                  lines:
                    - billingItemId: string
                      billingTariffId: string
                      description: string
                      amountExclVAT: 0
                      amountInclVAT: 0
                      vat: 0
                      quantity: 0
                      rawQuantity: 0
                      unitPrice: 0
                      startDateTime: string
                      endDateTime: string
                      taxCodeId: string
                      taxRate: 0
                      unitOfMeasure: { }
                      utilityType: { }
                      lineType: { }
                      consumptionBased: true
                      serviceLocationId: string
                      originalInvoiceId: string
                      sortOrder: 0
                      id: string
                  remainingInvoiceAmount: 0
                  totalAmountInclVAT: 0
                  totalAmountExclVAT: 0
                  paymentDetails:
                    paid: true
                    currentPaymentStatus: { }
                    paymentReference: string
                    paymentMethod: { }
                    directDebitCollectionDate: string
                    amountOfTimesRetried: 0
                    statusHistory:
                      - paymentStatus: { }
                        outgoingBankingTransactionId: string
                        outgoingBankingTransactionIdentification: string
                        outgoingMutationId: string
                        outgoingMutationDescription: string
                        incomingBankingTransactionId: string
                        incomingBankingTransactionIdentification: string
                        incomingMutationId: string
                        incomingMutationDescription: string
                        reversalReason: { }
                        reversalAdditionalInformation: string
                        mutationDateTime: string
                  attachmentId: string
                  creditedByInvoiceId: string
                  creditedInvoiceId: string
                  billingCompletenessId: string
                  propertyGroups:
                    - id: string
                      name: string
                  product:
                    id: string
                    name: string
                    productId: string
                    productName: string
                  companyBankAccountId: string
                  consumptionCalculationInputs:
                    - serviceLocationId: string
                      externalChannelIdentifier: string
                      meterSerialNumber: string
                      timeZone: string
                      utilityType: { }
                      meteringType: { }
                      unitOfMeasure: { }
                      timeOfUse: string
                      firstMeasurement:
                        value: 0
                        readingDateTime: string
                        unitOfMeasure: { }
                      secondMeasurement:
                        value: 0
                        readingDateTime: string
                        unitOfMeasure: { }
                      consumptionValue: 0
                      startDateTime: string
                      endDateTime: string
                  collectionDetails:
                    collectionCaseId: string
                    closed: true
                    workflowId: string
                    workflowName: string
                    previousStepId: string
                    previousStepName: string
                    previousStepExecutedAt: string
                    previousStepStatus: { }
                    nextStepId: string
                    nextStepName: string
                    nextStepExecutionDate: string
                  sent: { }
                  failureReasonCode:
                    key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                  failureDetails: string
                  supportsExternalPrinting: true
                  exportStatus: { }
                  newAdvanceAmountExclVAT: 0
                  newAdvanceAmountInclVAT: 0
                  advanceCalculationDetails:
                    newAdvanceAmountExclVAT: 0
                    newAdvanceAmountInclVAT: 0
                    oldAdvanceAmountInclVAT: 0
                    nextInvoiceAmountInclVat: 0
                    nextInvoiceAmountAccuracy: { }
                    recalculationType: { }
                    fallbackReason: { }
                    changedByUserId: string
                  ublAttachmentDetails:
                    errors:
                      - originatorType: { }
                        originatorId: string
                        message:
                          key: { }
                          correlationId: string
                          message: string
                          messageValues:
                            - dataType: { }
                              value: string
                              capitalize: true
                    attachmentId: string
                    attachmentFileName: string
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
  /Invoices/bulk/changeexportstatus:
    post:
      tags:
        - Invoices
      summary: Changes the export status of multiple invoices in bulk.
      description: Changes the export status of multiple invoices in bulk.
      operationId: post-invoices-bulk-changeexportstatus
      parameters:
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: The bulk change export status request containing the details of the invoices to be updated.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BulkChangeExportStatusRequest'
              description: "Represents a bulk request to change the export status of multiple invoices.\r\nThis DTO allows updating the export status of multiple invoices in a single operation."
            example:
              exportStatus: { }
              onlyValidate: true
              queryParams:
                flexSearch: string
                includeOnlyIds:
                  - string
                excludeIds:
                  - string
                invoiceType:
                  - string
                propertyGroupIds:
                  - string
                productId: string
                customerId: string
                contractId: string
                invoiceStatus:
                  - string
                paymentProcessStatus:
                  - string
                billingCompletenessId: string
                paymentMethod: string
                startDateTime: string
                endDateTime: string
                periodStartDateTime: string
                periodEndDateTime: string
                periodStartDateTimeBegin: string
                periodStartDateTimeEnd: string
                periodEndDateTimeBegin: string
                periodEndDateTimeEnd: string
                paidDateTimeBegin: string
                exportStatus: string
                collectionCaseId: string
                customerGroupId: string
                companyBankAccountId: string
              quickFilter: string
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BulkChangeExportStatusRequest'
              description: "Represents a bulk request to change the export status of multiple invoices.\r\nThis DTO allows updating the export status of multiple invoices in a single operation."
            example:
              exportStatus: { }
              onlyValidate: true
              queryParams:
                flexSearch: string
                includeOnlyIds:
                  - string
                excludeIds:
                  - string
                invoiceType:
                  - string
                propertyGroupIds:
                  - string
                productId: string
                customerId: string
                contractId: string
                invoiceStatus:
                  - string
                paymentProcessStatus:
                  - string
                billingCompletenessId: string
                paymentMethod: string
                startDateTime: string
                endDateTime: string
                periodStartDateTime: string
                periodEndDateTime: string
                periodStartDateTimeBegin: string
                periodStartDateTimeEnd: string
                periodEndDateTimeBegin: string
                periodEndDateTimeEnd: string
                paidDateTimeBegin: string
                exportStatus: string
                collectionCaseId: string
                customerGroupId: string
                companyBankAccountId: string
              quickFilter: string
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BulkChangeExportStatusRequest'
              description: "Represents a bulk request to change the export status of multiple invoices.\r\nThis DTO allows updating the export status of multiple invoices in a single operation."
            example:
              exportStatus: { }
              onlyValidate: true
              queryParams:
                flexSearch: string
                includeOnlyIds:
                  - string
                excludeIds:
                  - string
                invoiceType:
                  - string
                propertyGroupIds:
                  - string
                productId: string
                customerId: string
                contractId: string
                invoiceStatus:
                  - string
                paymentProcessStatus:
                  - string
                billingCompletenessId: string
                paymentMethod: string
                startDateTime: string
                endDateTime: string
                periodStartDateTime: string
                periodEndDateTime: string
                periodStartDateTimeBegin: string
                periodStartDateTimeEnd: string
                periodEndDateTimeBegin: string
                periodEndDateTimeEnd: string
                paidDateTimeBegin: string
                exportStatus: string
                collectionCaseId: string
                customerGroupId: string
                companyBankAccountId: string
              quickFilter: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/InvoiceDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  invoiceNum: string
                  sequenceNumber: 0
                  invoiceDate: string
                  type: { }
                  status: { }
                  debtor:
                    customerId: string
                    displayName: string
                    customerAccountNumber: string
                    customerType: { }
                    customerGroup:
                      id: string
                      name: string
                  contractId: string
                  contractNumber: string
                  noteToCustomer: string
                  externalReference: string
                  dueDate: string
                  periodStartDateTime: string
                  periodEndDateTime: string
                  lines:
                    - billingItemId: string
                      billingTariffId: string
                      description: string
                      amountExclVAT: 0
                      amountInclVAT: 0
                      vat: 0
                      quantity: 0
                      rawQuantity: 0
                      unitPrice: 0
                      startDateTime: string
                      endDateTime: string
                      taxCodeId: string
                      taxRate: 0
                      unitOfMeasure: { }
                      utilityType: { }
                      lineType: { }
                      consumptionBased: true
                      serviceLocationId: string
                      originalInvoiceId: string
                      sortOrder: 0
                      id: string
                  remainingInvoiceAmount: 0
                  totalAmountInclVAT: 0
                  totalAmountExclVAT: 0
                  paymentDetails:
                    paid: true
                    currentPaymentStatus: { }
                    paymentReference: string
                    paymentMethod: { }
                    directDebitCollectionDate: string
                    amountOfTimesRetried: 0
                    statusHistory:
                      - paymentStatus: { }
                        outgoingBankingTransactionId: string
                        outgoingBankingTransactionIdentification: string
                        outgoingMutationId: string
                        outgoingMutationDescription: string
                        incomingBankingTransactionId: string
                        incomingBankingTransactionIdentification: string
                        incomingMutationId: string
                        incomingMutationDescription: string
                        reversalReason: { }
                        reversalAdditionalInformation: string
                        mutationDateTime: string
                  attachmentId: string
                  creditedByInvoiceId: string
                  creditedInvoiceId: string
                  billingCompletenessId: string
                  propertyGroups:
                    - id: string
                      name: string
                  product:
                    id: string
                    name: string
                    productId: string
                    productName: string
                  companyBankAccountId: string
                  consumptionCalculationInputs:
                    - serviceLocationId: string
                      externalChannelIdentifier: string
                      meterSerialNumber: string
                      timeZone: string
                      utilityType: { }
                      meteringType: { }
                      unitOfMeasure: { }
                      timeOfUse: string
                      firstMeasurement:
                        value: 0
                        readingDateTime: string
                        unitOfMeasure: { }
                      secondMeasurement:
                        value: 0
                        readingDateTime: string
                        unitOfMeasure: { }
                      consumptionValue: 0
                      startDateTime: string
                      endDateTime: string
                  collectionDetails:
                    collectionCaseId: string
                    closed: true
                    workflowId: string
                    workflowName: string
                    previousStepId: string
                    previousStepName: string
                    previousStepExecutedAt: string
                    previousStepStatus: { }
                    nextStepId: string
                    nextStepName: string
                    nextStepExecutionDate: string
                  sent: { }
                  failureReasonCode:
                    key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                  failureDetails: string
                  supportsExternalPrinting: true
                  exportStatus: { }
                  newAdvanceAmountExclVAT: 0
                  newAdvanceAmountInclVAT: 0
                  advanceCalculationDetails:
                    newAdvanceAmountExclVAT: 0
                    newAdvanceAmountInclVAT: 0
                    oldAdvanceAmountInclVAT: 0
                    nextInvoiceAmountInclVat: 0
                    nextInvoiceAmountAccuracy: { }
                    recalculationType: { }
                    fallbackReason: { }
                    changedByUserId: string
                  ublAttachmentDetails:
                    errors:
                      - originatorType: { }
                        originatorId: string
                        message:
                          key: { }
                          correlationId: string
                          message: string
                          messageValues:
                            - dataType: { }
                              value: string
                              capitalize: true
                    attachmentId: string
                    attachmentFileName: string
            text/json:
              schema:
                $ref: '#/components/schemas/InvoiceDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  invoiceNum: string
                  sequenceNumber: 0
                  invoiceDate: string
                  type: { }
                  status: { }
                  debtor:
                    customerId: string
                    displayName: string
                    customerAccountNumber: string
                    customerType: { }
                    customerGroup:
                      id: string
                      name: string
                  contractId: string
                  contractNumber: string
                  noteToCustomer: string
                  externalReference: string
                  dueDate: string
                  periodStartDateTime: string
                  periodEndDateTime: string
                  lines:
                    - billingItemId: string
                      billingTariffId: string
                      description: string
                      amountExclVAT: 0
                      amountInclVAT: 0
                      vat: 0
                      quantity: 0
                      rawQuantity: 0
                      unitPrice: 0
                      startDateTime: string
                      endDateTime: string
                      taxCodeId: string
                      taxRate: 0
                      unitOfMeasure: { }
                      utilityType: { }
                      lineType: { }
                      consumptionBased: true
                      serviceLocationId: string
                      originalInvoiceId: string
                      sortOrder: 0
                      id: string
                  remainingInvoiceAmount: 0
                  totalAmountInclVAT: 0
                  totalAmountExclVAT: 0
                  paymentDetails:
                    paid: true
                    currentPaymentStatus: { }
                    paymentReference: string
                    paymentMethod: { }
                    directDebitCollectionDate: string
                    amountOfTimesRetried: 0
                    statusHistory:
                      - paymentStatus: { }
                        outgoingBankingTransactionId: string
                        outgoingBankingTransactionIdentification: string
                        outgoingMutationId: string
                        outgoingMutationDescription: string
                        incomingBankingTransactionId: string
                        incomingBankingTransactionIdentification: string
                        incomingMutationId: string
                        incomingMutationDescription: string
                        reversalReason: { }
                        reversalAdditionalInformation: string
                        mutationDateTime: string
                  attachmentId: string
                  creditedByInvoiceId: string
                  creditedInvoiceId: string
                  billingCompletenessId: string
                  propertyGroups:
                    - id: string
                      name: string
                  product:
                    id: string
                    name: string
                    productId: string
                    productName: string
                  companyBankAccountId: string
                  consumptionCalculationInputs:
                    - serviceLocationId: string
                      externalChannelIdentifier: string
                      meterSerialNumber: string
                      timeZone: string
                      utilityType: { }
                      meteringType: { }
                      unitOfMeasure: { }
                      timeOfUse: string
                      firstMeasurement:
                        value: 0
                        readingDateTime: string
                        unitOfMeasure: { }
                      secondMeasurement:
                        value: 0
                        readingDateTime: string
                        unitOfMeasure: { }
                      consumptionValue: 0
                      startDateTime: string
                      endDateTime: string
                  collectionDetails:
                    collectionCaseId: string
                    closed: true
                    workflowId: string
                    workflowName: string
                    previousStepId: string
                    previousStepName: string
                    previousStepExecutedAt: string
                    previousStepStatus: { }
                    nextStepId: string
                    nextStepName: string
                    nextStepExecutionDate: string
                  sent: { }
                  failureReasonCode:
                    key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                  failureDetails: string
                  supportsExternalPrinting: true
                  exportStatus: { }
                  newAdvanceAmountExclVAT: 0
                  newAdvanceAmountInclVAT: 0
                  advanceCalculationDetails:
                    newAdvanceAmountExclVAT: 0
                    newAdvanceAmountInclVAT: 0
                    oldAdvanceAmountInclVAT: 0
                    nextInvoiceAmountInclVat: 0
                    nextInvoiceAmountAccuracy: { }
                    recalculationType: { }
                    fallbackReason: { }
                    changedByUserId: string
                  ublAttachmentDetails:
                    errors:
                      - originatorType: { }
                        originatorId: string
                        message:
                          key: { }
                          correlationId: string
                          message: string
                          messageValues:
                            - dataType: { }
                              value: string
                              capitalize: true
                    attachmentId: string
                    attachmentFileName: string
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
  /Invoices/bulk/markskipped:
    post:
      tags:
        - Invoices
      summary: Marks multiple invoices as skipped in bulk.
      description: Marks multiple invoices as skipped in bulk.
      operationId: post-invoices-bulk-markskipped
      parameters:
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: The bulk mark invoice skipped request containing the details of the invoices to be marked as skipped.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BulkMarkInvoiceSentSkippedRequest'
              description: "Represents a bulk request to mark multiple invoices as skipped for sending.\r\nThis DTO allows marking multiple invoices as skipped in a single operation."
            example:
              onlyValidate: true
              queryParams:
                flexSearch: string
                includeOnlyIds:
                  - string
                excludeIds:
                  - string
                invoiceType:
                  - string
                propertyGroupIds:
                  - string
                productId: string
                customerId: string
                contractId: string
                invoiceStatus:
                  - string
                paymentProcessStatus:
                  - string
                billingCompletenessId: string
                paymentMethod: string
                startDateTime: string
                endDateTime: string
                periodStartDateTime: string
                periodEndDateTime: string
                periodStartDateTimeBegin: string
                periodStartDateTimeEnd: string
                periodEndDateTimeBegin: string
                periodEndDateTimeEnd: string
                paidDateTimeBegin: string
                exportStatus: string
                collectionCaseId: string
                customerGroupId: string
                companyBankAccountId: string
              quickFilter: string
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BulkMarkInvoiceSentSkippedRequest'
              description: "Represents a bulk request to mark multiple invoices as skipped for sending.\r\nThis DTO allows marking multiple invoices as skipped in a single operation."
            example:
              onlyValidate: true
              queryParams:
                flexSearch: string
                includeOnlyIds:
                  - string
                excludeIds:
                  - string
                invoiceType:
                  - string
                propertyGroupIds:
                  - string
                productId: string
                customerId: string
                contractId: string
                invoiceStatus:
                  - string
                paymentProcessStatus:
                  - string
                billingCompletenessId: string
                paymentMethod: string
                startDateTime: string
                endDateTime: string
                periodStartDateTime: string
                periodEndDateTime: string
                periodStartDateTimeBegin: string
                periodStartDateTimeEnd: string
                periodEndDateTimeBegin: string
                periodEndDateTimeEnd: string
                paidDateTimeBegin: string
                exportStatus: string
                collectionCaseId: string
                customerGroupId: string
                companyBankAccountId: string
              quickFilter: string
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BulkMarkInvoiceSentSkippedRequest'
              description: "Represents a bulk request to mark multiple invoices as skipped for sending.\r\nThis DTO allows marking multiple invoices as skipped in a single operation."
            example:
              onlyValidate: true
              queryParams:
                flexSearch: string
                includeOnlyIds:
                  - string
                excludeIds:
                  - string
                invoiceType:
                  - string
                propertyGroupIds:
                  - string
                productId: string
                customerId: string
                contractId: string
                invoiceStatus:
                  - string
                paymentProcessStatus:
                  - string
                billingCompletenessId: string
                paymentMethod: string
                startDateTime: string
                endDateTime: string
                periodStartDateTime: string
                periodEndDateTime: string
                periodStartDateTimeBegin: string
                periodStartDateTimeEnd: string
                periodEndDateTimeBegin: string
                periodEndDateTimeEnd: string
                paidDateTimeBegin: string
                exportStatus: string
                collectionCaseId: string
                customerGroupId: string
                companyBankAccountId: string
              quickFilter: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/InvoiceDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  invoiceNum: string
                  sequenceNumber: 0
                  invoiceDate: string
                  type: { }
                  status: { }
                  debtor:
                    customerId: string
                    displayName: string
                    customerAccountNumber: string
                    customerType: { }
                    customerGroup:
                      id: string
                      name: string
                  contractId: string
                  contractNumber: string
                  noteToCustomer: string
                  externalReference: string
                  dueDate: string
                  periodStartDateTime: string
                  periodEndDateTime: string
                  lines:
                    - billingItemId: string
                      billingTariffId: string
                      description: string
                      amountExclVAT: 0
                      amountInclVAT: 0
                      vat: 0
                      quantity: 0
                      rawQuantity: 0
                      unitPrice: 0
                      startDateTime: string
                      endDateTime: string
                      taxCodeId: string
                      taxRate: 0
                      unitOfMeasure: { }
                      utilityType: { }
                      lineType: { }
                      consumptionBased: true
                      serviceLocationId: string
                      originalInvoiceId: string
                      sortOrder: 0
                      id: string
                  remainingInvoiceAmount: 0
                  totalAmountInclVAT: 0
                  totalAmountExclVAT: 0
                  paymentDetails:
                    paid: true
                    currentPaymentStatus: { }
                    paymentReference: string
                    paymentMethod: { }
                    directDebitCollectionDate: string
                    amountOfTimesRetried: 0
                    statusHistory:
                      - paymentStatus: { }
                        outgoingBankingTransactionId: string
                        outgoingBankingTransactionIdentification: string
                        outgoingMutationId: string
                        outgoingMutationDescription: string
                        incomingBankingTransactionId: string
                        incomingBankingTransactionIdentification: string
                        incomingMutationId: string
                        incomingMutationDescription: string
                        reversalReason: { }
                        reversalAdditionalInformation: string
                        mutationDateTime: string
                  attachmentId: string
                  creditedByInvoiceId: string
                  creditedInvoiceId: string
                  billingCompletenessId: string
                  propertyGroups:
                    - id: string
                      name: string
                  product:
                    id: string
                    name: string
                    productId: string
                    productName: string
                  companyBankAccountId: string
                  consumptionCalculationInputs:
                    - serviceLocationId: string
                      externalChannelIdentifier: string
                      meterSerialNumber: string
                      timeZone: string
                      utilityType: { }
                      meteringType: { }
                      unitOfMeasure: { }
                      timeOfUse: string
                      firstMeasurement:
                        value: 0
                        readingDateTime: string
                        unitOfMeasure: { }
                      secondMeasurement:
                        value: 0
                        readingDateTime: string
                        unitOfMeasure: { }
                      consumptionValue: 0
                      startDateTime: string
                      endDateTime: string
                  collectionDetails:
                    collectionCaseId: string
                    closed: true
                    workflowId: string
                    workflowName: string
                    previousStepId: string
                    previousStepName: string
                    previousStepExecutedAt: string
                    previousStepStatus: { }
                    nextStepId: string
                    nextStepName: string
                    nextStepExecutionDate: string
                  sent: { }
                  failureReasonCode:
                    key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                  failureDetails: string
                  supportsExternalPrinting: true
                  exportStatus: { }
                  newAdvanceAmountExclVAT: 0
                  newAdvanceAmountInclVAT: 0
                  advanceCalculationDetails:
                    newAdvanceAmountExclVAT: 0
                    newAdvanceAmountInclVAT: 0
                    oldAdvanceAmountInclVAT: 0
                    nextInvoiceAmountInclVat: 0
                    nextInvoiceAmountAccuracy: { }
                    recalculationType: { }
                    fallbackReason: { }
                    changedByUserId: string
                  ublAttachmentDetails:
                    errors:
                      - originatorType: { }
                        originatorId: string
                        message:
                          key: { }
                          correlationId: string
                          message: string
                          messageValues:
                            - dataType: { }
                              value: string
                              capitalize: true
                    attachmentId: string
                    attachmentFileName: string
            text/json:
              schema:
                $ref: '#/components/schemas/InvoiceDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  invoiceNum: string
                  sequenceNumber: 0
                  invoiceDate: string
                  type: { }
                  status: { }
                  debtor:
                    customerId: string
                    displayName: string
                    customerAccountNumber: string
                    customerType: { }
                    customerGroup:
                      id: string
                      name: string
                  contractId: string
                  contractNumber: string
                  noteToCustomer: string
                  externalReference: string
                  dueDate: string
                  periodStartDateTime: string
                  periodEndDateTime: string
                  lines:
                    - billingItemId: string
                      billingTariffId: string
                      description: string
                      amountExclVAT: 0
                      amountInclVAT: 0
                      vat: 0
                      quantity: 0
                      rawQuantity: 0
                      unitPrice: 0
                      startDateTime: string
                      endDateTime: string
                      taxCodeId: string
                      taxRate: 0
                      unitOfMeasure: { }
                      utilityType: { }
                      lineType: { }
                      consumptionBased: true
                      serviceLocationId: string
                      originalInvoiceId: string
                      sortOrder: 0
                      id: string
                  remainingInvoiceAmount: 0
                  totalAmountInclVAT: 0
                  totalAmountExclVAT: 0
                  paymentDetails:
                    paid: true
                    currentPaymentStatus: { }
                    paymentReference: string
                    paymentMethod: { }
                    directDebitCollectionDate: string
                    amountOfTimesRetried: 0
                    statusHistory:
                      - paymentStatus: { }
                        outgoingBankingTransactionId: string
                        outgoingBankingTransactionIdentification: string
                        outgoingMutationId: string
                        outgoingMutationDescription: string
                        incomingBankingTransactionId: string
                        incomingBankingTransactionIdentification: string
                        incomingMutationId: string
                        incomingMutationDescription: string
                        reversalReason: { }
                        reversalAdditionalInformation: string
                        mutationDateTime: string
                  attachmentId: string
                  creditedByInvoiceId: string
                  creditedInvoiceId: string
                  billingCompletenessId: string
                  propertyGroups:
                    - id: string
                      name: string
                  product:
                    id: string
                    name: string
                    productId: string
                    productName: string
                  companyBankAccountId: string
                  consumptionCalculationInputs:
                    - serviceLocationId: string
                      externalChannelIdentifier: string
                      meterSerialNumber: string
                      timeZone: string
                      utilityType: { }
                      meteringType: { }
                      unitOfMeasure: { }
                      timeOfUse: string
                      firstMeasurement:
                        value: 0
                        readingDateTime: string
                        unitOfMeasure: { }
                      secondMeasurement:
                        value: 0
                        readingDateTime: string
                        unitOfMeasure: { }
                      consumptionValue: 0
                      startDateTime: string
                      endDateTime: string
                  collectionDetails:
                    collectionCaseId: string
                    closed: true
                    workflowId: string
                    workflowName: string
                    previousStepId: string
                    previousStepName: string
                    previousStepExecutedAt: string
                    previousStepStatus: { }
                    nextStepId: string
                    nextStepName: string
                    nextStepExecutionDate: string
                  sent: { }
                  failureReasonCode:
                    key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                  failureDetails: string
                  supportsExternalPrinting: true
                  exportStatus: { }
                  newAdvanceAmountExclVAT: 0
                  newAdvanceAmountInclVAT: 0
                  advanceCalculationDetails:
                    newAdvanceAmountExclVAT: 0
                    newAdvanceAmountInclVAT: 0
                    oldAdvanceAmountInclVAT: 0
                    nextInvoiceAmountInclVat: 0
                    nextInvoiceAmountAccuracy: { }
                    recalculationType: { }
                    fallbackReason: { }
                    changedByUserId: string
                  ublAttachmentDetails:
                    errors:
                      - originatorType: { }
                        originatorId: string
                        message:
                          key: { }
                          correlationId: string
                          message: string
                          messageValues:
                            - dataType: { }
                              value: string
                              capitalize: true
                    attachmentId: string
                    attachmentFileName: string
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
  /Invoices/bulk/marksent:
    post:
      tags:
        - Invoices
      summary: Marks multiple invoices as sent in bulk.
      description: Marks multiple invoices as sent in bulk.
      operationId: post-invoices-bulk-marksent
      parameters:
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: The bulk mark invoice sent request containing the details of the invoices to be marked as sent.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BulkMarkInvoiceSentRequest'
              description: "Represents a bulk request to mark multiple invoices as sent.\r\nThis DTO allows updating the sent status of multiple invoices in a single operation."
            example:
              onlyValidate: true
              queryParams:
                flexSearch: string
                includeOnlyIds:
                  - string
                excludeIds:
                  - string
                invoiceType:
                  - string
                propertyGroupIds:
                  - string
                productId: string
                customerId: string
                contractId: string
                invoiceStatus:
                  - string
                paymentProcessStatus:
                  - string
                billingCompletenessId: string
                paymentMethod: string
                startDateTime: string
                endDateTime: string
                periodStartDateTime: string
                periodEndDateTime: string
                periodStartDateTimeBegin: string
                periodStartDateTimeEnd: string
                periodEndDateTimeBegin: string
                periodEndDateTimeEnd: string
                paidDateTimeBegin: string
                exportStatus: string
                collectionCaseId: string
                customerGroupId: string
                companyBankAccountId: string
              quickFilter: string
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BulkMarkInvoiceSentRequest'
              description: "Represents a bulk request to mark multiple invoices as sent.\r\nThis DTO allows updating the sent status of multiple invoices in a single operation."
            example:
              onlyValidate: true
              queryParams:
                flexSearch: string
                includeOnlyIds:
                  - string
                excludeIds:
                  - string
                invoiceType:
                  - string
                propertyGroupIds:
                  - string
                productId: string
                customerId: string
                contractId: string
                invoiceStatus:
                  - string
                paymentProcessStatus:
                  - string
                billingCompletenessId: string
                paymentMethod: string
                startDateTime: string
                endDateTime: string
                periodStartDateTime: string
                periodEndDateTime: string
                periodStartDateTimeBegin: string
                periodStartDateTimeEnd: string
                periodEndDateTimeBegin: string
                periodEndDateTimeEnd: string
                paidDateTimeBegin: string
                exportStatus: string
                collectionCaseId: string
                customerGroupId: string
                companyBankAccountId: string
              quickFilter: string
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BulkMarkInvoiceSentRequest'
              description: "Represents a bulk request to mark multiple invoices as sent.\r\nThis DTO allows updating the sent status of multiple invoices in a single operation."
            example:
              onlyValidate: true
              queryParams:
                flexSearch: string
                includeOnlyIds:
                  - string
                excludeIds:
                  - string
                invoiceType:
                  - string
                propertyGroupIds:
                  - string
                productId: string
                customerId: string
                contractId: string
                invoiceStatus:
                  - string
                paymentProcessStatus:
                  - string
                billingCompletenessId: string
                paymentMethod: string
                startDateTime: string
                endDateTime: string
                periodStartDateTime: string
                periodEndDateTime: string
                periodStartDateTimeBegin: string
                periodStartDateTimeEnd: string
                periodEndDateTimeBegin: string
                periodEndDateTimeEnd: string
                paidDateTimeBegin: string
                exportStatus: string
                collectionCaseId: string
                customerGroupId: string
                companyBankAccountId: string
              quickFilter: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/InvoiceDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  invoiceNum: string
                  sequenceNumber: 0
                  invoiceDate: string
                  type: { }
                  status: { }
                  debtor:
                    customerId: string
                    displayName: string
                    customerAccountNumber: string
                    customerType: { }
                    customerGroup:
                      id: string
                      name: string
                  contractId: string
                  contractNumber: string
                  noteToCustomer: string
                  externalReference: string
                  dueDate: string
                  periodStartDateTime: string
                  periodEndDateTime: string
                  lines:
                    - billingItemId: string
                      billingTariffId: string
                      description: string
                      amountExclVAT: 0
                      amountInclVAT: 0
                      vat: 0
                      quantity: 0
                      rawQuantity: 0
                      unitPrice: 0
                      startDateTime: string
                      endDateTime: string
                      taxCodeId: string
                      taxRate: 0
                      unitOfMeasure: { }
                      utilityType: { }
                      lineType: { }
                      consumptionBased: true
                      serviceLocationId: string
                      originalInvoiceId: string
                      sortOrder: 0
                      id: string
                  remainingInvoiceAmount: 0
                  totalAmountInclVAT: 0
                  totalAmountExclVAT: 0
                  paymentDetails:
                    paid: true
                    currentPaymentStatus: { }
                    paymentReference: string
                    paymentMethod: { }
                    directDebitCollectionDate: string
                    amountOfTimesRetried: 0
                    statusHistory:
                      - paymentStatus: { }
                        outgoingBankingTransactionId: string
                        outgoingBankingTransactionIdentification: string
                        outgoingMutationId: string
                        outgoingMutationDescription: string
                        incomingBankingTransactionId: string
                        incomingBankingTransactionIdentification: string
                        incomingMutationId: string
                        incomingMutationDescription: string
                        reversalReason: { }
                        reversalAdditionalInformation: string
                        mutationDateTime: string
                  attachmentId: string
                  creditedByInvoiceId: string
                  creditedInvoiceId: string
                  billingCompletenessId: string
                  propertyGroups:
                    - id: string
                      name: string
                  product:
                    id: string
                    name: string
                    productId: string
                    productName: string
                  companyBankAccountId: string
                  consumptionCalculationInputs:
                    - serviceLocationId: string
                      externalChannelIdentifier: string
                      meterSerialNumber: string
                      timeZone: string
                      utilityType: { }
                      meteringType: { }
                      unitOfMeasure: { }
                      timeOfUse: string
                      firstMeasurement:
                        value: 0
                        readingDateTime: string
                        unitOfMeasure: { }
                      secondMeasurement:
                        value: 0
                        readingDateTime: string
                        unitOfMeasure: { }
                      consumptionValue: 0
                      startDateTime: string
                      endDateTime: string
                  collectionDetails:
                    collectionCaseId: string
                    closed: true
                    workflowId: string
                    workflowName: string
                    previousStepId: string
                    previousStepName: string
                    previousStepExecutedAt: string
                    previousStepStatus: { }
                    nextStepId: string
                    nextStepName: string
                    nextStepExecutionDate: string
                  sent: { }
                  failureReasonCode:
                    key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                  failureDetails: string
                  supportsExternalPrinting: true
                  exportStatus: { }
                  newAdvanceAmountExclVAT: 0
                  newAdvanceAmountInclVAT: 0
                  advanceCalculationDetails:
                    newAdvanceAmountExclVAT: 0
                    newAdvanceAmountInclVAT: 0
                    oldAdvanceAmountInclVAT: 0
                    nextInvoiceAmountInclVat: 0
                    nextInvoiceAmountAccuracy: { }
                    recalculationType: { }
                    fallbackReason: { }
                    changedByUserId: string
                  ublAttachmentDetails:
                    errors:
                      - originatorType: { }
                        originatorId: string
                        message:
                          key: { }
                          correlationId: string
                          message: string
                          messageValues:
                            - dataType: { }
                              value: string
                              capitalize: true
                    attachmentId: string
                    attachmentFileName: string
            text/json:
              schema:
                $ref: '#/components/schemas/InvoiceDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  invoiceNum: string
                  sequenceNumber: 0
                  invoiceDate: string
                  type: { }
                  status: { }
                  debtor:
                    customerId: string
                    displayName: string
                    customerAccountNumber: string
                    customerType: { }
                    customerGroup:
                      id: string
                      name: string
                  contractId: string
                  contractNumber: string
                  noteToCustomer: string
                  externalReference: string
                  dueDate: string
                  periodStartDateTime: string
                  periodEndDateTime: string
                  lines:
                    - billingItemId: string
                      billingTariffId: string
                      description: string
                      amountExclVAT: 0
                      amountInclVAT: 0
                      vat: 0
                      quantity: 0
                      rawQuantity: 0
                      unitPrice: 0
                      startDateTime: string
                      endDateTime: string
                      taxCodeId: string
                      taxRate: 0
                      unitOfMeasure: { }
                      utilityType: { }
                      lineType: { }
                      consumptionBased: true
                      serviceLocationId: string
                      originalInvoiceId: string
                      sortOrder: 0
                      id: string
                  remainingInvoiceAmount: 0
                  totalAmountInclVAT: 0
                  totalAmountExclVAT: 0
                  paymentDetails:
                    paid: true
                    currentPaymentStatus: { }
                    paymentReference: string
                    paymentMethod: { }
                    directDebitCollectionDate: string
                    amountOfTimesRetried: 0
                    statusHistory:
                      - paymentStatus: { }
                        outgoingBankingTransactionId: string
                        outgoingBankingTransactionIdentification: string
                        outgoingMutationId: string
                        outgoingMutationDescription: string
                        incomingBankingTransactionId: string
                        incomingBankingTransactionIdentification: string
                        incomingMutationId: string
                        incomingMutationDescription: string
                        reversalReason: { }
                        reversalAdditionalInformation: string
                        mutationDateTime: string
                  attachmentId: string
                  creditedByInvoiceId: string
                  creditedInvoiceId: string
                  billingCompletenessId: string
                  propertyGroups:
                    - id: string
                      name: string
                  product:
                    id: string
                    name: string
                    productId: string
                    productName: string
                  companyBankAccountId: string
                  consumptionCalculationInputs:
                    - serviceLocationId: string
                      externalChannelIdentifier: string
                      meterSerialNumber: string
                      timeZone: string
                      utilityType: { }
                      meteringType: { }
                      unitOfMeasure: { }
                      timeOfUse: string
                      firstMeasurement:
                        value: 0
                        readingDateTime: string
                        unitOfMeasure: { }
                      secondMeasurement:
                        value: 0
                        readingDateTime: string
                        unitOfMeasure: { }
                      consumptionValue: 0
                      startDateTime: string
                      endDateTime: string
                  collectionDetails:
                    collectionCaseId: string
                    closed: true
                    workflowId: string
                    workflowName: string
                    previousStepId: string
                    previousStepName: string
                    previousStepExecutedAt: string
                    previousStepStatus: { }
                    nextStepId: string
                    nextStepName: string
                    nextStepExecutionDate: string
                  sent: { }
                  failureReasonCode:
                    key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                  failureDetails: string
                  supportsExternalPrinting: true
                  exportStatus: { }
                  newAdvanceAmountExclVAT: 0
                  newAdvanceAmountInclVAT: 0
                  advanceCalculationDetails:
                    newAdvanceAmountExclVAT: 0
                    newAdvanceAmountInclVAT: 0
                    oldAdvanceAmountInclVAT: 0
                    nextInvoiceAmountInclVat: 0
                    nextInvoiceAmountAccuracy: { }
                    recalculationType: { }
                    fallbackReason: { }
                    changedByUserId: string
                  ublAttachmentDetails:
                    errors:
                      - originatorType: { }
                        originatorId: string
                        message:
                          key: { }
                          correlationId: string
                          message: string
                          messageValues:
                            - dataType: { }
                              value: string
                              capitalize: true
                    attachmentId: string
                    attachmentFileName: string
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
  /Invoices/bulk/changepaymentdetails:
    post:
      tags:
        - Invoices
      summary: Changes the payment details of multiple invoices in bulk.
      description: Changes the payment details of multiple invoices in bulk.
      operationId: post-invoices-bulk-changepaymentdetails
      parameters:
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: The bulk change payment details request containing the details of the invoices to be updated.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BulkChangePaymentDetailsRequest'
              description: "Represents a bulk request to change payment details for multiple invoices.\r\nThis DTO allows updating payment details for multiple invoices in a single operation."
            example:
              newPaymentMethod: { }
              collectionDate: string
              onlyValidate: true
              queryParams:
                flexSearch: string
                includeOnlyIds:
                  - string
                excludeIds:
                  - string
                invoiceType:
                  - string
                propertyGroupIds:
                  - string
                productId: string
                customerId: string
                contractId: string
                invoiceStatus:
                  - string
                paymentProcessStatus:
                  - string
                billingCompletenessId: string
                paymentMethod: string
                startDateTime: string
                endDateTime: string
                periodStartDateTime: string
                periodEndDateTime: string
                periodStartDateTimeBegin: string
                periodStartDateTimeEnd: string
                periodEndDateTimeBegin: string
                periodEndDateTimeEnd: string
                paidDateTimeBegin: string
                exportStatus: string
                collectionCaseId: string
                customerGroupId: string
                companyBankAccountId: string
              quickFilter: string
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BulkChangePaymentDetailsRequest'
              description: "Represents a bulk request to change payment details for multiple invoices.\r\nThis DTO allows updating payment details for multiple invoices in a single operation."
            example:
              newPaymentMethod: { }
              collectionDate: string
              onlyValidate: true
              queryParams:
                flexSearch: string
                includeOnlyIds:
                  - string
                excludeIds:
                  - string
                invoiceType:
                  - string
                propertyGroupIds:
                  - string
                productId: string
                customerId: string
                contractId: string
                invoiceStatus:
                  - string
                paymentProcessStatus:
                  - string
                billingCompletenessId: string
                paymentMethod: string
                startDateTime: string
                endDateTime: string
                periodStartDateTime: string
                periodEndDateTime: string
                periodStartDateTimeBegin: string
                periodStartDateTimeEnd: string
                periodEndDateTimeBegin: string
                periodEndDateTimeEnd: string
                paidDateTimeBegin: string
                exportStatus: string
                collectionCaseId: string
                customerGroupId: string
                companyBankAccountId: string
              quickFilter: string
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BulkChangePaymentDetailsRequest'
              description: "Represents a bulk request to change payment details for multiple invoices.\r\nThis DTO allows updating payment details for multiple invoices in a single operation."
            example:
              newPaymentMethod: { }
              collectionDate: string
              onlyValidate: true
              queryParams:
                flexSearch: string
                includeOnlyIds:
                  - string
                excludeIds:
                  - string
                invoiceType:
                  - string
                propertyGroupIds:
                  - string
                productId: string
                customerId: string
                contractId: string
                invoiceStatus:
                  - string
                paymentProcessStatus:
                  - string
                billingCompletenessId: string
                paymentMethod: string
                startDateTime: string
                endDateTime: string
                periodStartDateTime: string
                periodEndDateTime: string
                periodStartDateTimeBegin: string
                periodStartDateTimeEnd: string
                periodEndDateTimeBegin: string
                periodEndDateTimeEnd: string
                paidDateTimeBegin: string
                exportStatus: string
                collectionCaseId: string
                customerGroupId: string
                companyBankAccountId: string
              quickFilter: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/InvoiceDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  invoiceNum: string
                  sequenceNumber: 0
                  invoiceDate: string
                  type: { }
                  status: { }
                  debtor:
                    customerId: string
                    displayName: string
                    customerAccountNumber: string
                    customerType: { }
                    customerGroup:
                      id: string
                      name: string
                  contractId: string
                  contractNumber: string
                  noteToCustomer: string
                  externalReference: string
                  dueDate: string
                  periodStartDateTime: string
                  periodEndDateTime: string
                  lines:
                    - billingItemId: string
                      billingTariffId: string
                      description: string
                      amountExclVAT: 0
                      amountInclVAT: 0
                      vat: 0
                      quantity: 0
                      rawQuantity: 0
                      unitPrice: 0
                      startDateTime: string
                      endDateTime: string
                      taxCodeId: string
                      taxRate: 0
                      unitOfMeasure: { }
                      utilityType: { }
                      lineType: { }
                      consumptionBased: true
                      serviceLocationId: string
                      originalInvoiceId: string
                      sortOrder: 0
                      id: string
                  remainingInvoiceAmount: 0
                  totalAmountInclVAT: 0
                  totalAmountExclVAT: 0
                  paymentDetails:
                    paid: true
                    currentPaymentStatus: { }
                    paymentReference: string
                    paymentMethod: { }
                    directDebitCollectionDate: string
                    amountOfTimesRetried: 0
                    statusHistory:
                      - paymentStatus: { }
                        outgoingBankingTransactionId: string
                        outgoingBankingTransactionIdentification: string
                        outgoingMutationId: string
                        outgoingMutationDescription: string
                        incomingBankingTransactionId: string
                        incomingBankingTransactionIdentification: string
                        incomingMutationId: string
                        incomingMutationDescription: string
                        reversalReason: { }
                        reversalAdditionalInformation: string
                        mutationDateTime: string
                  attachmentId: string
                  creditedByInvoiceId: string
                  creditedInvoiceId: string
                  billingCompletenessId: string
                  propertyGroups:
                    - id: string
                      name: string
                  product:
                    id: string
                    name: string
                    productId: string
                    productName: string
                  companyBankAccountId: string
                  consumptionCalculationInputs:
                    - serviceLocationId: string
                      externalChannelIdentifier: string
                      meterSerialNumber: string
                      timeZone: string
                      utilityType: { }
                      meteringType: { }
                      unitOfMeasure: { }
                      timeOfUse: string
                      firstMeasurement:
                        value: 0
                        readingDateTime: string
                        unitOfMeasure: { }
                      secondMeasurement:
                        value: 0
                        readingDateTime: string
                        unitOfMeasure: { }
                      consumptionValue: 0
                      startDateTime: string
                      endDateTime: string
                  collectionDetails:
                    collectionCaseId: string
                    closed: true
                    workflowId: string
                    workflowName: string
                    previousStepId: string
                    previousStepName: string
                    previousStepExecutedAt: string
                    previousStepStatus: { }
                    nextStepId: string
                    nextStepName: string
                    nextStepExecutionDate: string
                  sent: { }
                  failureReasonCode:
                    key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                  failureDetails: string
                  supportsExternalPrinting: true
                  exportStatus: { }
                  newAdvanceAmountExclVAT: 0
                  newAdvanceAmountInclVAT: 0
                  advanceCalculationDetails:
                    newAdvanceAmountExclVAT: 0
                    newAdvanceAmountInclVAT: 0
                    oldAdvanceAmountInclVAT: 0
                    nextInvoiceAmountInclVat: 0
                    nextInvoiceAmountAccuracy: { }
                    recalculationType: { }
                    fallbackReason: { }
                    changedByUserId: string
                  ublAttachmentDetails:
                    errors:
                      - originatorType: { }
                        originatorId: string
                        message:
                          key: { }
                          correlationId: string
                          message: string
                          messageValues:
                            - dataType: { }
                              value: string
                              capitalize: true
                    attachmentId: string
                    attachmentFileName: string
            text/json:
              schema:
                $ref: '#/components/schemas/InvoiceDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  invoiceNum: string
                  sequenceNumber: 0
                  invoiceDate: string
                  type: { }
                  status: { }
                  debtor:
                    customerId: string
                    displayName: string
                    customerAccountNumber: string
                    customerType: { }
                    customerGroup:
                      id: string
                      name: string
                  contractId: string
                  contractNumber: string
                  noteToCustomer: string
                  externalReference: string
                  dueDate: string
                  periodStartDateTime: string
                  periodEndDateTime: string
                  lines:
                    - billingItemId: string
                      billingTariffId: string
                      description: string
                      amountExclVAT: 0
                      amountInclVAT: 0
                      vat: 0
                      quantity: 0
                      rawQuantity: 0
                      unitPrice: 0
                      startDateTime: string
                      endDateTime: string
                      taxCodeId: string
                      taxRate: 0
                      unitOfMeasure: { }
                      utilityType: { }
                      lineType: { }
                      consumptionBased: true
                      serviceLocationId: string
                      originalInvoiceId: string
                      sortOrder: 0
                      id: string
                  remainingInvoiceAmount: 0
                  totalAmountInclVAT: 0
                  totalAmountExclVAT: 0
                  paymentDetails:
                    paid: true
                    currentPaymentStatus: { }
                    paymentReference: string
                    paymentMethod: { }
                    directDebitCollectionDate: string
                    amountOfTimesRetried: 0
                    statusHistory:
                      - paymentStatus: { }
                        outgoingBankingTransactionId: string
                        outgoingBankingTransactionIdentification: string
                        outgoingMutationId: string
                        outgoingMutationDescription: string
                        incomingBankingTransactionId: string
                        incomingBankingTransactionIdentification: string
                        incomingMutationId: string
                        incomingMutationDescription: string
                        reversalReason: { }
                        reversalAdditionalInformation: string
                        mutationDateTime: string
                  attachmentId: string
                  creditedByInvoiceId: string
                  creditedInvoiceId: string
                  billingCompletenessId: string
                  propertyGroups:
                    - id: string
                      name: string
                  product:
                    id: string
                    name: string
                    productId: string
                    productName: string
                  companyBankAccountId: string
                  consumptionCalculationInputs:
                    - serviceLocationId: string
                      externalChannelIdentifier: string
                      meterSerialNumber: string
                      timeZone: string
                      utilityType: { }
                      meteringType: { }
                      unitOfMeasure: { }
                      timeOfUse: string
                      firstMeasurement:
                        value: 0
                        readingDateTime: string
                        unitOfMeasure: { }
                      secondMeasurement:
                        value: 0
                        readingDateTime: string
                        unitOfMeasure: { }
                      consumptionValue: 0
                      startDateTime: string
                      endDateTime: string
                  collectionDetails:
                    collectionCaseId: string
                    closed: true
                    workflowId: string
                    workflowName: string
                    previousStepId: string
                    previousStepName: string
                    previousStepExecutedAt: string
                    previousStepStatus: { }
                    nextStepId: string
                    nextStepName: string
                    nextStepExecutionDate: string
                  sent: { }
                  failureReasonCode:
                    key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                  failureDetails: string
                  supportsExternalPrinting: true
                  exportStatus: { }
                  newAdvanceAmountExclVAT: 0
                  newAdvanceAmountInclVAT: 0
                  advanceCalculationDetails:
                    newAdvanceAmountExclVAT: 0
                    newAdvanceAmountInclVAT: 0
                    oldAdvanceAmountInclVAT: 0
                    nextInvoiceAmountInclVat: 0
                    nextInvoiceAmountAccuracy: { }
                    recalculationType: { }
                    fallbackReason: { }
                    changedByUserId: string
                  ublAttachmentDetails:
                    errors:
                      - originatorType: { }
                        originatorId: string
                        message:
                          key: { }
                          correlationId: string
                          message: string
                          messageValues:
                            - dataType: { }
                              value: string
                              capitalize: true
                    attachmentId: string
                    attachmentFileName: string
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
  /Invoices/bulk/delete:
    post:
      tags:
        - Invoices
      summary: Deletes multiple invoices in bulk.
      description: Deletes multiple invoices in bulk.
      operationId: post-invoices-bulk-delete
      parameters:
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: The bulk delete invoice request containing the details of the invoices to be deleted.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BulkDeleteInvoiceRequest'
              description: "Represents a bulk request to delete multiple invoices.\r\nThis DTO allows deleting multiple invoices in a single operation."
            example:
              onlyValidate: true
              queryParams:
                flexSearch: string
                includeOnlyIds:
                  - string
                excludeIds:
                  - string
                invoiceType:
                  - string
                propertyGroupIds:
                  - string
                productId: string
                customerId: string
                contractId: string
                invoiceStatus:
                  - string
                paymentProcessStatus:
                  - string
                billingCompletenessId: string
                paymentMethod: string
                startDateTime: string
                endDateTime: string
                periodStartDateTime: string
                periodEndDateTime: string
                periodStartDateTimeBegin: string
                periodStartDateTimeEnd: string
                periodEndDateTimeBegin: string
                periodEndDateTimeEnd: string
                paidDateTimeBegin: string
                exportStatus: string
                collectionCaseId: string
                customerGroupId: string
                companyBankAccountId: string
              quickFilter: string
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BulkDeleteInvoiceRequest'
              description: "Represents a bulk request to delete multiple invoices.\r\nThis DTO allows deleting multiple invoices in a single operation."
            example:
              onlyValidate: true
              queryParams:
                flexSearch: string
                includeOnlyIds:
                  - string
                excludeIds:
                  - string
                invoiceType:
                  - string
                propertyGroupIds:
                  - string
                productId: string
                customerId: string
                contractId: string
                invoiceStatus:
                  - string
                paymentProcessStatus:
                  - string
                billingCompletenessId: string
                paymentMethod: string
                startDateTime: string
                endDateTime: string
                periodStartDateTime: string
                periodEndDateTime: string
                periodStartDateTimeBegin: string
                periodStartDateTimeEnd: string
                periodEndDateTimeBegin: string
                periodEndDateTimeEnd: string
                paidDateTimeBegin: string
                exportStatus: string
                collectionCaseId: string
                customerGroupId: string
                companyBankAccountId: string
              quickFilter: string
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BulkDeleteInvoiceRequest'
              description: "Represents a bulk request to delete multiple invoices.\r\nThis DTO allows deleting multiple invoices in a single operation."
            example:
              onlyValidate: true
              queryParams:
                flexSearch: string
                includeOnlyIds:
                  - string
                excludeIds:
                  - string
                invoiceType:
                  - string
                propertyGroupIds:
                  - string
                productId: string
                customerId: string
                contractId: string
                invoiceStatus:
                  - string
                paymentProcessStatus:
                  - string
                billingCompletenessId: string
                paymentMethod: string
                startDateTime: string
                endDateTime: string
                periodStartDateTime: string
                periodEndDateTime: string
                periodStartDateTimeBegin: string
                periodStartDateTimeEnd: string
                periodEndDateTimeBegin: string
                periodEndDateTimeEnd: string
                paidDateTimeBegin: string
                exportStatus: string
                collectionCaseId: string
                customerGroupId: string
                companyBankAccountId: string
              quickFilter: string
      responses:
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: string
                title: string
                status: 0
                detail: string
                instance: string
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: string
                title: string
                status: 0
                detail: string
                instance: string
        '204':
          description: No Content
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/BooleanApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/BooleanApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data: true
            text/json:
              schema:
                $ref: '#/components/schemas/BooleanApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data: true
  /Invoices/bulk/regenerate:
    post:
      tags:
        - Invoices
      summary: Regenerates multiple invoices in bulk.
      description: Regenerates multiple invoices in bulk.
      operationId: post-invoices-bulk-regenerate
      parameters:
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: The bulk regenerate invoice request containing the details of the invoices to be regenerated.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BulkRegenerateInvoiceRequest'
              description: "Represents a bulk request to regenerate multiple invoices.\r\nThis DTO allows regenerating multiple invoices in a single operation."
            example:
              onlyValidate: true
              queryParams:
                flexSearch: string
                includeOnlyIds:
                  - string
                excludeIds:
                  - string
                invoiceType:
                  - string
                propertyGroupIds:
                  - string
                productId: string
                customerId: string
                contractId: string
                invoiceStatus:
                  - string
                paymentProcessStatus:
                  - string
                billingCompletenessId: string
                paymentMethod: string
                startDateTime: string
                endDateTime: string
                periodStartDateTime: string
                periodEndDateTime: string
                periodStartDateTimeBegin: string
                periodStartDateTimeEnd: string
                periodEndDateTimeBegin: string
                periodEndDateTimeEnd: string
                paidDateTimeBegin: string
                exportStatus: string
                collectionCaseId: string
                customerGroupId: string
                companyBankAccountId: string
              quickFilter: string
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BulkRegenerateInvoiceRequest'
              description: "Represents a bulk request to regenerate multiple invoices.\r\nThis DTO allows regenerating multiple invoices in a single operation."
            example:
              onlyValidate: true
              queryParams:
                flexSearch: string
                includeOnlyIds:
                  - string
                excludeIds:
                  - string
                invoiceType:
                  - string
                propertyGroupIds:
                  - string
                productId: string
                customerId: string
                contractId: string
                invoiceStatus:
                  - string
                paymentProcessStatus:
                  - string
                billingCompletenessId: string
                paymentMethod: string
                startDateTime: string
                endDateTime: string
                periodStartDateTime: string
                periodEndDateTime: string
                periodStartDateTimeBegin: string
                periodStartDateTimeEnd: string
                periodEndDateTimeBegin: string
                periodEndDateTimeEnd: string
                paidDateTimeBegin: string
                exportStatus: string
                collectionCaseId: string
                customerGroupId: string
                companyBankAccountId: string
              quickFilter: string
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BulkRegenerateInvoiceRequest'
              description: "Represents a bulk request to regenerate multiple invoices.\r\nThis DTO allows regenerating multiple invoices in a single operation."
            example:
              onlyValidate: true
              queryParams:
                flexSearch: string
                includeOnlyIds:
                  - string
                excludeIds:
                  - string
                invoiceType:
                  - string
                propertyGroupIds:
                  - string
                productId: string
                customerId: string
                contractId: string
                invoiceStatus:
                  - string
                paymentProcessStatus:
                  - string
                billingCompletenessId: string
                paymentMethod: string
                startDateTime: string
                endDateTime: string
                periodStartDateTime: string
                periodEndDateTime: string
                periodStartDateTimeBegin: string
                periodStartDateTimeEnd: string
                periodEndDateTimeBegin: string
                periodEndDateTimeEnd: string
                paidDateTimeBegin: string
                exportStatus: string
                collectionCaseId: string
                customerGroupId: string
                companyBankAccountId: string
              quickFilter: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/InvoiceDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  invoiceNum: string
                  sequenceNumber: 0
                  invoiceDate: string
                  type: { }
                  status: { }
                  debtor:
                    customerId: string
                    displayName: string
                    customerAccountNumber: string
                    customerType: { }
                    customerGroup:
                      id: string
                      name: string
                  contractId: string
                  contractNumber: string
                  noteToCustomer: string
                  externalReference: string
                  dueDate: string
                  periodStartDateTime: string
                  periodEndDateTime: string
                  lines:
                    - billingItemId: string
                      billingTariffId: string
                      description: string
                      amountExclVAT: 0
                      amountInclVAT: 0
                      vat: 0
                      quantity: 0
                      rawQuantity: 0
                      unitPrice: 0
                      startDateTime: string
                      endDateTime: string
                      taxCodeId: string
                      taxRate: 0
                      unitOfMeasure: { }
                      utilityType: { }
                      lineType: { }
                      consumptionBased: true
                      serviceLocationId: string
                      originalInvoiceId: string
                      sortOrder: 0
                      id: string
                  remainingInvoiceAmount: 0
                  totalAmountInclVAT: 0
                  totalAmountExclVAT: 0
                  paymentDetails:
                    paid: true
                    currentPaymentStatus: { }
                    paymentReference: string
                    paymentMethod: { }
                    directDebitCollectionDate: string
                    amountOfTimesRetried: 0
                    statusHistory:
                      - paymentStatus: { }
                        outgoingBankingTransactionId: string
                        outgoingBankingTransactionIdentification: string
                        outgoingMutationId: string
                        outgoingMutationDescription: string
                        incomingBankingTransactionId: string
                        incomingBankingTransactionIdentification: string
                        incomingMutationId: string
                        incomingMutationDescription: string
                        reversalReason: { }
                        reversalAdditionalInformation: string
                        mutationDateTime: string
                  attachmentId: string
                  creditedByInvoiceId: string
                  creditedInvoiceId: string
                  billingCompletenessId: string
                  propertyGroups:
                    - id: string
                      name: string
                  product:
                    id: string
                    name: string
                    productId: string
                    productName: string
                  companyBankAccountId: string
                  consumptionCalculationInputs:
                    - serviceLocationId: string
                      externalChannelIdentifier: string
                      meterSerialNumber: string
                      timeZone: string
                      utilityType: { }
                      meteringType: { }
                      unitOfMeasure: { }
                      timeOfUse: string
                      firstMeasurement:
                        value: 0
                        readingDateTime: string
                        unitOfMeasure: { }
                      secondMeasurement:
                        value: 0
                        readingDateTime: string
                        unitOfMeasure: { }
                      consumptionValue: 0
                      startDateTime: string
                      endDateTime: string
                  collectionDetails:
                    collectionCaseId: string
                    closed: true
                    workflowId: string
                    workflowName: string
                    previousStepId: string
                    previousStepName: string
                    previousStepExecutedAt: string
                    previousStepStatus: { }
                    nextStepId: string
                    nextStepName: string
                    nextStepExecutionDate: string
                  sent: { }
                  failureReasonCode:
                    key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                  failureDetails: string
                  supportsExternalPrinting: true
                  exportStatus: { }
                  newAdvanceAmountExclVAT: 0
                  newAdvanceAmountInclVAT: 0
                  advanceCalculationDetails:
                    newAdvanceAmountExclVAT: 0
                    newAdvanceAmountInclVAT: 0
                    oldAdvanceAmountInclVAT: 0
                    nextInvoiceAmountInclVat: 0
                    nextInvoiceAmountAccuracy: { }
                    recalculationType: { }
                    fallbackReason: { }
                    changedByUserId: string
                  ublAttachmentDetails:
                    errors:
                      - originatorType: { }
                        originatorId: string
                        message:
                          key: { }
                          correlationId: string
                          message: string
                          messageValues:
                            - dataType: { }
                              value: string
                              capitalize: true
                    attachmentId: string
                    attachmentFileName: string
            text/json:
              schema:
                $ref: '#/components/schemas/InvoiceDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  invoiceNum: string
                  sequenceNumber: 0
                  invoiceDate: string
                  type: { }
                  status: { }
                  debtor:
                    customerId: string
                    displayName: string
                    customerAccountNumber: string
                    customerType: { }
                    customerGroup:
                      id: string
                      name: string
                  contractId: string
                  contractNumber: string
                  noteToCustomer: string
                  externalReference: string
                  dueDate: string
                  periodStartDateTime: string
                  periodEndDateTime: string
                  lines:
                    - billingItemId: string
                      billingTariffId: string
                      description: string
                      amountExclVAT: 0
                      amountInclVAT: 0
                      vat: 0
                      quantity: 0
                      rawQuantity: 0
                      unitPrice: 0
                      startDateTime: string
                      endDateTime: string
                      taxCodeId: string
                      taxRate: 0
                      unitOfMeasure: { }
                      utilityType: { }
                      lineType: { }
                      consumptionBased: true
                      serviceLocationId: string
                      originalInvoiceId: string
                      sortOrder: 0
                      id: string
                  remainingInvoiceAmount: 0
                  totalAmountInclVAT: 0
                  totalAmountExclVAT: 0
                  paymentDetails:
                    paid: true
                    currentPaymentStatus: { }
                    paymentReference: string
                    paymentMethod: { }
                    directDebitCollectionDate: string
                    amountOfTimesRetried: 0
                    statusHistory:
                      - paymentStatus: { }
                        outgoingBankingTransactionId: string
                        outgoingBankingTransactionIdentification: string
                        outgoingMutationId: string
                        outgoingMutationDescription: string
                        incomingBankingTransactionId: string
                        incomingBankingTransactionIdentification: string
                        incomingMutationId: string
                        incomingMutationDescription: string
                        reversalReason: { }
                        reversalAdditionalInformation: string
                        mutationDateTime: string
                  attachmentId: string
                  creditedByInvoiceId: string
                  creditedInvoiceId: string
                  billingCompletenessId: string
                  propertyGroups:
                    - id: string
                      name: string
                  product:
                    id: string
                    name: string
                    productId: string
                    productName: string
                  companyBankAccountId: string
                  consumptionCalculationInputs:
                    - serviceLocationId: string
                      externalChannelIdentifier: string
                      meterSerialNumber: string
                      timeZone: string
                      utilityType: { }
                      meteringType: { }
                      unitOfMeasure: { }
                      timeOfUse: string
                      firstMeasurement:
                        value: 0
                        readingDateTime: string
                        unitOfMeasure: { }
                      secondMeasurement:
                        value: 0
                        readingDateTime: string
                        unitOfMeasure: { }
                      consumptionValue: 0
                      startDateTime: string
                      endDateTime: string
                  collectionDetails:
                    collectionCaseId: string
                    closed: true
                    workflowId: string
                    workflowName: string
                    previousStepId: string
                    previousStepName: string
                    previousStepExecutedAt: string
                    previousStepStatus: { }
                    nextStepId: string
                    nextStepName: string
                    nextStepExecutionDate: string
                  sent: { }
                  failureReasonCode:
                    key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                  failureDetails: string
                  supportsExternalPrinting: true
                  exportStatus: { }
                  newAdvanceAmountExclVAT: 0
                  newAdvanceAmountInclVAT: 0
                  advanceCalculationDetails:
                    newAdvanceAmountExclVAT: 0
                    newAdvanceAmountInclVAT: 0
                    oldAdvanceAmountInclVAT: 0
                    nextInvoiceAmountInclVat: 0
                    nextInvoiceAmountAccuracy: { }
                    recalculationType: { }
                    fallbackReason: { }
                    changedByUserId: string
                  ublAttachmentDetails:
                    errors:
                      - originatorType: { }
                        originatorId: string
                        message:
                          key: { }
                          correlationId: string
                          message: string
                          messageValues:
                            - dataType: { }
                              value: string
                              capitalize: true
                    attachmentId: string
                    attachmentFileName: string
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
  /Invoices/bulk/send:
    post:
      tags:
        - Invoices
      summary: Sends multiple invoices via email in bulk.
      description: Sends multiple invoices via email in bulk.
      operationId: post-invoices-bulk-send
      parameters:
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: The bulk send invoice via email request containing the details of the invoices to be sent.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BulkSendInvoiceViaMailRequest'
              description: "Represents a bulk request to send multiple invoices via email.\r\nThis DTO allows sending multiple invoices via email in a single operation."
            example:
              onlyValidate: true
              queryParams:
                flexSearch: string
                includeOnlyIds:
                  - string
                excludeIds:
                  - string
                invoiceType:
                  - string
                propertyGroupIds:
                  - string
                productId: string
                customerId: string
                contractId: string
                invoiceStatus:
                  - string
                paymentProcessStatus:
                  - string
                billingCompletenessId: string
                paymentMethod: string
                startDateTime: string
                endDateTime: string
                periodStartDateTime: string
                periodEndDateTime: string
                periodStartDateTimeBegin: string
                periodStartDateTimeEnd: string
                periodEndDateTimeBegin: string
                periodEndDateTimeEnd: string
                paidDateTimeBegin: string
                exportStatus: string
                collectionCaseId: string
                customerGroupId: string
                companyBankAccountId: string
              quickFilter: string
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BulkSendInvoiceViaMailRequest'
              description: "Represents a bulk request to send multiple invoices via email.\r\nThis DTO allows sending multiple invoices via email in a single operation."
            example:
              onlyValidate: true
              queryParams:
                flexSearch: string
                includeOnlyIds:
                  - string
                excludeIds:
                  - string
                invoiceType:
                  - string
                propertyGroupIds:
                  - string
                productId: string
                customerId: string
                contractId: string
                invoiceStatus:
                  - string
                paymentProcessStatus:
                  - string
                billingCompletenessId: string
                paymentMethod: string
                startDateTime: string
                endDateTime: string
                periodStartDateTime: string
                periodEndDateTime: string
                periodStartDateTimeBegin: string
                periodStartDateTimeEnd: string
                periodEndDateTimeBegin: string
                periodEndDateTimeEnd: string
                paidDateTimeBegin: string
                exportStatus: string
                collectionCaseId: string
                customerGroupId: string
                companyBankAccountId: string
              quickFilter: string
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BulkSendInvoiceViaMailRequest'
              description: "Represents a bulk request to send multiple invoices via email.\r\nThis DTO allows sending multiple invoices via email in a single operation."
            example:
              onlyValidate: true
              queryParams:
                flexSearch: string
                includeOnlyIds:
                  - string
                excludeIds:
                  - string
                invoiceType:
                  - string
                propertyGroupIds:
                  - string
                productId: string
                customerId: string
                contractId: string
                invoiceStatus:
                  - string
                paymentProcessStatus:
                  - string
                billingCompletenessId: string
                paymentMethod: string
                startDateTime: string
                endDateTime: string
                periodStartDateTime: string
                periodEndDateTime: string
                periodStartDateTimeBegin: string
                periodStartDateTimeEnd: string
                periodEndDateTimeBegin: string
                periodEndDateTimeEnd: string
                paidDateTimeBegin: string
                exportStatus: string
                collectionCaseId: string
                customerGroupId: string
                companyBankAccountId: string
              quickFilter: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/InvoiceDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  invoiceNum: string
                  sequenceNumber: 0
                  invoiceDate: string
                  type: { }
                  status: { }
                  debtor:
                    customerId: string
                    displayName: string
                    customerAccountNumber: string
                    customerType: { }
                    customerGroup:
                      id: string
                      name: string
                  contractId: string
                  contractNumber: string
                  noteToCustomer: string
                  externalReference: string
                  dueDate: string
                  periodStartDateTime: string
                  periodEndDateTime: string
                  lines:
                    - billingItemId: string
                      billingTariffId: string
                      description: string
                      amountExclVAT: 0
                      amountInclVAT: 0
                      vat: 0
                      quantity: 0
                      rawQuantity: 0
                      unitPrice: 0
                      startDateTime: string
                      endDateTime: string
                      taxCodeId: string
                      taxRate: 0
                      unitOfMeasure: { }
                      utilityType: { }
                      lineType: { }
                      consumptionBased: true
                      serviceLocationId: string
                      originalInvoiceId: string
                      sortOrder: 0
                      id: string
                  remainingInvoiceAmount: 0
                  totalAmountInclVAT: 0
                  totalAmountExclVAT: 0
                  paymentDetails:
                    paid: true
                    currentPaymentStatus: { }
                    paymentReference: string
                    paymentMethod: { }
                    directDebitCollectionDate: string
                    amountOfTimesRetried: 0
                    statusHistory:
                      - paymentStatus: { }
                        outgoingBankingTransactionId: string
                        outgoingBankingTransactionIdentification: string
                        outgoingMutationId: string
                        outgoingMutationDescription: string
                        incomingBankingTransactionId: string
                        incomingBankingTransactionIdentification: string
                        incomingMutationId: string
                        incomingMutationDescription: string
                        reversalReason: { }
                        reversalAdditionalInformation: string
                        mutationDateTime: string
                  attachmentId: string
                  creditedByInvoiceId: string
                  creditedInvoiceId: string
                  billingCompletenessId: string
                  propertyGroups:
                    - id: string
                      name: string
                  product:
                    id: string
                    name: string
                    productId: string
                    productName: string
                  companyBankAccountId: string
                  consumptionCalculationInputs:
                    - serviceLocationId: string
                      externalChannelIdentifier: string
                      meterSerialNumber: string
                      timeZone: string
                      utilityType: { }
                      meteringType: { }
                      unitOfMeasure: { }
                      timeOfUse: string
                      firstMeasurement:
                        value: 0
                        readingDateTime: string
                        unitOfMeasure: { }
                      secondMeasurement:
                        value: 0
                        readingDateTime: string
                        unitOfMeasure: { }
                      consumptionValue: 0
                      startDateTime: string
                      endDateTime: string
                  collectionDetails:
                    collectionCaseId: string
                    closed: true
                    workflowId: string
                    workflowName: string
                    previousStepId: string
                    previousStepName: string
                    previousStepExecutedAt: string
                    previousStepStatus: { }
                    nextStepId: string
                    nextStepName: string
                    nextStepExecutionDate: string
                  sent: { }
                  failureReasonCode:
                    key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                  failureDetails: string
                  supportsExternalPrinting: true
                  exportStatus: { }
                  newAdvanceAmountExclVAT: 0
                  newAdvanceAmountInclVAT: 0
                  advanceCalculationDetails:
                    newAdvanceAmountExclVAT: 0
                    newAdvanceAmountInclVAT: 0
                    oldAdvanceAmountInclVAT: 0
                    nextInvoiceAmountInclVat: 0
                    nextInvoiceAmountAccuracy: { }
                    recalculationType: { }
                    fallbackReason: { }
                    changedByUserId: string
                  ublAttachmentDetails:
                    errors:
                      - originatorType: { }
                        originatorId: string
                        message:
                          key: { }
                          correlationId: string
                          message: string
                          messageValues:
                            - dataType: { }
                              value: string
                              capitalize: true
                    attachmentId: string
                    attachmentFileName: string
            text/json:
              schema:
                $ref: '#/components/schemas/InvoiceDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  invoiceNum: string
                  sequenceNumber: 0
                  invoiceDate: string
                  type: { }
                  status: { }
                  debtor:
                    customerId: string
                    displayName: string
                    customerAccountNumber: string
                    customerType: { }
                    customerGroup:
                      id: string
                      name: string
                  contractId: string
                  contractNumber: string
                  noteToCustomer: string
                  externalReference: string
                  dueDate: string
                  periodStartDateTime: string
                  periodEndDateTime: string
                  lines:
                    - billingItemId: string
                      billingTariffId: string
                      description: string
                      amountExclVAT: 0
                      amountInclVAT: 0
                      vat: 0
                      quantity: 0
                      rawQuantity: 0
                      unitPrice: 0
                      startDateTime: string
                      endDateTime: string
                      taxCodeId: string
                      taxRate: 0
                      unitOfMeasure: { }
                      utilityType: { }
                      lineType: { }
                      consumptionBased: true
                      serviceLocationId: string
                      originalInvoiceId: string
                      sortOrder: 0
                      id: string
                  remainingInvoiceAmount: 0
                  totalAmountInclVAT: 0
                  totalAmountExclVAT: 0
                  paymentDetails:
                    paid: true
                    currentPaymentStatus: { }
                    paymentReference: string
                    paymentMethod: { }
                    directDebitCollectionDate: string
                    amountOfTimesRetried: 0
                    statusHistory:
                      - paymentStatus: { }
                        outgoingBankingTransactionId: string
                        outgoingBankingTransactionIdentification: string
                        outgoingMutationId: string
                        outgoingMutationDescription: string
                        incomingBankingTransactionId: string
                        incomingBankingTransactionIdentification: string
                        incomingMutationId: string
                        incomingMutationDescription: string
                        reversalReason: { }
                        reversalAdditionalInformation: string
                        mutationDateTime: string
                  attachmentId: string
                  creditedByInvoiceId: string
                  creditedInvoiceId: string
                  billingCompletenessId: string
                  propertyGroups:
                    - id: string
                      name: string
                  product:
                    id: string
                    name: string
                    productId: string
                    productName: string
                  companyBankAccountId: string
                  consumptionCalculationInputs:
                    - serviceLocationId: string
                      externalChannelIdentifier: string
                      meterSerialNumber: string
                      timeZone: string
                      utilityType: { }
                      meteringType: { }
                      unitOfMeasure: { }
                      timeOfUse: string
                      firstMeasurement:
                        value: 0
                        readingDateTime: string
                        unitOfMeasure: { }
                      secondMeasurement:
                        value: 0
                        readingDateTime: string
                        unitOfMeasure: { }
                      consumptionValue: 0
                      startDateTime: string
                      endDateTime: string
                  collectionDetails:
                    collectionCaseId: string
                    closed: true
                    workflowId: string
                    workflowName: string
                    previousStepId: string
                    previousStepName: string
                    previousStepExecutedAt: string
                    previousStepStatus: { }
                    nextStepId: string
                    nextStepName: string
                    nextStepExecutionDate: string
                  sent: { }
                  failureReasonCode:
                    key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                  failureDetails: string
                  supportsExternalPrinting: true
                  exportStatus: { }
                  newAdvanceAmountExclVAT: 0
                  newAdvanceAmountInclVAT: 0
                  advanceCalculationDetails:
                    newAdvanceAmountExclVAT: 0
                    newAdvanceAmountInclVAT: 0
                    oldAdvanceAmountInclVAT: 0
                    nextInvoiceAmountInclVat: 0
                    nextInvoiceAmountAccuracy: { }
                    recalculationType: { }
                    fallbackReason: { }
                    changedByUserId: string
                  ublAttachmentDetails:
                    errors:
                      - originatorType: { }
                        originatorId: string
                        message:
                          key: { }
                          correlationId: string
                          message: string
                          messageValues:
                            - dataType: { }
                              value: string
                              capitalize: true
                    attachmentId: string
                    attachmentFileName: string
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
  /Invoices/bulk/sendviapostal:
    post:
      tags:
        - Invoices
      summary: Sends multiple invoices via postal mail in bulk.
      description: Sends multiple invoices via postal mail in bulk.
      operationId: post-invoices-bulk-sendviapostal
      parameters:
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: The bulk send invoice via postal request containing the details of the invoices to be sent.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BulkSendInvoiceViaPostalRequest'
              description: "Represents a bulk request to send multiple invoices via postal mail.\r\nThis DTO allows sending multiple invoices via postal mail in a single operation."
            example:
              onlyValidate: true
              queryParams:
                flexSearch: string
                includeOnlyIds:
                  - string
                excludeIds:
                  - string
                invoiceType:
                  - string
                propertyGroupIds:
                  - string
                productId: string
                customerId: string
                contractId: string
                invoiceStatus:
                  - string
                paymentProcessStatus:
                  - string
                billingCompletenessId: string
                paymentMethod: string
                startDateTime: string
                endDateTime: string
                periodStartDateTime: string
                periodEndDateTime: string
                periodStartDateTimeBegin: string
                periodStartDateTimeEnd: string
                periodEndDateTimeBegin: string
                periodEndDateTimeEnd: string
                paidDateTimeBegin: string
                exportStatus: string
                collectionCaseId: string
                customerGroupId: string
                companyBankAccountId: string
              quickFilter: string
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BulkSendInvoiceViaPostalRequest'
              description: "Represents a bulk request to send multiple invoices via postal mail.\r\nThis DTO allows sending multiple invoices via postal mail in a single operation."
            example:
              onlyValidate: true
              queryParams:
                flexSearch: string
                includeOnlyIds:
                  - string
                excludeIds:
                  - string
                invoiceType:
                  - string
                propertyGroupIds:
                  - string
                productId: string
                customerId: string
                contractId: string
                invoiceStatus:
                  - string
                paymentProcessStatus:
                  - string
                billingCompletenessId: string
                paymentMethod: string
                startDateTime: string
                endDateTime: string
                periodStartDateTime: string
                periodEndDateTime: string
                periodStartDateTimeBegin: string
                periodStartDateTimeEnd: string
                periodEndDateTimeBegin: string
                periodEndDateTimeEnd: string
                paidDateTimeBegin: string
                exportStatus: string
                collectionCaseId: string
                customerGroupId: string
                companyBankAccountId: string
              quickFilter: string
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BulkSendInvoiceViaPostalRequest'
              description: "Represents a bulk request to send multiple invoices via postal mail.\r\nThis DTO allows sending multiple invoices via postal mail in a single operation."
            example:
              onlyValidate: true
              queryParams:
                flexSearch: string
                includeOnlyIds:
                  - string
                excludeIds:
                  - string
                invoiceType:
                  - string
                propertyGroupIds:
                  - string
                productId: string
                customerId: string
                contractId: string
                invoiceStatus:
                  - string
                paymentProcessStatus:
                  - string
                billingCompletenessId: string
                paymentMethod: string
                startDateTime: string
                endDateTime: string
                periodStartDateTime: string
                periodEndDateTime: string
                periodStartDateTimeBegin: string
                periodStartDateTimeEnd: string
                periodEndDateTimeBegin: string
                periodEndDateTimeEnd: string
                paidDateTimeBegin: string
                exportStatus: string
                collectionCaseId: string
                customerGroupId: string
                companyBankAccountId: string
              quickFilter: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/InvoiceDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  invoiceNum: string
                  sequenceNumber: 0
                  invoiceDate: string
                  type: { }
                  status: { }
                  debtor:
                    customerId: string
                    displayName: string
                    customerAccountNumber: string
                    customerType: { }
                    customerGroup:
                      id: string
                      name: string
                  contractId: string
                  contractNumber: string
                  noteToCustomer: string
                  externalReference: string
                  dueDate: string
                  periodStartDateTime: string
                  periodEndDateTime: string
                  lines:
                    - billingItemId: string
                      billingTariffId: string
                      description: string
                      amountExclVAT: 0
                      amountInclVAT: 0
                      vat: 0
                      quantity: 0
                      rawQuantity: 0
                      unitPrice: 0
                      startDateTime: string
                      endDateTime: string
                      taxCodeId: string
                      taxRate: 0
                      unitOfMeasure: { }
                      utilityType: { }
                      lineType: { }
                      consumptionBased: true
                      serviceLocationId: string
                      originalInvoiceId: string
                      sortOrder: 0
                      id: string
                  remainingInvoiceAmount: 0
                  totalAmountInclVAT: 0
                  totalAmountExclVAT: 0
                  paymentDetails:
                    paid: true
                    currentPaymentStatus: { }
                    paymentReference: string
                    paymentMethod: { }
                    directDebitCollectionDate: string
                    amountOfTimesRetried: 0
                    statusHistory:
                      - paymentStatus: { }
                        outgoingBankingTransactionId: string
                        outgoingBankingTransactionIdentification: string
                        outgoingMutationId: string
                        outgoingMutationDescription: string
                        incomingBankingTransactionId: string
                        incomingBankingTransactionIdentification: string
                        incomingMutationId: string
                        incomingMutationDescription: string
                        reversalReason: { }
                        reversalAdditionalInformation: string
                        mutationDateTime: string
                  attachmentId: string
                  creditedByInvoiceId: string
                  creditedInvoiceId: string
                  billingCompletenessId: string
                  propertyGroups:
                    - id: string
                      name: string
                  product:
                    id: string
                    name: string
                    productId: string
                    productName: string
                  companyBankAccountId: string
                  consumptionCalculationInputs:
                    - serviceLocationId: string
                      externalChannelIdentifier: string
                      meterSerialNumber: string
                      timeZone: string
                      utilityType: { }
                      meteringType: { }
                      unitOfMeasure: { }
                      timeOfUse: string
                      firstMeasurement:
                        value: 0
                        readingDateTime: string
                        unitOfMeasure: { }
                      secondMeasurement:
                        value: 0
                        readingDateTime: string
                        unitOfMeasure: { }
                      consumptionValue: 0
                      startDateTime: string
                      endDateTime: string
                  collectionDetails:
                    collectionCaseId: string
                    closed: true
                    workflowId: string
                    workflowName: string
                    previousStepId: string
                    previousStepName: string
                    previousStepExecutedAt: string
                    previousStepStatus: { }
                    nextStepId: string
                    nextStepName: string
                    nextStepExecutionDate: string
                  sent: { }
                  failureReasonCode:
                    key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                  failureDetails: string
                  supportsExternalPrinting: true
                  exportStatus: { }
                  newAdvanceAmountExclVAT: 0
                  newAdvanceAmountInclVAT: 0
                  advanceCalculationDetails:
                    newAdvanceAmountExclVAT: 0
                    newAdvanceAmountInclVAT: 0
                    oldAdvanceAmountInclVAT: 0
                    nextInvoiceAmountInclVat: 0
                    nextInvoiceAmountAccuracy: { }
                    recalculationType: { }
                    fallbackReason: { }
                    changedByUserId: string
                  ublAttachmentDetails:
                    errors:
                      - originatorType: { }
                        originatorId: string
                        message:
                          key: { }
                          correlationId: string
                          message: string
                          messageValues:
                            - dataType: { }
                              value: string
                              capitalize: true
                    attachmentId: string
                    attachmentFileName: string
            text/json:
              schema:
                $ref: '#/components/schemas/InvoiceDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  invoiceNum: string
                  sequenceNumber: 0
                  invoiceDate: string
                  type: { }
                  status: { }
                  debtor:
                    customerId: string
                    displayName: string
                    customerAccountNumber: string
                    customerType: { }
                    customerGroup:
                      id: string
                      name: string
                  contractId: string
                  contractNumber: string
                  noteToCustomer: string
                  externalReference: string
                  dueDate: string
                  periodStartDateTime: string
                  periodEndDateTime: string
                  lines:
                    - billingItemId: string
                      billingTariffId: string
                      description: string
                      amountExclVAT: 0
                      amountInclVAT: 0
                      vat: 0
                      quantity: 0
                      rawQuantity: 0
                      unitPrice: 0
                      startDateTime: string
                      endDateTime: string
                      taxCodeId: string
                      taxRate: 0
                      unitOfMeasure: { }
                      utilityType: { }
                      lineType: { }
                      consumptionBased: true
                      serviceLocationId: string
                      originalInvoiceId: string
                      sortOrder: 0
                      id: string
                  remainingInvoiceAmount: 0
                  totalAmountInclVAT: 0
                  totalAmountExclVAT: 0
                  paymentDetails:
                    paid: true
                    currentPaymentStatus: { }
                    paymentReference: string
                    paymentMethod: { }
                    directDebitCollectionDate: string
                    amountOfTimesRetried: 0
                    statusHistory:
                      - paymentStatus: { }
                        outgoingBankingTransactionId: string
                        outgoingBankingTransactionIdentification: string
                        outgoingMutationId: string
                        outgoingMutationDescription: string
                        incomingBankingTransactionId: string
                        incomingBankingTransactionIdentification: string
                        incomingMutationId: string
                        incomingMutationDescription: string
                        reversalReason: { }
                        reversalAdditionalInformation: string
                        mutationDateTime: string
                  attachmentId: string
                  creditedByInvoiceId: string
                  creditedInvoiceId: string
                  billingCompletenessId: string
                  propertyGroups:
                    - id: string
                      name: string
                  product:
                    id: string
                    name: string
                    productId: string
                    productName: string
                  companyBankAccountId: string
                  consumptionCalculationInputs:
                    - serviceLocationId: string
                      externalChannelIdentifier: string
                      meterSerialNumber: string
                      timeZone: string
                      utilityType: { }
                      meteringType: { }
                      unitOfMeasure: { }
                      timeOfUse: string
                      firstMeasurement:
                        value: 0
                        readingDateTime: string
                        unitOfMeasure: { }
                      secondMeasurement:
                        value: 0
                        readingDateTime: string
                        unitOfMeasure: { }
                      consumptionValue: 0
                      startDateTime: string
                      endDateTime: string
                  collectionDetails:
                    collectionCaseId: string
                    closed: true
                    workflowId: string
                    workflowName: string
                    previousStepId: string
                    previousStepName: string
                    previousStepExecutedAt: string
                    previousStepStatus: { }
                    nextStepId: string
                    nextStepName: string
                    nextStepExecutionDate: string
                  sent: { }
                  failureReasonCode:
                    key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                  failureDetails: string
                  supportsExternalPrinting: true
                  exportStatus: { }
                  newAdvanceAmountExclVAT: 0
                  newAdvanceAmountInclVAT: 0
                  advanceCalculationDetails:
                    newAdvanceAmountExclVAT: 0
                    newAdvanceAmountInclVAT: 0
                    oldAdvanceAmountInclVAT: 0
                    nextInvoiceAmountInclVat: 0
                    nextInvoiceAmountAccuracy: { }
                    recalculationType: { }
                    fallbackReason: { }
                    changedByUserId: string
                  ublAttachmentDetails:
                    errors:
                      - originatorType: { }
                        originatorId: string
                        message:
                          key: { }
                          correlationId: string
                          message: string
                          messageValues:
                            - dataType: { }
                              value: string
                              capitalize: true
                    attachmentId: string
                    attachmentFileName: string
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
  /Invoices/bulk/credit:
    post:
      tags:
        - Invoices
      summary: Credits multiple invoices in bulk.
      description: Credits multiple invoices in bulk.
      operationId: post-invoices-bulk-credit
      parameters:
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: The bulk credit invoice request containing the details of the invoices to be credited.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BulkCreditInvoiceRequest'
              description: "Represents a bulk request to credit multiple invoices.\r\nThis DTO allows creating credit notes for multiple invoices in a single operation."
            example:
              onlyValidate: true
              queryParams:
                flexSearch: string
                includeOnlyIds:
                  - string
                excludeIds:
                  - string
                invoiceType:
                  - string
                propertyGroupIds:
                  - string
                productId: string
                customerId: string
                contractId: string
                invoiceStatus:
                  - string
                paymentProcessStatus:
                  - string
                billingCompletenessId: string
                paymentMethod: string
                startDateTime: string
                endDateTime: string
                periodStartDateTime: string
                periodEndDateTime: string
                periodStartDateTimeBegin: string
                periodStartDateTimeEnd: string
                periodEndDateTimeBegin: string
                periodEndDateTimeEnd: string
                paidDateTimeBegin: string
                exportStatus: string
                collectionCaseId: string
                customerGroupId: string
                companyBankAccountId: string
              quickFilter: string
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BulkCreditInvoiceRequest'
              description: "Represents a bulk request to credit multiple invoices.\r\nThis DTO allows creating credit notes for multiple invoices in a single operation."
            example:
              onlyValidate: true
              queryParams:
                flexSearch: string
                includeOnlyIds:
                  - string
                excludeIds:
                  - string
                invoiceType:
                  - string
                propertyGroupIds:
                  - string
                productId: string
                customerId: string
                contractId: string
                invoiceStatus:
                  - string
                paymentProcessStatus:
                  - string
                billingCompletenessId: string
                paymentMethod: string
                startDateTime: string
                endDateTime: string
                periodStartDateTime: string
                periodEndDateTime: string
                periodStartDateTimeBegin: string
                periodStartDateTimeEnd: string
                periodEndDateTimeBegin: string
                periodEndDateTimeEnd: string
                paidDateTimeBegin: string
                exportStatus: string
                collectionCaseId: string
                customerGroupId: string
                companyBankAccountId: string
              quickFilter: string
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BulkCreditInvoiceRequest'
              description: "Represents a bulk request to credit multiple invoices.\r\nThis DTO allows creating credit notes for multiple invoices in a single operation."
            example:
              onlyValidate: true
              queryParams:
                flexSearch: string
                includeOnlyIds:
                  - string
                excludeIds:
                  - string
                invoiceType:
                  - string
                propertyGroupIds:
                  - string
                productId: string
                customerId: string
                contractId: string
                invoiceStatus:
                  - string
                paymentProcessStatus:
                  - string
                billingCompletenessId: string
                paymentMethod: string
                startDateTime: string
                endDateTime: string
                periodStartDateTime: string
                periodEndDateTime: string
                periodStartDateTimeBegin: string
                periodStartDateTimeEnd: string
                periodEndDateTimeBegin: string
                periodEndDateTimeEnd: string
                paidDateTimeBegin: string
                exportStatus: string
                collectionCaseId: string
                customerGroupId: string
                companyBankAccountId: string
              quickFilter: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/InvoiceDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  invoiceNum: string
                  sequenceNumber: 0
                  invoiceDate: string
                  type: { }
                  status: { }
                  debtor:
                    customerId: string
                    displayName: string
                    customerAccountNumber: string
                    customerType: { }
                    customerGroup:
                      id: string
                      name: string
                  contractId: string
                  contractNumber: string
                  noteToCustomer: string
                  externalReference: string
                  dueDate: string
                  periodStartDateTime: string
                  periodEndDateTime: string
                  lines:
                    - billingItemId: string
                      billingTariffId: string
                      description: string
                      amountExclVAT: 0
                      amountInclVAT: 0
                      vat: 0
                      quantity: 0
                      rawQuantity: 0
                      unitPrice: 0
                      startDateTime: string
                      endDateTime: string
                      taxCodeId: string
                      taxRate: 0
                      unitOfMeasure: { }
                      utilityType: { }
                      lineType: { }
                      consumptionBased: true
                      serviceLocationId: string
                      originalInvoiceId: string
                      sortOrder: 0
                      id: string
                  remainingInvoiceAmount: 0
                  totalAmountInclVAT: 0
                  totalAmountExclVAT: 0
                  paymentDetails:
                    paid: true
                    currentPaymentStatus: { }
                    paymentReference: string
                    paymentMethod: { }
                    directDebitCollectionDate: string
                    amountOfTimesRetried: 0
                    statusHistory:
                      - paymentStatus: { }
                        outgoingBankingTransactionId: string
                        outgoingBankingTransactionIdentification: string
                        outgoingMutationId: string
                        outgoingMutationDescription: string
                        incomingBankingTransactionId: string
                        incomingBankingTransactionIdentification: string
                        incomingMutationId: string
                        incomingMutationDescription: string
                        reversalReason: { }
                        reversalAdditionalInformation: string
                        mutationDateTime: string
                  attachmentId: string
                  creditedByInvoiceId: string
                  creditedInvoiceId: string
                  billingCompletenessId: string
                  propertyGroups:
                    - id: string
                      name: string
                  product:
                    id: string
                    name: string
                    productId: string
                    productName: string
                  companyBankAccountId: string
                  consumptionCalculationInputs:
                    - serviceLocationId: string
                      externalChannelIdentifier: string
                      meterSerialNumber: string
                      timeZone: string
                      utilityType: { }
                      meteringType: { }
                      unitOfMeasure: { }
                      timeOfUse: string
                      firstMeasurement:
                        value: 0
                        readingDateTime: string
                        unitOfMeasure: { }
                      secondMeasurement:
                        value: 0
                        readingDateTime: string
                        unitOfMeasure: { }
                      consumptionValue: 0
                      startDateTime: string
                      endDateTime: string
                  collectionDetails:
                    collectionCaseId: string
                    closed: true
                    workflowId: string
                    workflowName: string
                    previousStepId: string
                    previousStepName: string
                    previousStepExecutedAt: string
                    previousStepStatus: { }
                    nextStepId: string
                    nextStepName: string
                    nextStepExecutionDate: string
                  sent: { }
                  failureReasonCode:
                    key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                  failureDetails: string
                  supportsExternalPrinting: true
                  exportStatus: { }
                  newAdvanceAmountExclVAT: 0
                  newAdvanceAmountInclVAT: 0
                  advanceCalculationDetails:
                    newAdvanceAmountExclVAT: 0
                    newAdvanceAmountInclVAT: 0
                    oldAdvanceAmountInclVAT: 0
                    nextInvoiceAmountInclVat: 0
                    nextInvoiceAmountAccuracy: { }
                    recalculationType: { }
                    fallbackReason: { }
                    changedByUserId: string
                  ublAttachmentDetails:
                    errors:
                      - originatorType: { }
                        originatorId: string
                        message:
                          key: { }
                          correlationId: string
                          message: string
                          messageValues:
                            - dataType: { }
                              value: string
                              capitalize: true
                    attachmentId: string
                    attachmentFileName: string
            text/json:
              schema:
                $ref: '#/components/schemas/InvoiceDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  invoiceNum: string
                  sequenceNumber: 0
                  invoiceDate: string
                  type: { }
                  status: { }
                  debtor:
                    customerId: string
                    displayName: string
                    customerAccountNumber: string
                    customerType: { }
                    customerGroup:
                      id: string
                      name: string
                  contractId: string
                  contractNumber: string
                  noteToCustomer: string
                  externalReference: string
                  dueDate: string
                  periodStartDateTime: string
                  periodEndDateTime: string
                  lines:
                    - billingItemId: string
                      billingTariffId: string
                      description: string
                      amountExclVAT: 0
                      amountInclVAT: 0
                      vat: 0
                      quantity: 0
                      rawQuantity: 0
                      unitPrice: 0
                      startDateTime: string
                      endDateTime: string
                      taxCodeId: string
                      taxRate: 0
                      unitOfMeasure: { }
                      utilityType: { }
                      lineType: { }
                      consumptionBased: true
                      serviceLocationId: string
                      originalInvoiceId: string
                      sortOrder: 0
                      id: string
                  remainingInvoiceAmount: 0
                  totalAmountInclVAT: 0
                  totalAmountExclVAT: 0
                  paymentDetails:
                    paid: true
                    currentPaymentStatus: { }
                    paymentReference: string
                    paymentMethod: { }
                    directDebitCollectionDate: string
                    amountOfTimesRetried: 0
                    statusHistory:
                      - paymentStatus: { }
                        outgoingBankingTransactionId: string
                        outgoingBankingTransactionIdentification: string
                        outgoingMutationId: string
                        outgoingMutationDescription: string
                        incomingBankingTransactionId: string
                        incomingBankingTransactionIdentification: string
                        incomingMutationId: string
                        incomingMutationDescription: string
                        reversalReason: { }
                        reversalAdditionalInformation: string
                        mutationDateTime: string
                  attachmentId: string
                  creditedByInvoiceId: string
                  creditedInvoiceId: string
                  billingCompletenessId: string
                  propertyGroups:
                    - id: string
                      name: string
                  product:
                    id: string
                    name: string
                    productId: string
                    productName: string
                  companyBankAccountId: string
                  consumptionCalculationInputs:
                    - serviceLocationId: string
                      externalChannelIdentifier: string
                      meterSerialNumber: string
                      timeZone: string
                      utilityType: { }
                      meteringType: { }
                      unitOfMeasure: { }
                      timeOfUse: string
                      firstMeasurement:
                        value: 0
                        readingDateTime: string
                        unitOfMeasure: { }
                      secondMeasurement:
                        value: 0
                        readingDateTime: string
                        unitOfMeasure: { }
                      consumptionValue: 0
                      startDateTime: string
                      endDateTime: string
                  collectionDetails:
                    collectionCaseId: string
                    closed: true
                    workflowId: string
                    workflowName: string
                    previousStepId: string
                    previousStepName: string
                    previousStepExecutedAt: string
                    previousStepStatus: { }
                    nextStepId: string
                    nextStepName: string
                    nextStepExecutionDate: string
                  sent: { }
                  failureReasonCode:
                    key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                  failureDetails: string
                  supportsExternalPrinting: true
                  exportStatus: { }
                  newAdvanceAmountExclVAT: 0
                  newAdvanceAmountInclVAT: 0
                  advanceCalculationDetails:
                    newAdvanceAmountExclVAT: 0
                    newAdvanceAmountInclVAT: 0
                    oldAdvanceAmountInclVAT: 0
                    nextInvoiceAmountInclVat: 0
                    nextInvoiceAmountAccuracy: { }
                    recalculationType: { }
                    fallbackReason: { }
                    changedByUserId: string
                  ublAttachmentDetails:
                    errors:
                      - originatorType: { }
                        originatorId: string
                        message:
                          key: { }
                          correlationId: string
                          message: string
                          messageValues:
                            - dataType: { }
                              value: string
                              capitalize: true
                    attachmentId: string
                    attachmentFileName: string
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
  '/Invoices/{invoiceuuid}/preview':
    post:
      tags:
        - Invoices
      summary: Credits multiple invoices in bulk.
      description: Credits multiple invoices in bulk.
      operationId: post-invoices-invoiceuuid-preview
      parameters:
        - name: invoiceuuid
          in: path
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '200':
          description: Success
          content:
            text/html:
              schema:
                type: string
              example: <Invoices-invoiceuuid-PreviewPost200TextHtmlResponse>string</Invoices-invoiceuuid-PreviewPost200TextHtmlResponse>
        '400':
          description: Bad Request
          content:
            text/html:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example: <ApiResponseDTO> <errors> <key /> <correlationId>string</correlationId> <message>string</message> <messageValues> <dataType /> <value>string</value> <capitalize>true</capitalize> </messageValues> </errors> <success>true</success> <applicableEntitiesCount>0</applicableEntitiesCount> <requestedEntitiesCount>0</requestedEntitiesCount> <succeededEntitiesCount>0</succeededEntitiesCount> <isSynchronous>true</isSynchronous> </ApiResponseDTO>
  '/Invoices/{invoiceuuid}/previewpdf':
    post:
      tags:
        - Invoices
      summary: Previews an invoice as a PDF.
      description: Previews an invoice as a PDF.
      operationId: post-invoices-invoiceuuid-previewpdf
      parameters:
        - name: invoiceuuid
          in: path
          description: The UUID of the invoice.
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: string
                format: binary
              examples:
                default:
                  value: 
            application/json:
              schema:
                type: string
                format: binary
              example: string
            text/json:
              schema:
                type: string
                format: binary
              example: string
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
  /OutgoingBankingTransactions:
    get:
      tags:
        - OutgoingBankingTransactions
      summary: Retrieves all outgoing banking transactions with optional filters.
      description: Retrieves all outgoing banking transactions with optional filters.
      operationId: get-outgoingbankingtransactions
      parameters:
        - name: CompanyBankAccountId
          in: query
          schema:
            type: string
        - name: OutgoingBankingTransactionType
          in: query
          schema:
            type: string
        - name: MutationDateTimeStart
          in: query
          description: Format - date-time (as date-time in RFC3339).
          schema:
            type: string
            format: date-time
            nullable: true
        - name: MutationDateTimeEnd
          in: query
          description: Format - date-time (as date-time in RFC3339).
          schema:
            type: string
            format: date-time
            nullable: true
        - name: FlexSearch
          in: query
          schema:
            type: string
        - name: IncludeOnlyIds
          in: query
          schema:
            type: array
            items:
              type: string
        - name: ExcludeIds
          in: query
          schema:
            type: array
            items:
              type: string
        - name: Name
          in: query
          schema:
            type: string
        - name: Id
          in: query
          description: Format - int32.
          schema:
            type: integer
            format: int32
        - name: orderBy
          in: query
          description: Order by clause.
          schema:
            type: string
        - name: continuationToken
          in: header
          description: Continuation token for pagination.
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/OutgoingBankingTransactionDTOPagedResponseModelDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/OutgoingBankingTransactionDTOPagedResponseModelDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  results:
                    - id: string
                      entityType: { }
                      createdDateTime: string
                      discriminator: string
                      _etag: string
                      requireAttention: true
                      hasErrors: true
                      hasWarnings: true
                      isReadOnly: true
                      organisationId: string
                      identification: string
                      sequenceNum: 0
                      type: { }
                      status: { }
                      mutationDateTime: string
                      companyBankAccount:
                        id: string
                        iban: string
                        bic: string
                        accountHolder: string
                        sepaCreditorId: string
                      fileName: string
                      internalFilePath: string
                      totalAmount: 0
                      entityCounts:
                        numberOfMutations: 0
                        confirmedMutations: 0
                        reversedMutations: 0
                      migrated: true
                      locked: true
                      confirmingIncomingBankingTransactions: { }
                  hasNextPage: true
                  nextPageToken: string
                  totalRecords: 0
                  sortableFields:
                    - string
                  aggregateDetails:
                    - code: string
                      translation: string
                      value: 0
                      valueDate: string
            text/json:
              schema:
                $ref: '#/components/schemas/OutgoingBankingTransactionDTOPagedResponseModelDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  results:
                    - id: string
                      entityType: { }
                      createdDateTime: string
                      discriminator: string
                      _etag: string
                      requireAttention: true
                      hasErrors: true
                      hasWarnings: true
                      isReadOnly: true
                      organisationId: string
                      identification: string
                      sequenceNum: 0
                      type: { }
                      status: { }
                      mutationDateTime: string
                      companyBankAccount:
                        id: string
                        iban: string
                        bic: string
                        accountHolder: string
                        sepaCreditorId: string
                      fileName: string
                      internalFilePath: string
                      totalAmount: 0
                      entityCounts:
                        numberOfMutations: 0
                        confirmedMutations: 0
                        reversedMutations: 0
                      migrated: true
                      locked: true
                      confirmingIncomingBankingTransactions: { }
                  hasNextPage: true
                  nextPageToken: string
                  totalRecords: 0
                  sortableFields:
                    - string
                  aggregateDetails:
                    - code: string
                      translation: string
                      value: 0
                      valueDate: string
    post:
      tags:
        - OutgoingBankingTransactions
      summary: Assigns invoices to new or existing outgoing banking transactions.
      description: Assigns invoices to new or existing outgoing banking transactions.
      operationId: post-outgoingbankingtransactions
      parameters:
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: Request containing the assignment details.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/AssignInvoicesToOutgoingBankingTransactionRequest'
              description: "Represents a request to assign invoices to outgoing banking transactions.\r\nThis DTO supports both assigning specific invoices or all applicable invoices based on type."
            example:
              allApplicable: true
              outgoingBankingTransactionType: { }
              invoiceIds:
                - string
              addToNewOutgoingBankingTransactions: true
              overriddenCollectionDate: string
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/AssignInvoicesToOutgoingBankingTransactionRequest'
              description: "Represents a request to assign invoices to outgoing banking transactions.\r\nThis DTO supports both assigning specific invoices or all applicable invoices based on type."
            example:
              allApplicable: true
              outgoingBankingTransactionType: { }
              invoiceIds:
                - string
              addToNewOutgoingBankingTransactions: true
              overriddenCollectionDate: string
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/AssignInvoicesToOutgoingBankingTransactionRequest'
              description: "Represents a request to assign invoices to outgoing banking transactions.\r\nThis DTO supports both assigning specific invoices or all applicable invoices based on type."
            example:
              allApplicable: true
              outgoingBankingTransactionType: { }
              invoiceIds:
                - string
              addToNewOutgoingBankingTransactions: true
              overriddenCollectionDate: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/BooleanApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/BooleanApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data: true
            text/json:
              schema:
                $ref: '#/components/schemas/BooleanApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data: true
  /OutgoingBankingTransactions/overviewcount:
    get:
      tags:
        - OutgoingBankingTransactions
      summary: Retrieves the overview count of outgoing banking transactions.
      description: Retrieves the overview count of outgoing banking transactions.
      operationId: get-outgoingbankingtransactions-overviewcount
      parameters:
        - name: CompanyBankAccountId
          in: query
          schema:
            type: string
        - name: OutgoingBankingTransactionType
          in: query
          schema:
            type: string
        - name: MutationDateTimeStart
          in: query
          description: Format - date-time (as date-time in RFC3339).
          schema:
            type: string
            format: date-time
            nullable: true
        - name: MutationDateTimeEnd
          in: query
          description: Format - date-time (as date-time in RFC3339).
          schema:
            type: string
            format: date-time
            nullable: true
        - name: FlexSearch
          in: query
          schema:
            type: string
        - name: IncludeOnlyIds
          in: query
          schema:
            type: array
            items:
              type: string
        - name: ExcludeIds
          in: query
          schema:
            type: array
            items:
              type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/OutgoingBankingTransactionOverviewCountDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/OutgoingBankingTransactionOverviewCountDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  all: 0
                  readyToSend: 0
                  toConfirm: 0
                  closed: 0
                  dateExpired: 0
                  resolveIssues: 0
            text/json:
              schema:
                $ref: '#/components/schemas/OutgoingBankingTransactionOverviewCountDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  all: 0
                  readyToSend: 0
                  toConfirm: 0
                  closed: 0
                  dateExpired: 0
                  resolveIssues: 0
  '/OutgoingBankingTransactions/{outgoingBankingTransactionId}':
    get:
      tags:
        - OutgoingBankingTransactions
      summary: Retrieves an outgoing banking transaction by its ID.
      description: Retrieves an outgoing banking transaction by its ID.
      operationId: get-outgoingbankingtransactions-outgoingbankingtransactionid
      parameters:
        - name: outgoingBankingTransactionId
          in: path
          description: ID of the outgoing banking transaction.
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/OutgoingBankingTransactionDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/OutgoingBankingTransactionDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  identification: string
                  sequenceNum: 0
                  type: { }
                  status: { }
                  mutationDateTime: string
                  companyBankAccount:
                    id: string
                    iban: string
                    bic: string
                    accountHolder: string
                    sepaCreditorId: string
                  fileName: string
                  internalFilePath: string
                  totalAmount: 0
                  entityCounts:
                    numberOfMutations: 0
                    confirmedMutations: 0
                    reversedMutations: 0
                  migrated: true
                  locked: true
                  confirmingIncomingBankingTransactions: { }
            text/json:
              schema:
                $ref: '#/components/schemas/OutgoingBankingTransactionDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  identification: string
                  sequenceNum: 0
                  type: { }
                  status: { }
                  mutationDateTime: string
                  companyBankAccount:
                    id: string
                    iban: string
                    bic: string
                    accountHolder: string
                    sepaCreditorId: string
                  fileName: string
                  internalFilePath: string
                  totalAmount: 0
                  entityCounts:
                    numberOfMutations: 0
                    confirmedMutations: 0
                    reversedMutations: 0
                  migrated: true
                  locked: true
                  confirmingIncomingBankingTransactions: { }
    delete:
      tags:
        - OutgoingBankingTransactions
      summary: Deletes an outgoing banking transaction by its ID.
      description: Deletes an outgoing banking transaction by its ID.
      operationId: delete-outgoingbankingtransactions-outgoingbankingtransactionid
      parameters:
        - name: outgoingBankingTransactionId
          in: path
          description: ID of the outgoing banking transaction.
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/BooleanApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/BooleanApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data: true
            text/json:
              schema:
                $ref: '#/components/schemas/BooleanApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data: true
  '/OutgoingBankingTransactions/{outgoingBankingTransactionId}/mutations':
    get:
      tags:
        - OutgoingBankingTransactions
      summary: Retrieves all mutations for a specific outgoing banking transaction.
      description: Retrieves all mutations for a specific outgoing banking transaction.
      operationId: get-outgoingbankingtransactions-outgoingbankingtransactionid-mutations
      parameters:
        - name: outgoingBankingTransactionId
          in: path
          description: ID of the outgoing banking transaction.
          required: true
          schema:
            type: string
        - name: Name
          in: query
          schema:
            type: string
        - name: Id
          in: query
          description: Format - int32.
          schema:
            type: integer
            format: int32
        - name: OutgoingBankingTransactionId
          in: query
          schema:
            type: string
        - name: Status
          in: query
          schema:
            type: string
        - name: ReferenceType
          in: query
          schema:
            type: string
        - name: FlexSearch
          in: query
          schema:
            type: string
        - name: IncludeOnlyIds
          in: query
          schema:
            type: array
            items:
              type: string
        - name: ExcludeIds
          in: query
          schema:
            type: array
            items:
              type: string
        - name: orderBy
          in: query
          description: Order by clause.
          schema:
            type: string
        - name: continuationToken
          in: header
          description: Continuation token for pagination.
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/OutgoingMutationDTOPagedResponseModelDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/OutgoingMutationDTOPagedResponseModelDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  results:
                    - id: string
                      entityType: { }
                      createdDateTime: string
                      discriminator: string
                      _etag: string
                      requireAttention: true
                      hasErrors: true
                      hasWarnings: true
                      isReadOnly: true
                      organisationId: string
                      outgoingBankingTransactionId: string
                      type: { }
                      amount: 0
                      description: string
                      referenceDetails:
                        referenceType: { }
                        referenceId: string
                        parameters: { }
                      customerBankAccount:
                        iban: string
                        accountHolder: string
                        mandateNumber: string
                        mandateSignedDate: string
                      status: { }
                      errors:
                        - key: { }
                          correlationId: string
                          message: string
                          messageValues:
                            - dataType: { }
                              value: string
                              capitalize: true
                      confirmingIncomingBankingTransactionId: string
                      confirmingIncomingBankingTransactionIdentification: string
                      confirmingIncomingMutationId: string
                      revertingIncomingBankingTransactionId: string
                      revertingIncomingBankingTransactionIdentification: string
                      revertingIncomingMutationId: string
                  hasNextPage: true
                  nextPageToken: string
                  totalRecords: 0
                  sortableFields:
                    - string
                  aggregateDetails:
                    - code: string
                      translation: string
                      value: 0
                      valueDate: string
            text/json:
              schema:
                $ref: '#/components/schemas/OutgoingMutationDTOPagedResponseModelDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  results:
                    - id: string
                      entityType: { }
                      createdDateTime: string
                      discriminator: string
                      _etag: string
                      requireAttention: true
                      hasErrors: true
                      hasWarnings: true
                      isReadOnly: true
                      organisationId: string
                      outgoingBankingTransactionId: string
                      type: { }
                      amount: 0
                      description: string
                      referenceDetails:
                        referenceType: { }
                        referenceId: string
                        parameters: { }
                      customerBankAccount:
                        iban: string
                        accountHolder: string
                        mandateNumber: string
                        mandateSignedDate: string
                      status: { }
                      errors:
                        - key: { }
                          correlationId: string
                          message: string
                          messageValues:
                            - dataType: { }
                              value: string
                              capitalize: true
                      confirmingIncomingBankingTransactionId: string
                      confirmingIncomingBankingTransactionIdentification: string
                      confirmingIncomingMutationId: string
                      revertingIncomingBankingTransactionId: string
                      revertingIncomingBankingTransactionIdentification: string
                      revertingIncomingMutationId: string
                  hasNextPage: true
                  nextPageToken: string
                  totalRecords: 0
                  sortableFields:
                    - string
                  aggregateDetails:
                    - code: string
                      translation: string
                      value: 0
                      valueDate: string
    post:
      tags:
        - OutgoingBankingTransactions
      summary: Adds an entry to an existing outgoing banking transaction.
      description: Adds an entry to an existing outgoing banking transaction.
      operationId: post-outgoingbankingtransactions-outgoingbankingtransactionid-mutations
      parameters:
        - name: outgoingBankingTransactionId
          in: path
          description: ID of the outgoing banking transaction.
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: Request containing the entry details.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/AddEntryToOutgoingBankingTransactionRequest'
              description: "Represents a request to add a new entry to an outgoing banking transaction.\r\nThis DTO supports two types of entries: invoice-based or manual entries with custom details."
            example:
              invoiceId: string
              amount: 0
              paymentReference: string
              iban: string
              customerId: string
              transactionId: string
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/AddEntryToOutgoingBankingTransactionRequest'
              description: "Represents a request to add a new entry to an outgoing banking transaction.\r\nThis DTO supports two types of entries: invoice-based or manual entries with custom details."
            example:
              invoiceId: string
              amount: 0
              paymentReference: string
              iban: string
              customerId: string
              transactionId: string
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/AddEntryToOutgoingBankingTransactionRequest'
              description: "Represents a request to add a new entry to an outgoing banking transaction.\r\nThis DTO supports two types of entries: invoice-based or manual entries with custom details."
            example:
              invoiceId: string
              amount: 0
              paymentReference: string
              iban: string
              customerId: string
              transactionId: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/OutgoingMutationDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/OutgoingMutationDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  outgoingBankingTransactionId: string
                  type: { }
                  amount: 0
                  description: string
                  referenceDetails:
                    referenceType: { }
                    referenceId: string
                    parameters: { }
                  customerBankAccount:
                    iban: string
                    accountHolder: string
                    mandateNumber: string
                    mandateSignedDate: string
                  status: { }
                  errors:
                    - key: { }
                      correlationId: string
                      message: string
                      messageValues:
                        - dataType: { }
                          value: string
                          capitalize: true
                  confirmingIncomingBankingTransactionId: string
                  confirmingIncomingBankingTransactionIdentification: string
                  confirmingIncomingMutationId: string
                  revertingIncomingBankingTransactionId: string
                  revertingIncomingBankingTransactionIdentification: string
                  revertingIncomingMutationId: string
            text/json:
              schema:
                $ref: '#/components/schemas/OutgoingMutationDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  outgoingBankingTransactionId: string
                  type: { }
                  amount: 0
                  description: string
                  referenceDetails:
                    referenceType: { }
                    referenceId: string
                    parameters: { }
                  customerBankAccount:
                    iban: string
                    accountHolder: string
                    mandateNumber: string
                    mandateSignedDate: string
                  status: { }
                  errors:
                    - key: { }
                      correlationId: string
                      message: string
                      messageValues:
                        - dataType: { }
                          value: string
                          capitalize: true
                  confirmingIncomingBankingTransactionId: string
                  confirmingIncomingBankingTransactionIdentification: string
                  confirmingIncomingMutationId: string
                  revertingIncomingBankingTransactionId: string
                  revertingIncomingBankingTransactionIdentification: string
                  revertingIncomingMutationId: string
  '/OutgoingBankingTransactions/{outgoingBankingTransactionId}/mutations/overviewcount':
    get:
      tags:
        - OutgoingBankingTransactions
      summary: Retrieves the overview count of mutations for a specific outgoing banking transaction.
      description: Retrieves the overview count of mutations for a specific outgoing banking transaction.
      operationId: get-outgoingbankingtransactions-outgoingbankingtransactionid-mutations-overv
      parameters:
        - name: outgoingBankingTransactionId
          in: path
          description: ID of the outgoing banking transaction.
          required: true
          schema:
            type: string
        - name: OutgoingBankingTransactionId
          in: query
          schema:
            type: string
        - name: Status
          in: query
          schema:
            type: string
        - name: ReferenceType
          in: query
          schema:
            type: string
        - name: FlexSearch
          in: query
          schema:
            type: string
        - name: IncludeOnlyIds
          in: query
          schema:
            type: array
            items:
              type: string
        - name: ExcludeIds
          in: query
          schema:
            type: array
            items:
              type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/OutgoingMutationsOverviewCountDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/OutgoingMutationsOverviewCountDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  all: 0
                  invoices: 0
                  manualEntries: 0
                  resolveIssues: 0
            text/json:
              schema:
                $ref: '#/components/schemas/OutgoingMutationsOverviewCountDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  all: 0
                  invoices: 0
                  manualEntries: 0
                  resolveIssues: 0
  /OutgoingBankingTransactions/create:
    post:
      tags:
        - OutgoingBankingTransactions
      summary: Creates a new outgoing banking transaction.
      description: Creates a new outgoing banking transaction.
      operationId: post-outgoingbankingtransactions-create
      parameters:
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: Request containing the transaction details.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/CreateNewOutgoingBankingTransactionRequest'
              description: "Represents a request to create a new outgoing banking transaction.\r\nThis DTO is used to create a new transaction with multiple entries and associated details."
            example:
              outgoingBankingTransactionType: { }
              collectionDate: string
              companyBankAccountId: string
              entries:
                - invoiceId: string
                  amount: 0
                  paymentReference: string
                  iban: string
                  customerId: string
                  transactionId: string
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/CreateNewOutgoingBankingTransactionRequest'
              description: "Represents a request to create a new outgoing banking transaction.\r\nThis DTO is used to create a new transaction with multiple entries and associated details."
            example:
              outgoingBankingTransactionType: { }
              collectionDate: string
              companyBankAccountId: string
              entries:
                - invoiceId: string
                  amount: 0
                  paymentReference: string
                  iban: string
                  customerId: string
                  transactionId: string
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/CreateNewOutgoingBankingTransactionRequest'
              description: "Represents a request to create a new outgoing banking transaction.\r\nThis DTO is used to create a new transaction with multiple entries and associated details."
            example:
              outgoingBankingTransactionType: { }
              collectionDate: string
              companyBankAccountId: string
              entries:
                - invoiceId: string
                  amount: 0
                  paymentReference: string
                  iban: string
                  customerId: string
                  transactionId: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/OutgoingBankingTransactionDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/OutgoingBankingTransactionDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  identification: string
                  sequenceNum: 0
                  type: { }
                  status: { }
                  mutationDateTime: string
                  companyBankAccount:
                    id: string
                    iban: string
                    bic: string
                    accountHolder: string
                    sepaCreditorId: string
                  fileName: string
                  internalFilePath: string
                  totalAmount: 0
                  entityCounts:
                    numberOfMutations: 0
                    confirmedMutations: 0
                    reversedMutations: 0
                  migrated: true
                  locked: true
                  confirmingIncomingBankingTransactions: { }
            text/json:
              schema:
                $ref: '#/components/schemas/OutgoingBankingTransactionDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  identification: string
                  sequenceNum: 0
                  type: { }
                  status: { }
                  mutationDateTime: string
                  companyBankAccount:
                    id: string
                    iban: string
                    bic: string
                    accountHolder: string
                    sepaCreditorId: string
                  fileName: string
                  internalFilePath: string
                  totalAmount: 0
                  entityCounts:
                    numberOfMutations: 0
                    confirmedMutations: 0
                    reversedMutations: 0
                  migrated: true
                  locked: true
                  confirmingIncomingBankingTransactions: { }
  /OutgoingBankingTransactions/bulk/delete:
    post:
      tags:
        - OutgoingBankingTransactions
      summary: Bulk deletes outgoing banking transactions.
      description: Bulk deletes outgoing banking transactions.
      operationId: post-outgoingbankingtransactions-bulk-delete
      parameters:
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: Request containing the details for bulk deletion.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BulkDeleteOutgoingBankingTransactionRequest'
              description: "Represents a bulk request to delete multiple outgoing banking transactions.\r\nThis DTO allows for batch deletion of transactions based on query parameters and filters."
            example:
              onlyValidate: true
              queryParams:
                flexSearch: string
                includeOnlyIds:
                  - string
                excludeIds:
                  - string
                companyBankAccountId: string
                outgoingBankingTransactionType: string
                mutationDateTimeStart: string
                mutationDateTimeEnd: string
              quickFilter: string
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BulkDeleteOutgoingBankingTransactionRequest'
              description: "Represents a bulk request to delete multiple outgoing banking transactions.\r\nThis DTO allows for batch deletion of transactions based on query parameters and filters."
            example:
              onlyValidate: true
              queryParams:
                flexSearch: string
                includeOnlyIds:
                  - string
                excludeIds:
                  - string
                companyBankAccountId: string
                outgoingBankingTransactionType: string
                mutationDateTimeStart: string
                mutationDateTimeEnd: string
              quickFilter: string
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BulkDeleteOutgoingBankingTransactionRequest'
              description: "Represents a bulk request to delete multiple outgoing banking transactions.\r\nThis DTO allows for batch deletion of transactions based on query parameters and filters."
            example:
              onlyValidate: true
              queryParams:
                flexSearch: string
                includeOnlyIds:
                  - string
                excludeIds:
                  - string
                companyBankAccountId: string
                outgoingBankingTransactionType: string
                mutationDateTimeStart: string
                mutationDateTimeEnd: string
              quickFilter: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
  '/OutgoingBankingTransactions/{outgoingBankingTransactionId}/manuallyconfirm':
    post:
      tags:
        - OutgoingBankingTransactions
      summary: Manually confirms an outgoing banking transaction.
      description: Manually confirms an outgoing banking transaction.
      operationId: post-outgoingbankingtransactions-outgoingbankingtransactionid-manuallyconfir
      parameters:
        - name: outgoingBankingTransactionId
          in: path
          description: ID of the outgoing banking transaction.
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/OutgoingBankingTransactionDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/OutgoingBankingTransactionDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  identification: string
                  sequenceNum: 0
                  type: { }
                  status: { }
                  mutationDateTime: string
                  companyBankAccount:
                    id: string
                    iban: string
                    bic: string
                    accountHolder: string
                    sepaCreditorId: string
                  fileName: string
                  internalFilePath: string
                  totalAmount: 0
                  entityCounts:
                    numberOfMutations: 0
                    confirmedMutations: 0
                    reversedMutations: 0
                  migrated: true
                  locked: true
                  confirmingIncomingBankingTransactions: { }
            text/json:
              schema:
                $ref: '#/components/schemas/OutgoingBankingTransactionDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  identification: string
                  sequenceNum: 0
                  type: { }
                  status: { }
                  mutationDateTime: string
                  companyBankAccount:
                    id: string
                    iban: string
                    bic: string
                    accountHolder: string
                    sepaCreditorId: string
                  fileName: string
                  internalFilePath: string
                  totalAmount: 0
                  entityCounts:
                    numberOfMutations: 0
                    confirmedMutations: 0
                    reversedMutations: 0
                  migrated: true
                  locked: true
                  confirmingIncomingBankingTransactions: { }
  /OutgoingBankingTransactions/bulk/manuallyconfirm:
    post:
      tags:
        - OutgoingBankingTransactions
      summary: Bulk manually confirms outgoing banking transactions.
      description: Bulk manually confirms outgoing banking transactions.
      operationId: post-outgoingbankingtransactions-bulk-manuallyconfirm
      parameters:
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: Request containing the details for bulk confirmation.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BulkOverrideOutgoingBankingTransactionBankConfirmationRequest'
              description: "Represents a bulk request to override the bank confirmation status of multiple outgoing banking transactions.\r\nThis DTO allows for batch overriding of bank confirmations based on query parameters and filters."
            example:
              onlyValidate: true
              queryParams:
                flexSearch: string
                includeOnlyIds:
                  - string
                excludeIds:
                  - string
                companyBankAccountId: string
                outgoingBankingTransactionType: string
                mutationDateTimeStart: string
                mutationDateTimeEnd: string
              quickFilter: string
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BulkOverrideOutgoingBankingTransactionBankConfirmationRequest'
              description: "Represents a bulk request to override the bank confirmation status of multiple outgoing banking transactions.\r\nThis DTO allows for batch overriding of bank confirmations based on query parameters and filters."
            example:
              onlyValidate: true
              queryParams:
                flexSearch: string
                includeOnlyIds:
                  - string
                excludeIds:
                  - string
                companyBankAccountId: string
                outgoingBankingTransactionType: string
                mutationDateTimeStart: string
                mutationDateTimeEnd: string
              quickFilter: string
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BulkOverrideOutgoingBankingTransactionBankConfirmationRequest'
              description: "Represents a bulk request to override the bank confirmation status of multiple outgoing banking transactions.\r\nThis DTO allows for batch overriding of bank confirmations based on query parameters and filters."
            example:
              onlyValidate: true
              queryParams:
                flexSearch: string
                includeOnlyIds:
                  - string
                excludeIds:
                  - string
                companyBankAccountId: string
                outgoingBankingTransactionType: string
                mutationDateTimeStart: string
                mutationDateTimeEnd: string
              quickFilter: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
  '/OutgoingBankingTransactions/{outgoingBankingTransactionId}/manuallycancel':
    post:
      tags:
        - OutgoingBankingTransactions
      summary: Manually cancels an outgoing banking transaction.
      description: Manually cancels an outgoing banking transaction.
      operationId: post-outgoingbankingtransactions-outgoingbankingtransactionid-manuallycancel
      parameters:
        - name: outgoingBankingTransactionId
          in: path
          description: ID of the outgoing banking transaction.
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/OutgoingBankingTransactionDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/OutgoingBankingTransactionDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  identification: string
                  sequenceNum: 0
                  type: { }
                  status: { }
                  mutationDateTime: string
                  companyBankAccount:
                    id: string
                    iban: string
                    bic: string
                    accountHolder: string
                    sepaCreditorId: string
                  fileName: string
                  internalFilePath: string
                  totalAmount: 0
                  entityCounts:
                    numberOfMutations: 0
                    confirmedMutations: 0
                    reversedMutations: 0
                  migrated: true
                  locked: true
                  confirmingIncomingBankingTransactions: { }
            text/json:
              schema:
                $ref: '#/components/schemas/OutgoingBankingTransactionDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  identification: string
                  sequenceNum: 0
                  type: { }
                  status: { }
                  mutationDateTime: string
                  companyBankAccount:
                    id: string
                    iban: string
                    bic: string
                    accountHolder: string
                    sepaCreditorId: string
                  fileName: string
                  internalFilePath: string
                  totalAmount: 0
                  entityCounts:
                    numberOfMutations: 0
                    confirmedMutations: 0
                    reversedMutations: 0
                  migrated: true
                  locked: true
                  confirmingIncomingBankingTransactions: { }
  /OutgoingBankingTransactions/bulk/manuallycancel:
    post:
      tags:
        - OutgoingBankingTransactions
      summary: Bulk manually cancels outgoing banking transactions.
      description: Bulk manually cancels outgoing banking transactions.
      operationId: post-outgoingbankingtransactions-bulk-manuallycancel
      parameters:
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: Request containing the details for bulk cancellation.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BulkManuallyCancelOutgoingBankingTransactionRequest'
              description: "Represents a bulk request to manually cancel multiple outgoing banking transactions.\r\nThis DTO allows for batch cancellation of transactions based on query parameters and filters."
            example:
              onlyValidate: true
              queryParams:
                flexSearch: string
                includeOnlyIds:
                  - string
                excludeIds:
                  - string
                companyBankAccountId: string
                outgoingBankingTransactionType: string
                mutationDateTimeStart: string
                mutationDateTimeEnd: string
              quickFilter: string
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BulkManuallyCancelOutgoingBankingTransactionRequest'
              description: "Represents a bulk request to manually cancel multiple outgoing banking transactions.\r\nThis DTO allows for batch cancellation of transactions based on query parameters and filters."
            example:
              onlyValidate: true
              queryParams:
                flexSearch: string
                includeOnlyIds:
                  - string
                excludeIds:
                  - string
                companyBankAccountId: string
                outgoingBankingTransactionType: string
                mutationDateTimeStart: string
                mutationDateTimeEnd: string
              quickFilter: string
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BulkManuallyCancelOutgoingBankingTransactionRequest'
              description: "Represents a bulk request to manually cancel multiple outgoing banking transactions.\r\nThis DTO allows for batch cancellation of transactions based on query parameters and filters."
            example:
              onlyValidate: true
              queryParams:
                flexSearch: string
                includeOnlyIds:
                  - string
                excludeIds:
                  - string
                companyBankAccountId: string
                outgoingBankingTransactionType: string
                mutationDateTimeStart: string
                mutationDateTimeEnd: string
              quickFilter: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
  '/OutgoingBankingTransactions/{outgoingBankingTransactionId}/bankaccount':
    post:
      tags:
        - OutgoingBankingTransactions
      summary: Updates the company bank account for an outgoing banking transaction.
      description: Updates the company bank account for an outgoing banking transaction.
      operationId: post-outgoingbankingtransactions-outgoingbankingtransactionid-bankaccount
      parameters:
        - name: outgoingBankingTransactionId
          in: path
          description: ID of the outgoing banking transaction.
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: Request containing the bank account details.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/UpdateOutgoingBankingTransactionBankAccountRequest'
              description: "Represents a request to update the bank account associated with an outgoing banking transaction.\r\nThis DTO is used to change which company bank account the transaction will be processed from."
            example:
              companyBankAccountId: string
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/UpdateOutgoingBankingTransactionBankAccountRequest'
              description: "Represents a request to update the bank account associated with an outgoing banking transaction.\r\nThis DTO is used to change which company bank account the transaction will be processed from."
            example:
              companyBankAccountId: string
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/UpdateOutgoingBankingTransactionBankAccountRequest'
              description: "Represents a request to update the bank account associated with an outgoing banking transaction.\r\nThis DTO is used to change which company bank account the transaction will be processed from."
            example:
              companyBankAccountId: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/OutgoingBankingTransactionDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/OutgoingBankingTransactionDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  identification: string
                  sequenceNum: 0
                  type: { }
                  status: { }
                  mutationDateTime: string
                  companyBankAccount:
                    id: string
                    iban: string
                    bic: string
                    accountHolder: string
                    sepaCreditorId: string
                  fileName: string
                  internalFilePath: string
                  totalAmount: 0
                  entityCounts:
                    numberOfMutations: 0
                    confirmedMutations: 0
                    reversedMutations: 0
                  migrated: true
                  locked: true
                  confirmingIncomingBankingTransactions: { }
            text/json:
              schema:
                $ref: '#/components/schemas/OutgoingBankingTransactionDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  identification: string
                  sequenceNum: 0
                  type: { }
                  status: { }
                  mutationDateTime: string
                  companyBankAccount:
                    id: string
                    iban: string
                    bic: string
                    accountHolder: string
                    sepaCreditorId: string
                  fileName: string
                  internalFilePath: string
                  totalAmount: 0
                  entityCounts:
                    numberOfMutations: 0
                    confirmedMutations: 0
                    reversedMutations: 0
                  migrated: true
                  locked: true
                  confirmingIncomingBankingTransactions: { }
  '/OutgoingBankingTransactions/{outgoingBankingTransactionId}/collectiondate':
    post:
      tags:
        - OutgoingBankingTransactions
      summary: Updates the collection date for an outgoing banking transaction.
      description: Updates the collection date for an outgoing banking transaction.
      operationId: post-outgoingbankingtransactions-outgoingbankingtransactionid-collectiondate
      parameters:
        - name: outgoingBankingTransactionId
          in: path
          description: ID of the outgoing banking transaction.
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: Request containing the collection date details.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/UpdateOutgoingBankingTransactionCollectionDateRequest'
              description: "Represents a request to update the collection date of an outgoing banking transaction.\r\nThis DTO is used to modify when a transaction should be collected from the customer's account."
            example:
              collectionDate: string
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/UpdateOutgoingBankingTransactionCollectionDateRequest'
              description: "Represents a request to update the collection date of an outgoing banking transaction.\r\nThis DTO is used to modify when a transaction should be collected from the customer's account."
            example:
              collectionDate: string
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/UpdateOutgoingBankingTransactionCollectionDateRequest'
              description: "Represents a request to update the collection date of an outgoing banking transaction.\r\nThis DTO is used to modify when a transaction should be collected from the customer's account."
            example:
              collectionDate: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/OutgoingBankingTransactionDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/OutgoingBankingTransactionDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  identification: string
                  sequenceNum: 0
                  type: { }
                  status: { }
                  mutationDateTime: string
                  companyBankAccount:
                    id: string
                    iban: string
                    bic: string
                    accountHolder: string
                    sepaCreditorId: string
                  fileName: string
                  internalFilePath: string
                  totalAmount: 0
                  entityCounts:
                    numberOfMutations: 0
                    confirmedMutations: 0
                    reversedMutations: 0
                  migrated: true
                  locked: true
                  confirmingIncomingBankingTransactions: { }
            text/json:
              schema:
                $ref: '#/components/schemas/OutgoingBankingTransactionDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  identification: string
                  sequenceNum: 0
                  type: { }
                  status: { }
                  mutationDateTime: string
                  companyBankAccount:
                    id: string
                    iban: string
                    bic: string
                    accountHolder: string
                    sepaCreditorId: string
                  fileName: string
                  internalFilePath: string
                  totalAmount: 0
                  entityCounts:
                    numberOfMutations: 0
                    confirmedMutations: 0
                    reversedMutations: 0
                  migrated: true
                  locked: true
                  confirmingIncomingBankingTransactions: { }
  /OutgoingBankingTransactions/export:
    post:
      tags:
        - OutgoingBankingTransactions
      summary: Exports outgoing banking transactions based on the provided request.
      description: Exports outgoing banking transactions based on the provided request.
      operationId: post-outgoingbankingtransactions-export
      parameters:
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: Request containing the export details.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/GetOutgoingBankingTransactionExportRequest'
              description: "Represents a request to export data for specific outgoing banking transactions.\r\nThis DTO is used to retrieve transaction data in a format suitable for export."
            example:
              outgoingBankingTransactionIds:
                - string
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/GetOutgoingBankingTransactionExportRequest'
              description: "Represents a request to export data for specific outgoing banking transactions.\r\nThis DTO is used to retrieve transaction data in a format suitable for export."
            example:
              outgoingBankingTransactionIds:
                - string
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/GetOutgoingBankingTransactionExportRequest'
              description: "Represents a request to export data for specific outgoing banking transactions.\r\nThis DTO is used to retrieve transaction data in a format suitable for export."
            example:
              outgoingBankingTransactionIds:
                - string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/OutgoingBankingTransactionsExportDTOListApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/OutgoingBankingTransactionsExportDTOListApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  - transactionIdentification: string
                    transactionType: { }
                    transactionStatus: { }
                    transactionCollectionDate: string
                    transactionTotalAmount: 0
                    companyBankAccountHolder: string
                    companyBankAccountIban: string
                    outgoingMutationType: { }
                    outgoingMutationStatus: { }
                    outgoingMutationAmount: 0
                    outgoingMutationDecription: string
                    customerAccountNumber: string
                    customerName: string
                    customerBankAccountIban: string
                    propertyGroups:
                      - id: string
                        name: string
                    invoiceNumber: string
                    invoiceDate: string
                    invoiceDueDate: string
                    invoiceAmount: 0
                    invoiceType: { }
                    invoicePeriodStartDateTime: string
                    invoicePeriodEndDateTime: string
            text/json:
              schema:
                $ref: '#/components/schemas/OutgoingBankingTransactionsExportDTOListApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  - transactionIdentification: string
                    transactionType: { }
                    transactionStatus: { }
                    transactionCollectionDate: string
                    transactionTotalAmount: 0
                    companyBankAccountHolder: string
                    companyBankAccountIban: string
                    outgoingMutationType: { }
                    outgoingMutationStatus: { }
                    outgoingMutationAmount: 0
                    outgoingMutationDecription: string
                    customerAccountNumber: string
                    customerName: string
                    customerBankAccountIban: string
                    propertyGroups:
                      - id: string
                        name: string
                    invoiceNumber: string
                    invoiceDate: string
                    invoiceDueDate: string
                    invoiceAmount: 0
                    invoiceType: { }
                    invoicePeriodStartDateTime: string
                    invoicePeriodEndDateTime: string
  /OutgoingBankingTransactions/preview:
    post:
      tags:
        - OutgoingBankingTransactions
      summary: Provides a preview of the invoices to be assigned to outgoing banking transactions.
      description: Provides a preview of the invoices to be assigned to outgoing banking transactions.
      operationId: post-outgoingbankingtransactions-preview
      parameters:
        - name: Name
          in: query
          schema:
            type: string
        - name: Id
          in: query
          description: Format - int32.
          schema:
            type: integer
            format: int32
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: Query parameters for filtering invoices.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/GetInvoicesQueryParams'
            example:
              flexSearch: string
              includeOnlyIds:
                - string
              excludeIds:
                - string
              invoiceType:
                - string
              propertyGroupIds:
                - string
              productId: string
              customerId: string
              contractId: string
              invoiceStatus:
                - string
              paymentProcessStatus:
                - string
              billingCompletenessId: string
              paymentMethod: string
              startDateTime: string
              endDateTime: string
              periodStartDateTime: string
              periodEndDateTime: string
              periodStartDateTimeBegin: string
              periodStartDateTimeEnd: string
              periodEndDateTimeBegin: string
              periodEndDateTimeEnd: string
              paidDateTimeBegin: string
              exportStatus: string
              collectionCaseId: string
              customerGroupId: string
              companyBankAccountId: string
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/GetInvoicesQueryParams'
            example:
              flexSearch: string
              includeOnlyIds:
                - string
              excludeIds:
                - string
              invoiceType:
                - string
              propertyGroupIds:
                - string
              productId: string
              customerId: string
              contractId: string
              invoiceStatus:
                - string
              paymentProcessStatus:
                - string
              billingCompletenessId: string
              paymentMethod: string
              startDateTime: string
              endDateTime: string
              periodStartDateTime: string
              periodEndDateTime: string
              periodStartDateTimeBegin: string
              periodStartDateTimeEnd: string
              periodEndDateTimeBegin: string
              periodEndDateTimeEnd: string
              paidDateTimeBegin: string
              exportStatus: string
              collectionCaseId: string
              customerGroupId: string
              companyBankAccountId: string
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/GetInvoicesQueryParams'
            example:
              flexSearch: string
              includeOnlyIds:
                - string
              excludeIds:
                - string
              invoiceType:
                - string
              propertyGroupIds:
                - string
              productId: string
              customerId: string
              contractId: string
              invoiceStatus:
                - string
              paymentProcessStatus:
                - string
              billingCompletenessId: string
              paymentMethod: string
              startDateTime: string
              endDateTime: string
              periodStartDateTime: string
              periodEndDateTime: string
              periodStartDateTimeBegin: string
              periodStartDateTimeEnd: string
              periodEndDateTimeBegin: string
              periodEndDateTimeEnd: string
              paidDateTimeBegin: string
              exportStatus: string
              collectionCaseId: string
              customerGroupId: string
              companyBankAccountId: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/OutgoingBankingTransactionPreviewDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/OutgoingBankingTransactionPreviewDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  requests:
                    numberOfInvoices: 0
                    totalAmount: 0
                  refunds:
                    numberOfInvoices: 0
                    totalAmount: 0
            text/json:
              schema:
                $ref: '#/components/schemas/OutgoingBankingTransactionPreviewDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  requests:
                    numberOfInvoices: 0
                    totalAmount: 0
                  refunds:
                    numberOfInvoices: 0
                    totalAmount: 0
  /OutgoingBankingTransactions/bulk/assigninvoices:
    post:
      tags:
        - OutgoingBankingTransactions
      summary: Bulk assigns invoices to outgoing banking transactions.
      description: Bulk assigns invoices to outgoing banking transactions.
      operationId: post-outgoingbankingtransactions-bulk-assigninvoices
      parameters:
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: Request containing the assign invoices details.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BulkAssignInvoicesToOutgoingBankingTransactionRequest'
              description: "Represents a bulk request to assign invoices to outgoing banking transactions.\r\nThis DTO extends the base assignment request with bulk operation capabilities."
            example:
              allApplicable: true
              outgoingBankingTransactionType: { }
              invoiceIds:
                - string
              addToNewOutgoingBankingTransactions: true
              overriddenCollectionDate: string
              onlyValidate: true
              queryParams:
                flexSearch: string
                includeOnlyIds:
                  - string
                excludeIds:
                  - string
                invoiceType:
                  - string
                propertyGroupIds:
                  - string
                productId: string
                customerId: string
                contractId: string
                invoiceStatus:
                  - string
                paymentProcessStatus:
                  - string
                billingCompletenessId: string
                paymentMethod: string
                startDateTime: string
                endDateTime: string
                periodStartDateTime: string
                periodEndDateTime: string
                periodStartDateTimeBegin: string
                periodStartDateTimeEnd: string
                periodEndDateTimeBegin: string
                periodEndDateTimeEnd: string
                paidDateTimeBegin: string
                exportStatus: string
                collectionCaseId: string
                customerGroupId: string
                companyBankAccountId: string
              quickFilter: string
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BulkAssignInvoicesToOutgoingBankingTransactionRequest'
              description: "Represents a bulk request to assign invoices to outgoing banking transactions.\r\nThis DTO extends the base assignment request with bulk operation capabilities."
            example:
              allApplicable: true
              outgoingBankingTransactionType: { }
              invoiceIds:
                - string
              addToNewOutgoingBankingTransactions: true
              overriddenCollectionDate: string
              onlyValidate: true
              queryParams:
                flexSearch: string
                includeOnlyIds:
                  - string
                excludeIds:
                  - string
                invoiceType:
                  - string
                propertyGroupIds:
                  - string
                productId: string
                customerId: string
                contractId: string
                invoiceStatus:
                  - string
                paymentProcessStatus:
                  - string
                billingCompletenessId: string
                paymentMethod: string
                startDateTime: string
                endDateTime: string
                periodStartDateTime: string
                periodEndDateTime: string
                periodStartDateTimeBegin: string
                periodStartDateTimeEnd: string
                periodEndDateTimeBegin: string
                periodEndDateTimeEnd: string
                paidDateTimeBegin: string
                exportStatus: string
                collectionCaseId: string
                customerGroupId: string
                companyBankAccountId: string
              quickFilter: string
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BulkAssignInvoicesToOutgoingBankingTransactionRequest'
              description: "Represents a bulk request to assign invoices to outgoing banking transactions.\r\nThis DTO extends the base assignment request with bulk operation capabilities."
            example:
              allApplicable: true
              outgoingBankingTransactionType: { }
              invoiceIds:
                - string
              addToNewOutgoingBankingTransactions: true
              overriddenCollectionDate: string
              onlyValidate: true
              queryParams:
                flexSearch: string
                includeOnlyIds:
                  - string
                excludeIds:
                  - string
                invoiceType:
                  - string
                propertyGroupIds:
                  - string
                productId: string
                customerId: string
                contractId: string
                invoiceStatus:
                  - string
                paymentProcessStatus:
                  - string
                billingCompletenessId: string
                paymentMethod: string
                startDateTime: string
                endDateTime: string
                periodStartDateTime: string
                periodEndDateTime: string
                periodStartDateTimeBegin: string
                periodStartDateTimeEnd: string
                periodEndDateTimeBegin: string
                periodEndDateTimeEnd: string
                paidDateTimeBegin: string
                exportStatus: string
                collectionCaseId: string
                customerGroupId: string
                companyBankAccountId: string
              quickFilter: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
  '/OutgoingMutations/search/{outgoingMutationType}':
    get:
      tags:
        - OutgoingMutations
      summary: Gets all outgoing mutations by type.
      description: Gets all outgoing mutations by type.
      operationId: get-outgoingmutations-search-outgoingmutationtype
      parameters:
        - name: outgoingMutationType
          in: path
          description: The type of the outgoing mutation.
          required: true
          schema:
            type: string
        - name: iban
          in: query
          description: The IBAN.
          schema:
            type: string
        - name: status
          in: query
          description: The status.
          schema:
            type: string
        - name: orderBy
          in: query
          description: The order by.
          schema:
            type: string
        - name: continuationToken
          in: header
          description: The continuation token.
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/OutgoingMutationDTOPagedResponseModelDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/OutgoingMutationDTOPagedResponseModelDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  results:
                    - id: string
                      entityType: { }
                      createdDateTime: string
                      discriminator: string
                      _etag: string
                      requireAttention: true
                      hasErrors: true
                      hasWarnings: true
                      isReadOnly: true
                      organisationId: string
                      outgoingBankingTransactionId: string
                      type: { }
                      amount: 0
                      description: string
                      referenceDetails:
                        referenceType: { }
                        referenceId: string
                        parameters: { }
                      customerBankAccount:
                        iban: string
                        accountHolder: string
                        mandateNumber: string
                        mandateSignedDate: string
                      status: { }
                      errors:
                        - key: { }
                          correlationId: string
                          message: string
                          messageValues:
                            - dataType: { }
                              value: string
                              capitalize: true
                      confirmingIncomingBankingTransactionId: string
                      confirmingIncomingBankingTransactionIdentification: string
                      confirmingIncomingMutationId: string
                      revertingIncomingBankingTransactionId: string
                      revertingIncomingBankingTransactionIdentification: string
                      revertingIncomingMutationId: string
                  hasNextPage: true
                  nextPageToken: string
                  totalRecords: 0
                  sortableFields:
                    - string
                  aggregateDetails:
                    - code: string
                      translation: string
                      value: 0
                      valueDate: string
            text/json:
              schema:
                $ref: '#/components/schemas/OutgoingMutationDTOPagedResponseModelDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  results:
                    - id: string
                      entityType: { }
                      createdDateTime: string
                      discriminator: string
                      _etag: string
                      requireAttention: true
                      hasErrors: true
                      hasWarnings: true
                      isReadOnly: true
                      organisationId: string
                      outgoingBankingTransactionId: string
                      type: { }
                      amount: 0
                      description: string
                      referenceDetails:
                        referenceType: { }
                        referenceId: string
                        parameters: { }
                      customerBankAccount:
                        iban: string
                        accountHolder: string
                        mandateNumber: string
                        mandateSignedDate: string
                      status: { }
                      errors:
                        - key: { }
                          correlationId: string
                          message: string
                          messageValues:
                            - dataType: { }
                              value: string
                              capitalize: true
                      confirmingIncomingBankingTransactionId: string
                      confirmingIncomingBankingTransactionIdentification: string
                      confirmingIncomingMutationId: string
                      revertingIncomingBankingTransactionId: string
                      revertingIncomingBankingTransactionIdentification: string
                      revertingIncomingMutationId: string
                  hasNextPage: true
                  nextPageToken: string
                  totalRecords: 0
                  sortableFields:
                    - string
                  aggregateDetails:
                    - code: string
                      translation: string
                      value: 0
                      valueDate: string
  '/OutgoingMutations/{outgoingMutationId}':
    get:
      tags:
        - OutgoingMutations
      summary: Gets an outgoing mutation by ID.
      description: Gets an outgoing mutation by ID.
      operationId: get-outgoingmutations-outgoingmutationid
      parameters:
        - name: outgoingMutationId
          in: path
          description: The ID of the outgoing mutation.
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/OutgoingMutationDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/OutgoingMutationDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  outgoingBankingTransactionId: string
                  type: { }
                  amount: 0
                  description: string
                  referenceDetails:
                    referenceType: { }
                    referenceId: string
                    parameters: { }
                  customerBankAccount:
                    iban: string
                    accountHolder: string
                    mandateNumber: string
                    mandateSignedDate: string
                  status: { }
                  errors:
                    - key: { }
                      correlationId: string
                      message: string
                      messageValues:
                        - dataType: { }
                          value: string
                          capitalize: true
                  confirmingIncomingBankingTransactionId: string
                  confirmingIncomingBankingTransactionIdentification: string
                  confirmingIncomingMutationId: string
                  revertingIncomingBankingTransactionId: string
                  revertingIncomingBankingTransactionIdentification: string
                  revertingIncomingMutationId: string
            text/json:
              schema:
                $ref: '#/components/schemas/OutgoingMutationDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  outgoingBankingTransactionId: string
                  type: { }
                  amount: 0
                  description: string
                  referenceDetails:
                    referenceType: { }
                    referenceId: string
                    parameters: { }
                  customerBankAccount:
                    iban: string
                    accountHolder: string
                    mandateNumber: string
                    mandateSignedDate: string
                  status: { }
                  errors:
                    - key: { }
                      correlationId: string
                      message: string
                      messageValues:
                        - dataType: { }
                          value: string
                          capitalize: true
                  confirmingIncomingBankingTransactionId: string
                  confirmingIncomingBankingTransactionIdentification: string
                  confirmingIncomingMutationId: string
                  revertingIncomingBankingTransactionId: string
                  revertingIncomingBankingTransactionIdentification: string
                  revertingIncomingMutationId: string
    delete:
      tags:
        - OutgoingMutations
      summary: Deletes an outgoing mutation by ID.
      description: Deletes an outgoing mutation by ID.
      operationId: delete-outgoingmutations-outgoingmutationid
      parameters:
        - name: outgoingMutationId
          in: path
          description: The ID of the outgoing mutation.
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: string
                title: string
                status: 0
                detail: string
                instance: string
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: string
                title: string
                status: 0
                detail: string
                instance: string
        '204':
          description: No Content
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/BooleanApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/BooleanApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data: true
            text/json:
              schema:
                $ref: '#/components/schemas/BooleanApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data: true
    post:
      tags:
        - OutgoingMutations
      summary: Updates an outgoing mutation.
      description: Updates an outgoing mutation.
      operationId: post-outgoingmutations-outgoingmutationid
      parameters:
        - name: outgoingMutationId
          in: path
          description: The ID of the outgoing mutation.
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: The update request.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/UpdateOutgoingMutationEntryRequest'
              description: "Represents a request to update an existing outgoing mutation entry.\r\nThis DTO is used to modify the details of a specific entry within an outgoing banking transaction."
            example:
              amount: 0
              paymentReference: string
              iban: string
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/UpdateOutgoingMutationEntryRequest'
              description: "Represents a request to update an existing outgoing mutation entry.\r\nThis DTO is used to modify the details of a specific entry within an outgoing banking transaction."
            example:
              amount: 0
              paymentReference: string
              iban: string
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/UpdateOutgoingMutationEntryRequest'
              description: "Represents a request to update an existing outgoing mutation entry.\r\nThis DTO is used to modify the details of a specific entry within an outgoing banking transaction."
            example:
              amount: 0
              paymentReference: string
              iban: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/OutgoingMutationDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/OutgoingMutationDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  outgoingBankingTransactionId: string
                  type: { }
                  amount: 0
                  description: string
                  referenceDetails:
                    referenceType: { }
                    referenceId: string
                    parameters: { }
                  customerBankAccount:
                    iban: string
                    accountHolder: string
                    mandateNumber: string
                    mandateSignedDate: string
                  status: { }
                  errors:
                    - key: { }
                      correlationId: string
                      message: string
                      messageValues:
                        - dataType: { }
                          value: string
                          capitalize: true
                  confirmingIncomingBankingTransactionId: string
                  confirmingIncomingBankingTransactionIdentification: string
                  confirmingIncomingMutationId: string
                  revertingIncomingBankingTransactionId: string
                  revertingIncomingBankingTransactionIdentification: string
                  revertingIncomingMutationId: string
            text/json:
              schema:
                $ref: '#/components/schemas/OutgoingMutationDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  outgoingBankingTransactionId: string
                  type: { }
                  amount: 0
                  description: string
                  referenceDetails:
                    referenceType: { }
                    referenceId: string
                    parameters: { }
                  customerBankAccount:
                    iban: string
                    accountHolder: string
                    mandateNumber: string
                    mandateSignedDate: string
                  status: { }
                  errors:
                    - key: { }
                      correlationId: string
                      message: string
                      messageValues:
                        - dataType: { }
                          value: string
                          capitalize: true
                  confirmingIncomingBankingTransactionId: string
                  confirmingIncomingBankingTransactionIdentification: string
                  confirmingIncomingMutationId: string
                  revertingIncomingBankingTransactionId: string
                  revertingIncomingBankingTransactionIdentification: string
                  revertingIncomingMutationId: string
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
  /OutgoingMutations/bulk/delete:
    post:
      tags:
        - OutgoingMutations
      summary: Bulk deletes outgoing mutations.
      description: Bulk deletes outgoing mutations.
      operationId: post-outgoingmutations-bulk-delete
      parameters:
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: The bulk delete request.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BulkDeleteOutgoingMutationRequest'
              description: "Represents a bulk request to delete multiple outgoing mutations.\r\nThis DTO allows for batch deletion of mutations based on query parameters and filters."
            example:
              onlyValidate: true
              queryParams:
                flexSearch: string
                includeOnlyIds:
                  - string
                excludeIds:
                  - string
                outgoingBankingTransactionId: string
                status: string
                referenceType: string
              quickFilter: string
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BulkDeleteOutgoingMutationRequest'
              description: "Represents a bulk request to delete multiple outgoing mutations.\r\nThis DTO allows for batch deletion of mutations based on query parameters and filters."
            example:
              onlyValidate: true
              queryParams:
                flexSearch: string
                includeOnlyIds:
                  - string
                excludeIds:
                  - string
                outgoingBankingTransactionId: string
                status: string
                referenceType: string
              quickFilter: string
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BulkDeleteOutgoingMutationRequest'
              description: "Represents a bulk request to delete multiple outgoing mutations.\r\nThis DTO allows for batch deletion of mutations based on query parameters and filters."
            example:
              onlyValidate: true
              queryParams:
                flexSearch: string
                includeOnlyIds:
                  - string
                excludeIds:
                  - string
                outgoingBankingTransactionId: string
                status: string
                referenceType: string
              quickFilter: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/OutgoingMutationDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/OutgoingMutationDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  outgoingBankingTransactionId: string
                  type: { }
                  amount: 0
                  description: string
                  referenceDetails:
                    referenceType: { }
                    referenceId: string
                    parameters: { }
                  customerBankAccount:
                    iban: string
                    accountHolder: string
                    mandateNumber: string
                    mandateSignedDate: string
                  status: { }
                  errors:
                    - key: { }
                      correlationId: string
                      message: string
                      messageValues:
                        - dataType: { }
                          value: string
                          capitalize: true
                  confirmingIncomingBankingTransactionId: string
                  confirmingIncomingBankingTransactionIdentification: string
                  confirmingIncomingMutationId: string
                  revertingIncomingBankingTransactionId: string
                  revertingIncomingBankingTransactionIdentification: string
                  revertingIncomingMutationId: string
            text/json:
              schema:
                $ref: '#/components/schemas/OutgoingMutationDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  outgoingBankingTransactionId: string
                  type: { }
                  amount: 0
                  description: string
                  referenceDetails:
                    referenceType: { }
                    referenceId: string
                    parameters: { }
                  customerBankAccount:
                    iban: string
                    accountHolder: string
                    mandateNumber: string
                    mandateSignedDate: string
                  status: { }
                  errors:
                    - key: { }
                      correlationId: string
                      message: string
                      messageValues:
                        - dataType: { }
                          value: string
                          capitalize: true
                  confirmingIncomingBankingTransactionId: string
                  confirmingIncomingBankingTransactionIdentification: string
                  confirmingIncomingMutationId: string
                  revertingIncomingBankingTransactionId: string
                  revertingIncomingBankingTransactionIdentification: string
                  revertingIncomingMutationId: string
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
  /Payments/overviewcount:
    get:
      tags:
        - Payments
      summary: Gets the overview count of payments.
      description: Gets the overview count of payments.
      operationId: get-payments-overviewcount
      parameters:
        - name: PaymentType
          in: query
          schema:
            type: string
        - name: CustomerId
          in: query
          schema:
            type: string
        - name: StartDateTime
          in: query
          description: Format - date-time (as date-time in RFC3339).
          schema:
            type: string
            format: date-time
            nullable: true
        - name: EndDateTime
          in: query
          description: Format - date-time (as date-time in RFC3339).
          schema:
            type: string
            format: date-time
            nullable: true
        - name: BatchMutationId
          in: query
          schema:
            type: string
        - name: FlexSearch
          in: query
          schema:
            type: string
        - name: IncludeOnlyIds
          in: query
          schema:
            type: array
            items:
              type: string
        - name: ExcludeIds
          in: query
          schema:
            type: array
            items:
              type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/PaymentOverviewCountDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentOverviewCountDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  all: 0
                  reversed: 0
            text/json:
              schema:
                $ref: '#/components/schemas/PaymentOverviewCountDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  all: 0
                  reversed: 0
  /Payments:
    get:
      tags:
        - Payments
      summary: Gets all payments with optional filtering and ordering.
      description: Gets all payments with optional filtering and ordering.
      operationId: get-payments
      parameters:
        - name: Name
          in: query
          schema:
            type: string
        - name: Id
          in: query
          description: Format - int32.
          schema:
            type: integer
            format: int32
        - name: PaymentType
          in: query
          schema:
            type: string
        - name: CustomerId
          in: query
          schema:
            type: string
        - name: StartDateTime
          in: query
          description: Format - date-time (as date-time in RFC3339).
          schema:
            type: string
            format: date-time
            nullable: true
        - name: EndDateTime
          in: query
          description: Format - date-time (as date-time in RFC3339).
          schema:
            type: string
            format: date-time
            nullable: true
        - name: BatchMutationId
          in: query
          schema:
            type: string
        - name: FlexSearch
          in: query
          schema:
            type: string
        - name: IncludeOnlyIds
          in: query
          schema:
            type: array
            items:
              type: string
        - name: ExcludeIds
          in: query
          schema:
            type: array
            items:
              type: string
        - name: orderBy
          in: query
          description: The order by clause.
          schema:
            type: string
        - name: continuationToken
          in: header
          description: The continuation token for pagination.
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/PaymentDTOPagedResponseModelDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentDTOPagedResponseModelDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  results:
                    - id: string
                      entityType: { }
                      createdDateTime: string
                      discriminator: string
                      _etag: string
                      requireAttention: true
                      hasErrors: true
                      hasWarnings: true
                      isReadOnly: true
                      organisationId: string
                      type: { }
                      paymentDateTime: string
                      paymentReference: string
                      remittanceInformation: string
                      amount: 0
                      companyBankAccountId: string
                      debtor:
                        customerId: string
                        displayName: string
                        customerAccountNumber: string
                        customerType: { }
                        customerGroup:
                          id: string
                          name: string
                      customerBankAccountIBAN: string
                      isManual: true
                      paymentEntityReferences:
                        - transactionId: string
                          referenceId: string
                          referenceType: { }
                      isReversed: true
                      reversalDetails:
                        reversalReason: { }
                        reversalAdditionalInformation: string
                        reversalDate: string
                        reversalIncomingBankingTransactionId: string
                        reversalIncomingBankingTransactionIdentification: string
                        reversalIncomingMutationId: string
                      outgoingMutationId: string
                      outgoingBankingTransactionId: string
                      outgoingBankingTransactionIdentification: string
                      isConfirmedByBank: true
                      incomingBankingTransactionId: string
                      incomingBankingTransactionIdentification: string
                      incomingMutationId: string
                      canonicalSearch: string
                  hasNextPage: true
                  nextPageToken: string
                  totalRecords: 0
                  sortableFields:
                    - string
                  aggregateDetails:
                    - code: string
                      translation: string
                      value: 0
                      valueDate: string
            text/json:
              schema:
                $ref: '#/components/schemas/PaymentDTOPagedResponseModelDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  results:
                    - id: string
                      entityType: { }
                      createdDateTime: string
                      discriminator: string
                      _etag: string
                      requireAttention: true
                      hasErrors: true
                      hasWarnings: true
                      isReadOnly: true
                      organisationId: string
                      type: { }
                      paymentDateTime: string
                      paymentReference: string
                      remittanceInformation: string
                      amount: 0
                      companyBankAccountId: string
                      debtor:
                        customerId: string
                        displayName: string
                        customerAccountNumber: string
                        customerType: { }
                        customerGroup:
                          id: string
                          name: string
                      customerBankAccountIBAN: string
                      isManual: true
                      paymentEntityReferences:
                        - transactionId: string
                          referenceId: string
                          referenceType: { }
                      isReversed: true
                      reversalDetails:
                        reversalReason: { }
                        reversalAdditionalInformation: string
                        reversalDate: string
                        reversalIncomingBankingTransactionId: string
                        reversalIncomingBankingTransactionIdentification: string
                        reversalIncomingMutationId: string
                      outgoingMutationId: string
                      outgoingBankingTransactionId: string
                      outgoingBankingTransactionIdentification: string
                      isConfirmedByBank: true
                      incomingBankingTransactionId: string
                      incomingBankingTransactionIdentification: string
                      incomingMutationId: string
                      canonicalSearch: string
                  hasNextPage: true
                  nextPageToken: string
                  totalRecords: 0
                  sortableFields:
                    - string
                  aggregateDetails:
                    - code: string
                      translation: string
                      value: 0
                      valueDate: string
    post:
      tags:
        - Payments
      summary: Manually adds a payment.
      description: Manually adds a payment.
      operationId: post-payments
      parameters:
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: The request containing payment details.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ManuallyAddPaymentRequest'
              description: "Represents a request to manually add a payment to the system.\r\nThis DTO is used to record payments that are not automatically processed through the banking system."
            example:
              customerId: string
              iban: string
              amount: 0
              paymentDateTime: string
              companyBankAccountId: string
              paymentReference: string
              references:
                - transactionId: string
                  referenceId: string
                  referenceType: { }
              isPaymentReferenceStructured: true
              organizationCountry: { }
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ManuallyAddPaymentRequest'
              description: "Represents a request to manually add a payment to the system.\r\nThis DTO is used to record payments that are not automatically processed through the banking system."
            example:
              customerId: string
              iban: string
              amount: 0
              paymentDateTime: string
              companyBankAccountId: string
              paymentReference: string
              references:
                - transactionId: string
                  referenceId: string
                  referenceType: { }
              isPaymentReferenceStructured: true
              organizationCountry: { }
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ManuallyAddPaymentRequest'
              description: "Represents a request to manually add a payment to the system.\r\nThis DTO is used to record payments that are not automatically processed through the banking system."
            example:
              customerId: string
              iban: string
              amount: 0
              paymentDateTime: string
              companyBankAccountId: string
              paymentReference: string
              references:
                - transactionId: string
                  referenceId: string
                  referenceType: { }
              isPaymentReferenceStructured: true
              organizationCountry: { }
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/PaymentDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  type: { }
                  paymentDateTime: string
                  paymentReference: string
                  remittanceInformation: string
                  amount: 0
                  companyBankAccountId: string
                  debtor:
                    customerId: string
                    displayName: string
                    customerAccountNumber: string
                    customerType: { }
                    customerGroup:
                      id: string
                      name: string
                  customerBankAccountIBAN: string
                  isManual: true
                  paymentEntityReferences:
                    - transactionId: string
                      referenceId: string
                      referenceType: { }
                  isReversed: true
                  reversalDetails:
                    reversalReason: { }
                    reversalAdditionalInformation: string
                    reversalDate: string
                    reversalIncomingBankingTransactionId: string
                    reversalIncomingBankingTransactionIdentification: string
                    reversalIncomingMutationId: string
                  outgoingMutationId: string
                  outgoingBankingTransactionId: string
                  outgoingBankingTransactionIdentification: string
                  isConfirmedByBank: true
                  incomingBankingTransactionId: string
                  incomingBankingTransactionIdentification: string
                  incomingMutationId: string
                  canonicalSearch: string
            text/json:
              schema:
                $ref: '#/components/schemas/PaymentDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  type: { }
                  paymentDateTime: string
                  paymentReference: string
                  remittanceInformation: string
                  amount: 0
                  companyBankAccountId: string
                  debtor:
                    customerId: string
                    displayName: string
                    customerAccountNumber: string
                    customerType: { }
                    customerGroup:
                      id: string
                      name: string
                  customerBankAccountIBAN: string
                  isManual: true
                  paymentEntityReferences:
                    - transactionId: string
                      referenceId: string
                      referenceType: { }
                  isReversed: true
                  reversalDetails:
                    reversalReason: { }
                    reversalAdditionalInformation: string
                    reversalDate: string
                    reversalIncomingBankingTransactionId: string
                    reversalIncomingBankingTransactionIdentification: string
                    reversalIncomingMutationId: string
                  outgoingMutationId: string
                  outgoingBankingTransactionId: string
                  outgoingBankingTransactionIdentification: string
                  isConfirmedByBank: true
                  incomingBankingTransactionId: string
                  incomingBankingTransactionIdentification: string
                  incomingMutationId: string
                  canonicalSearch: string
  '/Payments/{paymentId}/reverse':
    post:
      tags:
        - Payments
      summary: Manually reverses a payment.
      description: Manually reverses a payment.
      operationId: post-payments-paymentid-reverse
      parameters:
        - name: paymentId
          in: path
          description: The ID of the payment to reverse.
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: The request containing reversal details.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ReversePaymentRequest'
              description: "Represents a request to reverse a payment.\r\nThis DTO is used to initiate the reversal of a previously processed payment."
            example:
              reversalAdditionalInformation: string
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ReversePaymentRequest'
              description: "Represents a request to reverse a payment.\r\nThis DTO is used to initiate the reversal of a previously processed payment."
            example:
              reversalAdditionalInformation: string
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ReversePaymentRequest'
              description: "Represents a request to reverse a payment.\r\nThis DTO is used to initiate the reversal of a previously processed payment."
            example:
              reversalAdditionalInformation: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/PaymentDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  type: { }
                  paymentDateTime: string
                  paymentReference: string
                  remittanceInformation: string
                  amount: 0
                  companyBankAccountId: string
                  debtor:
                    customerId: string
                    displayName: string
                    customerAccountNumber: string
                    customerType: { }
                    customerGroup:
                      id: string
                      name: string
                  customerBankAccountIBAN: string
                  isManual: true
                  paymentEntityReferences:
                    - transactionId: string
                      referenceId: string
                      referenceType: { }
                  isReversed: true
                  reversalDetails:
                    reversalReason: { }
                    reversalAdditionalInformation: string
                    reversalDate: string
                    reversalIncomingBankingTransactionId: string
                    reversalIncomingBankingTransactionIdentification: string
                    reversalIncomingMutationId: string
                  outgoingMutationId: string
                  outgoingBankingTransactionId: string
                  outgoingBankingTransactionIdentification: string
                  isConfirmedByBank: true
                  incomingBankingTransactionId: string
                  incomingBankingTransactionIdentification: string
                  incomingMutationId: string
                  canonicalSearch: string
            text/json:
              schema:
                $ref: '#/components/schemas/PaymentDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  type: { }
                  paymentDateTime: string
                  paymentReference: string
                  remittanceInformation: string
                  amount: 0
                  companyBankAccountId: string
                  debtor:
                    customerId: string
                    displayName: string
                    customerAccountNumber: string
                    customerType: { }
                    customerGroup:
                      id: string
                      name: string
                  customerBankAccountIBAN: string
                  isManual: true
                  paymentEntityReferences:
                    - transactionId: string
                      referenceId: string
                      referenceType: { }
                  isReversed: true
                  reversalDetails:
                    reversalReason: { }
                    reversalAdditionalInformation: string
                    reversalDate: string
                    reversalIncomingBankingTransactionId: string
                    reversalIncomingBankingTransactionIdentification: string
                    reversalIncomingMutationId: string
                  outgoingMutationId: string
                  outgoingBankingTransactionId: string
                  outgoingBankingTransactionIdentification: string
                  isConfirmedByBank: true
                  incomingBankingTransactionId: string
                  incomingBankingTransactionIdentification: string
                  incomingMutationId: string
                  canonicalSearch: string
  /Payments/bulk/reverse:
    post:
      tags:
        - Payments
      summary: Bulk manually reverses payments.
      description: Bulk manually reverses payments.
      operationId: post-payments-bulk-reverse
      parameters:
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: The request containing bulk reversal details.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BulkReversePaymentRequest'
              description: "Represents a bulk request to reverse multiple payments.\r\nThis DTO extends the base reversal request with bulk operation capabilities."
            example:
              reversalAdditionalInformation: string
              onlyValidate: true
              queryParams:
                flexSearch: string
                includeOnlyIds:
                  - string
                excludeIds:
                  - string
                paymentType: string
                customerId: string
                startDateTime: string
                endDateTime: string
                batchMutationId: string
              quickFilter: string
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BulkReversePaymentRequest'
              description: "Represents a bulk request to reverse multiple payments.\r\nThis DTO extends the base reversal request with bulk operation capabilities."
            example:
              reversalAdditionalInformation: string
              onlyValidate: true
              queryParams:
                flexSearch: string
                includeOnlyIds:
                  - string
                excludeIds:
                  - string
                paymentType: string
                customerId: string
                startDateTime: string
                endDateTime: string
                batchMutationId: string
              quickFilter: string
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BulkReversePaymentRequest'
              description: "Represents a bulk request to reverse multiple payments.\r\nThis DTO extends the base reversal request with bulk operation capabilities."
            example:
              reversalAdditionalInformation: string
              onlyValidate: true
              queryParams:
                flexSearch: string
                includeOnlyIds:
                  - string
                excludeIds:
                  - string
                paymentType: string
                customerId: string
                startDateTime: string
                endDateTime: string
                batchMutationId: string
              quickFilter: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/PaymentDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  type: { }
                  paymentDateTime: string
                  paymentReference: string
                  remittanceInformation: string
                  amount: 0
                  companyBankAccountId: string
                  debtor:
                    customerId: string
                    displayName: string
                    customerAccountNumber: string
                    customerType: { }
                    customerGroup:
                      id: string
                      name: string
                  customerBankAccountIBAN: string
                  isManual: true
                  paymentEntityReferences:
                    - transactionId: string
                      referenceId: string
                      referenceType: { }
                  isReversed: true
                  reversalDetails:
                    reversalReason: { }
                    reversalAdditionalInformation: string
                    reversalDate: string
                    reversalIncomingBankingTransactionId: string
                    reversalIncomingBankingTransactionIdentification: string
                    reversalIncomingMutationId: string
                  outgoingMutationId: string
                  outgoingBankingTransactionId: string
                  outgoingBankingTransactionIdentification: string
                  isConfirmedByBank: true
                  incomingBankingTransactionId: string
                  incomingBankingTransactionIdentification: string
                  incomingMutationId: string
                  canonicalSearch: string
            text/json:
              schema:
                $ref: '#/components/schemas/PaymentDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  type: { }
                  paymentDateTime: string
                  paymentReference: string
                  remittanceInformation: string
                  amount: 0
                  companyBankAccountId: string
                  debtor:
                    customerId: string
                    displayName: string
                    customerAccountNumber: string
                    customerType: { }
                    customerGroup:
                      id: string
                      name: string
                  customerBankAccountIBAN: string
                  isManual: true
                  paymentEntityReferences:
                    - transactionId: string
                      referenceId: string
                      referenceType: { }
                  isReversed: true
                  reversalDetails:
                    reversalReason: { }
                    reversalAdditionalInformation: string
                    reversalDate: string
                    reversalIncomingBankingTransactionId: string
                    reversalIncomingBankingTransactionIdentification: string
                    reversalIncomingMutationId: string
                  outgoingMutationId: string
                  outgoingBankingTransactionId: string
                  outgoingBankingTransactionIdentification: string
                  isConfirmedByBank: true
                  incomingBankingTransactionId: string
                  incomingBankingTransactionIdentification: string
                  incomingMutationId: string
                  canonicalSearch: string
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
  '/Payments/{paymentId}':
    get:
      tags:
        - Payments
      summary: Gets a payment by its ID.
      description: Gets a payment by its ID.
      operationId: get-payments-paymentid
      parameters:
        - name: paymentId
          in: path
          description: The ID of the payment to retrieve.
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: string
                title: string
                status: 0
                detail: string
                instance: string
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: string
                title: string
                status: 0
                detail: string
                instance: string
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/PaymentDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  type: { }
                  paymentDateTime: string
                  paymentReference: string
                  remittanceInformation: string
                  amount: 0
                  companyBankAccountId: string
                  debtor:
                    customerId: string
                    displayName: string
                    customerAccountNumber: string
                    customerType: { }
                    customerGroup:
                      id: string
                      name: string
                  customerBankAccountIBAN: string
                  isManual: true
                  paymentEntityReferences:
                    - transactionId: string
                      referenceId: string
                      referenceType: { }
                  isReversed: true
                  reversalDetails:
                    reversalReason: { }
                    reversalAdditionalInformation: string
                    reversalDate: string
                    reversalIncomingBankingTransactionId: string
                    reversalIncomingBankingTransactionIdentification: string
                    reversalIncomingMutationId: string
                  outgoingMutationId: string
                  outgoingBankingTransactionId: string
                  outgoingBankingTransactionIdentification: string
                  isConfirmedByBank: true
                  incomingBankingTransactionId: string
                  incomingBankingTransactionIdentification: string
                  incomingMutationId: string
                  canonicalSearch: string
            text/json:
              schema:
                $ref: '#/components/schemas/PaymentDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  type: { }
                  paymentDateTime: string
                  paymentReference: string
                  remittanceInformation: string
                  amount: 0
                  companyBankAccountId: string
                  debtor:
                    customerId: string
                    displayName: string
                    customerAccountNumber: string
                    customerType: { }
                    customerGroup:
                      id: string
                      name: string
                  customerBankAccountIBAN: string
                  isManual: true
                  paymentEntityReferences:
                    - transactionId: string
                      referenceId: string
                      referenceType: { }
                  isReversed: true
                  reversalDetails:
                    reversalReason: { }
                    reversalAdditionalInformation: string
                    reversalDate: string
                    reversalIncomingBankingTransactionId: string
                    reversalIncomingBankingTransactionIdentification: string
                    reversalIncomingMutationId: string
                  outgoingMutationId: string
                  outgoingBankingTransactionId: string
                  outgoingBankingTransactionIdentification: string
                  isConfirmedByBank: true
                  incomingBankingTransactionId: string
                  incomingBankingTransactionIdentification: string
                  incomingMutationId: string
                  canonicalSearch: string
  '/PropertyGroupBillingConfiguration/{propertygroupid}':
    get:
      tags:
        - PropertyGroupBillingConfiguration
      summary: Gets the billing configuration for a specific property group.
      description: Gets the billing configuration for a specific property group.
      operationId: get-propertygroupbillingconfiguration-propertygroupid
      parameters:
        - name: propertygroupid
          in: path
          description: The property group ID.
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/PropertyGroupBillingConfigurationDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyGroupBillingConfigurationDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  propertyGroup:
                    id: string
                    name: string
                  companyBankAccountId: string
                  advanceFrequency: { }
                  invoiceFrequency: { }
                  invoiceDay: 0
                  invoiceMonth: 0
                  productId: string
                  paymentTermsId: string
                  requiredIncomingInvoiceComponents:
                    - id: string
                      optional: true
                  calculationConfigurations:
                    - name: string
                      id: string
                      serviceLocationIds:
                        - string
                      billingItems:
                        - billingItemId: string
                          deviatingTariffCalculation: true
                          tariffFormula:
                            functions: { }
                          tariffValidationResult:
                            valid: true
                            generalValidationErrors:
                              - key: { }
                                correlationId: string
                                message: string
                                messageValues:
                                  - dataType: { }
                                    value: string
                                    capitalize: true
                            functionValidationErrors:
                              - functionPosition: 0
                                error:
                                  key: { }
                                  correlationId: string
                                  message: string
                                  messageValues:
                                    - dataType: { }
                                      value: string
                                      capitalize: true
                                value: string
                  costAllocationEnabled: true
                  costAllocationValidated: true
                  noteToCustomer: string
                  localisationLevel: { }
                  localisedFields:
                    - string
                  translatedFields: { }
            text/json:
              schema:
                $ref: '#/components/schemas/PropertyGroupBillingConfigurationDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  propertyGroup:
                    id: string
                    name: string
                  companyBankAccountId: string
                  advanceFrequency: { }
                  invoiceFrequency: { }
                  invoiceDay: 0
                  invoiceMonth: 0
                  productId: string
                  paymentTermsId: string
                  requiredIncomingInvoiceComponents:
                    - id: string
                      optional: true
                  calculationConfigurations:
                    - name: string
                      id: string
                      serviceLocationIds:
                        - string
                      billingItems:
                        - billingItemId: string
                          deviatingTariffCalculation: true
                          tariffFormula:
                            functions: { }
                          tariffValidationResult:
                            valid: true
                            generalValidationErrors:
                              - key: { }
                                correlationId: string
                                message: string
                                messageValues:
                                  - dataType: { }
                                    value: string
                                    capitalize: true
                            functionValidationErrors:
                              - functionPosition: 0
                                error:
                                  key: { }
                                  correlationId: string
                                  message: string
                                  messageValues:
                                    - dataType: { }
                                      value: string
                                      capitalize: true
                                value: string
                  costAllocationEnabled: true
                  costAllocationValidated: true
                  noteToCustomer: string
                  localisationLevel: { }
                  localisedFields:
                    - string
                  translatedFields: { }
  /PropertyGroupBillingConfiguration/getall:
    post:
      tags:
        - PropertyGroupBillingConfiguration
      summary: Gets all billing configurations for property groups.
      description: Gets all billing configurations for property groups.
      operationId: post-propertygroupbillingconfiguration-getall
      parameters:
        - name: continuationToken
          in: header
          description: The continuation token.
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: The query parameters.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/PagedPropertyGroupBillingConfigurationsQueryParams'
            example:
              propertyGroupIds:
                - string
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/PagedPropertyGroupBillingConfigurationsQueryParams'
            example:
              propertyGroupIds:
                - string
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/PagedPropertyGroupBillingConfigurationsQueryParams'
            example:
              propertyGroupIds:
                - string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/PropertyGroupBillingConfigurationDTOPagedResponseModelDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyGroupBillingConfigurationDTOPagedResponseModelDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  results:
                    - id: string
                      entityType: { }
                      createdDateTime: string
                      discriminator: string
                      _etag: string
                      requireAttention: true
                      hasErrors: true
                      hasWarnings: true
                      isReadOnly: true
                      organisationId: string
                      propertyGroup:
                        id: string
                        name: string
                      companyBankAccountId: string
                      advanceFrequency: { }
                      invoiceFrequency: { }
                      invoiceDay: 0
                      invoiceMonth: 0
                      productId: string
                      paymentTermsId: string
                      requiredIncomingInvoiceComponents:
                        - id: string
                          optional: true
                      calculationConfigurations:
                        - name: string
                          id: string
                          serviceLocationIds:
                            - string
                          billingItems:
                            - billingItemId: string
                              deviatingTariffCalculation: true
                              tariffFormula:
                                functions: { }
                              tariffValidationResult:
                                valid: true
                                generalValidationErrors:
                                  - key: { }
                                    correlationId: string
                                    message: string
                                    messageValues:
                                      - dataType: { }
                                        value: string
                                        capitalize: true
                                functionValidationErrors:
                                  - functionPosition: 0
                                    error:
                                      key: { }
                                      correlationId: string
                                      message: string
                                      messageValues:
                                        - dataType: { }
                                          value: string
                                          capitalize: true
                                    value: string
                      costAllocationEnabled: true
                      costAllocationValidated: true
                      noteToCustomer: string
                      localisationLevel: { }
                      localisedFields:
                        - string
                      translatedFields: { }
                  hasNextPage: true
                  nextPageToken: string
                  totalRecords: 0
                  sortableFields:
                    - string
                  aggregateDetails:
                    - code: string
                      translation: string
                      value: 0
                      valueDate: string
            text/json:
              schema:
                $ref: '#/components/schemas/PropertyGroupBillingConfigurationDTOPagedResponseModelDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  results:
                    - id: string
                      entityType: { }
                      createdDateTime: string
                      discriminator: string
                      _etag: string
                      requireAttention: true
                      hasErrors: true
                      hasWarnings: true
                      isReadOnly: true
                      organisationId: string
                      propertyGroup:
                        id: string
                        name: string
                      companyBankAccountId: string
                      advanceFrequency: { }
                      invoiceFrequency: { }
                      invoiceDay: 0
                      invoiceMonth: 0
                      productId: string
                      paymentTermsId: string
                      requiredIncomingInvoiceComponents:
                        - id: string
                          optional: true
                      calculationConfigurations:
                        - name: string
                          id: string
                          serviceLocationIds:
                            - string
                          billingItems:
                            - billingItemId: string
                              deviatingTariffCalculation: true
                              tariffFormula:
                                functions: { }
                              tariffValidationResult:
                                valid: true
                                generalValidationErrors:
                                  - key: { }
                                    correlationId: string
                                    message: string
                                    messageValues:
                                      - dataType: { }
                                        value: string
                                        capitalize: true
                                functionValidationErrors:
                                  - functionPosition: 0
                                    error:
                                      key: { }
                                      correlationId: string
                                      message: string
                                      messageValues:
                                        - dataType: { }
                                          value: string
                                          capitalize: true
                                    value: string
                      costAllocationEnabled: true
                      costAllocationValidated: true
                      noteToCustomer: string
                      localisationLevel: { }
                      localisedFields:
                        - string
                      translatedFields: { }
                  hasNextPage: true
                  nextPageToken: string
                  totalRecords: 0
                  sortableFields:
                    - string
                  aggregateDetails:
                    - code: string
                      translation: string
                      value: 0
                      valueDate: string
  /PropertyGroupBillingConfiguration:
    post:
      tags:
        - PropertyGroupBillingConfiguration
      summary: Updates a billing configuration for a property group.
      description: Updates a billing configuration for a property group.
      operationId: post-propertygroupbillingconfiguration
      parameters:
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: The update request.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/UpdatePropertyGroupBillingConfigurationRequest'
              description: "Represents a request to update a property group billing configuration.\r\nThis DTO is used to modify various billing settings for a property group, including frequencies, payment terms, and bank account details."
            example:
              propertyGroup:
                id: string
                name: string
              companyBankAccountId: string
              advanceFrequency: { }
              invoiceFrequency: { }
              invoiceDay: 0
              invoiceMonth: 0
              productId: string
              paymentTermsId: string
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/UpdatePropertyGroupBillingConfigurationRequest'
              description: "Represents a request to update a property group billing configuration.\r\nThis DTO is used to modify various billing settings for a property group, including frequencies, payment terms, and bank account details."
            example:
              propertyGroup:
                id: string
                name: string
              companyBankAccountId: string
              advanceFrequency: { }
              invoiceFrequency: { }
              invoiceDay: 0
              invoiceMonth: 0
              productId: string
              paymentTermsId: string
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/UpdatePropertyGroupBillingConfigurationRequest'
              description: "Represents a request to update a property group billing configuration.\r\nThis DTO is used to modify various billing settings for a property group, including frequencies, payment terms, and bank account details."
            example:
              propertyGroup:
                id: string
                name: string
              companyBankAccountId: string
              advanceFrequency: { }
              invoiceFrequency: { }
              invoiceDay: 0
              invoiceMonth: 0
              productId: string
              paymentTermsId: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/PropertyGroupBillingConfigurationDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyGroupBillingConfigurationDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  propertyGroup:
                    id: string
                    name: string
                  companyBankAccountId: string
                  advanceFrequency: { }
                  invoiceFrequency: { }
                  invoiceDay: 0
                  invoiceMonth: 0
                  productId: string
                  paymentTermsId: string
                  requiredIncomingInvoiceComponents:
                    - id: string
                      optional: true
                  calculationConfigurations:
                    - name: string
                      id: string
                      serviceLocationIds:
                        - string
                      billingItems:
                        - billingItemId: string
                          deviatingTariffCalculation: true
                          tariffFormula:
                            functions: { }
                          tariffValidationResult:
                            valid: true
                            generalValidationErrors:
                              - key: { }
                                correlationId: string
                                message: string
                                messageValues:
                                  - dataType: { }
                                    value: string
                                    capitalize: true
                            functionValidationErrors:
                              - functionPosition: 0
                                error:
                                  key: { }
                                  correlationId: string
                                  message: string
                                  messageValues:
                                    - dataType: { }
                                      value: string
                                      capitalize: true
                                value: string
                  costAllocationEnabled: true
                  costAllocationValidated: true
                  noteToCustomer: string
                  localisationLevel: { }
                  localisedFields:
                    - string
                  translatedFields: { }
            text/json:
              schema:
                $ref: '#/components/schemas/PropertyGroupBillingConfigurationDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  propertyGroup:
                    id: string
                    name: string
                  companyBankAccountId: string
                  advanceFrequency: { }
                  invoiceFrequency: { }
                  invoiceDay: 0
                  invoiceMonth: 0
                  productId: string
                  paymentTermsId: string
                  requiredIncomingInvoiceComponents:
                    - id: string
                      optional: true
                  calculationConfigurations:
                    - name: string
                      id: string
                      serviceLocationIds:
                        - string
                      billingItems:
                        - billingItemId: string
                          deviatingTariffCalculation: true
                          tariffFormula:
                            functions: { }
                          tariffValidationResult:
                            valid: true
                            generalValidationErrors:
                              - key: { }
                                correlationId: string
                                message: string
                                messageValues:
                                  - dataType: { }
                                    value: string
                                    capitalize: true
                            functionValidationErrors:
                              - functionPosition: 0
                                error:
                                  key: { }
                                  correlationId: string
                                  message: string
                                  messageValues:
                                    - dataType: { }
                                      value: string
                                      capitalize: true
                                value: string
                  costAllocationEnabled: true
                  costAllocationValidated: true
                  noteToCustomer: string
                  localisationLevel: { }
                  localisedFields:
                    - string
                  translatedFields: { }
  '/PropertyGroupBillingConfiguration/{propertygroupid}/notetocustomer':
    post:
      tags:
        - PropertyGroupBillingConfiguration
      summary: Updates the note to customer for a specific property group.
      description: Updates the note to customer for a specific property group.
      operationId: post-propertygroupbillingconfiguration-propertygroupid-notetocustomer
      parameters:
        - name: propertygroupid
          in: path
          description: The property group ID.
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: The update request.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/UpdatePropertyGroupBillingConfigurationNoteToCustomerRequest'
              description: "Represents a request to update the note to customer for a property group billing configuration.\r\nThis DTO is used to modify the note that will be displayed to customers on invoices."
            example:
              noteToCustomer: string
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/UpdatePropertyGroupBillingConfigurationNoteToCustomerRequest'
              description: "Represents a request to update the note to customer for a property group billing configuration.\r\nThis DTO is used to modify the note that will be displayed to customers on invoices."
            example:
              noteToCustomer: string
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/UpdatePropertyGroupBillingConfigurationNoteToCustomerRequest'
              description: "Represents a request to update the note to customer for a property group billing configuration.\r\nThis DTO is used to modify the note that will be displayed to customers on invoices."
            example:
              noteToCustomer: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/PropertyGroupBillingConfigurationDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyGroupBillingConfigurationDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  propertyGroup:
                    id: string
                    name: string
                  companyBankAccountId: string
                  advanceFrequency: { }
                  invoiceFrequency: { }
                  invoiceDay: 0
                  invoiceMonth: 0
                  productId: string
                  paymentTermsId: string
                  requiredIncomingInvoiceComponents:
                    - id: string
                      optional: true
                  calculationConfigurations:
                    - name: string
                      id: string
                      serviceLocationIds:
                        - string
                      billingItems:
                        - billingItemId: string
                          deviatingTariffCalculation: true
                          tariffFormula:
                            functions: { }
                          tariffValidationResult:
                            valid: true
                            generalValidationErrors:
                              - key: { }
                                correlationId: string
                                message: string
                                messageValues:
                                  - dataType: { }
                                    value: string
                                    capitalize: true
                            functionValidationErrors:
                              - functionPosition: 0
                                error:
                                  key: { }
                                  correlationId: string
                                  message: string
                                  messageValues:
                                    - dataType: { }
                                      value: string
                                      capitalize: true
                                value: string
                  costAllocationEnabled: true
                  costAllocationValidated: true
                  noteToCustomer: string
                  localisationLevel: { }
                  localisedFields:
                    - string
                  translatedFields: { }
            text/json:
              schema:
                $ref: '#/components/schemas/PropertyGroupBillingConfigurationDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  propertyGroup:
                    id: string
                    name: string
                  companyBankAccountId: string
                  advanceFrequency: { }
                  invoiceFrequency: { }
                  invoiceDay: 0
                  invoiceMonth: 0
                  productId: string
                  paymentTermsId: string
                  requiredIncomingInvoiceComponents:
                    - id: string
                      optional: true
                  calculationConfigurations:
                    - name: string
                      id: string
                      serviceLocationIds:
                        - string
                      billingItems:
                        - billingItemId: string
                          deviatingTariffCalculation: true
                          tariffFormula:
                            functions: { }
                          tariffValidationResult:
                            valid: true
                            generalValidationErrors:
                              - key: { }
                                correlationId: string
                                message: string
                                messageValues:
                                  - dataType: { }
                                    value: string
                                    capitalize: true
                            functionValidationErrors:
                              - functionPosition: 0
                                error:
                                  key: { }
                                  correlationId: string
                                  message: string
                                  messageValues:
                                    - dataType: { }
                                      value: string
                                      capitalize: true
                                value: string
                  costAllocationEnabled: true
                  costAllocationValidated: true
                  noteToCustomer: string
                  localisationLevel: { }
                  localisedFields:
                    - string
                  translatedFields: { }
  /PropertyGroupBillingConfiguration/consolidatednotestocustomer:
    post:
      tags:
        - PropertyGroupBillingConfiguration
      summary: Gets consolidated notes to customer for property groups.
      description: Gets consolidated notes to customer for property groups.
      operationId: post-propertygroupbillingconfiguration-consolidatednotestocustomer
      parameters:
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: The request containing property group IDs and culture.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/GetPropertyGroupBillingConfigurationConsolidatedNotesToCustomerRequest'
              description: "Represents a request to get consolidated notes to customer for property group billing configurations.\r\nThis DTO is used to retrieve combined notes that will be displayed to customers for multiple property groups."
            example:
              propertyGroupIds:
                - string
              culture: { }
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/GetPropertyGroupBillingConfigurationConsolidatedNotesToCustomerRequest'
              description: "Represents a request to get consolidated notes to customer for property group billing configurations.\r\nThis DTO is used to retrieve combined notes that will be displayed to customers for multiple property groups."
            example:
              propertyGroupIds:
                - string
              culture: { }
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/GetPropertyGroupBillingConfigurationConsolidatedNotesToCustomerRequest'
              description: "Represents a request to get consolidated notes to customer for property group billing configurations.\r\nThis DTO is used to retrieve combined notes that will be displayed to customers for multiple property groups."
            example:
              propertyGroupIds:
                - string
              culture: { }
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/StringApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/StringApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data: string
            text/json:
              schema:
                $ref: '#/components/schemas/StringApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data: string
  '/PropertyGroupBillingConfiguration/{propertygroupid}/costallocation':
    post:
      tags:
        - PropertyGroupBillingConfiguration
      summary: Updates the cost allocation for a specific property group.
      description: Updates the cost allocation for a specific property group.
      operationId: post-propertygroupbillingconfiguration-propertygroupid-costallocation
      parameters:
        - name: propertygroupid
          in: path
          description: The property group ID.
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: The update request.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/UpdatePropertyGroupBillingConfigurationCostAllocationRequest'
              description: "Represents a request to update cost allocation settings for a property group billing configuration.\r\nThis DTO is used to configure how costs are allocated across different components and calculation configurations."
            example:
              requiredIncomingInvoiceComponents:
                - id: string
                  optional: true
              calculationConfigurations:
                - name: string
                  id: string
                  serviceLocationIds:
                    - string
                  billingItems:
                    - billingItemId: string
                      deviatingTariffCalculation: true
                      tariffFormula:
                        functions: { }
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/UpdatePropertyGroupBillingConfigurationCostAllocationRequest'
              description: "Represents a request to update cost allocation settings for a property group billing configuration.\r\nThis DTO is used to configure how costs are allocated across different components and calculation configurations."
            example:
              requiredIncomingInvoiceComponents:
                - id: string
                  optional: true
              calculationConfigurations:
                - name: string
                  id: string
                  serviceLocationIds:
                    - string
                  billingItems:
                    - billingItemId: string
                      deviatingTariffCalculation: true
                      tariffFormula:
                        functions: { }
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/UpdatePropertyGroupBillingConfigurationCostAllocationRequest'
              description: "Represents a request to update cost allocation settings for a property group billing configuration.\r\nThis DTO is used to configure how costs are allocated across different components and calculation configurations."
            example:
              requiredIncomingInvoiceComponents:
                - id: string
                  optional: true
              calculationConfigurations:
                - name: string
                  id: string
                  serviceLocationIds:
                    - string
                  billingItems:
                    - billingItemId: string
                      deviatingTariffCalculation: true
                      tariffFormula:
                        functions: { }
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/PropertyGroupBillingConfigurationDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyGroupBillingConfigurationDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  propertyGroup:
                    id: string
                    name: string
                  companyBankAccountId: string
                  advanceFrequency: { }
                  invoiceFrequency: { }
                  invoiceDay: 0
                  invoiceMonth: 0
                  productId: string
                  paymentTermsId: string
                  requiredIncomingInvoiceComponents:
                    - id: string
                      optional: true
                  calculationConfigurations:
                    - name: string
                      id: string
                      serviceLocationIds:
                        - string
                      billingItems:
                        - billingItemId: string
                          deviatingTariffCalculation: true
                          tariffFormula:
                            functions: { }
                          tariffValidationResult:
                            valid: true
                            generalValidationErrors:
                              - key: { }
                                correlationId: string
                                message: string
                                messageValues:
                                  - dataType: { }
                                    value: string
                                    capitalize: true
                            functionValidationErrors:
                              - functionPosition: 0
                                error:
                                  key: { }
                                  correlationId: string
                                  message: string
                                  messageValues:
                                    - dataType: { }
                                      value: string
                                      capitalize: true
                                value: string
                  costAllocationEnabled: true
                  costAllocationValidated: true
                  noteToCustomer: string
                  localisationLevel: { }
                  localisedFields:
                    - string
                  translatedFields: { }
            text/json:
              schema:
                $ref: '#/components/schemas/PropertyGroupBillingConfigurationDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  propertyGroup:
                    id: string
                    name: string
                  companyBankAccountId: string
                  advanceFrequency: { }
                  invoiceFrequency: { }
                  invoiceDay: 0
                  invoiceMonth: 0
                  productId: string
                  paymentTermsId: string
                  requiredIncomingInvoiceComponents:
                    - id: string
                      optional: true
                  calculationConfigurations:
                    - name: string
                      id: string
                      serviceLocationIds:
                        - string
                      billingItems:
                        - billingItemId: string
                          deviatingTariffCalculation: true
                          tariffFormula:
                            functions: { }
                          tariffValidationResult:
                            valid: true
                            generalValidationErrors:
                              - key: { }
                                correlationId: string
                                message: string
                                messageValues:
                                  - dataType: { }
                                    value: string
                                    capitalize: true
                            functionValidationErrors:
                              - functionPosition: 0
                                error:
                                  key: { }
                                  correlationId: string
                                  message: string
                                  messageValues:
                                    - dataType: { }
                                      value: string
                                      capitalize: true
                                value: string
                  costAllocationEnabled: true
                  costAllocationValidated: true
                  noteToCustomer: string
                  localisationLevel: { }
                  localisedFields:
                    - string
                  translatedFields: { }
  '/PropertyGroupBillingConfiguration/{propertygroupid}/costallocation/enable':
    post:
      tags:
        - PropertyGroupBillingConfiguration
      summary: Enables cost allocation for a specific property group.
      description: Enables cost allocation for a specific property group.
      operationId: post-propertygroupbillingconfiguration-propertygroupid-costallocation-enable
      parameters:
        - name: propertygroupid
          in: path
          description: The property group ID.
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/PropertyGroupBillingConfigurationDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyGroupBillingConfigurationDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  propertyGroup:
                    id: string
                    name: string
                  companyBankAccountId: string
                  advanceFrequency: { }
                  invoiceFrequency: { }
                  invoiceDay: 0
                  invoiceMonth: 0
                  productId: string
                  paymentTermsId: string
                  requiredIncomingInvoiceComponents:
                    - id: string
                      optional: true
                  calculationConfigurations:
                    - name: string
                      id: string
                      serviceLocationIds:
                        - string
                      billingItems:
                        - billingItemId: string
                          deviatingTariffCalculation: true
                          tariffFormula:
                            functions: { }
                          tariffValidationResult:
                            valid: true
                            generalValidationErrors:
                              - key: { }
                                correlationId: string
                                message: string
                                messageValues:
                                  - dataType: { }
                                    value: string
                                    capitalize: true
                            functionValidationErrors:
                              - functionPosition: 0
                                error:
                                  key: { }
                                  correlationId: string
                                  message: string
                                  messageValues:
                                    - dataType: { }
                                      value: string
                                      capitalize: true
                                value: string
                  costAllocationEnabled: true
                  costAllocationValidated: true
                  noteToCustomer: string
                  localisationLevel: { }
                  localisedFields:
                    - string
                  translatedFields: { }
            text/json:
              schema:
                $ref: '#/components/schemas/PropertyGroupBillingConfigurationDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  propertyGroup:
                    id: string
                    name: string
                  companyBankAccountId: string
                  advanceFrequency: { }
                  invoiceFrequency: { }
                  invoiceDay: 0
                  invoiceMonth: 0
                  productId: string
                  paymentTermsId: string
                  requiredIncomingInvoiceComponents:
                    - id: string
                      optional: true
                  calculationConfigurations:
                    - name: string
                      id: string
                      serviceLocationIds:
                        - string
                      billingItems:
                        - billingItemId: string
                          deviatingTariffCalculation: true
                          tariffFormula:
                            functions: { }
                          tariffValidationResult:
                            valid: true
                            generalValidationErrors:
                              - key: { }
                                correlationId: string
                                message: string
                                messageValues:
                                  - dataType: { }
                                    value: string
                                    capitalize: true
                            functionValidationErrors:
                              - functionPosition: 0
                                error:
                                  key: { }
                                  correlationId: string
                                  message: string
                                  messageValues:
                                    - dataType: { }
                                      value: string
                                      capitalize: true
                                value: string
                  costAllocationEnabled: true
                  costAllocationValidated: true
                  noteToCustomer: string
                  localisationLevel: { }
                  localisedFields:
                    - string
                  translatedFields: { }
  '/PropertyGroupBillingConfiguration/{propertygroupid}/costallocation/disable':
    post:
      tags:
        - PropertyGroupBillingConfiguration
      summary: Disables cost allocation for a specific property group.
      description: Disables cost allocation for a specific property group.
      operationId: post-propertygroupbillingconfiguration-propertygroupid-costallocation-disabl
      parameters:
        - name: propertygroupid
          in: path
          description: The property group ID.
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/PropertyGroupBillingConfigurationDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyGroupBillingConfigurationDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  propertyGroup:
                    id: string
                    name: string
                  companyBankAccountId: string
                  advanceFrequency: { }
                  invoiceFrequency: { }
                  invoiceDay: 0
                  invoiceMonth: 0
                  productId: string
                  paymentTermsId: string
                  requiredIncomingInvoiceComponents:
                    - id: string
                      optional: true
                  calculationConfigurations:
                    - name: string
                      id: string
                      serviceLocationIds:
                        - string
                      billingItems:
                        - billingItemId: string
                          deviatingTariffCalculation: true
                          tariffFormula:
                            functions: { }
                          tariffValidationResult:
                            valid: true
                            generalValidationErrors:
                              - key: { }
                                correlationId: string
                                message: string
                                messageValues:
                                  - dataType: { }
                                    value: string
                                    capitalize: true
                            functionValidationErrors:
                              - functionPosition: 0
                                error:
                                  key: { }
                                  correlationId: string
                                  message: string
                                  messageValues:
                                    - dataType: { }
                                      value: string
                                      capitalize: true
                                value: string
                  costAllocationEnabled: true
                  costAllocationValidated: true
                  noteToCustomer: string
                  localisationLevel: { }
                  localisedFields:
                    - string
                  translatedFields: { }
            text/json:
              schema:
                $ref: '#/components/schemas/PropertyGroupBillingConfigurationDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  propertyGroup:
                    id: string
                    name: string
                  companyBankAccountId: string
                  advanceFrequency: { }
                  invoiceFrequency: { }
                  invoiceDay: 0
                  invoiceMonth: 0
                  productId: string
                  paymentTermsId: string
                  requiredIncomingInvoiceComponents:
                    - id: string
                      optional: true
                  calculationConfigurations:
                    - name: string
                      id: string
                      serviceLocationIds:
                        - string
                      billingItems:
                        - billingItemId: string
                          deviatingTariffCalculation: true
                          tariffFormula:
                            functions: { }
                          tariffValidationResult:
                            valid: true
                            generalValidationErrors:
                              - key: { }
                                correlationId: string
                                message: string
                                messageValues:
                                  - dataType: { }
                                    value: string
                                    capitalize: true
                            functionValidationErrors:
                              - functionPosition: 0
                                error:
                                  key: { }
                                  correlationId: string
                                  message: string
                                  messageValues:
                                    - dataType: { }
                                      value: string
                                      capitalize: true
                                value: string
                  costAllocationEnabled: true
                  costAllocationValidated: true
                  noteToCustomer: string
                  localisationLevel: { }
                  localisedFields:
                    - string
                  translatedFields: { }
  '/PropertyGroupBillingConfiguration/{propertygroupid}/costallocation/validate':
    post:
      tags:
        - PropertyGroupBillingConfiguration
      summary: Validates cost allocation for a specific property group.
      description: Validates cost allocation for a specific property group.
      operationId: post-propertygroupbillingconfiguration-propertygroupid-costallocation-valida
      parameters:
        - name: propertygroupid
          in: path
          description: The property group ID.
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/PropertyGroupBillingConfigurationDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyGroupBillingConfigurationDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  propertyGroup:
                    id: string
                    name: string
                  companyBankAccountId: string
                  advanceFrequency: { }
                  invoiceFrequency: { }
                  invoiceDay: 0
                  invoiceMonth: 0
                  productId: string
                  paymentTermsId: string
                  requiredIncomingInvoiceComponents:
                    - id: string
                      optional: true
                  calculationConfigurations:
                    - name: string
                      id: string
                      serviceLocationIds:
                        - string
                      billingItems:
                        - billingItemId: string
                          deviatingTariffCalculation: true
                          tariffFormula:
                            functions: { }
                          tariffValidationResult:
                            valid: true
                            generalValidationErrors:
                              - key: { }
                                correlationId: string
                                message: string
                                messageValues:
                                  - dataType: { }
                                    value: string
                                    capitalize: true
                            functionValidationErrors:
                              - functionPosition: 0
                                error:
                                  key: { }
                                  correlationId: string
                                  message: string
                                  messageValues:
                                    - dataType: { }
                                      value: string
                                      capitalize: true
                                value: string
                  costAllocationEnabled: true
                  costAllocationValidated: true
                  noteToCustomer: string
                  localisationLevel: { }
                  localisedFields:
                    - string
                  translatedFields: { }
            text/json:
              schema:
                $ref: '#/components/schemas/PropertyGroupBillingConfigurationDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  propertyGroup:
                    id: string
                    name: string
                  companyBankAccountId: string
                  advanceFrequency: { }
                  invoiceFrequency: { }
                  invoiceDay: 0
                  invoiceMonth: 0
                  productId: string
                  paymentTermsId: string
                  requiredIncomingInvoiceComponents:
                    - id: string
                      optional: true
                  calculationConfigurations:
                    - name: string
                      id: string
                      serviceLocationIds:
                        - string
                      billingItems:
                        - billingItemId: string
                          deviatingTariffCalculation: true
                          tariffFormula:
                            functions: { }
                          tariffValidationResult:
                            valid: true
                            generalValidationErrors:
                              - key: { }
                                correlationId: string
                                message: string
                                messageValues:
                                  - dataType: { }
                                    value: string
                                    capitalize: true
                            functionValidationErrors:
                              - functionPosition: 0
                                error:
                                  key: { }
                                  correlationId: string
                                  message: string
                                  messageValues:
                                    - dataType: { }
                                      value: string
                                      capitalize: true
                                value: string
                  costAllocationEnabled: true
                  costAllocationValidated: true
                  noteToCustomer: string
                  localisationLevel: { }
                  localisedFields:
                    - string
                  translatedFields: { }
  '/PropertyGroupBillingConfiguration/{propertygroupid}/costallocation/billwithprevioustariffs':
    post:
      tags:
        - PropertyGroupBillingConfiguration
      summary: Triggers billing with previous tariffs for a specific property group.
      description: Triggers billing with previous tariffs for a specific property group.
      operationId: post-propertygroupbillingconfiguration-propertygroupid-costallocation-billwi
      parameters:
        - name: propertygroupid
          in: path
          description: The property group ID.
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: The request containing billing relation IDs.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BillWithPreviousTariffsRequest'
              description: "Represents a request to bill using previous tariffs.\r\nThis DTO is used to generate bills using historical tariff rates instead of current ones."
            example:
              billingRelationIds:
                - string
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BillWithPreviousTariffsRequest'
              description: "Represents a request to bill using previous tariffs.\r\nThis DTO is used to generate bills using historical tariff rates instead of current ones."
            example:
              billingRelationIds:
                - string
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BillWithPreviousTariffsRequest'
              description: "Represents a request to bill using previous tariffs.\r\nThis DTO is used to generate bills using historical tariff rates instead of current ones."
            example:
              billingRelationIds:
                - string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/BooleanApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/BooleanApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data: true
            text/json:
              schema:
                $ref: '#/components/schemas/BooleanApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data: true
  /PropertyGroupBillingConfiguration/formulas:
    get:
      tags:
        - PropertyGroupBillingConfiguration
      summary: Lists all available formulas.
      description: Lists all available formulas.
      operationId: get-propertygroupbillingconfiguration-formulas
      parameters:
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/FunctionDescriptionDTOListApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/FunctionDescriptionDTOListApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  - functionCategory: { }
                    functionType: { }
                    outputType: string
                    inputParameters: { }
            text/json:
              schema:
                $ref: '#/components/schemas/FunctionDescriptionDTOListApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  - functionCategory: { }
                    functionType: { }
                    outputType: string
                    inputParameters: { }
  /PropertyGroupBillingConfiguration/suggestions/invoicebillingconfiguration:
    post:
      tags:
        - PropertyGroupBillingConfiguration
      summary: Gets invoice billing configuration suggestions.
      description: Gets invoice billing configuration suggestions.
      operationId: post-propertygroupbillingconfiguration-suggestions-invoicebillingconfigurati
      parameters:
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: The request containing service location IDs and contract ID.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/InvoiceBillingConfigurationsSuggestionsRequest'
              description: "Represents a request to get suggested invoice billing configurations.\r\nThis DTO is used to retrieve recommended billing configurations based on service locations and contract."
            example:
              serviceLocationIds:
                - string
              contractId: string
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/InvoiceBillingConfigurationsSuggestionsRequest'
              description: "Represents a request to get suggested invoice billing configurations.\r\nThis DTO is used to retrieve recommended billing configurations based on service locations and contract."
            example:
              serviceLocationIds:
                - string
              contractId: string
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/InvoiceBillingConfigurationsSuggestionsRequest'
              description: "Represents a request to get suggested invoice billing configurations.\r\nThis DTO is used to retrieve recommended billing configurations based on service locations and contract."
            example:
              serviceLocationIds:
                - string
              contractId: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/InvoiceBillingConfigurationSuggestionsResponseDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceBillingConfigurationSuggestionsResponseDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  advanceFrequency: { }
                  invoiceFrequency: { }
                  paymentTermsId: string
                  message:
                    key: { }
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                    level: { }
                  invoiceMonth: 0
                  invoiceDay: 0
                  iban: string
                  companyBankAccountId: string
            text/json:
              schema:
                $ref: '#/components/schemas/InvoiceBillingConfigurationSuggestionsResponseDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  advanceFrequency: { }
                  invoiceFrequency: { }
                  paymentTermsId: string
                  message:
                    key: { }
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                    level: { }
                  invoiceMonth: 0
                  invoiceDay: 0
                  iban: string
                  companyBankAccountId: string
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: string
                title: string
                status: 0
                detail: string
                instance: string
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: string
                title: string
                status: 0
                detail: string
                instance: string
  /PropertyGroupBillingConfiguration/suggestions/firstInvoiceEndDateTime:
    post:
      tags:
        - PropertyGroupBillingConfiguration
      summary: Gets the first invoice end date time suggestion for provided service locations.
      description: Gets the first invoice end date time suggestion for provided service locations.
      operationId: post-propertygroupbillingconfiguration-suggestions-firstinvoiceenddatetime
      parameters:
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: 'The request containing service location IDs, invoice frequency, and invoice start date time UTC.'
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/PropertyGroupFirstInvoiceEndDateTimeSuggestionsRequest'
              description: "Represents a request to get suggested end dates for the first invoice of a property group.\r\nThis DTO is used to determine appropriate billing period end dates based on service locations and invoice frequency."
            example:
              serviceLocationIds:
                - string
              invoiceFrequency: { }
              invoiceStartDateTimeUTC: string
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/PropertyGroupFirstInvoiceEndDateTimeSuggestionsRequest'
              description: "Represents a request to get suggested end dates for the first invoice of a property group.\r\nThis DTO is used to determine appropriate billing period end dates based on service locations and invoice frequency."
            example:
              serviceLocationIds:
                - string
              invoiceFrequency: { }
              invoiceStartDateTimeUTC: string
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/PropertyGroupFirstInvoiceEndDateTimeSuggestionsRequest'
              description: "Represents a request to get suggested end dates for the first invoice of a property group.\r\nThis DTO is used to determine appropriate billing period end dates based on service locations and invoice frequency."
            example:
              serviceLocationIds:
                - string
              invoiceFrequency: { }
              invoiceStartDateTimeUTC: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/FirstInvoiceEndDateTimeSuggestionResponseDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/FirstInvoiceEndDateTimeSuggestionResponseDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  firstInvoiceEndDateTime: string
            text/json:
              schema:
                $ref: '#/components/schemas/FirstInvoiceEndDateTimeSuggestionResponseDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  firstInvoiceEndDateTime: string
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: string
                title: string
                status: 0
                detail: string
                instance: string
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: string
                title: string
                status: 0
                detail: string
                instance: string
  /PropertyGroupBillingConfiguration/suggestions/product:
    post:
      tags:
        - PropertyGroupBillingConfiguration
      summary: Gets product suggestions for invoice billing configuration.
      description: Gets product suggestions for invoice billing configuration.
      operationId: post-propertygroupbillingconfiguration-suggestions-product
      parameters:
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: The request containing service location IDs and contract ID.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/InvoiceProductConfigurationsSuggestionsRequest'
            example:
              serviceLocationIds:
                - string
              contractId: string
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/InvoiceProductConfigurationsSuggestionsRequest'
            example:
              serviceLocationIds:
                - string
              contractId: string
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/InvoiceProductConfigurationsSuggestionsRequest'
            example:
              serviceLocationIds:
                - string
              contractId: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/InvoiceProductConfigurationSuggestionsResponseDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceProductConfigurationSuggestionsResponseDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  productId: string
                  productName: string
                  costAllocationEnabled: true
                  message:
                    key: { }
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                    level: { }
            text/json:
              schema:
                $ref: '#/components/schemas/InvoiceProductConfigurationSuggestionsResponseDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  productId: string
                  productName: string
                  costAllocationEnabled: true
                  message:
                    key: { }
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                    level: { }
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: string
                title: string
                status: 0
                detail: string
                instance: string
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: string
                title: string
                status: 0
                detail: string
                instance: string
  '/PropertyGroupBillingConfiguration/{entityId}/translations':
    post:
      tags:
        - PropertyGroupBillingConfiguration
      summary: '/PropertyGroupBillingConfiguration/{entityId}/translations - POST'
      operationId: post-propertygroupbillingconfiguration-entityid-translations
      parameters:
        - name: entityId
          in: path
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/UpdateEntityTranslationRequest'
            example:
              translatedFields: { }
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/UpdateEntityTranslationRequest'
            example:
              translatedFields: { }
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/UpdateEntityTranslationRequest'
            example:
              translatedFields: { }
      responses:
        '201':
          description: Created
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
  '/PropertyGroupBillingPeriods/{propertygroupid}':
    get:
      tags:
        - PropertyGroupBillingPeriods
      summary: Gets all billing periods for a specific property group.
      description: Gets all billing periods for a specific property group.
      operationId: get-propertygroupbillingperiods-propertygroupid
      parameters:
        - name: propertygroupid
          in: path
          description: The property group ID.
          required: true
          schema:
            type: string
        - name: incomingInvoiceId
          in: query
          description: The incoming invoice ID.
          schema:
            type: string
        - name: startDateTime
          in: query
          description: Format - date-time (as date-time in RFC3339). The start date and time.
          schema:
            type: string
            format: date-time
            nullable: true
        - name: endDateTime
          in: query
          description: Format - date-time (as date-time in RFC3339). The end date and time.
          schema:
            type: string
            format: date-time
            nullable: true
        - name: continuationToken
          in: header
          description: The continuation token for pagination.
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/PropertyGroupBillingPeriodDTOPagedResponseModelDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyGroupBillingPeriodDTOPagedResponseModelDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  results:
                    - id: string
                      entityType: { }
                      createdDateTime: string
                      discriminator: string
                      _etag: string
                      requireAttention: true
                      hasErrors: true
                      hasWarnings: true
                      isReadOnly: true
                      organisationId: string
                      propertyGroupId: string
                      startDate: string
                      endDate: string
                      incomingInvoiceComponents:
                        - incomingInvoiceComponentId: string
                          potentiallyComplete: true
                          values:
                            - id: string
                              value: 0
                              incomingInvoiceId: string
                      calculationConfigurations:
                        - calculationConfigurationId: string
                          tariffStatus: { }
                          billingItems:
                            - billingItemId: string
                              deviatingTariffs:
                                - tariff: 0
                                  startDate: string
                                  endDate: string
                              tariffExecutionErrors:
                                - functionPosition: 0
                                  error:
                                    key: { }
                                    correlationId: string
                                    message: string
                                    messageValues:
                                      - dataType: { }
                                        value: string
                                        capitalize: true
                                  message: string
                                  parameters:
                                    - string
                      locked: true
                  hasNextPage: true
                  nextPageToken: string
                  totalRecords: 0
                  sortableFields:
                    - string
                  aggregateDetails:
                    - code: string
                      translation: string
                      value: 0
                      valueDate: string
            text/json:
              schema:
                $ref: '#/components/schemas/PropertyGroupBillingPeriodDTOPagedResponseModelDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  results:
                    - id: string
                      entityType: { }
                      createdDateTime: string
                      discriminator: string
                      _etag: string
                      requireAttention: true
                      hasErrors: true
                      hasWarnings: true
                      isReadOnly: true
                      organisationId: string
                      propertyGroupId: string
                      startDate: string
                      endDate: string
                      incomingInvoiceComponents:
                        - incomingInvoiceComponentId: string
                          potentiallyComplete: true
                          values:
                            - id: string
                              value: 0
                              incomingInvoiceId: string
                      calculationConfigurations:
                        - calculationConfigurationId: string
                          tariffStatus: { }
                          billingItems:
                            - billingItemId: string
                              deviatingTariffs:
                                - tariff: 0
                                  startDate: string
                                  endDate: string
                              tariffExecutionErrors:
                                - functionPosition: 0
                                  error:
                                    key: { }
                                    correlationId: string
                                    message: string
                                    messageValues:
                                      - dataType: { }
                                        value: string
                                        capitalize: true
                                  message: string
                                  parameters:
                                    - string
                      locked: true
                  hasNextPage: true
                  nextPageToken: string
                  totalRecords: 0
                  sortableFields:
                    - string
                  aggregateDetails:
                    - code: string
                      translation: string
                      value: 0
                      valueDate: string
    post:
      tags:
        - PropertyGroupBillingPeriods
      summary: Creates a new billing period for a specific property group.
      description: Creates a new billing period for a specific property group.
      operationId: post-propertygroupbillingperiods-propertygroupid
      parameters:
        - name: propertygroupid
          in: path
          description: The property group ID.
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: The request containing the details of the billing period to create.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/CreatePropertyGroupBillingPeriodRequest'
              description: "Represents a request to create a new billing period for a property group.\r\nThis DTO is used to define the time period for which billing calculations will be performed."
            example:
              startDateTime: string
              endDateTime: string
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/CreatePropertyGroupBillingPeriodRequest'
              description: "Represents a request to create a new billing period for a property group.\r\nThis DTO is used to define the time period for which billing calculations will be performed."
            example:
              startDateTime: string
              endDateTime: string
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/CreatePropertyGroupBillingPeriodRequest'
              description: "Represents a request to create a new billing period for a property group.\r\nThis DTO is used to define the time period for which billing calculations will be performed."
            example:
              startDateTime: string
              endDateTime: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/PropertyGroupBillingPeriodDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyGroupBillingPeriodDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  propertyGroupId: string
                  startDate: string
                  endDate: string
                  incomingInvoiceComponents:
                    - incomingInvoiceComponentId: string
                      potentiallyComplete: true
                      values:
                        - id: string
                          value: 0
                          incomingInvoiceId: string
                  calculationConfigurations:
                    - calculationConfigurationId: string
                      tariffStatus: { }
                      billingItems:
                        - billingItemId: string
                          deviatingTariffs:
                            - tariff: 0
                              startDate: string
                              endDate: string
                          tariffExecutionErrors:
                            - functionPosition: 0
                              error:
                                key: { }
                                correlationId: string
                                message: string
                                messageValues:
                                  - dataType: { }
                                    value: string
                                    capitalize: true
                              message: string
                              parameters:
                                - string
                  locked: true
            text/json:
              schema:
                $ref: '#/components/schemas/PropertyGroupBillingPeriodDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  propertyGroupId: string
                  startDate: string
                  endDate: string
                  incomingInvoiceComponents:
                    - incomingInvoiceComponentId: string
                      potentiallyComplete: true
                      values:
                        - id: string
                          value: 0
                          incomingInvoiceId: string
                  calculationConfigurations:
                    - calculationConfigurationId: string
                      tariffStatus: { }
                      billingItems:
                        - billingItemId: string
                          deviatingTariffs:
                            - tariff: 0
                              startDate: string
                              endDate: string
                          tariffExecutionErrors:
                            - functionPosition: 0
                              error:
                                key: { }
                                correlationId: string
                                message: string
                                messageValues:
                                  - dataType: { }
                                    value: string
                                    capitalize: true
                              message: string
                              parameters:
                                - string
                  locked: true
  '/PropertyGroupBillingPeriods/{propertygroupid}/{periodid}':
    get:
      tags:
        - PropertyGroupBillingPeriods
      summary: Gets a specific billing period by its ID.
      description: Gets a specific billing period by its ID.
      operationId: get-propertygroupbillingperiods-propertygroupid-periodid
      parameters:
        - name: propertygroupid
          in: path
          description: The property group ID.
          required: true
          schema:
            type: string
        - name: periodid
          in: path
          description: The billing period ID.
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/PropertyGroupBillingPeriodDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyGroupBillingPeriodDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  propertyGroupId: string
                  startDate: string
                  endDate: string
                  incomingInvoiceComponents:
                    - incomingInvoiceComponentId: string
                      potentiallyComplete: true
                      values:
                        - id: string
                          value: 0
                          incomingInvoiceId: string
                  calculationConfigurations:
                    - calculationConfigurationId: string
                      tariffStatus: { }
                      billingItems:
                        - billingItemId: string
                          deviatingTariffs:
                            - tariff: 0
                              startDate: string
                              endDate: string
                          tariffExecutionErrors:
                            - functionPosition: 0
                              error:
                                key: { }
                                correlationId: string
                                message: string
                                messageValues:
                                  - dataType: { }
                                    value: string
                                    capitalize: true
                              message: string
                              parameters:
                                - string
                  locked: true
            text/json:
              schema:
                $ref: '#/components/schemas/PropertyGroupBillingPeriodDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  propertyGroupId: string
                  startDate: string
                  endDate: string
                  incomingInvoiceComponents:
                    - incomingInvoiceComponentId: string
                      potentiallyComplete: true
                      values:
                        - id: string
                          value: 0
                          incomingInvoiceId: string
                  calculationConfigurations:
                    - calculationConfigurationId: string
                      tariffStatus: { }
                      billingItems:
                        - billingItemId: string
                          deviatingTariffs:
                            - tariff: 0
                              startDate: string
                              endDate: string
                          tariffExecutionErrors:
                            - functionPosition: 0
                              error:
                                key: { }
                                correlationId: string
                                message: string
                                messageValues:
                                  - dataType: { }
                                    value: string
                                    capitalize: true
                              message: string
                              parameters:
                                - string
                  locked: true
    delete:
      tags:
        - PropertyGroupBillingPeriods
      summary: Deletes a specific billing period.
      description: Deletes a specific billing period.
      operationId: delete-propertygroupbillingperiods-propertygroupid-periodid
      parameters:
        - name: propertygroupid
          in: path
          description: The property group ID.
          required: true
          schema:
            type: string
        - name: periodid
          in: path
          description: The billing period ID.
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '204':
          description: No Content
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/BooleanApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/BooleanApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data: true
            text/json:
              schema:
                $ref: '#/components/schemas/BooleanApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data: true
  '/PropertyGroupBillingPeriods/{propertygroupid}/{periodid}/IncomingInvoiceCostComponentValues':
    post:
      tags:
        - PropertyGroupBillingPeriods
      summary: Adds an incoming invoice cost component value to a billing period.
      description: Adds an incoming invoice cost component value to a billing period.
      operationId: post-propertygroupbillingperiods-propertygroupid-periodid-incominginvoicecos
      parameters:
        - name: propertygroupid
          in: path
          description: The property group ID.
          required: true
          schema:
            type: string
        - name: periodid
          in: path
          description: The billing period ID.
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: The request containing the details of the cost component value to add.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/AddIncomingInvoiceComponentToBillingPeriodRequest'
              description: "Represents a request to add an incoming invoice component to a billing period.\r\nThis DTO is used to associate incoming invoice components with specific billing periods."
            example:
              incomingInvoiceComponentId: string
              value: 0
              incomingInvoiceId: string
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/AddIncomingInvoiceComponentToBillingPeriodRequest'
              description: "Represents a request to add an incoming invoice component to a billing period.\r\nThis DTO is used to associate incoming invoice components with specific billing periods."
            example:
              incomingInvoiceComponentId: string
              value: 0
              incomingInvoiceId: string
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/AddIncomingInvoiceComponentToBillingPeriodRequest'
              description: "Represents a request to add an incoming invoice component to a billing period.\r\nThis DTO is used to associate incoming invoice components with specific billing periods."
            example:
              incomingInvoiceComponentId: string
              value: 0
              incomingInvoiceId: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/PropertyGroupBillingPeriodDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyGroupBillingPeriodDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  propertyGroupId: string
                  startDate: string
                  endDate: string
                  incomingInvoiceComponents:
                    - incomingInvoiceComponentId: string
                      potentiallyComplete: true
                      values:
                        - id: string
                          value: 0
                          incomingInvoiceId: string
                  calculationConfigurations:
                    - calculationConfigurationId: string
                      tariffStatus: { }
                      billingItems:
                        - billingItemId: string
                          deviatingTariffs:
                            - tariff: 0
                              startDate: string
                              endDate: string
                          tariffExecutionErrors:
                            - functionPosition: 0
                              error:
                                key: { }
                                correlationId: string
                                message: string
                                messageValues:
                                  - dataType: { }
                                    value: string
                                    capitalize: true
                              message: string
                              parameters:
                                - string
                  locked: true
            text/json:
              schema:
                $ref: '#/components/schemas/PropertyGroupBillingPeriodDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  propertyGroupId: string
                  startDate: string
                  endDate: string
                  incomingInvoiceComponents:
                    - incomingInvoiceComponentId: string
                      potentiallyComplete: true
                      values:
                        - id: string
                          value: 0
                          incomingInvoiceId: string
                  calculationConfigurations:
                    - calculationConfigurationId: string
                      tariffStatus: { }
                      billingItems:
                        - billingItemId: string
                          deviatingTariffs:
                            - tariff: 0
                              startDate: string
                              endDate: string
                          tariffExecutionErrors:
                            - functionPosition: 0
                              error:
                                key: { }
                                correlationId: string
                                message: string
                                messageValues:
                                  - dataType: { }
                                    value: string
                                    capitalize: true
                              message: string
                              parameters:
                                - string
                  locked: true
  '/PropertyGroupBillingPeriods/{propertygroupid}/{periodid}/lock':
    post:
      tags:
        - PropertyGroupBillingPeriods
      summary: Locks a billing period.
      description: Locks a billing period.
      operationId: post-propertygroupbillingperiods-propertygroupid-periodid-lock
      parameters:
        - name: propertygroupid
          in: path
          description: The property group ID.
          required: true
          schema:
            type: string
        - name: periodid
          in: path
          description: The billing period ID.
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/PropertyGroupBillingPeriodDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyGroupBillingPeriodDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  propertyGroupId: string
                  startDate: string
                  endDate: string
                  incomingInvoiceComponents:
                    - incomingInvoiceComponentId: string
                      potentiallyComplete: true
                      values:
                        - id: string
                          value: 0
                          incomingInvoiceId: string
                  calculationConfigurations:
                    - calculationConfigurationId: string
                      tariffStatus: { }
                      billingItems:
                        - billingItemId: string
                          deviatingTariffs:
                            - tariff: 0
                              startDate: string
                              endDate: string
                          tariffExecutionErrors:
                            - functionPosition: 0
                              error:
                                key: { }
                                correlationId: string
                                message: string
                                messageValues:
                                  - dataType: { }
                                    value: string
                                    capitalize: true
                              message: string
                              parameters:
                                - string
                  locked: true
            text/json:
              schema:
                $ref: '#/components/schemas/PropertyGroupBillingPeriodDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  propertyGroupId: string
                  startDate: string
                  endDate: string
                  incomingInvoiceComponents:
                    - incomingInvoiceComponentId: string
                      potentiallyComplete: true
                      values:
                        - id: string
                          value: 0
                          incomingInvoiceId: string
                  calculationConfigurations:
                    - calculationConfigurationId: string
                      tariffStatus: { }
                      billingItems:
                        - billingItemId: string
                          deviatingTariffs:
                            - tariff: 0
                              startDate: string
                              endDate: string
                          tariffExecutionErrors:
                            - functionPosition: 0
                              error:
                                key: { }
                                correlationId: string
                                message: string
                                messageValues:
                                  - dataType: { }
                                    value: string
                                    capitalize: true
                              message: string
                              parameters:
                                - string
                  locked: true
  '/PropertyGroupBillingPeriods/{propertygroupid}/{periodid}/calculateformulae':
    post:
      tags:
        - PropertyGroupBillingPeriods
      summary: Calculates formulae for a billing period.
      description: Calculates formulae for a billing period.
      operationId: post-propertygroupbillingperiods-propertygroupid-periodid-calculateformulae
      parameters:
        - name: propertygroupid
          in: path
          description: The property group ID.
          required: true
          schema:
            type: string
        - name: periodid
          in: path
          description: The billing period ID.
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/PropertyGroupBillingPeriodDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyGroupBillingPeriodDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  propertyGroupId: string
                  startDate: string
                  endDate: string
                  incomingInvoiceComponents:
                    - incomingInvoiceComponentId: string
                      potentiallyComplete: true
                      values:
                        - id: string
                          value: 0
                          incomingInvoiceId: string
                  calculationConfigurations:
                    - calculationConfigurationId: string
                      tariffStatus: { }
                      billingItems:
                        - billingItemId: string
                          deviatingTariffs:
                            - tariff: 0
                              startDate: string
                              endDate: string
                          tariffExecutionErrors:
                            - functionPosition: 0
                              error:
                                key: { }
                                correlationId: string
                                message: string
                                messageValues:
                                  - dataType: { }
                                    value: string
                                    capitalize: true
                              message: string
                              parameters:
                                - string
                  locked: true
            text/json:
              schema:
                $ref: '#/components/schemas/PropertyGroupBillingPeriodDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  propertyGroupId: string
                  startDate: string
                  endDate: string
                  incomingInvoiceComponents:
                    - incomingInvoiceComponentId: string
                      potentiallyComplete: true
                      values:
                        - id: string
                          value: 0
                          incomingInvoiceId: string
                  calculationConfigurations:
                    - calculationConfigurationId: string
                      tariffStatus: { }
                      billingItems:
                        - billingItemId: string
                          deviatingTariffs:
                            - tariff: 0
                              startDate: string
                              endDate: string
                          tariffExecutionErrors:
                            - functionPosition: 0
                              error:
                                key: { }
                                correlationId: string
                                message: string
                                messageValues:
                                  - dataType: { }
                                    value: string
                                    capitalize: true
                              message: string
                              parameters:
                                - string
                  locked: true
  '/PropertyGroupBillingPeriods/{propertygroupid}/{periodid}/triggerbilling':
    post:
      tags:
        - PropertyGroupBillingPeriods
      summary: Triggers billing for a specific period.
      description: Triggers billing for a specific period.
      operationId: post-propertygroupbillingperiods-propertygroupid-periodid-triggerbilling
      parameters:
        - name: propertygroupid
          in: path
          description: The property group ID.
          required: true
          schema:
            type: string
        - name: periodid
          in: path
          description: The billing period ID.
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/PropertyGroupBillingPeriodDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyGroupBillingPeriodDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  propertyGroupId: string
                  startDate: string
                  endDate: string
                  incomingInvoiceComponents:
                    - incomingInvoiceComponentId: string
                      potentiallyComplete: true
                      values:
                        - id: string
                          value: 0
                          incomingInvoiceId: string
                  calculationConfigurations:
                    - calculationConfigurationId: string
                      tariffStatus: { }
                      billingItems:
                        - billingItemId: string
                          deviatingTariffs:
                            - tariff: 0
                              startDate: string
                              endDate: string
                          tariffExecutionErrors:
                            - functionPosition: 0
                              error:
                                key: { }
                                correlationId: string
                                message: string
                                messageValues:
                                  - dataType: { }
                                    value: string
                                    capitalize: true
                              message: string
                              parameters:
                                - string
                  locked: true
            text/json:
              schema:
                $ref: '#/components/schemas/PropertyGroupBillingPeriodDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  propertyGroupId: string
                  startDate: string
                  endDate: string
                  incomingInvoiceComponents:
                    - incomingInvoiceComponentId: string
                      potentiallyComplete: true
                      values:
                        - id: string
                          value: 0
                          incomingInvoiceId: string
                  calculationConfigurations:
                    - calculationConfigurationId: string
                      tariffStatus: { }
                      billingItems:
                        - billingItemId: string
                          deviatingTariffs:
                            - tariff: 0
                              startDate: string
                              endDate: string
                          tariffExecutionErrors:
                            - functionPosition: 0
                              error:
                                key: { }
                                correlationId: string
                                message: string
                                messageValues:
                                  - dataType: { }
                                    value: string
                                    capitalize: true
                              message: string
                              parameters:
                                - string
                  locked: true
  '/PropertyGroupBillingPeriods/{propertygroupid}/{periodid}/IncomingInvoiceCostComponentValues/{id}':
    delete:
      tags:
        - PropertyGroupBillingPeriods
      summary: Removes an incoming invoice cost component value from a billing period.
      description: Removes an incoming invoice cost component value from a billing period.
      operationId: delete-propertygroupbillingperiods-propertygroupid-periodid-incominginvoicec
      parameters:
        - name: propertygroupid
          in: path
          description: The property group ID.
          required: true
          schema:
            type: string
        - name: periodid
          in: path
          description: The billing period ID.
          required: true
          schema:
            type: string
        - name: id
          in: path
          description: The ID of the cost component value to remove.
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/PropertyGroupBillingPeriodDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyGroupBillingPeriodDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  propertyGroupId: string
                  startDate: string
                  endDate: string
                  incomingInvoiceComponents:
                    - incomingInvoiceComponentId: string
                      potentiallyComplete: true
                      values:
                        - id: string
                          value: 0
                          incomingInvoiceId: string
                  calculationConfigurations:
                    - calculationConfigurationId: string
                      tariffStatus: { }
                      billingItems:
                        - billingItemId: string
                          deviatingTariffs:
                            - tariff: 0
                              startDate: string
                              endDate: string
                          tariffExecutionErrors:
                            - functionPosition: 0
                              error:
                                key: { }
                                correlationId: string
                                message: string
                                messageValues:
                                  - dataType: { }
                                    value: string
                                    capitalize: true
                              message: string
                              parameters:
                                - string
                  locked: true
            text/json:
              schema:
                $ref: '#/components/schemas/PropertyGroupBillingPeriodDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  propertyGroupId: string
                  startDate: string
                  endDate: string
                  incomingInvoiceComponents:
                    - incomingInvoiceComponentId: string
                      potentiallyComplete: true
                      values:
                        - id: string
                          value: 0
                          incomingInvoiceId: string
                  calculationConfigurations:
                    - calculationConfigurationId: string
                      tariffStatus: { }
                      billingItems:
                        - billingItemId: string
                          deviatingTariffs:
                            - tariff: 0
                              startDate: string
                              endDate: string
                          tariffExecutionErrors:
                            - functionPosition: 0
                              error:
                                key: { }
                                correlationId: string
                                message: string
                                messageValues:
                                  - dataType: { }
                                    value: string
                                    capitalize: true
                              message: string
                              parameters:
                                - string
                  locked: true
  /Transactions:
    get:
      tags:
        - Transactions
      summary: Gets all transactions.
      description: Gets all transactions.
      operationId: get-transactions
      parameters:
        - name: Customeruuid
          in: query
          schema:
            type: string
        - name: ReferenceDate
          in: query
          description: Format - date-time (as date-time in RFC3339).
          schema:
            type: string
            format: date-time
            nullable: true
        - name: PeriodStartDate
          in: query
          description: Format - date-time (as date-time in RFC3339).
          schema:
            type: string
            format: date-time
            nullable: true
        - name: PeriodEndDate
          in: query
          description: Format - date-time (as date-time in RFC3339).
          schema:
            type: string
            format: date-time
            nullable: true
        - name: CreatedStartDate
          in: query
          description: Format - date-time (as date-time in RFC3339).
          schema:
            type: string
            format: date-time
            nullable: true
        - name: CreatedEndDate
          in: query
          description: Format - date-time (as date-time in RFC3339).
          schema:
            type: string
            format: date-time
            nullable: true
        - name: HideCredits
          in: query
          schema:
            type: boolean
        - name: OnlyOverdue
          in: query
          schema:
            type: boolean
        - name: OnlyOpen
          in: query
          schema:
            type: boolean
        - name: PropertyGroupId
          in: query
          schema:
            type: string
        - name: CompanyBankAccountId
          in: query
          schema:
            type: string
        - name: AmountSign
          in: query
          schema:
            type: string
        - name: OnlyCount
          in: query
          schema:
            type: boolean
        - name: FlexSearch
          in: query
          schema:
            type: string
        - name: IncludeOnlyIds
          in: query
          schema:
            type: array
            items:
              type: string
        - name: ExcludeIds
          in: query
          schema:
            type: array
            items:
              type: string
        - name: orderBy
          in: query
          description: The order by parameter.
          schema:
            type: string
        - name: Name
          in: query
          schema:
            type: string
        - name: Id
          in: query
          description: Format - int32.
          schema:
            type: integer
            format: int32
        - name: continuationToken
          in: header
          description: The continuation token.
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/TransactionDTOPagedResponseModelDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionDTOPagedResponseModelDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  results:
                    - id: string
                      entityType: { }
                      createdDateTime: string
                      discriminator: string
                      _etag: string
                      requireAttention: true
                      hasErrors: true
                      hasWarnings: true
                      isReadOnly: true
                      organisationId: string
                      transactionType: { }
                      transactionSubType: { }
                      transactionDateTime: string
                      transactionDueDateTime: string
                      transactionAmount: 0
                      transactionOpenAmount: 0
                      customerId: string
                      debtor:
                        customerId: string
                        displayName: string
                        customerAccountNumber: string
                        customerType: { }
                        customerGroup:
                          id: string
                          name: string
                      organisationBankAccountId: string
                      companyBankAccountId: string
                      paymentReference: string
                      referenceDetails:
                        transactionReferenceType: { }
                        transactionReferenceId: string
                        parameters: { }
                      settlementDetails:
                        settledTransactionsWithAmounts:
                          - transactionId: string
                            settledAmount: 0
                            transactionReferenceType: { }
                            transactionReferenceId: string
                            transactionReferenceDisplayName: string
                            transactionDateTime: string
                      reversed: true
                      reversalReason: { }
                      reversalAdditionalInformation: string
                      automaticallyClosed: true
                      awaitingBankConfirmation: true
                      awaitingBankConfirmationTransactionId: string
                      awaitingBankConfirmationTransactionIdentification: string
                      awaitingBankConfirmationTransactionType: { }
                      propertyGroups:
                        - id: string
                          name: string
                      incomingBankingTransactionId: string
                      incomingMutationId: string
                      outgoingBankingTransactionId: string
                      outgoingMutationId: string
                  hasNextPage: true
                  nextPageToken: string
                  totalRecords: 0
                  sortableFields:
                    - string
                  aggregateDetails:
                    - code: string
                      translation: string
                      value: 0
                      valueDate: string
            text/json:
              schema:
                $ref: '#/components/schemas/TransactionDTOPagedResponseModelDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  results:
                    - id: string
                      entityType: { }
                      createdDateTime: string
                      discriminator: string
                      _etag: string
                      requireAttention: true
                      hasErrors: true
                      hasWarnings: true
                      isReadOnly: true
                      organisationId: string
                      transactionType: { }
                      transactionSubType: { }
                      transactionDateTime: string
                      transactionDueDateTime: string
                      transactionAmount: 0
                      transactionOpenAmount: 0
                      customerId: string
                      debtor:
                        customerId: string
                        displayName: string
                        customerAccountNumber: string
                        customerType: { }
                        customerGroup:
                          id: string
                          name: string
                      organisationBankAccountId: string
                      companyBankAccountId: string
                      paymentReference: string
                      referenceDetails:
                        transactionReferenceType: { }
                        transactionReferenceId: string
                        parameters: { }
                      settlementDetails:
                        settledTransactionsWithAmounts:
                          - transactionId: string
                            settledAmount: 0
                            transactionReferenceType: { }
                            transactionReferenceId: string
                            transactionReferenceDisplayName: string
                            transactionDateTime: string
                      reversed: true
                      reversalReason: { }
                      reversalAdditionalInformation: string
                      automaticallyClosed: true
                      awaitingBankConfirmation: true
                      awaitingBankConfirmationTransactionId: string
                      awaitingBankConfirmationTransactionIdentification: string
                      awaitingBankConfirmationTransactionType: { }
                      propertyGroups:
                        - id: string
                          name: string
                      incomingBankingTransactionId: string
                      incomingMutationId: string
                      outgoingBankingTransactionId: string
                      outgoingMutationId: string
                  hasNextPage: true
                  nextPageToken: string
                  totalRecords: 0
                  sortableFields:
                    - string
                  aggregateDetails:
                    - code: string
                      translation: string
                      value: 0
                      valueDate: string
  /Transactions/overviewcount:
    get:
      tags:
        - Transactions
      summary: Gets the overview count of transactions.
      description: Gets the overview count of transactions.
      operationId: get-transactions-overviewcount
      parameters:
        - name: Customeruuid
          in: query
          schema:
            type: string
        - name: ReferenceDate
          in: query
          description: Format - date-time (as date-time in RFC3339).
          schema:
            type: string
            format: date-time
            nullable: true
        - name: PeriodStartDate
          in: query
          description: Format - date-time (as date-time in RFC3339).
          schema:
            type: string
            format: date-time
            nullable: true
        - name: PeriodEndDate
          in: query
          description: Format - date-time (as date-time in RFC3339).
          schema:
            type: string
            format: date-time
            nullable: true
        - name: CreatedStartDate
          in: query
          description: Format - date-time (as date-time in RFC3339).
          schema:
            type: string
            format: date-time
            nullable: true
        - name: CreatedEndDate
          in: query
          description: Format - date-time (as date-time in RFC3339).
          schema:
            type: string
            format: date-time
            nullable: true
        - name: HideCredits
          in: query
          schema:
            type: boolean
        - name: OnlyOverdue
          in: query
          schema:
            type: boolean
        - name: OnlyOpen
          in: query
          schema:
            type: boolean
        - name: PropertyGroupId
          in: query
          schema:
            type: string
        - name: CompanyBankAccountId
          in: query
          schema:
            type: string
        - name: AmountSign
          in: query
          schema:
            type: string
        - name: OnlyCount
          in: query
          schema:
            type: boolean
        - name: FlexSearch
          in: query
          schema:
            type: string
        - name: IncludeOnlyIds
          in: query
          schema:
            type: array
            items:
              type: string
        - name: ExcludeIds
          in: query
          schema:
            type: array
            items:
              type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/TransactionOverviewCountDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionOverviewCountDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  all: 0
                  toPay: 0
                  toRefund: 0
                  onlyOpen: 0
                  onlyClosed: 0
            text/json:
              schema:
                $ref: '#/components/schemas/TransactionOverviewCountDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  all: 0
                  toPay: 0
                  toRefund: 0
                  onlyOpen: 0
                  onlyClosed: 0
  '/Transactions/c/{customeruuid}':
    get:
      tags:
        - Transactions
      summary: Gets all transactions for a specific customer.
      description: Gets all transactions for a specific customer.
      operationId: get-transactions-c-customeruuid
      parameters:
        - name: customeruuid
          in: path
          description: The customer UUID.
          required: true
          schema:
            type: string
        - name: Name
          in: query
          schema:
            type: string
        - name: Id
          in: query
          description: Format - int32.
          schema:
            type: integer
            format: int32
        - name: flexSearch
          in: query
          description: The flex search parameter.
          schema:
            type: string
        - name: orderBy
          in: query
          description: The order by parameter.
          schema:
            type: string
        - name: continuationToken
          in: header
          description: The continuation token.
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/TransactionDTOPagedResponseModelDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionDTOPagedResponseModelDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  results:
                    - id: string
                      entityType: { }
                      createdDateTime: string
                      discriminator: string
                      _etag: string
                      requireAttention: true
                      hasErrors: true
                      hasWarnings: true
                      isReadOnly: true
                      organisationId: string
                      transactionType: { }
                      transactionSubType: { }
                      transactionDateTime: string
                      transactionDueDateTime: string
                      transactionAmount: 0
                      transactionOpenAmount: 0
                      customerId: string
                      debtor:
                        customerId: string
                        displayName: string
                        customerAccountNumber: string
                        customerType: { }
                        customerGroup:
                          id: string
                          name: string
                      organisationBankAccountId: string
                      companyBankAccountId: string
                      paymentReference: string
                      referenceDetails:
                        transactionReferenceType: { }
                        transactionReferenceId: string
                        parameters: { }
                      settlementDetails:
                        settledTransactionsWithAmounts:
                          - transactionId: string
                            settledAmount: 0
                            transactionReferenceType: { }
                            transactionReferenceId: string
                            transactionReferenceDisplayName: string
                            transactionDateTime: string
                      reversed: true
                      reversalReason: { }
                      reversalAdditionalInformation: string
                      automaticallyClosed: true
                      awaitingBankConfirmation: true
                      awaitingBankConfirmationTransactionId: string
                      awaitingBankConfirmationTransactionIdentification: string
                      awaitingBankConfirmationTransactionType: { }
                      propertyGroups:
                        - id: string
                          name: string
                      incomingBankingTransactionId: string
                      incomingMutationId: string
                      outgoingBankingTransactionId: string
                      outgoingMutationId: string
                  hasNextPage: true
                  nextPageToken: string
                  totalRecords: 0
                  sortableFields:
                    - string
                  aggregateDetails:
                    - code: string
                      translation: string
                      value: 0
                      valueDate: string
            text/json:
              schema:
                $ref: '#/components/schemas/TransactionDTOPagedResponseModelDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  results:
                    - id: string
                      entityType: { }
                      createdDateTime: string
                      discriminator: string
                      _etag: string
                      requireAttention: true
                      hasErrors: true
                      hasWarnings: true
                      isReadOnly: true
                      organisationId: string
                      transactionType: { }
                      transactionSubType: { }
                      transactionDateTime: string
                      transactionDueDateTime: string
                      transactionAmount: 0
                      transactionOpenAmount: 0
                      customerId: string
                      debtor:
                        customerId: string
                        displayName: string
                        customerAccountNumber: string
                        customerType: { }
                        customerGroup:
                          id: string
                          name: string
                      organisationBankAccountId: string
                      companyBankAccountId: string
                      paymentReference: string
                      referenceDetails:
                        transactionReferenceType: { }
                        transactionReferenceId: string
                        parameters: { }
                      settlementDetails:
                        settledTransactionsWithAmounts:
                          - transactionId: string
                            settledAmount: 0
                            transactionReferenceType: { }
                            transactionReferenceId: string
                            transactionReferenceDisplayName: string
                            transactionDateTime: string
                      reversed: true
                      reversalReason: { }
                      reversalAdditionalInformation: string
                      automaticallyClosed: true
                      awaitingBankConfirmation: true
                      awaitingBankConfirmationTransactionId: string
                      awaitingBankConfirmationTransactionIdentification: string
                      awaitingBankConfirmationTransactionType: { }
                      propertyGroups:
                        - id: string
                          name: string
                      incomingBankingTransactionId: string
                      incomingMutationId: string
                      outgoingBankingTransactionId: string
                      outgoingMutationId: string
                  hasNextPage: true
                  nextPageToken: string
                  totalRecords: 0
                  sortableFields:
                    - string
                  aggregateDetails:
                    - code: string
                      translation: string
                      value: 0
                      valueDate: string
  '/Transactions/c/{customeruuid}/runsettlement':
    post:
      tags:
        - Transactions
      summary: Runs settlement for a specific customer.
      description: Runs settlement for a specific customer.
      operationId: post-transactions-c-customeruuid-runsettlement
      parameters:
        - name: customeruuid
          in: path
          description: The customer UUID.
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/TransactionDTOListApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionDTOListApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  - id: string
                    entityType: { }
                    createdDateTime: string
                    discriminator: string
                    _etag: string
                    requireAttention: true
                    hasErrors: true
                    hasWarnings: true
                    isReadOnly: true
                    organisationId: string
                    transactionType: { }
                    transactionSubType: { }
                    transactionDateTime: string
                    transactionDueDateTime: string
                    transactionAmount: 0
                    transactionOpenAmount: 0
                    customerId: string
                    debtor:
                      customerId: string
                      displayName: string
                      customerAccountNumber: string
                      customerType: { }
                      customerGroup:
                        id: string
                        name: string
                    organisationBankAccountId: string
                    companyBankAccountId: string
                    paymentReference: string
                    referenceDetails:
                      transactionReferenceType: { }
                      transactionReferenceId: string
                      parameters: { }
                    settlementDetails:
                      settledTransactionsWithAmounts:
                        - transactionId: string
                          settledAmount: 0
                          transactionReferenceType: { }
                          transactionReferenceId: string
                          transactionReferenceDisplayName: string
                          transactionDateTime: string
                    reversed: true
                    reversalReason: { }
                    reversalAdditionalInformation: string
                    automaticallyClosed: true
                    awaitingBankConfirmation: true
                    awaitingBankConfirmationTransactionId: string
                    awaitingBankConfirmationTransactionIdentification: string
                    awaitingBankConfirmationTransactionType: { }
                    propertyGroups:
                      - id: string
                        name: string
                    incomingBankingTransactionId: string
                    incomingMutationId: string
                    outgoingBankingTransactionId: string
                    outgoingMutationId: string
            text/json:
              schema:
                $ref: '#/components/schemas/TransactionDTOListApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  - id: string
                    entityType: { }
                    createdDateTime: string
                    discriminator: string
                    _etag: string
                    requireAttention: true
                    hasErrors: true
                    hasWarnings: true
                    isReadOnly: true
                    organisationId: string
                    transactionType: { }
                    transactionSubType: { }
                    transactionDateTime: string
                    transactionDueDateTime: string
                    transactionAmount: 0
                    transactionOpenAmount: 0
                    customerId: string
                    debtor:
                      customerId: string
                      displayName: string
                      customerAccountNumber: string
                      customerType: { }
                      customerGroup:
                        id: string
                        name: string
                    organisationBankAccountId: string
                    companyBankAccountId: string
                    paymentReference: string
                    referenceDetails:
                      transactionReferenceType: { }
                      transactionReferenceId: string
                      parameters: { }
                    settlementDetails:
                      settledTransactionsWithAmounts:
                        - transactionId: string
                          settledAmount: 0
                          transactionReferenceType: { }
                          transactionReferenceId: string
                          transactionReferenceDisplayName: string
                          transactionDateTime: string
                    reversed: true
                    reversalReason: { }
                    reversalAdditionalInformation: string
                    automaticallyClosed: true
                    awaitingBankConfirmation: true
                    awaitingBankConfirmationTransactionId: string
                    awaitingBankConfirmationTransactionIdentification: string
                    awaitingBankConfirmationTransactionType: { }
                    propertyGroups:
                      - id: string
                        name: string
                    incomingBankingTransactionId: string
                    incomingMutationId: string
                    outgoingBankingTransactionId: string
                    outgoingMutationId: string
  '/Transactions/c/{customeruuid}/latest':
    get:
      tags:
        - Transactions
      summary: Gets the latest transactions for a specific customer.
      description: Gets the latest transactions for a specific customer.
      operationId: get-transactions-c-customeruuid-latest
      parameters:
        - name: customeruuid
          in: path
          description: The customer UUID.
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/LatestCustomerTransactionsResponseDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/LatestCustomerTransactionsResponseDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  latestOpenTransactions:
                    - id: string
                      entityType: { }
                      createdDateTime: string
                      discriminator: string
                      _etag: string
                      requireAttention: true
                      hasErrors: true
                      hasWarnings: true
                      isReadOnly: true
                      organisationId: string
                      transactionType: { }
                      transactionSubType: { }
                      transactionDateTime: string
                      transactionDueDateTime: string
                      transactionAmount: 0
                      transactionOpenAmount: 0
                      customerId: string
                      debtor:
                        customerId: string
                        displayName: string
                        customerAccountNumber: string
                        customerType: { }
                        customerGroup:
                          id: string
                          name: string
                      organisationBankAccountId: string
                      companyBankAccountId: string
                      paymentReference: string
                      referenceDetails:
                        transactionReferenceType: { }
                        transactionReferenceId: string
                        parameters: { }
                      settlementDetails:
                        settledTransactionsWithAmounts:
                          - transactionId: string
                            settledAmount: 0
                            transactionReferenceType: { }
                            transactionReferenceId: string
                            transactionReferenceDisplayName: string
                            transactionDateTime: string
                      reversed: true
                      reversalReason: { }
                      reversalAdditionalInformation: string
                      automaticallyClosed: true
                      awaitingBankConfirmation: true
                      awaitingBankConfirmationTransactionId: string
                      awaitingBankConfirmationTransactionIdentification: string
                      awaitingBankConfirmationTransactionType: { }
                      propertyGroups:
                        - id: string
                          name: string
                      incomingBankingTransactionId: string
                      incomingMutationId: string
                      outgoingBankingTransactionId: string
                      outgoingMutationId: string
                  latestClosedTransactions:
                    - id: string
                      entityType: { }
                      createdDateTime: string
                      discriminator: string
                      _etag: string
                      requireAttention: true
                      hasErrors: true
                      hasWarnings: true
                      isReadOnly: true
                      organisationId: string
                      transactionType: { }
                      transactionSubType: { }
                      transactionDateTime: string
                      transactionDueDateTime: string
                      transactionAmount: 0
                      transactionOpenAmount: 0
                      customerId: string
                      debtor:
                        customerId: string
                        displayName: string
                        customerAccountNumber: string
                        customerType: { }
                        customerGroup:
                          id: string
                          name: string
                      organisationBankAccountId: string
                      companyBankAccountId: string
                      paymentReference: string
                      referenceDetails:
                        transactionReferenceType: { }
                        transactionReferenceId: string
                        parameters: { }
                      settlementDetails:
                        settledTransactionsWithAmounts:
                          - transactionId: string
                            settledAmount: 0
                            transactionReferenceType: { }
                            transactionReferenceId: string
                            transactionReferenceDisplayName: string
                            transactionDateTime: string
                      reversed: true
                      reversalReason: { }
                      reversalAdditionalInformation: string
                      automaticallyClosed: true
                      awaitingBankConfirmation: true
                      awaitingBankConfirmationTransactionId: string
                      awaitingBankConfirmationTransactionIdentification: string
                      awaitingBankConfirmationTransactionType: { }
                      propertyGroups:
                        - id: string
                          name: string
                      incomingBankingTransactionId: string
                      incomingMutationId: string
                      outgoingBankingTransactionId: string
                      outgoingMutationId: string
                  hasMoreOpenTransactions: true
                  hasMoreClosedTransactions: true
                  cashPosition: 0
                  cashPositionDebit: 0
                  cashPositionCredit: 0
            text/json:
              schema:
                $ref: '#/components/schemas/LatestCustomerTransactionsResponseDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  latestOpenTransactions:
                    - id: string
                      entityType: { }
                      createdDateTime: string
                      discriminator: string
                      _etag: string
                      requireAttention: true
                      hasErrors: true
                      hasWarnings: true
                      isReadOnly: true
                      organisationId: string
                      transactionType: { }
                      transactionSubType: { }
                      transactionDateTime: string
                      transactionDueDateTime: string
                      transactionAmount: 0
                      transactionOpenAmount: 0
                      customerId: string
                      debtor:
                        customerId: string
                        displayName: string
                        customerAccountNumber: string
                        customerType: { }
                        customerGroup:
                          id: string
                          name: string
                      organisationBankAccountId: string
                      companyBankAccountId: string
                      paymentReference: string
                      referenceDetails:
                        transactionReferenceType: { }
                        transactionReferenceId: string
                        parameters: { }
                      settlementDetails:
                        settledTransactionsWithAmounts:
                          - transactionId: string
                            settledAmount: 0
                            transactionReferenceType: { }
                            transactionReferenceId: string
                            transactionReferenceDisplayName: string
                            transactionDateTime: string
                      reversed: true
                      reversalReason: { }
                      reversalAdditionalInformation: string
                      automaticallyClosed: true
                      awaitingBankConfirmation: true
                      awaitingBankConfirmationTransactionId: string
                      awaitingBankConfirmationTransactionIdentification: string
                      awaitingBankConfirmationTransactionType: { }
                      propertyGroups:
                        - id: string
                          name: string
                      incomingBankingTransactionId: string
                      incomingMutationId: string
                      outgoingBankingTransactionId: string
                      outgoingMutationId: string
                  latestClosedTransactions:
                    - id: string
                      entityType: { }
                      createdDateTime: string
                      discriminator: string
                      _etag: string
                      requireAttention: true
                      hasErrors: true
                      hasWarnings: true
                      isReadOnly: true
                      organisationId: string
                      transactionType: { }
                      transactionSubType: { }
                      transactionDateTime: string
                      transactionDueDateTime: string
                      transactionAmount: 0
                      transactionOpenAmount: 0
                      customerId: string
                      debtor:
                        customerId: string
                        displayName: string
                        customerAccountNumber: string
                        customerType: { }
                        customerGroup:
                          id: string
                          name: string
                      organisationBankAccountId: string
                      companyBankAccountId: string
                      paymentReference: string
                      referenceDetails:
                        transactionReferenceType: { }
                        transactionReferenceId: string
                        parameters: { }
                      settlementDetails:
                        settledTransactionsWithAmounts:
                          - transactionId: string
                            settledAmount: 0
                            transactionReferenceType: { }
                            transactionReferenceId: string
                            transactionReferenceDisplayName: string
                            transactionDateTime: string
                      reversed: true
                      reversalReason: { }
                      reversalAdditionalInformation: string
                      automaticallyClosed: true
                      awaitingBankConfirmation: true
                      awaitingBankConfirmationTransactionId: string
                      awaitingBankConfirmationTransactionIdentification: string
                      awaitingBankConfirmationTransactionType: { }
                      propertyGroups:
                        - id: string
                          name: string
                      incomingBankingTransactionId: string
                      incomingMutationId: string
                      outgoingBankingTransactionId: string
                      outgoingMutationId: string
                  hasMoreOpenTransactions: true
                  hasMoreClosedTransactions: true
                  cashPosition: 0
                  cashPositionDebit: 0
                  cashPositionCredit: 0
  '/Transactions/outgoingMutation/{outgoingMutationId}':
    get:
      tags:
        - Transactions
      summary: Gets all transactions for a specific outgoing mutation.
      description: Gets all transactions for a specific outgoing mutation.
      operationId: get-transactions-outgoingmutation-outgoingmutationid
      parameters:
        - name: outgoingMutationId
          in: path
          description: The outgoing mutation ID.
          required: true
          schema:
            type: string
        - name: flexSearch
          in: query
          description: The flex search parameter.
          schema:
            type: string
        - name: continuationToken
          in: header
          description: The continuation token.
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/TransactionDTOPagedResponseModelDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionDTOPagedResponseModelDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  results:
                    - id: string
                      entityType: { }
                      createdDateTime: string
                      discriminator: string
                      _etag: string
                      requireAttention: true
                      hasErrors: true
                      hasWarnings: true
                      isReadOnly: true
                      organisationId: string
                      transactionType: { }
                      transactionSubType: { }
                      transactionDateTime: string
                      transactionDueDateTime: string
                      transactionAmount: 0
                      transactionOpenAmount: 0
                      customerId: string
                      debtor:
                        customerId: string
                        displayName: string
                        customerAccountNumber: string
                        customerType: { }
                        customerGroup:
                          id: string
                          name: string
                      organisationBankAccountId: string
                      companyBankAccountId: string
                      paymentReference: string
                      referenceDetails:
                        transactionReferenceType: { }
                        transactionReferenceId: string
                        parameters: { }
                      settlementDetails:
                        settledTransactionsWithAmounts:
                          - transactionId: string
                            settledAmount: 0
                            transactionReferenceType: { }
                            transactionReferenceId: string
                            transactionReferenceDisplayName: string
                            transactionDateTime: string
                      reversed: true
                      reversalReason: { }
                      reversalAdditionalInformation: string
                      automaticallyClosed: true
                      awaitingBankConfirmation: true
                      awaitingBankConfirmationTransactionId: string
                      awaitingBankConfirmationTransactionIdentification: string
                      awaitingBankConfirmationTransactionType: { }
                      propertyGroups:
                        - id: string
                          name: string
                      incomingBankingTransactionId: string
                      incomingMutationId: string
                      outgoingBankingTransactionId: string
                      outgoingMutationId: string
                  hasNextPage: true
                  nextPageToken: string
                  totalRecords: 0
                  sortableFields:
                    - string
                  aggregateDetails:
                    - code: string
                      translation: string
                      value: 0
                      valueDate: string
            text/json:
              schema:
                $ref: '#/components/schemas/TransactionDTOPagedResponseModelDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  results:
                    - id: string
                      entityType: { }
                      createdDateTime: string
                      discriminator: string
                      _etag: string
                      requireAttention: true
                      hasErrors: true
                      hasWarnings: true
                      isReadOnly: true
                      organisationId: string
                      transactionType: { }
                      transactionSubType: { }
                      transactionDateTime: string
                      transactionDueDateTime: string
                      transactionAmount: 0
                      transactionOpenAmount: 0
                      customerId: string
                      debtor:
                        customerId: string
                        displayName: string
                        customerAccountNumber: string
                        customerType: { }
                        customerGroup:
                          id: string
                          name: string
                      organisationBankAccountId: string
                      companyBankAccountId: string
                      paymentReference: string
                      referenceDetails:
                        transactionReferenceType: { }
                        transactionReferenceId: string
                        parameters: { }
                      settlementDetails:
                        settledTransactionsWithAmounts:
                          - transactionId: string
                            settledAmount: 0
                            transactionReferenceType: { }
                            transactionReferenceId: string
                            transactionReferenceDisplayName: string
                            transactionDateTime: string
                      reversed: true
                      reversalReason: { }
                      reversalAdditionalInformation: string
                      automaticallyClosed: true
                      awaitingBankConfirmation: true
                      awaitingBankConfirmationTransactionId: string
                      awaitingBankConfirmationTransactionIdentification: string
                      awaitingBankConfirmationTransactionType: { }
                      propertyGroups:
                        - id: string
                          name: string
                      incomingBankingTransactionId: string
                      incomingMutationId: string
                      outgoingBankingTransactionId: string
                      outgoingMutationId: string
                  hasNextPage: true
                  nextPageToken: string
                  totalRecords: 0
                  sortableFields:
                    - string
                  aggregateDetails:
                    - code: string
                      translation: string
                      value: 0
                      valueDate: string
  '/Transactions/incomingMutation/{incomingMutationId}':
    get:
      tags:
        - Transactions
      summary: Gets all transactions for a specific incoming mutation.
      description: Gets all transactions for a specific incoming mutation.
      operationId: get-transactions-incomingmutation-incomingmutationid
      parameters:
        - name: incomingMutationId
          in: path
          description: The incoming mutation ID.
          required: true
          schema:
            type: string
        - name: flexSearch
          in: query
          description: The flex search parameter.
          schema:
            type: string
        - name: continuationToken
          in: header
          description: The continuation token.
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/TransactionDTOPagedResponseModelDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionDTOPagedResponseModelDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  results:
                    - id: string
                      entityType: { }
                      createdDateTime: string
                      discriminator: string
                      _etag: string
                      requireAttention: true
                      hasErrors: true
                      hasWarnings: true
                      isReadOnly: true
                      organisationId: string
                      transactionType: { }
                      transactionSubType: { }
                      transactionDateTime: string
                      transactionDueDateTime: string
                      transactionAmount: 0
                      transactionOpenAmount: 0
                      customerId: string
                      debtor:
                        customerId: string
                        displayName: string
                        customerAccountNumber: string
                        customerType: { }
                        customerGroup:
                          id: string
                          name: string
                      organisationBankAccountId: string
                      companyBankAccountId: string
                      paymentReference: string
                      referenceDetails:
                        transactionReferenceType: { }
                        transactionReferenceId: string
                        parameters: { }
                      settlementDetails:
                        settledTransactionsWithAmounts:
                          - transactionId: string
                            settledAmount: 0
                            transactionReferenceType: { }
                            transactionReferenceId: string
                            transactionReferenceDisplayName: string
                            transactionDateTime: string
                      reversed: true
                      reversalReason: { }
                      reversalAdditionalInformation: string
                      automaticallyClosed: true
                      awaitingBankConfirmation: true
                      awaitingBankConfirmationTransactionId: string
                      awaitingBankConfirmationTransactionIdentification: string
                      awaitingBankConfirmationTransactionType: { }
                      propertyGroups:
                        - id: string
                          name: string
                      incomingBankingTransactionId: string
                      incomingMutationId: string
                      outgoingBankingTransactionId: string
                      outgoingMutationId: string
                  hasNextPage: true
                  nextPageToken: string
                  totalRecords: 0
                  sortableFields:
                    - string
                  aggregateDetails:
                    - code: string
                      translation: string
                      value: 0
                      valueDate: string
            text/json:
              schema:
                $ref: '#/components/schemas/TransactionDTOPagedResponseModelDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  results:
                    - id: string
                      entityType: { }
                      createdDateTime: string
                      discriminator: string
                      _etag: string
                      requireAttention: true
                      hasErrors: true
                      hasWarnings: true
                      isReadOnly: true
                      organisationId: string
                      transactionType: { }
                      transactionSubType: { }
                      transactionDateTime: string
                      transactionDueDateTime: string
                      transactionAmount: 0
                      transactionOpenAmount: 0
                      customerId: string
                      debtor:
                        customerId: string
                        displayName: string
                        customerAccountNumber: string
                        customerType: { }
                        customerGroup:
                          id: string
                          name: string
                      organisationBankAccountId: string
                      companyBankAccountId: string
                      paymentReference: string
                      referenceDetails:
                        transactionReferenceType: { }
                        transactionReferenceId: string
                        parameters: { }
                      settlementDetails:
                        settledTransactionsWithAmounts:
                          - transactionId: string
                            settledAmount: 0
                            transactionReferenceType: { }
                            transactionReferenceId: string
                            transactionReferenceDisplayName: string
                            transactionDateTime: string
                      reversed: true
                      reversalReason: { }
                      reversalAdditionalInformation: string
                      automaticallyClosed: true
                      awaitingBankConfirmation: true
                      awaitingBankConfirmationTransactionId: string
                      awaitingBankConfirmationTransactionIdentification: string
                      awaitingBankConfirmationTransactionType: { }
                      propertyGroups:
                        - id: string
                          name: string
                      incomingBankingTransactionId: string
                      incomingMutationId: string
                      outgoingBankingTransactionId: string
                      outgoingMutationId: string
                  hasNextPage: true
                  nextPageToken: string
                  totalRecords: 0
                  sortableFields:
                    - string
                  aggregateDetails:
                    - code: string
                      translation: string
                      value: 0
                      valueDate: string
  '/Transactions/{transactionuuid}':
    get:
      tags:
        - Transactions
      summary: Gets a specific transaction by its UUID.
      description: Gets a specific transaction by its UUID.
      operationId: get-transactions-transactionuuid
      parameters:
        - name: transactionuuid
          in: path
          description: The transaction UUID.
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/TransactionDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  transactionType: { }
                  transactionSubType: { }
                  transactionDateTime: string
                  transactionDueDateTime: string
                  transactionAmount: 0
                  transactionOpenAmount: 0
                  customerId: string
                  debtor:
                    customerId: string
                    displayName: string
                    customerAccountNumber: string
                    customerType: { }
                    customerGroup:
                      id: string
                      name: string
                  organisationBankAccountId: string
                  companyBankAccountId: string
                  paymentReference: string
                  referenceDetails:
                    transactionReferenceType: { }
                    transactionReferenceId: string
                    parameters: { }
                  settlementDetails:
                    settledTransactionsWithAmounts:
                      - transactionId: string
                        settledAmount: 0
                        transactionReferenceType: { }
                        transactionReferenceId: string
                        transactionReferenceDisplayName: string
                        transactionDateTime: string
                  reversed: true
                  reversalReason: { }
                  reversalAdditionalInformation: string
                  automaticallyClosed: true
                  awaitingBankConfirmation: true
                  awaitingBankConfirmationTransactionId: string
                  awaitingBankConfirmationTransactionIdentification: string
                  awaitingBankConfirmationTransactionType: { }
                  propertyGroups:
                    - id: string
                      name: string
                  incomingBankingTransactionId: string
                  incomingMutationId: string
                  outgoingBankingTransactionId: string
                  outgoingMutationId: string
            text/json:
              schema:
                $ref: '#/components/schemas/TransactionDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  transactionType: { }
                  transactionSubType: { }
                  transactionDateTime: string
                  transactionDueDateTime: string
                  transactionAmount: 0
                  transactionOpenAmount: 0
                  customerId: string
                  debtor:
                    customerId: string
                    displayName: string
                    customerAccountNumber: string
                    customerType: { }
                    customerGroup:
                      id: string
                      name: string
                  organisationBankAccountId: string
                  companyBankAccountId: string
                  paymentReference: string
                  referenceDetails:
                    transactionReferenceType: { }
                    transactionReferenceId: string
                    parameters: { }
                  settlementDetails:
                    settledTransactionsWithAmounts:
                      - transactionId: string
                        settledAmount: 0
                        transactionReferenceType: { }
                        transactionReferenceId: string
                        transactionReferenceDisplayName: string
                        transactionDateTime: string
                  reversed: true
                  reversalReason: { }
                  reversalAdditionalInformation: string
                  automaticallyClosed: true
                  awaitingBankConfirmation: true
                  awaitingBankConfirmationTransactionId: string
                  awaitingBankConfirmationTransactionIdentification: string
                  awaitingBankConfirmationTransactionType: { }
                  propertyGroups:
                    - id: string
                      name: string
                  incomingBankingTransactionId: string
                  incomingMutationId: string
                  outgoingBankingTransactionId: string
                  outgoingMutationId: string
  '/Transactions/{transactionuuid}/settledwith':
    get:
      tags:
        - Transactions
      summary: Gets the transactions settled with a specific source transaction.
      description: Gets the transactions settled with a specific source transaction.
      operationId: get-transactions-transactionuuid-settledwith
      parameters:
        - name: transactionuuid
          in: path
          description: The source transaction UUID.
          required: true
          schema:
            type: string
        - name: flexSearch
          in: query
          description: The flex search parameter.
          schema:
            type: string
        - name: orderBy
          in: query
          description: The order by parameter.
          schema:
            type: string
        - name: continuationToken
          in: header
          description: The continuation token.
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/TransactionDTOPagedResponseModelDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionDTOPagedResponseModelDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  results:
                    - id: string
                      entityType: { }
                      createdDateTime: string
                      discriminator: string
                      _etag: string
                      requireAttention: true
                      hasErrors: true
                      hasWarnings: true
                      isReadOnly: true
                      organisationId: string
                      transactionType: { }
                      transactionSubType: { }
                      transactionDateTime: string
                      transactionDueDateTime: string
                      transactionAmount: 0
                      transactionOpenAmount: 0
                      customerId: string
                      debtor:
                        customerId: string
                        displayName: string
                        customerAccountNumber: string
                        customerType: { }
                        customerGroup:
                          id: string
                          name: string
                      organisationBankAccountId: string
                      companyBankAccountId: string
                      paymentReference: string
                      referenceDetails:
                        transactionReferenceType: { }
                        transactionReferenceId: string
                        parameters: { }
                      settlementDetails:
                        settledTransactionsWithAmounts:
                          - transactionId: string
                            settledAmount: 0
                            transactionReferenceType: { }
                            transactionReferenceId: string
                            transactionReferenceDisplayName: string
                            transactionDateTime: string
                      reversed: true
                      reversalReason: { }
                      reversalAdditionalInformation: string
                      automaticallyClosed: true
                      awaitingBankConfirmation: true
                      awaitingBankConfirmationTransactionId: string
                      awaitingBankConfirmationTransactionIdentification: string
                      awaitingBankConfirmationTransactionType: { }
                      propertyGroups:
                        - id: string
                          name: string
                      incomingBankingTransactionId: string
                      incomingMutationId: string
                      outgoingBankingTransactionId: string
                      outgoingMutationId: string
                  hasNextPage: true
                  nextPageToken: string
                  totalRecords: 0
                  sortableFields:
                    - string
                  aggregateDetails:
                    - code: string
                      translation: string
                      value: 0
                      valueDate: string
            text/json:
              schema:
                $ref: '#/components/schemas/TransactionDTOPagedResponseModelDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  results:
                    - id: string
                      entityType: { }
                      createdDateTime: string
                      discriminator: string
                      _etag: string
                      requireAttention: true
                      hasErrors: true
                      hasWarnings: true
                      isReadOnly: true
                      organisationId: string
                      transactionType: { }
                      transactionSubType: { }
                      transactionDateTime: string
                      transactionDueDateTime: string
                      transactionAmount: 0
                      transactionOpenAmount: 0
                      customerId: string
                      debtor:
                        customerId: string
                        displayName: string
                        customerAccountNumber: string
                        customerType: { }
                        customerGroup:
                          id: string
                          name: string
                      organisationBankAccountId: string
                      companyBankAccountId: string
                      paymentReference: string
                      referenceDetails:
                        transactionReferenceType: { }
                        transactionReferenceId: string
                        parameters: { }
                      settlementDetails:
                        settledTransactionsWithAmounts:
                          - transactionId: string
                            settledAmount: 0
                            transactionReferenceType: { }
                            transactionReferenceId: string
                            transactionReferenceDisplayName: string
                            transactionDateTime: string
                      reversed: true
                      reversalReason: { }
                      reversalAdditionalInformation: string
                      automaticallyClosed: true
                      awaitingBankConfirmation: true
                      awaitingBankConfirmationTransactionId: string
                      awaitingBankConfirmationTransactionIdentification: string
                      awaitingBankConfirmationTransactionType: { }
                      propertyGroups:
                        - id: string
                          name: string
                      incomingBankingTransactionId: string
                      incomingMutationId: string
                      outgoingBankingTransactionId: string
                      outgoingMutationId: string
                  hasNextPage: true
                  nextPageToken: string
                  totalRecords: 0
                  sortableFields:
                    - string
                  aggregateDetails:
                    - code: string
                      translation: string
                      value: 0
                      valueDate: string
  '/Transactions/{transactionuuid}/settle':
    post:
      tags:
        - Transactions
      summary: Settles transactions for a specific transaction UUID.
      description: Settles transactions for a specific transaction UUID.
      operationId: post-transactions-transactionuuid-settle
      parameters:
        - name: transactionuuid
          in: path
          description: The transaction UUID.
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: The settle transactions request.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/SettleTransactionsRequest'
              description: "Represents a request to settle multiple transactions.\r\nThis DTO is used to mark multiple transactions as settled, indicating they have been processed and completed."
            example:
              transactionIds:
                - string
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/SettleTransactionsRequest'
              description: "Represents a request to settle multiple transactions.\r\nThis DTO is used to mark multiple transactions as settled, indicating they have been processed and completed."
            example:
              transactionIds:
                - string
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/SettleTransactionsRequest'
              description: "Represents a request to settle multiple transactions.\r\nThis DTO is used to mark multiple transactions as settled, indicating they have been processed and completed."
            example:
              transactionIds:
                - string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/TransactionDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  transactionType: { }
                  transactionSubType: { }
                  transactionDateTime: string
                  transactionDueDateTime: string
                  transactionAmount: 0
                  transactionOpenAmount: 0
                  customerId: string
                  debtor:
                    customerId: string
                    displayName: string
                    customerAccountNumber: string
                    customerType: { }
                    customerGroup:
                      id: string
                      name: string
                  organisationBankAccountId: string
                  companyBankAccountId: string
                  paymentReference: string
                  referenceDetails:
                    transactionReferenceType: { }
                    transactionReferenceId: string
                    parameters: { }
                  settlementDetails:
                    settledTransactionsWithAmounts:
                      - transactionId: string
                        settledAmount: 0
                        transactionReferenceType: { }
                        transactionReferenceId: string
                        transactionReferenceDisplayName: string
                        transactionDateTime: string
                  reversed: true
                  reversalReason: { }
                  reversalAdditionalInformation: string
                  automaticallyClosed: true
                  awaitingBankConfirmation: true
                  awaitingBankConfirmationTransactionId: string
                  awaitingBankConfirmationTransactionIdentification: string
                  awaitingBankConfirmationTransactionType: { }
                  propertyGroups:
                    - id: string
                      name: string
                  incomingBankingTransactionId: string
                  incomingMutationId: string
                  outgoingBankingTransactionId: string
                  outgoingMutationId: string
            text/json:
              schema:
                $ref: '#/components/schemas/TransactionDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  transactionType: { }
                  transactionSubType: { }
                  transactionDateTime: string
                  transactionDueDateTime: string
                  transactionAmount: 0
                  transactionOpenAmount: 0
                  customerId: string
                  debtor:
                    customerId: string
                    displayName: string
                    customerAccountNumber: string
                    customerType: { }
                    customerGroup:
                      id: string
                      name: string
                  organisationBankAccountId: string
                  companyBankAccountId: string
                  paymentReference: string
                  referenceDetails:
                    transactionReferenceType: { }
                    transactionReferenceId: string
                    parameters: { }
                  settlementDetails:
                    settledTransactionsWithAmounts:
                      - transactionId: string
                        settledAmount: 0
                        transactionReferenceType: { }
                        transactionReferenceId: string
                        transactionReferenceDisplayName: string
                        transactionDateTime: string
                  reversed: true
                  reversalReason: { }
                  reversalAdditionalInformation: string
                  automaticallyClosed: true
                  awaitingBankConfirmation: true
                  awaitingBankConfirmationTransactionId: string
                  awaitingBankConfirmationTransactionIdentification: string
                  awaitingBankConfirmationTransactionType: { }
                  propertyGroups:
                    - id: string
                      name: string
                  incomingBankingTransactionId: string
                  incomingMutationId: string
                  outgoingBankingTransactionId: string
                  outgoingMutationId: string
  '/Transactions/{transactionuuid}/settle/{settlementTransactionId}':
    post:
      tags:
        - Transactions
      summary: Settles a single transaction for a specific transaction UUID.
      description: Settles a single transaction for a specific transaction UUID.
      operationId: post-transactions-transactionuuid-settle-settlementtransactionid
      parameters:
        - name: transactionuuid
          in: path
          description: The transaction UUID.
          required: true
          schema:
            type: string
        - name: settlementTransactionId
          in: path
          description: The settlement transaction ID.
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/TransactionDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  transactionType: { }
                  transactionSubType: { }
                  transactionDateTime: string
                  transactionDueDateTime: string
                  transactionAmount: 0
                  transactionOpenAmount: 0
                  customerId: string
                  debtor:
                    customerId: string
                    displayName: string
                    customerAccountNumber: string
                    customerType: { }
                    customerGroup:
                      id: string
                      name: string
                  organisationBankAccountId: string
                  companyBankAccountId: string
                  paymentReference: string
                  referenceDetails:
                    transactionReferenceType: { }
                    transactionReferenceId: string
                    parameters: { }
                  settlementDetails:
                    settledTransactionsWithAmounts:
                      - transactionId: string
                        settledAmount: 0
                        transactionReferenceType: { }
                        transactionReferenceId: string
                        transactionReferenceDisplayName: string
                        transactionDateTime: string
                  reversed: true
                  reversalReason: { }
                  reversalAdditionalInformation: string
                  automaticallyClosed: true
                  awaitingBankConfirmation: true
                  awaitingBankConfirmationTransactionId: string
                  awaitingBankConfirmationTransactionIdentification: string
                  awaitingBankConfirmationTransactionType: { }
                  propertyGroups:
                    - id: string
                      name: string
                  incomingBankingTransactionId: string
                  incomingMutationId: string
                  outgoingBankingTransactionId: string
                  outgoingMutationId: string
            text/json:
              schema:
                $ref: '#/components/schemas/TransactionDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  transactionType: { }
                  transactionSubType: { }
                  transactionDateTime: string
                  transactionDueDateTime: string
                  transactionAmount: 0
                  transactionOpenAmount: 0
                  customerId: string
                  debtor:
                    customerId: string
                    displayName: string
                    customerAccountNumber: string
                    customerType: { }
                    customerGroup:
                      id: string
                      name: string
                  organisationBankAccountId: string
                  companyBankAccountId: string
                  paymentReference: string
                  referenceDetails:
                    transactionReferenceType: { }
                    transactionReferenceId: string
                    parameters: { }
                  settlementDetails:
                    settledTransactionsWithAmounts:
                      - transactionId: string
                        settledAmount: 0
                        transactionReferenceType: { }
                        transactionReferenceId: string
                        transactionReferenceDisplayName: string
                        transactionDateTime: string
                  reversed: true
                  reversalReason: { }
                  reversalAdditionalInformation: string
                  automaticallyClosed: true
                  awaitingBankConfirmation: true
                  awaitingBankConfirmationTransactionId: string
                  awaitingBankConfirmationTransactionIdentification: string
                  awaitingBankConfirmationTransactionType: { }
                  propertyGroups:
                    - id: string
                      name: string
                  incomingBankingTransactionId: string
                  incomingMutationId: string
                  outgoingBankingTransactionId: string
                  outgoingMutationId: string
  '/Transactions/{transactionuuid}/undo':
    post:
      tags:
        - Transactions
      summary: Undoes all settlements of a specific transaction.
      description: Undoes all settlements of a specific transaction.
      operationId: post-transactions-transactionuuid-undo
      parameters:
        - name: transactionuuid
          in: path
          description: The transaction UUID.
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/TransactionDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  transactionType: { }
                  transactionSubType: { }
                  transactionDateTime: string
                  transactionDueDateTime: string
                  transactionAmount: 0
                  transactionOpenAmount: 0
                  customerId: string
                  debtor:
                    customerId: string
                    displayName: string
                    customerAccountNumber: string
                    customerType: { }
                    customerGroup:
                      id: string
                      name: string
                  organisationBankAccountId: string
                  companyBankAccountId: string
                  paymentReference: string
                  referenceDetails:
                    transactionReferenceType: { }
                    transactionReferenceId: string
                    parameters: { }
                  settlementDetails:
                    settledTransactionsWithAmounts:
                      - transactionId: string
                        settledAmount: 0
                        transactionReferenceType: { }
                        transactionReferenceId: string
                        transactionReferenceDisplayName: string
                        transactionDateTime: string
                  reversed: true
                  reversalReason: { }
                  reversalAdditionalInformation: string
                  automaticallyClosed: true
                  awaitingBankConfirmation: true
                  awaitingBankConfirmationTransactionId: string
                  awaitingBankConfirmationTransactionIdentification: string
                  awaitingBankConfirmationTransactionType: { }
                  propertyGroups:
                    - id: string
                      name: string
                  incomingBankingTransactionId: string
                  incomingMutationId: string
                  outgoingBankingTransactionId: string
                  outgoingMutationId: string
            text/json:
              schema:
                $ref: '#/components/schemas/TransactionDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  transactionType: { }
                  transactionSubType: { }
                  transactionDateTime: string
                  transactionDueDateTime: string
                  transactionAmount: 0
                  transactionOpenAmount: 0
                  customerId: string
                  debtor:
                    customerId: string
                    displayName: string
                    customerAccountNumber: string
                    customerType: { }
                    customerGroup:
                      id: string
                      name: string
                  organisationBankAccountId: string
                  companyBankAccountId: string
                  paymentReference: string
                  referenceDetails:
                    transactionReferenceType: { }
                    transactionReferenceId: string
                    parameters: { }
                  settlementDetails:
                    settledTransactionsWithAmounts:
                      - transactionId: string
                        settledAmount: 0
                        transactionReferenceType: { }
                        transactionReferenceId: string
                        transactionReferenceDisplayName: string
                        transactionDateTime: string
                  reversed: true
                  reversalReason: { }
                  reversalAdditionalInformation: string
                  automaticallyClosed: true
                  awaitingBankConfirmation: true
                  awaitingBankConfirmationTransactionId: string
                  awaitingBankConfirmationTransactionIdentification: string
                  awaitingBankConfirmationTransactionType: { }
                  propertyGroups:
                    - id: string
                      name: string
                  incomingBankingTransactionId: string
                  incomingMutationId: string
                  outgoingBankingTransactionId: string
                  outgoingMutationId: string
  '/Transactions/{transactionuuid}/undo/{settlementTransactionId}':
    post:
      tags:
        - Transactions
      summary: Undoes a single settlement of a specific transaction.
      description: Undoes a single settlement of a specific transaction.
      operationId: post-transactions-transactionuuid-undo-settlementtransactionid
      parameters:
        - name: transactionuuid
          in: path
          description: The transaction UUID.
          required: true
          schema:
            type: string
        - name: settlementTransactionId
          in: path
          description: The settlement transaction ID.
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/TransactionDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  transactionType: { }
                  transactionSubType: { }
                  transactionDateTime: string
                  transactionDueDateTime: string
                  transactionAmount: 0
                  transactionOpenAmount: 0
                  customerId: string
                  debtor:
                    customerId: string
                    displayName: string
                    customerAccountNumber: string
                    customerType: { }
                    customerGroup:
                      id: string
                      name: string
                  organisationBankAccountId: string
                  companyBankAccountId: string
                  paymentReference: string
                  referenceDetails:
                    transactionReferenceType: { }
                    transactionReferenceId: string
                    parameters: { }
                  settlementDetails:
                    settledTransactionsWithAmounts:
                      - transactionId: string
                        settledAmount: 0
                        transactionReferenceType: { }
                        transactionReferenceId: string
                        transactionReferenceDisplayName: string
                        transactionDateTime: string
                  reversed: true
                  reversalReason: { }
                  reversalAdditionalInformation: string
                  automaticallyClosed: true
                  awaitingBankConfirmation: true
                  awaitingBankConfirmationTransactionId: string
                  awaitingBankConfirmationTransactionIdentification: string
                  awaitingBankConfirmationTransactionType: { }
                  propertyGroups:
                    - id: string
                      name: string
                  incomingBankingTransactionId: string
                  incomingMutationId: string
                  outgoingBankingTransactionId: string
                  outgoingMutationId: string
            text/json:
              schema:
                $ref: '#/components/schemas/TransactionDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  transactionType: { }
                  transactionSubType: { }
                  transactionDateTime: string
                  transactionDueDateTime: string
                  transactionAmount: 0
                  transactionOpenAmount: 0
                  customerId: string
                  debtor:
                    customerId: string
                    displayName: string
                    customerAccountNumber: string
                    customerType: { }
                    customerGroup:
                      id: string
                      name: string
                  organisationBankAccountId: string
                  companyBankAccountId: string
                  paymentReference: string
                  referenceDetails:
                    transactionReferenceType: { }
                    transactionReferenceId: string
                    parameters: { }
                  settlementDetails:
                    settledTransactionsWithAmounts:
                      - transactionId: string
                        settledAmount: 0
                        transactionReferenceType: { }
                        transactionReferenceId: string
                        transactionReferenceDisplayName: string
                        transactionDateTime: string
                  reversed: true
                  reversalReason: { }
                  reversalAdditionalInformation: string
                  automaticallyClosed: true
                  awaitingBankConfirmation: true
                  awaitingBankConfirmationTransactionId: string
                  awaitingBankConfirmationTransactionIdentification: string
                  awaitingBankConfirmationTransactionType: { }
                  propertyGroups:
                    - id: string
                      name: string
                  incomingBankingTransactionId: string
                  incomingMutationId: string
                  outgoingBankingTransactionId: string
                  outgoingMutationId: string
  '/AnnualStatements/{annualStatementuuid}':
    get:
      tags:
        - AnnualStatements
      summary: Retrieves an annual statement by its UUID.
      description: Retrieves an annual statement by its UUID.
      operationId: get-annualstatements-annualstatementuuid
      parameters:
        - name: annualStatementuuid
          in: path
          description: The UUID of the annual statement.
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AnnualStatementDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/AnnualStatementDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  annualStatementNumber: string
                  year: 0
                  version: 0
                  startDateTime: string
                  endDateTime: string
                  status: { }
                  generationDate: string
                  sent: { }
                  failureReasonCode:
                    key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                  failureDetails: string
                  supportsExternalPrinting: true
                  attachmentId: string
                  debtor:
                    customerId: string
                    displayName: string
                    customerAccountNumber: string
                    customerType: { }
                    customerGroup:
                      id: string
                      name: string
                  propertyGroups:
                    - id: string
                      name: string
            text/json:
              schema:
                $ref: '#/components/schemas/AnnualStatementDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  annualStatementNumber: string
                  year: 0
                  version: 0
                  startDateTime: string
                  endDateTime: string
                  status: { }
                  generationDate: string
                  sent: { }
                  failureReasonCode:
                    key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                  failureDetails: string
                  supportsExternalPrinting: true
                  attachmentId: string
                  debtor:
                    customerId: string
                    displayName: string
                    customerAccountNumber: string
                    customerType: { }
                    customerGroup:
                      id: string
                      name: string
                  propertyGroups:
                    - id: string
                      name: string
components:
  schemas:
    AddCustomerBankAccountActiveMandateRequest:
      type: object
      properties:
        type:
          allOf:
            - $ref: '#/components/schemas/MandateType'
          description: "The type of mandate (e.g., CORE, B2B).\r\nCurrently only CORE mandates are supported."
          nullable: true
        signedDateTime:
          type: string
          description: The date and time when the mandate was signed by the customer.
          format: date-time
      additionalProperties: false
      description: "Represents the mandate information for a customer's bank account.\r\nThis DTO contains details about the mandate that authorizes direct debit transactions."
    AddCustomerBankAccountRequest:
      type: object
      properties:
        iban:
          type: string
          description: The International Bank Account Number (IBAN) of the bank account.
          nullable: true
        bic:
          type: string
          description: The Bank Identifier Code (BIC) of the bank.
          nullable: true
        isDefault:
          type: boolean
          description: Indicates whether this bank account should be set as the default account for the customer.
        activeMandate:
          allOf:
            - $ref: '#/components/schemas/AddCustomerBankAccountActiveMandateRequest'
          description: Information about the active mandate associated with this bank account.
          nullable: true
      additionalProperties: false
      description: "Represents a request to add a new bank account for a customer.\r\nThis DTO is used to register a new bank account with associated mandate information."
    AddEntryToOutgoingBankingTransactionRequest:
      type: object
      properties:
        invoiceId:
          type: string
          description: "The ID of the invoice to be included in the transaction.\r\nThis field is required if no manual entry details are provided."
          nullable: true
        amount:
          type: number
          description: "The amount for the manual entry.\r\nRequired when no invoice ID is provided."
          format: double
        paymentReference:
          type: string
          description: "The payment reference text for the manual entry.\r\nRequired when no invoice ID is provided."
          nullable: true
        iban:
          type: string
          description: "The IBAN (International Bank Account Number) for the manual entry.\r\nRequired when no invoice ID is provided."
          nullable: true
        customerId:
          type: string
          description: "The ID of the customer associated with the manual entry.\r\nRequired when no invoice ID is provided."
          nullable: true
        transactionId:
          type: string
          description: The ID of the transaction to add the entry to.
          nullable: true
      additionalProperties: false
      description: "Represents a request to add a new entry to an outgoing banking transaction.\r\nThis DTO supports two types of entries: invoice-based or manual entries with custom details."
    AddIncomingInvoiceComponentToBillingPeriodRequest:
      type: object
      properties:
        incomingInvoiceComponentId:
          type: string
          description: The ID of the incoming invoice component to be added.
          nullable: true
        value:
          type: number
          description: The value to be allocated for this component in the billing period.
          format: double
        incomingInvoiceId:
          type: string
          description: The ID of the incoming invoice associated with this component.
          nullable: true
      additionalProperties: false
      description: "Represents a request to add an incoming invoice component to a billing period.\r\nThis DTO is used to associate incoming invoice components with specific billing periods."
    AdvanceAmountChangedBy:
      enum:
        - systeminvoicecalculation
        - customer
        - customerservicerepresentative
      type: string
    AdvanceAmountLimitType:
      enum:
        - fixed
        - percentage
      type: string
    AdvanceCalculationDetailsDTO:
      type: object
      properties:
        newAdvanceAmountExclVAT:
          type: number
          description: New advance amount excluding VAT
          format: double
          nullable: true
        newAdvanceAmountInclVAT:
          type: number
          description: New advance amount including VAT
          format: double
          nullable: true
        oldAdvanceAmountInclVAT:
          type: number
          description: Old advance amount including VAT
          format: double
        nextInvoiceAmountInclVat:
          type: number
          description: Next invoice amount including VAT
          format: double
          nullable: true
        nextInvoiceAmountAccuracy:
          allOf:
            - $ref: '#/components/schemas/Level'
          description: Accuracy level of the next invoice amount
          nullable: true
        recalculationType:
          allOf:
            - $ref: '#/components/schemas/AdvanceRecalculationType'
          description: Type of advance recalculation
          nullable: true
        fallbackReason:
          allOf:
            - $ref: '#/components/schemas/AdvanceCalculationFallbackReason'
          description: Reason for fallback in advance calculation
          nullable: true
        changedByUserId:
          type: string
          description: Identifier of the user who made the changes
          nullable: true
      additionalProperties: false
      description: Represents details of advance payment calculations
    AdvanceCalculationFallbackReason:
      enum:
        - na
        - deviationtoolow
        - accuracytoolow
        - estimationfailed
        - estimationfailedanddeviationtoolow
        - manuallyoverridden
      type: string
    AdvanceDetailsDTO:
      type: object
      properties:
        advanceAmount:
          type: number
          description: The current advance payment amount.
          format: double
        originalAmount:
          type: number
          description: The original advance amount used to calculate min and max ranges.
          format: double
        changedBy:
          allOf:
            - $ref: '#/components/schemas/AdvanceAmountChangedBy'
          description: Identifies who has last changed the advance amount.
          nullable: true
        changedByUserId:
          type: string
          description: The unique identifier of the user who last changed the advance amount.
          nullable: true
        changedDate:
          type: string
          description: The date and time when the advance amount was last changed.
          format: date-time
        advanceAmountExclVAT:
          type: number
          description: The advance payment amount excluding VAT.
          format: double
        advanceFrequency:
          allOf:
            - $ref: '#/components/schemas/AdvanceFrequency'
          description: The frequency at which advance payments are collected.
          nullable: true
      additionalProperties: false
      description: "Represents details about advance payments for a billing relation.\r\nThis DTO contains information about advance amounts, frequencies, and change history."
    AdvanceFrequency:
      enum:
        - none
        - monthly
        - quarterly
        - halfyearly
      type: string
    AdvancePeriodDTO:
      type: object
      properties:
        startDateTime:
          type: string
          description: Start date and time of the advance period
          format: date-time
        endDateTime:
          type: string
          description: End date and time of the advance period
          format: date-time
        advanceAmountExclVAT:
          type: number
          description: Amount of the advance payment excluding VAT
          format: double
        invoiceId:
          type: string
          description: Unique identifier of the invoice
          nullable: true
        invoiceNum:
          type: string
          description: Invoice number
          nullable: true
        invoiceDate:
          type: string
          description: Date of the invoice
          format: date-time
        sentStatus:
          allOf:
            - $ref: '#/components/schemas/SentStatus'
          description: Current status of the invoice sending
          nullable: true
        paid:
          type: boolean
          description: Indicates if the advance has been paid
        automaticallyDeleted:
          type: boolean
          description: Indicates if the advance was automatically deleted
        manuallyDeleted:
          type: boolean
          description: Indicates if the advance was manually deleted
      additionalProperties: false
      description: Represents an advance payment period
    AdvanceRecalculationType:
      enum:
        - none
        - usingpreviousinvoice
        - usingestimatedinvoice
      type: string
    AggregateDetailsDTO:
      type: object
      properties:
        code:
          type: string
          nullable: true
        translation:
          type: string
          nullable: true
        value:
          type: number
          format: double
          nullable: true
        valueDate:
          type: string
          format: date-time
          nullable: true
      additionalProperties: false
    AggregationFrequency:
      enum:
        - none
        - daily
        - monthly
        - yearly
      type: string
    AggregationType:
      enum:
        - Max
        - Avg
        - Sum
        - Min
      type: string
    AnnualStatementDTO:
      type: object
      properties:
        id:
          type: string
          description: Gets or sets the unique identifier.
          nullable: true
        entityType:
          allOf:
            - $ref: '#/components/schemas/EntitySubjectType'
          description: Gets or sets the type of the entity.
          nullable: true
        createdDateTime:
          type: string
          description: Gets or sets the date and time when the entity was created.
          format: date-time
        discriminator:
          type: string
          description: Gets or sets the discriminator value.
          nullable: true
        _etag:
          type: string
          description: Gets or sets the ETag value.
          nullable: true
        requireAttention:
          type: boolean
          description: Gets a value indicating whether the entity requires attention.
          readOnly: true
        hasErrors:
          type: boolean
          description: Gets or sets a value indicating whether the entity has errors.
        hasWarnings:
          type: boolean
          description: Gets or sets a value indicating whether the entity has warnings.
        isReadOnly:
          type: boolean
          description: Gets or sets a value indicating whether the entity is read-only.
        organisationId:
          type: string
          description: Gets or sets the organization identifier.
          nullable: true
        annualStatementNumber:
          type: string
          description: The unique identifier number of the annual statement.
          nullable: true
        year:
          type: integer
          description: The year for which the annual statement is generated.
          format: int32
        version:
          type: integer
          description: The version number of the annual statement.
          format: int32
        startDateTime:
          type: string
          description: The start date and time of the period covered by the annual statement.
          format: date-time
        endDateTime:
          type: string
          description: The end date and time of the period covered by the annual statement.
          format: date-time
        status:
          allOf:
            - $ref: '#/components/schemas/AnnualStatementStatus'
          description: The current status of the annual statement.
          nullable: true
        generationDate:
          type: string
          description: The date and time when the annual statement was generated.
          format: date-time
        sent:
          allOf:
            - $ref: '#/components/schemas/SentStatus'
          description: The status indicating whether the annual statement has been sent.
          nullable: true
        failureReasonCode:
          allOf:
            - $ref: '#/components/schemas/LocalisedErrorDTO'
          description: The localized error code if the annual statement generation failed.
          nullable: true
        failureDetails:
          type: string
          description: Detailed information about any failure that occurred during generation.
          nullable: true
        supportsExternalPrinting:
          type: boolean
          description: Indicates whether the annual statement can be printed externally.
        attachmentId:
          type: string
          description: The unique identifier of the attached document.
          nullable: true
        debtor:
          allOf:
            - $ref: '#/components/schemas/DebtorDTO'
          description: Information about the debtor associated with the annual statement.
          nullable: true
        propertyGroups:
          type: array
          items:
            $ref: '#/components/schemas/PropertyGroupReferenceDTO'
          description: List of property groups associated with this annual statement.
          nullable: true
      additionalProperties: false
      description: "Represents an annual statement document that provides a yearly summary of billing information.\r\nThis DTO contains all the necessary information about the annual statement, including its status,\r\ngeneration details, and associated entities."
    AnnualStatementDTOApiResponseDTO:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/LocalisedErrorDTO'
          nullable: true
        success:
          type: boolean
        applicableEntitiesCount:
          type: integer
          format: int32
        requestedEntitiesCount:
          type: integer
          format: int32
        succeededEntitiesCount:
          type: integer
          format: int32
          readOnly: true
        isSynchronous:
          type: boolean
        data:
          allOf:
            - $ref: '#/components/schemas/AnnualStatementDTO'
          description: The updated entity in case of modifications or creation
          nullable: true
      additionalProperties: false
    AnnualStatementDTOPagedResponseModelDTO:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/AnnualStatementDTO'
          nullable: true
        hasNextPage:
          type: boolean
        nextPageToken:
          type: string
          nullable: true
        totalRecords:
          type: integer
          format: int32
        sortableFields:
          type: array
          items:
            type: string
          nullable: true
        aggregateDetails:
          type: array
          items:
            $ref: '#/components/schemas/AggregateDetailsDTO'
          nullable: true
      additionalProperties: false
    AnnualStatementDTOPagedResponseModelDTOApiResponseDTO:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/LocalisedErrorDTO'
          nullable: true
        success:
          type: boolean
        applicableEntitiesCount:
          type: integer
          format: int32
        requestedEntitiesCount:
          type: integer
          format: int32
        succeededEntitiesCount:
          type: integer
          format: int32
          readOnly: true
        isSynchronous:
          type: boolean
        data:
          allOf:
            - $ref: '#/components/schemas/AnnualStatementDTOPagedResponseModelDTO'
          description: The updated entity in case of modifications or creation
          nullable: true
      additionalProperties: false
    AnnualStatementOrigin:
      enum:
        - scheduledrun
        - manual
      type: string
    AnnualStatementStatus:
      enum:
        - created
        - generationinprogress
        - generated
        - generationfailed
      type: string
    ApiResponseDTO:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/LocalisedErrorDTO'
          nullable: true
        success:
          type: boolean
        applicableEntitiesCount:
          type: integer
          format: int32
        requestedEntitiesCount:
          type: integer
          format: int32
        succeededEntitiesCount:
          type: integer
          format: int32
          readOnly: true
        isSynchronous:
          type: boolean
      additionalProperties: false
    AppEnvironment:
      enum:
        - development
        - staging
        - production
        - cli
      type: string
    ApproveInvoiceRequest:
      type: object
      properties:
        invoiceDate:
          type: string
          description: The date when the invoice should be approved.
          format: date-time
      additionalProperties: false
      description: "Represents a request to approve an invoice.\r\nThis DTO is used to approve a single invoice with a specified invoice date."
    AssignInvoiceToCollectionCaseRequest:
      type: object
      properties:
        collectionFlowId:
          type: string
          description: The unique identifier of the collection flow to be used for this case.
          nullable: true
        collectionCaseNumber:
          type: string
          description: The unique case number assigned to this collection case.
          nullable: true
      additionalProperties: false
      description: "Represents a request to assign an invoice to a collection case.\r\nThis DTO is used to link an invoice to a specific collection case for debt recovery purposes."
    AssignInvoicesToOutgoingBankingTransactionRequest:
      type: object
      properties:
        allApplicable:
          type: boolean
          description: "Indicates whether all applicable invoices should be assigned.\r\nMust be true if no specific invoice IDs are provided."
        outgoingBankingTransactionType:
          allOf:
            - $ref: '#/components/schemas/OutgoingBankingTransactionType'
          description: The type of outgoing banking transaction to assign invoices to.
          nullable: true
        invoiceIds:
          type: array
          items:
            type: string
          description: "A list of specific invoice IDs to assign.\r\nRequired if AllApplicable is false."
          nullable: true
        addToNewOutgoingBankingTransactions:
          type: boolean
          description: Indicates whether invoices should be added to new outgoing banking transactions.
        overriddenCollectionDate:
          type: string
          description: "An optional override for the collection date of the transactions.\r\nCan only be set when AddToNewOutgoingBankingTransactions is true."
          format: date-time
          nullable: true
      additionalProperties: false
      description: "Represents a request to assign invoices to outgoing banking transactions.\r\nThis DTO supports both assigning specific invoices or all applicable invoices based on type."
    AttachmentVisibility:
      enum:
        - internal
        - portal
        - portalandmovein
      type: string
    AttributeType:
      enum:
        - meterserialnumber
        - externalidentifier
        - meteringtype
        - direction
        - parentmeterserialnumber
        - unitofmeasure
        - timeofuse
        - utilitytype
        - externalreference
      type: string
    BankStatementCreditDebit:
      enum:
        - unknown
        - debit
        - credit
      type: string
    BankTransactionType:
      enum:
        - unknown
        - sddreversal
        - sctreceived
      type: string
    BaseIncomingMutationDetailsDTO:
      type: object
      additionalProperties: false
      description: "Base class for all incoming bank mutation details DTOs.\r\nThis class serves as the polymorphic base for various types of incoming banking transactions,\r\nincluding payment requests, refunds, transfers, and their confirmations or refusals."
    BillBillingCompletenessIntermediatelyRequest:
      type: object
      properties:
        endDateTime:
          type: string
          description: Date and time when the intermediate billing period ends
          format: date-time
      additionalProperties: false
      description: Represents a request to perform intermediate billing for billing completeness
    BillWithPreviousTariffsRequest:
      type: object
      properties:
        billingRelationIds:
          type: array
          items:
            type: string
          description: List of billing relation IDs for which to generate bills using previous tariffs.
          nullable: true
      additionalProperties: false
      description: "Represents a request to bill using previous tariffs.\r\nThis DTO is used to generate bills using historical tariff rates instead of current ones."
    BilledServiceDTO:
      type: object
      properties:
        utilityType:
          allOf:
            - $ref: '#/components/schemas/UtilityType'
          description: The type of utility being provided.
          nullable: true
        serviceLocationId:
          type: string
          description: The unique identifier of the service location.
          nullable: true
        supplyStartDateTime:
          type: string
          description: The start date and time of the service supply period.
          format: date-time
        supplyEndDateTime:
          type: string
          description: The end date and time of the service supply period.
          format: date-time
        externalIdentifier:
          type: string
          description: An external identifier for the service.
          nullable: true
      additionalProperties: false
      description: "Represents a service being billed under a contract.\r\nThis DTO contains information about the service, its location, and supply period."
    BillingBlockRequest:
      type: object
      properties:
        comment:
          type: string
          description: A comment explaining the reason for blocking the billing relation.
          nullable: true
      additionalProperties: false
      description: "Represents a request to block a billing relation.\r\nThis DTO is used to temporarily prevent billing operations on a billing relation."
    BillingCalculationStreamStatus:
      enum:
        - open
        - finished
      type: string
    BillingCalculationType:
      enum:
        - consumption
        - subscription
        - attribute
        - consumptionunit
        - customentityproperty
      type: string
    BillingCompletenessDTO:
      type: object
      properties:
        id:
          type: string
          description: Gets or sets the unique identifier.
          nullable: true
        entityType:
          allOf:
            - $ref: '#/components/schemas/EntitySubjectType'
          description: Gets or sets the type of the entity.
          nullable: true
        createdDateTime:
          type: string
          description: Gets or sets the date and time when the entity was created.
          format: date-time
        discriminator:
          type: string
          description: Gets or sets the discriminator value.
          nullable: true
        _etag:
          type: string
          description: Gets or sets the ETag value.
          nullable: true
        requireAttention:
          type: boolean
          description: Gets a value indicating whether the entity requires attention.
          readOnly: true
        hasErrors:
          type: boolean
          description: Gets or sets a value indicating whether the entity has errors.
        hasWarnings:
          type: boolean
          description: Gets or sets a value indicating whether the entity has warnings.
        isReadOnly:
          type: boolean
          description: Gets or sets a value indicating whether the entity is read-only.
        organisationId:
          type: string
          description: Gets or sets the organization identifier.
          nullable: true
        contractId:
          type: string
          description: Unique identifier of the contract
          nullable: true
        contractNum:
          type: string
          description: Contract number
          nullable: true
        debtor:
          allOf:
            - $ref: '#/components/schemas/DebtorDTO'
          description: Information about the debtor
          nullable: true
        billingRelationId:
          type: string
          description: Unique identifier of the billing relation
          nullable: true
        periodStartDateTime:
          type: string
          description: Start date and time of the billing period
          format: date-time
        periodEndDateTime:
          type: string
          description: End date and time of the billing period
          format: date-time
        status:
          allOf:
            - $ref: '#/components/schemas/BillingCompletenessStatus'
          description: Current status of billing completeness
          nullable: true
        inputMissingDetails:
          allOf:
            - $ref: '#/components/schemas/InputMissingDetailsDTO'
          description: Details about any missing input data
          nullable: true
        hasCorrections:
          type: boolean
          description: Indicates if there are any corrections made to the billing data
        invoiceType:
          allOf:
            - $ref: '#/components/schemas/InvoiceType'
          description: Type of invoice being generated
          nullable: true
        blocked:
          type: boolean
          description: Indicates if the billing is currently blocked
        requiredQuantitiesGrouped:
          allOf:
            - $ref: '#/components/schemas/RequiredQuantityGroupedDTO'
          description: Grouped required quantities for billing
          nullable: true
        advancePeriods:
          type: array
          items:
            $ref: '#/components/schemas/AdvancePeriodDTO'
          description: List of advance payment periods
          nullable: true
        expectAdvancesToBeImportedPeriodically:
          type: boolean
          description: Indicates if advances are expected to be imported periodically
        costAllocationBillable:
          type: boolean
          description: Indicates if cost allocation is billable
        invoicingUpfront:
          type: boolean
          description: Indicates if invoicing is done upfront
        invoicingCheckpointDateTime:
          type: string
          description: Date and time of the last invoicing checkpoint
          format: date-time
        productId:
          type: string
          description: Unique identifier of the product
          nullable: true
        propertyGroups:
          type: array
          items:
            $ref: '#/components/schemas/PropertyGroupReferenceDTO'
          description: List of property groups associated with this billing
          nullable: true
      additionalProperties: false
      description: Represents the completeness status of billing data for a contract
    BillingCompletenessDTOApiResponseDTO:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/LocalisedErrorDTO'
          nullable: true
        success:
          type: boolean
        applicableEntitiesCount:
          type: integer
          format: int32
        requestedEntitiesCount:
          type: integer
          format: int32
        succeededEntitiesCount:
          type: integer
          format: int32
          readOnly: true
        isSynchronous:
          type: boolean
        data:
          allOf:
            - $ref: '#/components/schemas/BillingCompletenessDTO'
          description: The updated entity in case of modifications or creation
          nullable: true
      additionalProperties: false
    BillingCompletenessDTOPagedResponseModelDTO:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/BillingCompletenessDTO'
          nullable: true
        hasNextPage:
          type: boolean
        nextPageToken:
          type: string
          nullable: true
        totalRecords:
          type: integer
          format: int32
        sortableFields:
          type: array
          items:
            type: string
          nullable: true
        aggregateDetails:
          type: array
          items:
            $ref: '#/components/schemas/AggregateDetailsDTO'
          nullable: true
      additionalProperties: false
    BillingCompletenessDTOPagedResponseModelDTOApiResponseDTO:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/LocalisedErrorDTO'
          nullable: true
        success:
          type: boolean
        applicableEntitiesCount:
          type: integer
          format: int32
        requestedEntitiesCount:
          type: integer
          format: int32
        succeededEntitiesCount:
          type: integer
          format: int32
          readOnly: true
        isSynchronous:
          type: boolean
        data:
          allOf:
            - $ref: '#/components/schemas/BillingCompletenessDTOPagedResponseModelDTO'
          description: The updated entity in case of modifications or creation
          nullable: true
      additionalProperties: false
    BillingCompletenessInsightsResponseDTO:
      type: object
      properties:
        nextAdvanceStartDateTime:
          type: string
          description: The date and time when the next advance payment period will start.
          format: date-time
        advanceFrequency:
          allOf:
            - $ref: '#/components/schemas/AdvanceFrequency'
          description: The frequency at which advance payments are collected.
          nullable: true
        advanceAmount:
          type: number
          description: The amount of each advance payment.
          format: double
        advancesCreated:
          type: integer
          description: The number of advance payments that have been created.
          format: int32
        advancesNeeded:
          type: integer
          description: The number of advance payments that are still needed.
          format: int32
        invoiceFrequency:
          allOf:
            - $ref: '#/components/schemas/InvoiceFrequency'
          description: The frequency at which invoices are generated.
          nullable: true
        activeInvoiceStartDateTime:
          type: string
          description: The start date and time of the currently active invoice period.
          format: date-time
        activeInvoiceEndDateTime:
          type: string
          description: The end date and time of the currently active invoice period.
          format: date-time
        activeStatus:
          allOf:
            - $ref: '#/components/schemas/BillingCompletenessStatus'
          description: The current status of the active billing completeness.
          nullable: true
        activeBillingCompletenessId:
          type: string
          description: The unique identifier of the active billing completeness entry.
          nullable: true
        estimatedInvoiceId:
          type: string
          description: The unique identifier of the estimated invoice.
          nullable: true
        estimatedInvoiceAmount:
          type: number
          description: The estimated amount of the invoice.
          format: double
          nullable: true
        hasOpenAdvancePeriodsWithDifferentTaxRate:
          type: boolean
          description: Indicates whether there are open advance periods with different tax rates.
        accuracyState:
          allOf:
            - $ref: '#/components/schemas/Level'
          description: The current level of accuracy of the billing data.
          nullable: true
        draftInvoiceId:
          type: string
          description: The unique identifier of the draft invoice.
          nullable: true
        draftInvoiceAmount:
          type: number
          description: The amount of the draft invoice.
          format: double
          nullable: true
      additionalProperties: false
      description: "Represents insights and status information about billing completeness.\r\nThis DTO provides detailed information about advance payments, invoice periods, and billing status."
    BillingCompletenessInsightsResponseDTOApiResponseDTO:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/LocalisedErrorDTO'
          nullable: true
        success:
          type: boolean
        applicableEntitiesCount:
          type: integer
          format: int32
        requestedEntitiesCount:
          type: integer
          format: int32
        succeededEntitiesCount:
          type: integer
          format: int32
          readOnly: true
        isSynchronous:
          type: boolean
        data:
          allOf:
            - $ref: '#/components/schemas/BillingCompletenessInsightsResponseDTO'
          description: The updated entity in case of modifications or creation
          nullable: true
      additionalProperties: false
    BillingCompletenessOverviewCountDTO:
      type: object
      properties:
        all:
          type: integer
          format: int32
        waiting:
          type: integer
          format: int32
        inputMissing:
          type: integer
          format: int32
        manuallyCorrected:
          type: integer
          format: int32
        previousStillOpen:
          type: integer
          format: int32
        missingAdvances:
          type: integer
          format: int32
      additionalProperties: false
    BillingCompletenessOverviewCountDTOApiResponseDTO:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/LocalisedErrorDTO'
          nullable: true
        success:
          type: boolean
        applicableEntitiesCount:
          type: integer
          format: int32
        requestedEntitiesCount:
          type: integer
          format: int32
        succeededEntitiesCount:
          type: integer
          format: int32
          readOnly: true
        isSynchronous:
          type: boolean
        data:
          allOf:
            - $ref: '#/components/schemas/BillingCompletenessOverviewCountDTO'
          description: The updated entity in case of modifications or creation
          nullable: true
      additionalProperties: false
    BillingCompletenessQuickFilter:
      enum:
        - all
        - waiting
        - inputmissing
        - manuallycorrected
        - previousstillopen
        - missingadvances
      type: string
    BillingCompletenessStatus:
      enum:
        - waiting
        - gatheringinput
        - inputmissing
        - pendingcalculation
        - calculating
        - closed
        - previousnotclosed
        - manuallycorrected
        - waitingforapproval
        - manuallyclosed
        - waitingfornextestimation
      type: string
    BillingCompletenessTariffInputType:
      enum:
        - paymentmethod
        - customentityproperty
      type: string
    BillingContractDTO:
      type: object
      properties:
        contractId:
          type: string
          description: The unique identifier of the contract.
          nullable: true
        contractNumber:
          type: string
          description: The contract number.
          nullable: true
        products:
          type: array
          items:
            $ref: '#/components/schemas/ProductPeriodReferenceDTO'
          description: List of products associated with this contract.
          nullable: true
        services:
          type: array
          items:
            $ref: '#/components/schemas/BilledServiceDTO'
          description: List of services being billed under this contract.
          nullable: true
        usePropertyGroupProduct:
          type: boolean
          description: Indicates whether to use the property group product.
        propertyGroups:
          type: array
          items:
            $ref: '#/components/schemas/PropertyGroupReferenceDTO'
          description: List of property groups associated with this contract.
          nullable: true
        billingMethod:
          allOf:
            - $ref: '#/components/schemas/ContractBillingMethod'
          description: The billing method used for this contract.
          nullable: true
      additionalProperties: false
      description: "Represents a billing contract with its associated products and services.\r\nThis DTO contains information about the contract, its products, and billing method."
    BillingCustomerDTO:
      type: object
      properties:
        id:
          type: string
          description: Gets or sets the unique identifier.
          nullable: true
        entityType:
          allOf:
            - $ref: '#/components/schemas/EntitySubjectType'
          description: Gets or sets the type of the entity.
          nullable: true
        createdDateTime:
          type: string
          description: Gets or sets the date and time when the entity was created.
          format: date-time
        discriminator:
          type: string
          description: Gets or sets the discriminator value.
          nullable: true
        _etag:
          type: string
          description: Gets or sets the ETag value.
          nullable: true
        requireAttention:
          type: boolean
          description: Gets a value indicating whether the entity requires attention.
          readOnly: true
        hasErrors:
          type: boolean
          description: Gets or sets a value indicating whether the entity has errors.
        hasWarnings:
          type: boolean
          description: Gets or sets a value indicating whether the entity has warnings.
        isReadOnly:
          type: boolean
          description: Gets or sets a value indicating whether the entity is read-only.
        organisationId:
          type: string
          description: Gets or sets the organization identifier.
          nullable: true
        accountNumber:
          type: string
          description: The unique account number assigned to the customer.
          nullable: true
        shortDisplayName:
          type: string
          description: A shortened display name for the customer.
          nullable: true
        paymentTermsId:
          type: string
          description: The unique identifier of the payment terms associated with the customer.
          nullable: true
        defaultPaymentMethod:
          allOf:
            - $ref: '#/components/schemas/PaymentMethod'
          description: The default payment method for the customer.
          nullable: true
        customerType:
          allOf:
            - $ref: '#/components/schemas/CustomerType'
          description: The type of customer.
          nullable: true
        customerGroup:
          allOf:
            - $ref: '#/components/schemas/CustomerGroupReferenceDTO'
          description: Reference to the customer group this customer belongs to.
          nullable: true
        propertyGroups:
          type: array
          items:
            $ref: '#/components/schemas/PropertyGroupReferenceDTO'
          description: List of property groups associated with this customer.
          nullable: true
        culture:
          allOf:
            - $ref: '#/components/schemas/CultureInfo'
          description: The culture settings for the customer.
          nullable: true
        collectionFlowId:
          type: string
          description: The unique identifier of the collection flow associated with the customer.
          nullable: true
        billingSettings:
          allOf:
            - $ref: '#/components/schemas/CustomerBillingSettingsDTO'
          description: The billing settings specific to this customer.
          nullable: true
        organizationNumber:
          type: string
          description: The organization number of the customer.
          nullable: true
        vatNumber:
          type: string
          description: The VAT number of the customer.
          nullable: true
      additionalProperties: false
      description: "Represents a billing customer with their associated settings and information.\r\nThis DTO contains all the necessary information about a customer's billing configuration,\r\nincluding payment terms, property groups, and billing settings."
    BillingCustomerDTOApiResponseDTO:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/LocalisedErrorDTO'
          nullable: true
        success:
          type: boolean
        applicableEntitiesCount:
          type: integer
          format: int32
        requestedEntitiesCount:
          type: integer
          format: int32
        succeededEntitiesCount:
          type: integer
          format: int32
          readOnly: true
        isSynchronous:
          type: boolean
        data:
          allOf:
            - $ref: '#/components/schemas/BillingCustomerDTO'
          description: The updated entity in case of modifications or creation
          nullable: true
      additionalProperties: false
    BillingItemDetailsDTO:
      type: object
      properties:
        billingItemId:
          type: string
          description: The unique identifier of the billing item.
          nullable: true
        deviatingTariffs:
          type: array
          items:
            $ref: '#/components/schemas/CalculatedTariffDTO'
          description: List of tariffs that deviate from the standard calculation.
          nullable: true
        tariffExecutionErrors:
          type: array
          items:
            $ref: '#/components/schemas/FormulaFunctionExceptionDTO'
          description: List of errors that occurred during tariff calculation execution.
          nullable: true
      additionalProperties: false
      description: "Represents detailed information about a billing item.\r\nContains information about deviating tariffs and any execution errors."
    BillingItemLevel:
      enum:
        - contract
        - service
      type: string
    BillingItemReference:
      type: object
      properties:
        billingItemId:
          type: string
          nullable: true
        billingItemName:
          type: string
          nullable: true
      additionalProperties: false
    BillingItemTariffCalculationType:
      enum:
        - unitprice
        - tiered
        - volume
        - stairstep
        - condition
      type: string
    BillingItemTariffConditionType:
      enum:
        - paymentmethod
        - customentitypropertytype
      type: string
    BillingRelationDTO:
      type: object
      properties:
        id:
          type: string
          description: The unique identifier of the billing relation.
          nullable: true
        debtor:
          allOf:
            - $ref: '#/components/schemas/DebtorDTO'
          description: Information about the debtor associated with this billing relation.
          nullable: true
        paymentTermsId:
          type: string
          description: The unique identifier of the payment terms.
          nullable: true
        paymentMethod:
          allOf:
            - $ref: '#/components/schemas/PaymentMethod'
          description: The payment method to be used for this billing relation.
          nullable: true
        advanceDetails:
          allOf:
            - $ref: '#/components/schemas/AdvanceDetailsDTO'
          description: Details about advance payments for this billing relation.
          nullable: true
        invoiceDetails:
          allOf:
            - $ref: '#/components/schemas/InvoiceDetailsDTO'
          description: Details about invoice generation for this billing relation.
          nullable: true
        contract:
          allOf:
            - $ref: '#/components/schemas/BillingContractDTO'
          description: Information about the contract associated with this billing relation.
          nullable: true
        contractStartDateTime:
          type: string
          description: The start date and time of the contract.
          format: date-time
        contractEndDateTime:
          type: string
          description: The end date and time of the contract.
          format: date-time
        blockDetails:
          allOf:
            - $ref: '#/components/schemas/BlockDetailsDTO'
          description: Details about any blocking status for this billing relation.
          nullable: true
        expectAdvancesToBeImportedPeriodically:
          type: boolean
          description: Indicates whether advances are expected to be imported periodically.
        timeZone:
          type: string
          description: The time zone for this billing relation.
          nullable: true
      additionalProperties: false
      description: "Represents a billing relation between a customer and their billing configuration.\r\nThis DTO contains all the necessary information about how a customer should be billed,\r\nincluding payment terms, advance details, invoice details, and contract information."
    BillingRelationDTOApiResponseDTO:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/LocalisedErrorDTO'
          nullable: true
        success:
          type: boolean
        applicableEntitiesCount:
          type: integer
          format: int32
        requestedEntitiesCount:
          type: integer
          format: int32
        succeededEntitiesCount:
          type: integer
          format: int32
          readOnly: true
        isSynchronous:
          type: boolean
        data:
          allOf:
            - $ref: '#/components/schemas/BillingRelationDTO'
          description: The updated entity in case of modifications or creation
          nullable: true
      additionalProperties: false
    BillingRelationDTOPagedResponseModelDTO:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/BillingRelationDTO'
          nullable: true
        hasNextPage:
          type: boolean
        nextPageToken:
          type: string
          nullable: true
        totalRecords:
          type: integer
          format: int32
        sortableFields:
          type: array
          items:
            type: string
          nullable: true
        aggregateDetails:
          type: array
          items:
            $ref: '#/components/schemas/AggregateDetailsDTO'
          nullable: true
      additionalProperties: false
    BillingRelationDTOPagedResponseModelDTOApiResponseDTO:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/LocalisedErrorDTO'
          nullable: true
        success:
          type: boolean
        applicableEntitiesCount:
          type: integer
          format: int32
        requestedEntitiesCount:
          type: integer
          format: int32
        succeededEntitiesCount:
          type: integer
          format: int32
          readOnly: true
        isSynchronous:
          type: boolean
        data:
          allOf:
            - $ref: '#/components/schemas/BillingRelationDTOPagedResponseModelDTO'
          description: The updated entity in case of modifications or creation
          nullable: true
      additionalProperties: false
    BillingRelationScenarioType:
      enum:
        - advanceamountchanged
      type: string
    BillingScope:
      enum:
        - contract
        - location
      type: string
    BillingTariffInputType:
      enum:
        - none
        - fixed
        - costcomponent
      type: string
    BlockDetailsDTO:
      type: object
      properties:
        blocked:
          type: boolean
          description: Indicates whether the billing relation is currently blocked.
        blockedOn:
          type: string
          description: The date and time when the billing relation was blocked.
          format: date-time
        blockedBy:
          type: string
          description: The identifier of the user who blocked the billing relation.
          nullable: true
        blockedComment:
          type: string
          description: Comments explaining why the billing relation was blocked.
          nullable: true
      additionalProperties: false
      description: "Represents details about the blocking status of a billing relation.\r\nThis DTO contains information about when and why a billing relation was blocked."
    BooleanApiResponseDTO:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/LocalisedErrorDTO'
          nullable: true
        success:
          type: boolean
        applicableEntitiesCount:
          type: integer
          format: int32
        requestedEntitiesCount:
          type: integer
          format: int32
        succeededEntitiesCount:
          type: integer
          format: int32
          readOnly: true
        isSynchronous:
          type: boolean
        data:
          type: boolean
          description: The updated entity in case of modifications or creation
      additionalProperties: false
    BulkApproveInvoiceRequest:
      type: object
      properties:
        invoiceDate:
          type: string
          description: The date when the invoice should be approved.
          format: date-time
        onlyValidate:
          type: boolean
          description: "Indicates if only validation should be performed without actually approving the invoices.\r\nWhen true, the system will only validate if the invoices can be approved without making any changes."
        queryParams:
          allOf:
            - $ref: '#/components/schemas/GetInvoicesQueryParams'
          description: Query parameters to filter the invoices to be approved.
          nullable: true
        quickFilter:
          type: string
          description: Quick filter string to filter invoices without using complex query parameters.
          nullable: true
      additionalProperties: false
      description: "Represents a bulk request to approve multiple invoices.\r\nThis DTO allows approving multiple invoices in a single operation."
    BulkAssignInvoicesToOutgoingBankingTransactionRequest:
      type: object
      properties:
        allApplicable:
          type: boolean
          description: "Indicates whether all applicable invoices should be assigned.\r\nMust be true if no specific invoice IDs are provided."
        outgoingBankingTransactionType:
          allOf:
            - $ref: '#/components/schemas/OutgoingBankingTransactionType'
          description: The type of outgoing banking transaction to assign invoices to.
          nullable: true
        invoiceIds:
          type: array
          items:
            type: string
          description: "A list of specific invoice IDs to assign.\r\nRequired if AllApplicable is false."
          nullable: true
        addToNewOutgoingBankingTransactions:
          type: boolean
          description: Indicates whether invoices should be added to new outgoing banking transactions.
        overriddenCollectionDate:
          type: string
          description: "An optional override for the collection date of the transactions.\r\nCan only be set when AddToNewOutgoingBankingTransactions is true."
          format: date-time
          nullable: true
        onlyValidate:
          type: boolean
          description: Indicates whether this is a validation-only request without actual assignment.
        queryParams:
          allOf:
            - $ref: '#/components/schemas/GetInvoicesQueryParams'
          description: Query parameters to filter the invoices to be assigned.
          nullable: true
        quickFilter:
          type: string
          description: A quick filter string to further refine the selection of invoices to be assigned.
          nullable: true
      additionalProperties: false
      description: "Represents a bulk request to assign invoices to outgoing banking transactions.\r\nThis DTO extends the base assignment request with bulk operation capabilities."
    BulkBillBillingCompletenessIntermediatelyRequest:
      type: object
      properties:
        endDateTime:
          type: string
          description: Date and time when the intermediate billing period ends
          format: date-time
        onlyValidate:
          type: boolean
          description: Indicates if only validation should be performed without actual billing
        queryParams:
          allOf:
            - $ref: '#/components/schemas/GetBillingCompletenessQueryParams'
          description: Query parameters to filter the items to process
          nullable: true
        quickFilter:
          type: string
          description: Quick filter string to filter items
          nullable: true
      additionalProperties: false
      description: Represents a bulk request to perform intermediate billing for multiple billing completeness items
    BulkChangeExportStatusRequest:
      type: object
      properties:
        exportStatus:
          allOf:
            - $ref: '#/components/schemas/ExportStatus'
          description: The new export status to set for the invoice.
          nullable: true
        onlyValidate:
          type: boolean
          description: "Indicates if only validation should be performed without actually changing the export status.\r\nWhen true, the system will only validate if the export status can be changed without making any changes."
        queryParams:
          allOf:
            - $ref: '#/components/schemas/GetInvoicesQueryParams'
          description: Query parameters to filter the invoices to be updated.
          nullable: true
        quickFilter:
          type: string
          description: Quick filter string to filter invoices without using complex query parameters.
          nullable: true
      additionalProperties: false
      description: "Represents a bulk request to change the export status of multiple invoices.\r\nThis DTO allows updating the export status of multiple invoices in a single operation."
    BulkChangePaymentDetailsRequest:
      type: object
      properties:
        newPaymentMethod:
          allOf:
            - $ref: '#/components/schemas/PaymentMethod'
          description: The new payment method to be used for the invoice.
          nullable: true
        collectionDate:
          type: string
          description: The new date when the payment should be collected.
          format: date-time
        onlyValidate:
          type: boolean
          description: "Indicates if only validation should be performed without actually changing the payment details.\r\nWhen true, the system will only validate if the changes can be made without making any updates."
        queryParams:
          allOf:
            - $ref: '#/components/schemas/GetInvoicesQueryParams'
          description: Query parameters to filter the invoices to be updated.
          nullable: true
        quickFilter:
          type: string
          description: Quick filter string to filter invoices without using complex query parameters.
          nullable: true
      additionalProperties: false
      description: "Represents a bulk request to change payment details for multiple invoices.\r\nThis DTO allows updating payment details for multiple invoices in a single operation."
    BulkCreditInvoiceRequest:
      type: object
      properties:
        onlyValidate:
          type: boolean
          description: "Indicates if only validation should be performed without actually creating credit notes.\r\nWhen true, the system will only validate if the invoices can be credited without making any changes."
        queryParams:
          allOf:
            - $ref: '#/components/schemas/GetInvoicesQueryParams'
          description: Query parameters to filter the invoices to be credited.
          nullable: true
        quickFilter:
          type: string
          description: Quick filter string to filter invoices without using complex query parameters.
          nullable: true
      additionalProperties: false
      description: "Represents a bulk request to credit multiple invoices.\r\nThis DTO allows creating credit notes for multiple invoices in a single operation."
    BulkDeleteIncomingBankingTransactionRequest:
      type: object
      properties:
        onlyValidate:
          type: boolean
          description: Indicates whether this is a validation-only request without actual deletion.
        queryParams:
          allOf:
            - $ref: '#/components/schemas/GetIncomingBankingTransactionsQueryParams'
          description: Query parameters to filter the transactions to be deleted.
          nullable: true
        quickFilter:
          type: string
          description: A quick filter string to further refine the selection of transactions to be deleted.
          nullable: true
      additionalProperties: false
      description: "Represents a bulk request to delete multiple incoming banking transactions.\r\nThis DTO allows for batch deletion of transactions based on query parameters and filters."
    BulkDeleteInvoiceRequest:
      type: object
      properties:
        onlyValidate:
          type: boolean
          description: "Indicates if only validation should be performed without actually deleting the invoices.\r\nWhen true, the system will only validate if the invoices can be deleted without making any changes."
        queryParams:
          allOf:
            - $ref: '#/components/schemas/GetInvoicesQueryParams'
          description: Query parameters to filter the invoices to be deleted.
          nullable: true
        quickFilter:
          type: string
          description: Quick filter string to filter invoices without using complex query parameters.
          nullable: true
      additionalProperties: false
      description: "Represents a bulk request to delete multiple invoices.\r\nThis DTO allows deleting multiple invoices in a single operation."
    BulkDeleteOutgoingBankingTransactionRequest:
      type: object
      properties:
        onlyValidate:
          type: boolean
          description: Indicates whether this is a validation-only request without actual deletion.
        queryParams:
          allOf:
            - $ref: '#/components/schemas/GetOutgoingBankingTransactionsQueryParams'
          description: Query parameters to filter the transactions to be deleted.
          nullable: true
        quickFilter:
          type: string
          description: A quick filter string to further refine the selection of transactions to be deleted.
          nullable: true
      additionalProperties: false
      description: "Represents a bulk request to delete multiple outgoing banking transactions.\r\nThis DTO allows for batch deletion of transactions based on query parameters and filters."
    BulkDeleteOutgoingMutationRequest:
      type: object
      properties:
        onlyValidate:
          type: boolean
          description: Indicates whether this is a validation-only request without actual deletion.
        queryParams:
          allOf:
            - $ref: '#/components/schemas/GetOutgoingMutationsQueryParams'
          description: Query parameters to filter the mutations to be deleted.
          nullable: true
        quickFilter:
          type: string
          description: A quick filter string to further refine the selection of mutations to be deleted.
          nullable: true
      additionalProperties: false
      description: "Represents a bulk request to delete multiple outgoing mutations.\r\nThis DTO allows for batch deletion of mutations based on query parameters and filters."
    BulkIgnoreIncomingMutationsRequest:
      type: object
      properties:
        onlyValidate:
          type: boolean
          description: Indicates whether this is a validation-only request without actual ignoring.
        queryParams:
          allOf:
            - $ref: '#/components/schemas/GetIncomingMutationsQueryParams'
          description: Query parameters to filter the mutations to be ignored.
          nullable: true
        quickFilter:
          type: string
          description: A quick filter string to further refine the selection of mutations to be ignored.
          nullable: true
      additionalProperties: false
      description: "Represents a bulk request to ignore multiple incoming mutations.\r\nThis DTO allows for batch marking of mutations as ignored based on query parameters and filters."
    BulkManuallyCancelOutgoingBankingTransactionRequest:
      type: object
      properties:
        onlyValidate:
          type: boolean
          description: Indicates whether this is a validation-only request without actual cancellation.
        queryParams:
          allOf:
            - $ref: '#/components/schemas/GetOutgoingBankingTransactionsQueryParams'
          description: Query parameters to filter the transactions to be cancelled.
          nullable: true
        quickFilter:
          type: string
          description: A quick filter string to further refine the selection of transactions to be cancelled.
          nullable: true
      additionalProperties: false
      description: "Represents a bulk request to manually cancel multiple outgoing banking transactions.\r\nThis DTO allows for batch cancellation of transactions based on query parameters and filters."
    BulkManuallyCloseBillingCompletenessRequest:
      type: object
      properties:
        onlyValidate:
          type: boolean
          description: "Indicates if only validation should be performed without actually closing the records.\r\nWhen true, the system will only validate if the records can be closed without making any changes."
        queryParams:
          allOf:
            - $ref: '#/components/schemas/GetBillingCompletenessQueryParams'
          description: "Query parameters to filter the billing completeness records to process.\r\nThis allows specifying which records should be included in the bulk operation."
          nullable: true
        quickFilter:
          type: string
          description: "Quick filter string to filter billing completeness records.\r\nThis provides a simple way to filter records without using complex query parameters."
          nullable: true
      additionalProperties: false
      description: "Represents a bulk request to manually close multiple billing completeness records.\r\nThis request allows closing multiple billing completeness records in a single operation."
    BulkMarkInvoiceSentRequest:
      type: object
      properties:
        onlyValidate:
          type: boolean
          description: "Indicates if only validation should be performed without actually marking the invoices as sent.\r\nWhen true, the system will only validate if the invoices can be marked as sent without making any changes."
        queryParams:
          allOf:
            - $ref: '#/components/schemas/GetInvoicesQueryParams'
          description: Query parameters to filter the invoices to be marked as sent.
          nullable: true
        quickFilter:
          type: string
          description: Quick filter string to filter invoices without using complex query parameters.
          nullable: true
      additionalProperties: false
      description: "Represents a bulk request to mark multiple invoices as sent.\r\nThis DTO allows updating the sent status of multiple invoices in a single operation."
    BulkMarkInvoiceSentSkippedRequest:
      type: object
      properties:
        onlyValidate:
          type: boolean
          description: "Indicates if only validation should be performed without actually marking the invoices as skipped.\r\nWhen true, the system will only validate if the invoices can be marked as skipped without making any changes."
        queryParams:
          allOf:
            - $ref: '#/components/schemas/GetInvoicesQueryParams'
          description: Query parameters to filter the invoices to be marked as skipped.
          nullable: true
        quickFilter:
          type: string
          description: Quick filter string to filter invoices without using complex query parameters.
          nullable: true
      additionalProperties: false
      description: "Represents a bulk request to mark multiple invoices as skipped for sending.\r\nThis DTO allows marking multiple invoices as skipped in a single operation."
    BulkOverrideOutgoingBankingTransactionBankConfirmationRequest:
      type: object
      properties:
        onlyValidate:
          type: boolean
          description: Indicates whether this is a validation-only request without actual override.
        queryParams:
          allOf:
            - $ref: '#/components/schemas/GetOutgoingBankingTransactionsQueryParams'
          description: Query parameters to filter the transactions to be overridden.
          nullable: true
        quickFilter:
          type: string
          description: A quick filter string to further refine the selection of transactions to be overridden.
          nullable: true
      additionalProperties: false
      description: "Represents a bulk request to override the bank confirmation status of multiple outgoing banking transactions.\r\nThis DTO allows for batch overriding of bank confirmations based on query parameters and filters."
    BulkProcessIncomingBankingTransactionRequest:
      type: object
      properties:
        onlyValidate:
          type: boolean
          description: Indicates whether this is a validation-only request without actual processing.
        queryParams:
          allOf:
            - $ref: '#/components/schemas/GetIncomingBankingTransactionsQueryParams'
          description: Query parameters to filter the transactions to be processed.
          nullable: true
        quickFilter:
          type: string
          description: A quick filter string to further refine the selection of transactions to be processed.
          nullable: true
      additionalProperties: false
      description: "Represents a bulk request to process multiple incoming banking transactions.\r\nThis DTO allows for batch processing of transactions based on query parameters and filters."
    BulkRegenerateInvoiceRequest:
      type: object
      properties:
        onlyValidate:
          type: boolean
          description: "Indicates if only validation should be performed without actually regenerating the invoices.\r\nWhen true, the system will only validate if the invoices can be regenerated without making any changes."
        queryParams:
          allOf:
            - $ref: '#/components/schemas/GetInvoicesQueryParams'
          description: Query parameters to filter the invoices to be regenerated.
          nullable: true
        quickFilter:
          type: string
          description: Quick filter string to filter invoices without using complex query parameters.
          nullable: true
      additionalProperties: false
      description: "Represents a bulk request to regenerate multiple invoices.\r\nThis DTO allows regenerating multiple invoices in a single operation."
    BulkReopenBillingCompletenessRequest:
      type: object
      properties:
        onlyValidate:
          type: boolean
          description: "Indicates if only validation should be performed without actually reopening the records.\r\nWhen true, the system will only validate if the records can be reopened without making any changes."
        queryParams:
          allOf:
            - $ref: '#/components/schemas/GetBillingCompletenessQueryParams'
          description: "Query parameters to filter the billing completeness records to process.\r\nThis allows specifying which records should be included in the bulk operation."
          nullable: true
        quickFilter:
          type: string
          description: "Quick filter string to filter billing completeness records.\r\nThis provides a simple way to filter records without using complex query parameters."
          nullable: true
      additionalProperties: false
      description: "Represents a bulk request to reopen multiple billing completeness records.\r\nThis request allows reopening multiple billing completeness records in a single operation."
    BulkResetIncomingMutationsRequest:
      type: object
      properties:
        onlyValidate:
          type: boolean
          description: Indicates whether this is a validation-only request without actual resetting.
        queryParams:
          allOf:
            - $ref: '#/components/schemas/GetIncomingMutationsQueryParams'
          description: Query parameters to filter the mutations to be reset.
          nullable: true
        quickFilter:
          type: string
          description: A quick filter string to further refine the selection of mutations to be reset.
          nullable: true
      additionalProperties: false
      description: "Represents a bulk request to reset multiple incoming mutations to their initial state.\r\nThis DTO allows for batch resetting of mutations based on query parameters and filters."
    BulkReversePaymentRequest:
      type: object
      properties:
        reversalAdditionalInformation:
          type: string
          description: Additional information or reason for the payment reversal.
          nullable: true
        onlyValidate:
          type: boolean
          description: Indicates whether this is a validation-only request without actual reversal.
        queryParams:
          allOf:
            - $ref: '#/components/schemas/GetPaymentsQueryParams'
          description: Query parameters to filter the payments to be reversed.
          nullable: true
        quickFilter:
          type: string
          description: A quick filter string to further refine the selection of payments to be reversed.
          nullable: true
      additionalProperties: false
      description: "Represents a bulk request to reverse multiple payments.\r\nThis DTO extends the base reversal request with bulk operation capabilities."
    BulkSendAnnualStatementViaMailRequest:
      type: object
      properties:
        onlyValidate:
          type: boolean
        queryParams:
          allOf:
            - $ref: '#/components/schemas/GetAnnualStatementsQueryParams'
          nullable: true
        quickFilter:
          type: string
          nullable: true
      additionalProperties: false
    BulkSendAnnualStatementViaPostalRequest:
      type: object
      properties:
        onlyValidate:
          type: boolean
        queryParams:
          allOf:
            - $ref: '#/components/schemas/GetAnnualStatementsQueryParams'
          nullable: true
        quickFilter:
          type: string
          nullable: true
      additionalProperties: false
    BulkSendInvoiceViaMailRequest:
      type: object
      properties:
        onlyValidate:
          type: boolean
          description: "Indicates if only validation should be performed without actually sending the invoices.\r\nWhen true, the system will only validate if the invoices can be sent without making any changes."
        queryParams:
          allOf:
            - $ref: '#/components/schemas/GetInvoicesQueryParams'
          description: Query parameters to filter the invoices to be sent.
          nullable: true
        quickFilter:
          type: string
          description: Quick filter string to filter invoices without using complex query parameters.
          nullable: true
      additionalProperties: false
      description: "Represents a bulk request to send multiple invoices via email.\r\nThis DTO allows sending multiple invoices via email in a single operation."
    BulkSendInvoiceViaPostalRequest:
      type: object
      properties:
        onlyValidate:
          type: boolean
          description: "Indicates if only validation should be performed without actually sending the invoices.\r\nWhen true, the system will only validate if the invoices can be sent without making any changes."
        queryParams:
          allOf:
            - $ref: '#/components/schemas/GetInvoicesQueryParams'
          description: Query parameters to filter the invoices to be sent.
          nullable: true
        quickFilter:
          type: string
          description: Quick filter string to filter invoices without using complex query parameters.
          nullable: true
      additionalProperties: false
      description: "Represents a bulk request to send multiple invoices via postal mail.\r\nThis DTO allows sending multiple invoices via postal mail in a single operation."
    BulkTriggerBillingCompletenessRequest:
      type: object
      properties:
        onlyAdvances:
          type: boolean
          description: Indicates if only advance payments should be calculated
        recalculateIfNeeded:
          type: boolean
          description: Indicates if recalculation should be performed if needed
        advanceUntilDateTime:
          type: string
          description: Date and time until which advance payments should be calculated
          format: date-time
        onlyValidate:
          type: boolean
          description: Indicates if only validation should be performed without actual calculation
        queryParams:
          allOf:
            - $ref: '#/components/schemas/GetBillingCompletenessQueryParams'
          description: Query parameters to filter the items to process
          nullable: true
        quickFilter:
          type: string
          description: Quick filter string to filter items
          nullable: true
      additionalProperties: false
      description: Represents a bulk request to trigger billing completeness calculation for multiple items
    CalculatedLineStatus:
      enum:
        - created
        - transferred
        - approved
      type: string
    CalculatedTariffDTO:
      type: object
      properties:
        tariff:
          type: number
          description: The calculated tariff value.
          format: double
        startDate:
          type: string
          description: The start date and time from which this tariff applies.
          format: date-time
        endDate:
          type: string
          description: The end date and time until which this tariff applies.
          format: date-time
      additionalProperties: false
      description: "Represents a calculated tariff with its validity period.\r\nContains the tariff value and the period during which it applies."
    CalculationConfigurationBillingItemDTO:
      type: object
      properties:
        billingItemId:
          type: string
          description: The unique identifier of the billing item.
          nullable: true
        deviatingTariffCalculation:
          type: boolean
          description: "Indicates whether this billing item uses a deviating tariff calculation method\r\nthat differs from the standard calculation."
        tariffFormula:
          allOf:
            - $ref: '#/components/schemas/TariffFormulaDTO'
          description: The tariff formula used to calculate the billing item's cost.
          nullable: true
        tariffValidationResult:
          allOf:
            - $ref: '#/components/schemas/FormulaValidationResultDTO'
          description: "The validation results for the tariff formula, indicating whether the formula\r\nis valid and any validation errors that may exist."
          nullable: true
      additionalProperties: false
      description: "Represents a billing item within a calculation configuration.\r\nThis DTO contains information about how a specific billing item should be calculated,\r\nincluding its tariff formula and validation results."
    CalculationConfigurationBillingItemRequest:
      type: object
      properties:
        billingItemId:
          type: string
          description: The ID of the billing item to configure.
          nullable: true
        deviatingTariffCalculation:
          type: boolean
          description: Indicates whether this billing item uses a deviating tariff calculation.
        tariffFormula:
          allOf:
            - $ref: '#/components/schemas/TariffFormulaDTO'
          description: The tariff formula to be used for calculation when deviating tariff calculation is enabled.
          nullable: true
      additionalProperties: false
      description: "Represents a request to configure calculation settings for a billing item.\r\nThis DTO is used to set up tariff calculations and formulas for specific billing items."
    Calendar:
      type: object
      properties:
        minSupportedDateTime:
          type: string
          format: date-time
          readOnly: true
        maxSupportedDateTime:
          type: string
          format: date-time
          readOnly: true
        algorithmType:
          allOf:
            - $ref: '#/components/schemas/CalendarAlgorithmType'
          readOnly: true
        isReadOnly:
          type: boolean
          readOnly: true
        eras:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
          readOnly: true
        twoDigitYearMax:
          type: integer
          format: int32
      additionalProperties: false
    CalendarAlgorithmType:
      enum:
        - Unknown
        - SolarCalendar
        - LunarCalendar
        - LunisolarCalendar
      type: string
    CalendarWeekRule:
      enum:
        - FirstDay
        - FirstFullWeek
        - FirstFourDayWeek
      type: string
    ChangeAdvanceAmountRequest:
      type: object
      properties:
        newAdvanceAmount:
          type: number
          description: The new advance amount to be set for the billing relation.
          format: double
        changedBy:
          allOf:
            - $ref: '#/components/schemas/AdvanceAmountChangedBy'
          description: Indicates who or what initiated the advance amount change.
          nullable: true
        sendConfirmationEmail:
          type: boolean
          description: Indicates whether a confirmation email should be sent to the customer about the advance amount change.
      additionalProperties: false
      description: "Represents a request to change the advance amount for a billing relation.\r\nThis DTO is used to update the monthly advance payment amount for a customer."
    ChangeExportStatusRequest:
      type: object
      properties:
        exportStatus:
          allOf:
            - $ref: '#/components/schemas/ExportStatus'
          description: The new export status to set for the invoice.
          nullable: true
      additionalProperties: false
      description: "Represents a request to change the export status of an invoice.\r\nThis DTO is used to update the export status of a single invoice."
    ChangeNewAdvanceAmountRequest:
      type: object
      properties:
        newAdvanceAmountInclVAT:
          type: number
          description: The new advance amount including VAT to be charged to the customer.
          format: double
      additionalProperties: false
      description: "Represents a request to change the advance amount for an invoice.\r\nThis DTO is used to update the advance payment amount that will be charged to the customer."
    ChangeNextInvoiceEndDateRequest:
      type: object
      properties:
        fromFirstOpenPeriod:
          type: boolean
          description: "Indicates whether to use the start date of the last known non-closed billing completeness (true)\r\nor the end date of the last known non-closed billing completeness (false) as the start date"
        endDateTime:
          type: string
          description: The new end date and time for the next invoice. Must not be after or on the contract end date
          format: date-time
      additionalProperties: false
      description: Represents a request to change the end date of the next invoice
    ChangeNoteToCustomerRequest:
      type: object
      properties:
        noteToCustomer:
          type: string
          description: The new note or comment to be displayed to the customer on the invoice.
          nullable: true
      additionalProperties: false
      description: "Represents a request to change the note to customer on an invoice.\r\nThis DTO is used to update the customer-facing notes or comments on an invoice."
    ChangePaymentDetailsRequest:
      type: object
      properties:
        newPaymentMethod:
          allOf:
            - $ref: '#/components/schemas/PaymentMethod'
          description: The new payment method to be used for the invoice.
          nullable: true
        collectionDate:
          type: string
          description: The new date when the payment should be collected.
          format: date-time
      additionalProperties: false
      description: "Represents a request to change the payment details of an invoice.\r\nThis DTO is used to update the payment method and collection date for an invoice."
    CollectionCaseDTO:
      type: object
      properties:
        id:
          type: string
          description: Gets or sets the unique identifier.
          nullable: true
        entityType:
          allOf:
            - $ref: '#/components/schemas/EntitySubjectType'
          description: Gets or sets the type of the entity.
          nullable: true
        createdDateTime:
          type: string
          description: Gets or sets the date and time when the entity was created.
          format: date-time
        discriminator:
          type: string
          description: Gets or sets the discriminator value.
          nullable: true
        _etag:
          type: string
          description: Gets or sets the ETag value.
          nullable: true
        requireAttention:
          type: boolean
          description: Gets a value indicating whether the entity requires attention.
          readOnly: true
        hasErrors:
          type: boolean
          description: Gets or sets a value indicating whether the entity has errors.
        hasWarnings:
          type: boolean
          description: Gets or sets a value indicating whether the entity has warnings.
        isReadOnly:
          type: boolean
          description: Gets or sets a value indicating whether the entity is read-only.
        organisationId:
          type: string
          description: Gets or sets the organization identifier.
          nullable: true
        collectionNum:
          type: string
          description: The unique collection case number.
          nullable: true
        sequenceNum:
          type: integer
          description: The sequence number of the collection case.
          format: int64
        workflowId:
          type: string
          description: The unique identifier of the workflow.
          nullable: true
        workflowName:
          type: string
          description: The name of the workflow.
          nullable: true
        debtor:
          allOf:
            - $ref: '#/components/schemas/DebtorDTO'
          description: Information about the debtor associated with this collection case.
          nullable: true
        manualInterventionRequired:
          type: boolean
          description: Indicates whether manual intervention is required for this case.
        status:
          allOf:
            - $ref: '#/components/schemas/CollectionFlowStatus'
          description: The current status of the collection flow.
          nullable: true
        steps:
          type: array
          items:
            $ref: '#/components/schemas/CollectionCaseStepDTO'
          description: List of steps in the collection case workflow.
          nullable: true
        lastStep:
          allOf:
            - $ref: '#/components/schemas/CollectionCaseStepDTO'
          description: Gets the most recently executed step in the collection case.
          nullable: true
          readOnly: true
        nextStep:
          allOf:
            - $ref: '#/components/schemas/CollectionCaseStepDTO'
          description: Gets the next pending step to be executed in the collection case.
          nullable: true
          readOnly: true
        nextActionDue:
          type: string
          description: Gets the date and time when the next action is due.
          format: date-time
          readOnly: true
        referencedTransactions:
          type: array
          items:
            type: string
          description: List of transaction IDs referenced in this collection case.
          nullable: true
        paymentReference:
          type: string
          description: The payment reference number for this collection case.
          nullable: true
        propertyGroups:
          type: array
          items:
            $ref: '#/components/schemas/PropertyGroupReferenceDTO'
          description: List of property groups associated with this collection case.
          nullable: true
        totalOpenAmountInclVAT:
          type: number
          description: The total open amount including VAT for this collection case.
          format: double
        customProperties:
          type: array
          items:
            $ref: '#/components/schemas/CustomEntityPropertyDTO'
          description: List of custom properties associated with this collection case.
          nullable: true
      additionalProperties: false
      description: "Represents a collection case for managing debt collection processes.\r\nThis DTO contains information about the collection workflow, steps, and associated entities."
    CollectionCaseDTOApiResponseDTO:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/LocalisedErrorDTO'
          nullable: true
        success:
          type: boolean
        applicableEntitiesCount:
          type: integer
          format: int32
        requestedEntitiesCount:
          type: integer
          format: int32
        succeededEntitiesCount:
          type: integer
          format: int32
          readOnly: true
        isSynchronous:
          type: boolean
        data:
          allOf:
            - $ref: '#/components/schemas/CollectionCaseDTO'
          description: The updated entity in case of modifications or creation
          nullable: true
      additionalProperties: false
    CollectionCaseDTOPagedResponseModelDTO:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/CollectionCaseDTO'
          nullable: true
        hasNextPage:
          type: boolean
        nextPageToken:
          type: string
          nullable: true
        totalRecords:
          type: integer
          format: int32
        sortableFields:
          type: array
          items:
            type: string
          nullable: true
        aggregateDetails:
          type: array
          items:
            $ref: '#/components/schemas/AggregateDetailsDTO'
          nullable: true
      additionalProperties: false
    CollectionCaseDTOPagedResponseModelDTOApiResponseDTO:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/LocalisedErrorDTO'
          nullable: true
        success:
          type: boolean
        applicableEntitiesCount:
          type: integer
          format: int32
        requestedEntitiesCount:
          type: integer
          format: int32
        succeededEntitiesCount:
          type: integer
          format: int32
          readOnly: true
        isSynchronous:
          type: boolean
        data:
          allOf:
            - $ref: '#/components/schemas/CollectionCaseDTOPagedResponseModelDTO'
          description: The updated entity in case of modifications or creation
          nullable: true
      additionalProperties: false
    CollectionCaseDetailsDTO:
      type: object
      properties:
        collectionCaseId:
          type: string
          description: The unique identifier of the collection case.
          nullable: true
        closed:
          type: boolean
          description: Indicates whether the collection case is closed.
        workflowId:
          type: string
          description: The unique identifier of the workflow associated with this collection case.
          nullable: true
        workflowName:
          type: string
          description: The name of the workflow associated with this collection case.
          nullable: true
        previousStepId:
          type: string
          description: The unique identifier of the previous step in the collection workflow.
          nullable: true
        previousStepName:
          type: string
          description: The name of the previous step in the collection workflow.
          nullable: true
        previousStepExecutedAt:
          type: string
          description: The date and time when the previous step was executed.
          format: date-time
        previousStepStatus:
          allOf:
            - $ref: '#/components/schemas/CollectionStepStatus'
          description: The status of the previous step in the collection workflow.
          nullable: true
        nextStepId:
          type: string
          description: The unique identifier of the next step in the collection workflow.
          nullable: true
        nextStepName:
          type: string
          description: The name of the next step in the collection workflow.
          nullable: true
        nextStepExecutionDate:
          type: string
          description: The scheduled date and time for executing the next step.
          format: date-time
      additionalProperties: false
      description: "Represents detailed information about a collection case.\r\nContains information about the case's workflow, current status, and step progression."
    CollectionCaseOverviewCountResponseDTO:
      type: object
      properties:
        all:
          type: integer
          description: The total number of collection cases.
          format: int32
        active:
          type: integer
          description: The number of currently active collection cases.
          format: int32
        closed:
          type: integer
          description: The number of closed collection cases.
          format: int32
        requiresManualIntervention:
          type: integer
          description: The number of collection cases that require manual intervention.
          format: int32
        requireAttention:
          type: integer
          description: The number of collection cases that require immediate attention.
          format: int32
      additionalProperties: false
      description: "Represents a summary of collection case counts for different statuses.\r\nThis DTO provides an overview of collection cases based on their current state."
    CollectionCaseOverviewCountResponseDTOApiResponseDTO:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/LocalisedErrorDTO'
          nullable: true
        success:
          type: boolean
        applicableEntitiesCount:
          type: integer
          format: int32
        requestedEntitiesCount:
          type: integer
          format: int32
        succeededEntitiesCount:
          type: integer
          format: int32
          readOnly: true
        isSynchronous:
          type: boolean
        data:
          allOf:
            - $ref: '#/components/schemas/CollectionCaseOverviewCountResponseDTO'
          description: The updated entity in case of modifications or creation
          nullable: true
      additionalProperties: false
    CollectionCaseQuickFilter:
      enum:
        - all
        - active
        - requiresmanualintervention
        - closed
        - requireattention
      type: string
    CollectionCaseStepDTO:
      type: object
      properties:
        id:
          type: string
          description: The unique identifier of the collection case step.
          nullable: true
        stepId:
          type: string
          description: The unique identifier of the step definition.
          nullable: true
        order:
          type: integer
          description: The order in which this step should be executed.
          format: int32
        name:
          type: string
          description: The name of the step.
          nullable: true
        triggerDays:
          type: integer
          description: The number of days after which this step should be triggered.
          format: int32
        executeAt:
          type: string
          description: The date and time when this step should be executed.
          format: date-time
        stepType:
          allOf:
            - $ref: '#/components/schemas/CollectionStepType'
          description: The type of collection step.
          nullable: true
        communicationType:
          allOf:
            - $ref: '#/components/schemas/CommunicationType'
          description: The type of communication to be used for this step.
          nullable: true
        communicationLevel:
          allOf:
            - $ref: '#/components/schemas/CollectionStepLevel'
          description: The level of communication for this step.
          nullable: true
        chargeType:
          allOf:
            - $ref: '#/components/schemas/CollectionChargeType'
          description: The type of charge associated with this step.
          nullable: true
        charges:
          allOf:
            - $ref: '#/components/schemas/StepChargeDTO'
          description: The charges associated with this step.
          nullable: true
        executedAt:
          type: string
          description: The date and time when this step was executed.
          format: date-time
        documentsSentAt:
          type: string
          description: The date and time when documents were sent for this step.
          format: date-time
        documentId:
          type: string
          description: The unique identifier of the document associated with this step.
          nullable: true
        emailId:
          type: string
          description: The unique identifier of the email associated with this step.
          nullable: true
        status:
          allOf:
            - $ref: '#/components/schemas/CollectionStepStatus'
          description: The current status of this collection step.
          nullable: true
        failureReasonCode:
          allOf:
            - $ref: '#/components/schemas/LocalisedErrorDTO'
          description: The localized error code if the step execution failed.
          nullable: true
        failureDetails:
          type: string
          description: Detailed information about any failure that occurred during step execution.
          nullable: true
        supportsExternalPrinting:
          type: boolean
          description: Indicates whether the document can be printed externally.
        retryCount:
          type: integer
          description: The number of times this step has been retried.
          format: int32
      additionalProperties: false
      description: "Represents a step in the collection case workflow.\r\nThis DTO contains information about the step's execution, communication details, and status."
    CollectionChargeType:
      enum:
        - none
        - fixed
        - percentageofopenamount
        - tieredpercentageofopenamount
      type: string
    CollectionFlowStatus:
      enum:
        - active
        - manuallyclosed
        - automaticallyclosed
      type: string
    CollectionStepLevel:
      enum:
        - collection
        - reminder
        - noticeofdefault
      type: string
    CollectionStepStatus:
      enum:
        - pending
        - waitingformanualsend
        - closed
        - inprogress
        - skipped
        - generatingdocuments
        - failed
        - printing
      type: string
    CollectionStepType:
      enum:
        - communication
        - manualintervention
      type: string
    CommunicationDocumentType:
      enum:
        - maindocument
        - additionaldocument
        - emailbody
      type: string
    CommunicationEntryQuickFilter:
      enum:
        - all
        - failed
      type: string
    CommunicationEntryStatus:
      enum:
        - generating
        - sending
        - failed
        - successful
        - skipped
      type: string
    CommunicationType:
      enum:
        - postal
        - none
        - email
        - manual
        - skipifsdd
        - sms
      type: string
    CompareInfo:
      type: object
      properties:
        name:
          type: string
          nullable: true
          readOnly: true
        version:
          allOf:
            - $ref: '#/components/schemas/SortVersion'
          nullable: true
          readOnly: true
        lcid:
          type: integer
          format: int32
          readOnly: true
      additionalProperties: false
    ConsumerGroupOrigin:
      enum:
        - manual
        - systemgenerated
      type: string
    ConsumerGroupSuggestion:
      enum:
        - frompropertygroup
        - originmanual
        - originsystemgenerated
      type: string
    ConsumptionCalculationInputDTO:
      type: object
      properties:
        serviceLocationId:
          type: string
          description: Identifier of the service location
          nullable: true
        externalChannelIdentifier:
          type: string
          description: External channel identifier
          nullable: true
        meterSerialNumber:
          type: string
          description: Serial number of the meter
          nullable: true
        timeZone:
          type: string
          description: Time zone for the measurements
          nullable: true
        utilityType:
          allOf:
            - $ref: '#/components/schemas/UtilityType'
          description: Type of utility being measured
          nullable: true
        meteringType:
          allOf:
            - $ref: '#/components/schemas/MeteringType'
          description: Type of metering used
          nullable: true
        unitOfMeasure:
          allOf:
            - $ref: '#/components/schemas/UnitOfMeasure'
          description: Unit of measure for the measurements
          nullable: true
        timeOfUse:
          type: string
          description: Time of use identifier
          nullable: true
        firstMeasurement:
          allOf:
            - $ref: '#/components/schemas/ConsumptionCalculationMeasurementDTO'
          description: First measurement in the period
          nullable: true
        secondMeasurement:
          allOf:
            - $ref: '#/components/schemas/ConsumptionCalculationMeasurementDTO'
          description: Second measurement in the period
          nullable: true
        consumptionValue:
          type: number
          description: Calculated consumption value
          format: double
        startDateTime:
          type: string
          description: Start date and time of the calculation period
          format: date-time
        endDateTime:
          type: string
          description: End date and time of the calculation period
          format: date-time
      additionalProperties: false
      description: Represents input data for consumption calculations
    ConsumptionCalculationMeasurementDTO:
      type: object
      properties:
        value:
          type: number
          description: Value of the measurement
          format: double
        readingDateTime:
          type: string
          description: Date and time when the reading was taken
          format: date-time
        unitOfMeasure:
          allOf:
            - $ref: '#/components/schemas/UnitOfMeasure'
          description: Unit of measure for the reading
          nullable: true
      additionalProperties: false
      description: Represents a measurement used in consumption calculations
    ConsumptionOrigin:
      enum:
        - actual
        - manual
        - frompreviousyear
        - fromconsumergroup
        - forecast
      type: string
    ContactType:
      enum:
        - email
        - telephone
        - mobiletelephone
        - website
      type: string
    ContentResult:
      type: object
      properties:
        content:
          type: string
          nullable: true
        contentType:
          type: string
          nullable: true
        statusCode:
          type: integer
          format: int32
          nullable: true
      additionalProperties: false
    ContractBillingMethod:
      enum:
        - credit
        - prepayment
      type: string
    ContractQuickFilter:
      enum:
        - all
        - ongoing
        - draft
        - blocked
        - requireattention
      type: string
    ContractScenarioType:
      enum:
        - welcome
        - termination
        - locationsadded
        - locationsremoved
      type: string
    ContractServicesUpdatedAction:
      enum:
        - servicesadded
        - servicesremoved
        - servicesupdated
        - servicescorrected
      type: string
    ContractStatus:
      enum:
        - draft
        - sent
        - signed
        - cancelled
        - terminated
      type: string
    CountryCode:
      enum:
        - aut
        - bel
        - bgr
        - cyp
        - cze
        - dnk
        - est
        - fin
        - fra
        - deu
        - grc
        - hun
        - irl
        - ita
        - lva
        - ltu
        - lux
        - mlt
        - nld
        - pol
        - prt
        - rou
        - svk
        - esp
        - swe
        - gbr
        - che
        - isl
        - nor
        - rus
        - blr
        - ukr
        - mda
        - srb
        - alb
        - mne
        - mkd
        - tur
        - lie
        - smr
        - and
        - mco
        - bih
        - bra
        - usa
        - sgp
        - zaf
        - cuw
      type: string
    CreateAnnualStatementRequest:
      type: object
      properties:
        year:
          type: integer
          description: The year for which the annual statement should be generated.
          format: int32
      additionalProperties: false
      description: "Represents a request to create an annual statement.\r\nThis DTO is used to generate an annual statement for a specific year."
    CreateIncomingInvoiceRequest:
      type: object
      properties:
        propertyGroupId:
          type: string
          description: The ID of the property group associated with this invoice.
          nullable: true
        invoiceNumber:
          type: string
          description: The unique invoice number assigned by the supplier.
          nullable: true
        invoiceDate:
          type: string
          description: The date when the invoice was issued.
          format: date-time
        description:
          type: string
          description: A description of the goods or services covered by the invoice.
          nullable: true
        startDate:
          type: string
          description: The start date of the period covered by the invoice.
          format: date-time
        endDate:
          type: string
          description: The end date of the period covered by the invoice.
          format: date-time
        totalAmountExclVat:
          type: number
          description: The total amount excluding VAT.
          format: double
        totalAmountInclVat:
          type: number
          description: The total amount including VAT.
          format: double
      additionalProperties: false
      description: "Represents a request to create a new incoming invoice.\r\nThis DTO is used to register invoices received from suppliers or service providers."
    CreateInvoiceLinesRequest:
      type: object
      properties:
        quantity:
          type: number
          description: The quantity of the item or service.
          format: double
        unitOfMeasure:
          allOf:
            - $ref: '#/components/schemas/UnitOfMeasure'
          description: 'The unit of measure for the quantity (e.g., pieces, hours, etc.).'
          nullable: true
        billingItemId:
          type: string
          description: The unique identifier of the billing item.
          nullable: true
        unitPrice:
          type: number
          description: The price per unit of the item or service.
          format: double
        amountInclVAT:
          type: number
          description: The total amount including VAT for this line item.
          format: double
        amountExclVAT:
          type: number
          description: The total amount excluding VAT for this line item.
          format: double
        lineType:
          allOf:
            - $ref: '#/components/schemas/InvoiceLineType'
          description: 'The type of line item (e.g., product, service, etc.).'
          nullable: true
        serviceLocationId:
          type: string
          description: The unique identifier of the service location.
          nullable: true
        startDateTime:
          type: string
          description: The start date and time of the service period.
          format: date-time
        endDateTime:
          type: string
          description: The end date and time of the service period.
          format: date-time
        taxCodeId:
          type: string
          description: The unique identifier of the tax code applied to this line item.
          nullable: true
        description:
          type: string
          description: A description of the line item.
          nullable: true
      additionalProperties: false
      description: "Represents a line item in an invoice.\r\nThis DTO contains the details of individual items or services being billed."
    CreateInvoiceRequest:
      type: object
      properties:
        invoiceNum:
          type: string
          description: The unique invoice number assigned to this invoice.
          nullable: true
        status:
          allOf:
            - $ref: '#/components/schemas/InvoiceStatus'
          description: The current status of the invoice.
          nullable: true
        invoiceDate:
          type: string
          description: The date when the invoice was created.
          format: date-time
        invoiceType:
          allOf:
            - $ref: '#/components/schemas/InvoiceType'
          description: 'The type of invoice (e.g., regular, credit note, etc.).'
          nullable: true
        remainingInvoiceAmount:
          type: number
          description: The remaining amount to be paid on this invoice.
          format: double
          nullable: true
        totalInvoiceAmountExclVAT:
          type: number
          description: The total invoice amount excluding VAT.
          format: double
          nullable: true
        totalInvoiceAmountInclVAT:
          type: number
          description: The total invoice amount including VAT.
          format: double
          nullable: true
        contractId:
          type: string
          description: The unique identifier of the associated contract.
          nullable: true
        creditedInvoiceId:
          type: string
          description: The ID of the invoice being credited (if this is a credit note).
          nullable: true
        contractNumber:
          type: string
          description: The contract number associated with this invoice.
          nullable: true
        customerId:
          type: string
          description: The unique identifier of the customer.
          nullable: true
        companyBankAccountId:
          type: string
          description: The ID of the company's bank account for receiving payments.
          nullable: true
        propertyGroups:
          type: array
          items:
            $ref: '#/components/schemas/PropertyGroupReferenceDTO'
          description: List of property groups associated with this invoice.
          nullable: true
        paymentMethod:
          allOf:
            - $ref: '#/components/schemas/PaymentMethod'
          description: The method of payment for this invoice.
          nullable: true
        paymentReference:
          type: string
          description: The payment reference number for tracking payments.
          nullable: true
        externalReference:
          type: string
          description: An external reference number for integration with other systems.
          nullable: true
        periodStartDateTime:
          type: string
          description: The start date and time of the billing period.
          format: date-time
        periodEndDateTime:
          type: string
          description: The end date and time of the billing period.
          format: date-time
        dueDate:
          type: string
          description: The date when the invoice payment is due.
          format: date-time
        noteToCustomer:
          type: string
          description: Additional notes or comments for the customer.
          nullable: true
        sent:
          allOf:
            - $ref: '#/components/schemas/SentStatus'
          description: The current sent status of the invoice.
          nullable: true
        lines:
          type: array
          items:
            $ref: '#/components/schemas/CreateInvoiceLinesRequest'
          description: List of line items in the invoice.
          nullable: true
      additionalProperties: false
      description: "Represents a request to create a new invoice.\r\nThis DTO contains all the necessary information to create a complete invoice including header details and line items."
    CreateNewOutgoingBankingTransactionRequest:
      type: object
      properties:
        outgoingBankingTransactionType:
          allOf:
            - $ref: '#/components/schemas/OutgoingBankingTransactionType'
          description: The type of outgoing banking transaction to create.
          nullable: true
        collectionDate:
          type: string
          description: The date and time when the transaction should be collected.
          format: date-time
        companyBankAccountId:
          type: string
          description: The ID of the company bank account to be used for the transaction.
          nullable: true
        entries:
          type: array
          items:
            $ref: '#/components/schemas/AddEntryToOutgoingBankingTransactionRequest'
          description: "A list of entries to be included in the transaction.\r\nEach entry can be either invoice-based or a manual entry."
          nullable: true
      additionalProperties: false
      description: "Represents a request to create a new outgoing banking transaction.\r\nThis DTO is used to create a new transaction with multiple entries and associated details."
    CreatePropertyGroupBillingPeriodRequest:
      type: object
      properties:
        startDateTime:
          type: string
          description: The start date and time of the billing period.
          format: date-time
        endDateTime:
          type: string
          description: The end date and time of the billing period.
          format: date-time
      additionalProperties: false
      description: "Represents a request to create a new billing period for a property group.\r\nThis DTO is used to define the time period for which billing calculations will be performed."
    CultureInfo:
      enum:
        - ''
        - aa
        - aa-DJ
        - aa-ER
        - aa-ET
        - af
        - af-NA
        - af-ZA
        - agq
        - agq-CM
        - ak
        - ak-GH
        - am
        - am-ET
        - ar
        - ar-001
        - ar-AE
        - ar-BH
        - ar-DJ
        - ar-DZ
        - ar-EG
        - ar-ER
        - ar-IL
        - ar-IQ
        - ar-JO
        - ar-KM
        - ar-KW
        - ar-LB
        - ar-LY
        - ar-MA
        - ar-MR
        - ar-OM
        - ar-PS
        - ar-QA
        - ar-SA
        - ar-SD
        - ar-SO
        - ar-SS
        - ar-SY
        - ar-TD
        - ar-TN
        - ar-YE
        - arn
        - arn-CL
        - as
        - as-IN
        - asa
        - asa-TZ
        - ast
        - ast-ES
        - az
        - az-Cyrl
        - az-Cyrl-AZ
        - az-Latn
        - az-Latn-AZ
        - ba
        - ba-RU
        - bas
        - bas-CM
        - be
        - be-BY
        - bem
        - bem-ZM
        - bez
        - bez-TZ
        - bg
        - bg-BG
        - bm
        - bm-ML
        - bn
        - bn-BD
        - bn-IN
        - bo
        - bo-CN
        - bo-IN
        - br
        - br-FR
        - brx
        - brx-IN
        - bs
        - bs-Cyrl
        - bs-Cyrl-BA
        - bs-Latn
        - bs-Latn-BA
        - byn
        - byn-ER
        - ca
        - ca-AD
        - ca-ES
        - ca-FR
        - ca-IT
        - ccp
        - ccp-BD
        - ccp-IN
        - ce
        - ce-RU
        - ceb
        - ceb-PH
        - cgg
        - cgg-UG
        - chr
        - chr-US
        - ckb
        - ckb-IQ
        - ckb-IR
        - co
        - co-FR
        - cs
        - cs-CZ
        - cu
        - cu-RU
        - cy
        - cy-GB
        - da
        - da-DK
        - da-GL
        - dav
        - dav-KE
        - de
        - de-AT
        - de-BE
        - de-CH
        - de-DE
        - de-IT
        - de-LI
        - de-LU
        - dje
        - dje-NE
        - dsb
        - dsb-DE
        - dua
        - dua-CM
        - dv
        - dv-MV
        - dyo
        - dyo-SN
        - dz
        - dz-BT
        - ebu
        - ebu-KE
        - ee
        - ee-GH
        - ee-TG
        - el
        - el-CY
        - el-GR
        - en
        - en-001
        - en-150
        - en-AE
        - en-AG
        - en-AI
        - en-AS
        - en-AT
        - en-AU
        - en-BB
        - en-BE
        - en-BI
        - en-BM
        - en-BS
        - en-BW
        - en-BZ
        - en-CA
        - en-CC
        - en-CH
        - en-CK
        - en-CM
        - en-CX
        - en-CY
        - en-DE
        - en-DK
        - en-DM
        - en-ER
        - en-FI
        - en-FJ
        - en-FK
        - en-FM
        - en-GB
        - en-GD
        - en-GG
        - en-GH
        - en-GI
        - en-GM
        - en-GU
        - en-GY
        - en-HK
        - en-IE
        - en-IL
        - en-IM
        - en-IN
        - en-IO
        - en-JE
        - en-JM
        - en-KE
        - en-KI
        - en-KN
        - en-KY
        - en-LC
        - en-LR
        - en-LS
        - en-MG
        - en-MH
        - en-MO
        - en-MP
        - en-MS
        - en-MT
        - en-MU
        - en-MW
        - en-MY
        - en-NA
        - en-NF
        - en-NG
        - en-NL
        - en-NR
        - en-NU
        - en-NZ
        - en-PG
        - en-PH
        - en-PK
        - en-PN
        - en-PR
        - en-PW
        - en-RW
        - en-SB
        - en-SC
        - en-SD
        - en-SE
        - en-SG
        - en-SH
        - en-SI
        - en-SL
        - en-SS
        - en-SX
        - en-SZ
        - en-TC
        - en-TK
        - en-TO
        - en-TT
        - en-TV
        - en-TZ
        - en-UG
        - en-UM
        - en-US
        - en-US-POSIX
        - en-VC
        - en-VG
        - en-VI
        - en-VU
        - en-WS
        - en-ZA
        - en-ZM
        - en-ZW
        - eo
        - eo-001
        - es
        - es-419
        - es-AR
        - es-BO
        - es-BR
        - es-BZ
        - es-CL
        - es-CO
        - es-CR
        - es-CU
        - es-DO
        - es-EC
        - es-ES
        - es-GQ
        - es-GT
        - es-HN
        - es-MX
        - es-NI
        - es-PA
        - es-PE
        - es-PH
        - es-PR
        - es-PY
        - es-SV
        - es-US
        - es-UY
        - es-VE
        - et
        - et-EE
        - eu
        - eu-ES
        - ewo
        - ewo-CM
        - fa
        - fa-AF
        - fa-IR
        - ff
        - ff-Latn
        - ff-Latn-BF
        - ff-Latn-CM
        - ff-Latn-GH
        - ff-Latn-GM
        - ff-Latn-GN
        - ff-Latn-GW
        - ff-Latn-LR
        - ff-Latn-MR
        - ff-Latn-NE
        - ff-Latn-NG
        - ff-Latn-SL
        - ff-Latn-SN
        - fi
        - fi-FI
        - fil
        - fil-PH
        - fo
        - fo-DK
        - fo-FO
        - fr
        - fr-BE
        - fr-BF
        - fr-BI
        - fr-BJ
        - fr-BL
        - fr-CA
        - fr-CD
        - fr-CF
        - fr-CG
        - fr-CH
        - fr-CI
        - fr-CM
        - fr-DJ
        - fr-DZ
        - fr-FR
        - fr-GA
        - fr-GF
        - fr-GN
        - fr-GP
        - fr-GQ
        - fr-HT
        - fr-KM
        - fr-LU
        - fr-MA
        - fr-MC
        - fr-MF
        - fr-MG
        - fr-ML
        - fr-MQ
        - fr-MR
        - fr-MU
        - fr-NC
        - fr-NE
        - fr-PF
        - fr-PM
        - fr-RE
        - fr-RW
        - fr-SC
        - fr-SN
        - fr-SY
        - fr-TD
        - fr-TG
        - fr-TN
        - fr-VU
        - fr-WF
        - fr-YT
        - fur
        - fur-IT
        - fy
        - fy-NL
        - ga
        - ga-IE
        - gd
        - gd-GB
        - gl
        - gl-ES
        - gn
        - gn-PY
        - gsw
        - gsw-CH
        - gsw-FR
        - gsw-LI
        - gu
        - gu-IN
        - guz
        - guz-KE
        - gv
        - gv-IM
        - ha
        - ha-GH
        - ha-NE
        - ha-NG
        - haw
        - haw-US
        - he
        - he-IL
        - hi
        - hi-IN
        - hr
        - hr-BA
        - hr-HR
        - hsb
        - hsb-DE
        - hu
        - hu-HU
        - hy
        - hy-AM
        - ia
        - ia-001
        - id
        - id-ID
        - ig
        - ig-NG
        - ii
        - ii-CN
        - is
        - is-IS
        - it
        - it-CH
        - it-IT
        - it-SM
        - it-VA
        - iu
        - iu-CA
        - iu-Latn
        - iu-Latn-CA
        - ja
        - ja-JP
        - jgo
        - jgo-CM
        - jmc
        - jmc-TZ
        - jv
        - jv-ID
        - ka
        - ka-GE
        - kab
        - kab-DZ
        - kam
        - kam-KE
        - kde
        - kde-TZ
        - kea
        - kea-CV
        - khq
        - khq-ML
        - ki
        - ki-KE
        - kk
        - kk-KZ
        - kkj
        - kkj-CM
        - kl
        - kl-GL
        - kln
        - kln-KE
        - km
        - km-KH
        - kn
        - kn-IN
        - ko
        - ko-KP
        - ko-KR
        - kok
        - kok-IN
        - ks
        - ks-IN
        - ksb
        - ksb-TZ
        - ksf
        - ksf-CM
        - ksh
        - ksh-DE
        - kw
        - kw-GB
        - ky
        - ky-KG
        - lag
        - lag-TZ
        - lb
        - lb-LU
        - lg
        - lg-UG
        - lkt
        - lkt-US
        - ln
        - ln-AO
        - ln-CD
        - ln-CF
        - ln-CG
        - lo
        - lo-LA
        - lrc
        - lrc-IQ
        - lrc-IR
        - lt
        - lt-LT
        - lu
        - lu-CD
        - luo
        - luo-KE
        - luy
        - luy-KE
        - lv
        - lv-LV
        - mas
        - mas-KE
        - mas-TZ
        - mer
        - mer-KE
        - mfe
        - mfe-MU
        - mg
        - mg-MG
        - mgh
        - mgh-MZ
        - mgo
        - mgo-CM
        - mi
        - mi-NZ
        - mk
        - mk-MK
        - ml
        - ml-IN
        - mn
        - mn-MN
        - mn-Mong
        - mn-Mong-CN
        - mn-Mong-MN
        - moh
        - moh-CA
        - mr
        - mr-IN
        - ms
        - ms-BN
        - ms-MY
        - ms-SG
        - mt
        - mt-MT
        - mua
        - mua-CM
        - my
        - my-MM
        - mzn
        - mzn-IR
        - naq
        - naq-NA
        - nb
        - nb-NO
        - nb-SJ
        - nd
        - nd-ZW
        - nds
        - nds-DE
        - nds-NL
        - ne
        - ne-IN
        - ne-NP
        - nl
        - nl-AW
        - nl-BE
        - nl-BQ
        - nl-CW
        - nl-NL
        - nl-SR
        - nl-SX
        - nmg
        - nmg-CM
        - nn
        - nn-NO
        - nnh
        - nnh-CM
        - nqo
        - nqo-GN
        - nr
        - nr-ZA
        - nso
        - nso-ZA
        - nus
        - nus-SS
        - nyn
        - nyn-UG
        - oc
        - oc-FR
        - om
        - om-ET
        - om-KE
        - or
        - or-IN
        - os
        - os-GE
        - os-RU
        - pa
        - pa-Arab
        - pa-Arab-PK
        - pa-Guru
        - pa-Guru-IN
        - pl
        - pl-PL
        - prg
        - prg-001
        - ps
        - ps-AF
        - ps-PK
        - pt
        - pt-AO
        - pt-BR
        - pt-CH
        - pt-CV
        - pt-GQ
        - pt-GW
        - pt-LU
        - pt-MO
        - pt-MZ
        - pt-PT
        - pt-ST
        - pt-TL
        - qu
        - qu-BO
        - qu-EC
        - qu-PE
        - quc
        - quc-GT
        - rm
        - rm-CH
        - rn
        - rn-BI
        - ro
        - ro-MD
        - ro-RO
        - rof
        - rof-TZ
        - ru
        - ru-BY
        - ru-KG
        - ru-KZ
        - ru-MD
        - ru-RU
        - ru-UA
        - rw
        - rw-RW
        - rwk
        - rwk-TZ
        - sa
        - sa-IN
        - sah
        - sah-RU
        - saq
        - saq-KE
        - sbp
        - sbp-TZ
        - sd
        - sd-PK
        - se
        - se-FI
        - se-NO
        - se-SE
        - seh
        - seh-MZ
        - ses
        - ses-ML
        - sg
        - sg-CF
        - shi
        - shi-Latn
        - shi-Latn-MA
        - shi-Tfng
        - shi-Tfng-MA
        - si
        - si-LK
        - sk
        - sk-SK
        - sl
        - sl-SI
        - sma
        - sma-NO
        - sma-SE
        - smj
        - smj-NO
        - smj-SE
        - smn
        - smn-FI
        - sms
        - sms-FI
        - sn
        - sn-ZW
        - so
        - so-DJ
        - so-ET
        - so-KE
        - so-SO
        - sq
        - sq-AL
        - sq-MK
        - sq-XK
        - sr
        - sr-Cyrl
        - sr-Cyrl-BA
        - sr-Cyrl-ME
        - sr-Cyrl-RS
        - sr-Cyrl-XK
        - sr-Latn
        - sr-Latn-BA
        - sr-Latn-ME
        - sr-Latn-RS
        - sr-Latn-XK
        - ss
        - ss-SZ
        - ss-ZA
        - ssy
        - ssy-ER
        - st
        - st-LS
        - st-ZA
        - sv
        - sv-AX
        - sv-FI
        - sv-SE
        - sw
        - sw-CD
        - sw-KE
        - sw-TZ
        - sw-UG
        - syr
        - syr-SY
        - ta
        - ta-IN
        - ta-LK
        - ta-MY
        - ta-SG
        - te
        - te-IN
        - teo
        - teo-KE
        - teo-UG
        - tg
        - tg-TJ
        - th
        - th-TH
        - ti
        - ti-ER
        - ti-ET
        - tig
        - tig-ER
        - tk
        - tk-TM
        - tn
        - tn-BW
        - tn-ZA
        - to
        - to-TO
        - tr
        - tr-CY
        - tr-TR
        - ts
        - ts-ZA
        - tt
        - tt-RU
        - twq
        - twq-NE
        - tzm
        - tzm-MA
        - ug
        - ug-CN
        - uk
        - uk-UA
        - ur
        - ur-IN
        - ur-PK
        - uz
        - uz-Arab
        - uz-Arab-AF
        - uz-Cyrl
        - uz-Cyrl-UZ
        - uz-Latn
        - uz-Latn-UZ
        - vai
        - vai-Latn
        - vai-Latn-LR
        - vai-Vaii
        - vai-Vaii-LR
        - ve
        - ve-ZA
        - vi
        - vi-VN
        - vo
        - vo-001
        - vun
        - vun-TZ
        - wae
        - wae-CH
        - wal
        - wal-ET
        - wo
        - wo-SN
        - xh
        - xh-ZA
        - xog
        - xog-UG
        - yav
        - yav-CM
        - yi
        - yi-001
        - yo
        - yo-BJ
        - yo-NG
        - zgh
        - zgh-MA
        - zh
        - zh-Hans
        - zh-Hans-CN
        - zh-Hans-HK
        - zh-Hans-MO
        - zh-Hans-SG
        - zh-Hant
        - zh-Hant-HK
        - zh-Hant-MO
        - zh-Hant-TW
        - zu
        - zu-ZA
      type: string
      additionalProperties: false
    CultureTypes:
      enum:
        - NeutralCultures
        - SpecificCultures
        - InstalledWin32Cultures
        - AllCultures
        - UserCustomCulture
        - ReplacementCultures
        - WindowsOnlyCultures
        - FrameworkCultures
      type: string
    CustAgingBucketType:
      enum:
        - anyopenexcloverdue
        - anyoverdue
        - anyoverdue30
        - anyoverdue60
        - anyoverdue90
        - anyoverduemorethan90
      type: string
    CustAgingHeaderDTO:
      type: object
      properties:
        debtor:
          allOf:
            - $ref: '#/components/schemas/DebtorDTO'
          description: Information about the debtor associated with this aging analysis.
          nullable: true
        lastPaymentDate:
          type: string
          description: The date of the most recent payment received from the customer.
          format: date-time
        oldestOpenDebitTransactionReference:
          type: string
          description: 'Reference to the oldest open debit transaction (e.g., invoice number).'
          nullable: true
        openCredits:
          type: number
          description: Sum of all open transactions in favor of the customer (credits).
          format: double
        totalCreditTxOpen:
          type: integer
          description: Total number of open credit transactions.
          format: int32
        openDebits:
          type: number
          description: Sum of all open transactions to be paid by the customer (debits).
          format: double
        totalDebitTxOpen:
          type: integer
          description: Total number of open debit transactions.
          format: int32
        totalOpenNotOverdue:
          type: number
          description: Total amount of open transactions that are not yet overdue.
          format: double
        totalOpenNotOverdueTx:
          type: number
          description: Total number of open transactions that are not yet overdue.
          format: double
        totalOverdue30D:
          type: number
          description: Total amount of transactions overdue between 0 and 30 days (excluding end date).
          format: double
        totalOverdue30DTx:
          type: integer
          description: Total number of transactions overdue between 0 and 30 days.
          format: int32
        totalOverdue60D:
          type: number
          description: Total amount of transactions overdue between 30 and 60 days (excluding end date).
          format: double
        totalOverdue60DTx:
          type: integer
          description: Total number of transactions overdue between 30 and 60 days.
          format: int32
        totalOverdue90D:
          type: number
          description: Total amount of transactions overdue between 60 and 90 days (excluding end date).
          format: double
        totalOverdue90DTx:
          type: integer
          description: Total number of transactions overdue between 60 and 90 days.
          format: int32
        totalOverdueOver90D:
          type: number
          description: Total amount of transactions overdue for more than 90 days.
          format: double
        totalOverdueOver90DTx:
          type: integer
          description: Total number of transactions overdue for more than 90 days.
          format: int32
        totalCollectionCostsOpen:
          type: number
          description: 'Total amount of open collection costs, including both open and potentially overdue costs.'
          format: double
        totalCollectionCostTx:
          type: integer
          description: Total number of collection cost transactions.
          format: int32
        totalOpen:
          type: number
          description: Total amount of all open transactions.
          format: double
        totalOpenTx:
          type: integer
          description: Total number of all open transactions.
          format: int32
        flowActive:
          type: boolean
          description: Indicates whether there is any active collection flow on any of the underlying transactions.
        propertyGroups:
          type: array
          items:
            $ref: '#/components/schemas/PropertyGroupReferenceDTO'
          description: List of property groups associated with this aging analysis.
          nullable: true
      additionalProperties: false
      description: "Represents the header information for customer aging analysis.\r\nThis DTO contains aggregated financial information about a customer's outstanding transactions and aging buckets."
    CustAgingHeaderDTOPagedResponseModelDTO:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/CustAgingHeaderDTO'
          nullable: true
        hasNextPage:
          type: boolean
        nextPageToken:
          type: string
          nullable: true
        totalRecords:
          type: integer
          format: int32
        sortableFields:
          type: array
          items:
            type: string
          nullable: true
        aggregateDetails:
          type: array
          items:
            $ref: '#/components/schemas/AggregateDetailsDTO'
          nullable: true
      additionalProperties: false
    CustAgingHeaderDTOPagedResponseModelDTOApiResponseDTO:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/LocalisedErrorDTO'
          nullable: true
        success:
          type: boolean
        applicableEntitiesCount:
          type: integer
          format: int32
        requestedEntitiesCount:
          type: integer
          format: int32
        succeededEntitiesCount:
          type: integer
          format: int32
          readOnly: true
        isSynchronous:
          type: boolean
        data:
          allOf:
            - $ref: '#/components/schemas/CustAgingHeaderDTOPagedResponseModelDTO'
          description: The updated entity in case of modifications or creation
          nullable: true
      additionalProperties: false
    CustAgingLineDTO:
      type: object
      properties:
        transactionId:
          type: string
          description: The unique identifier of the transaction.
          nullable: true
        transactionReferenceType:
          type: string
          description: 'The type of reference for this transaction (e.g., invoice, credit note).'
          nullable: true
        transactionReferenceId:
          type: string
          description: The unique identifier of the referenced transaction.
          nullable: true
        referenceNumber:
          type: string
          description: The reference number associated with this transaction.
          nullable: true
        openAmount:
          type: number
          description: The remaining open amount for this transaction.
          format: double
        displayName:
          type: string
          description: The display name for this transaction.
          nullable: true
        customerAccountNumber:
          type: string
          description: The account number of the customer associated with this transaction.
          nullable: true
        customerType:
          allOf:
            - $ref: '#/components/schemas/CustomerType'
          description: The type of customer associated with this transaction.
          nullable: true
        transactionType:
          allOf:
            - $ref: '#/components/schemas/TransactionType'
          description: 'The type of transaction (e.g., debit, credit).'
          nullable: true
        transactionDate:
          type: string
          description: The date when this transaction was created.
          format: date-time
        transactionDueDate:
          type: string
          description: The date when this transaction is due for payment.
          format: date-time
        openCredit:
          type: number
          description: The open credit amount for this transaction.
          format: double
        totalOpenNotOverdue:
          type: number
          description: The amount that is open but not yet overdue.
          format: double
        totalOverdue30D:
          type: number
          description: The amount overdue between 0 and 30 days.
          format: double
        totalOverdue60D:
          type: number
          description: The amount overdue between 30 and 60 days.
          format: double
        totalOverdue90D:
          type: number
          description: The amount overdue between 60 and 90 days.
          format: double
        totalOverdueOver90D:
          type: number
          description: The amount overdue for more than 90 days.
          format: double
        propertyGroups:
          type: array
          items:
            $ref: '#/components/schemas/PropertyGroupReferenceDTO'
          description: List of property groups associated with this transaction.
          nullable: true
        collectionCaseDetails:
          allOf:
            - $ref: '#/components/schemas/CollectionCaseDetailsDTO'
          description: Details about any collection case associated with this transaction.
          nullable: true
      additionalProperties: false
      description: "Represents a detailed line item in the customer aging analysis.\r\nThis DTO contains information about individual transactions and their aging status."
    CustAgingLineDTOPagedResponseModelDTO:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/CustAgingLineDTO'
          nullable: true
        hasNextPage:
          type: boolean
        nextPageToken:
          type: string
          nullable: true
        totalRecords:
          type: integer
          format: int32
        sortableFields:
          type: array
          items:
            type: string
          nullable: true
        aggregateDetails:
          type: array
          items:
            $ref: '#/components/schemas/AggregateDetailsDTO'
          nullable: true
      additionalProperties: false
    CustAgingLineDTOPagedResponseModelDTOApiResponseDTO:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/LocalisedErrorDTO'
          nullable: true
        success:
          type: boolean
        applicableEntitiesCount:
          type: integer
          format: int32
        requestedEntitiesCount:
          type: integer
          format: int32
        succeededEntitiesCount:
          type: integer
          format: int32
          readOnly: true
        isSynchronous:
          type: boolean
        data:
          allOf:
            - $ref: '#/components/schemas/CustAgingLineDTOPagedResponseModelDTO'
          description: The updated entity in case of modifications or creation
          nullable: true
      additionalProperties: false
    CustAgingOverviewCountResponseDTO:
      type: object
      properties:
        openCredits:
          type: number
          description: Total amount of open credit transactions.
          format: double
        openDebits:
          type: number
          description: Sum of all open transactions to be paid by the customer
          format: double
        totalOpenNotOverdue:
          type: number
          description: Open amount and not yet overdue
          format: double
        totalOverdue30D:
          type: number
          description: Total amount of transactions overdue between 0 and 30 days (excluding end date).
          format: double
        totalOverdue60D:
          type: number
          description: Total amount of transactions overdue between 30 and 60 days (excluding end date).
          format: double
        totalOverdue90D:
          type: number
          description: Total amount of transactions overdue between 60 and 90 days (excluding end date).
          format: double
        totalOverdueOver90D:
          type: number
          description: Total amount of transactions overdue for more than 90 days.
          format: double
        totalCollectionCostsOpen:
          type: number
          description: 'Total amount of open collection costs, including both open and potentially overdue costs.'
          format: double
        totalOpen:
          type: number
          description: Total amount of all open transactions.
          format: double
      additionalProperties: false
      description: "Represents an overview of customer aging counts and amounts.\r\nThis DTO provides aggregated financial information about outstanding transactions across different aging buckets."
    CustAgingOverviewCountResponseDTOApiResponseDTO:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/LocalisedErrorDTO'
          nullable: true
        success:
          type: boolean
        applicableEntitiesCount:
          type: integer
          format: int32
        requestedEntitiesCount:
          type: integer
          format: int32
        succeededEntitiesCount:
          type: integer
          format: int32
          readOnly: true
        isSynchronous:
          type: boolean
        data:
          allOf:
            - $ref: '#/components/schemas/CustAgingOverviewCountResponseDTO'
          description: The updated entity in case of modifications or creation
          nullable: true
      additionalProperties: false
    CustomEntityPropertyDTO:
      type: object
      properties:
        customEntityPropertyTypeId:
          type: string
          nullable: true
        values:
          type: array
          items:
            $ref: '#/components/schemas/CustomEntityPropertyValueDTO'
          nullable: true
      additionalProperties: false
    CustomEntityPropertyTypeTagColor:
      enum:
        - blue
        - slate
        - green
        - yellow
        - orange
        - red
      type: string
    CustomEntityPropertyValueDTO:
      type: object
      properties:
        valueDecimal:
          type: number
          format: double
        valueString:
          type: string
          nullable: true
        valueBoolean:
          type: boolean
        valueNumber:
          type: integer
          format: int64
        valueDateTime:
          type: string
          format: date-time
          nullable: true
        valueDropdown:
          type: array
          items:
            type: string
          nullable: true
        startDateTime:
          type: string
          format: date-time
        endDateTime:
          type: string
          format: date-time
      additionalProperties: false
    CustomEntityPropertyValueType:
      enum:
        - string
        - number
        - decimal
        - boolean
        - datetime
        - dropdown
      type: string
    CustomerBalance:
      enum:
        - equaltozero
        - smallerthanzero
        - greaterthanzero
      type: string
    CustomerBankAccountDTO:
      type: object
      properties:
        id:
          type: string
          description: Gets or sets the unique identifier.
          nullable: true
        entityType:
          allOf:
            - $ref: '#/components/schemas/EntitySubjectType'
          description: Gets or sets the type of the entity.
          nullable: true
        createdDateTime:
          type: string
          description: Gets or sets the date and time when the entity was created.
          format: date-time
        discriminator:
          type: string
          description: Gets or sets the discriminator value.
          nullable: true
        _etag:
          type: string
          description: Gets or sets the ETag value.
          nullable: true
        requireAttention:
          type: boolean
          description: Gets a value indicating whether the entity requires attention.
          readOnly: true
        hasErrors:
          type: boolean
          description: Gets or sets a value indicating whether the entity has errors.
        hasWarnings:
          type: boolean
          description: Gets or sets a value indicating whether the entity has warnings.
        isReadOnly:
          type: boolean
          description: Gets or sets a value indicating whether the entity is read-only.
        organisationId:
          type: string
          description: Gets or sets the organization identifier.
          nullable: true
        customerId:
          type: string
          description: The unique identifier of the customer associated with this bank account.
          nullable: true
        activeMandate:
          allOf:
            - $ref: '#/components/schemas/CustomerMandateDTO'
          description: The currently active mandate for this bank account.
          nullable: true
        customerMandates:
          type: array
          items:
            $ref: '#/components/schemas/CustomerMandateDTO'
          description: List of all mandates associated with this bank account.
          nullable: true
        iban:
          type: string
          description: The International Bank Account Number (IBAN) for this account.
          nullable: true
        bic:
          type: string
          description: The Bank Identifier Code (BIC) for this account.
          nullable: true
        addedFromIncomingBankingTransaction:
          type: boolean
          description: Indicates whether this bank account was added from an incoming banking transaction.
        isDefault:
          type: boolean
          description: Indicates whether this is the default bank account for the customer.
        lastUsedDate:
          type: string
          description: The date and time when this bank account was last used.
          format: date-time
      additionalProperties: false
      description: "Represents a customer's bank account information.\r\nThis DTO contains details about the bank account, associated mandates, and usage information."
    CustomerBankAccountDTOApiResponseDTO:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/LocalisedErrorDTO'
          nullable: true
        success:
          type: boolean
        applicableEntitiesCount:
          type: integer
          format: int32
        requestedEntitiesCount:
          type: integer
          format: int32
        succeededEntitiesCount:
          type: integer
          format: int32
          readOnly: true
        isSynchronous:
          type: boolean
        data:
          allOf:
            - $ref: '#/components/schemas/CustomerBankAccountDTO'
          description: The updated entity in case of modifications or creation
          nullable: true
      additionalProperties: false
    CustomerBankAccountDTOPagedResponseModelDTO:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/CustomerBankAccountDTO'
          nullable: true
        hasNextPage:
          type: boolean
        nextPageToken:
          type: string
          nullable: true
        totalRecords:
          type: integer
          format: int32
        sortableFields:
          type: array
          items:
            type: string
          nullable: true
        aggregateDetails:
          type: array
          items:
            $ref: '#/components/schemas/AggregateDetailsDTO'
          nullable: true
      additionalProperties: false
    CustomerBankAccountDTOPagedResponseModelDTOApiResponseDTO:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/LocalisedErrorDTO'
          nullable: true
        success:
          type: boolean
        applicableEntitiesCount:
          type: integer
          format: int32
        requestedEntitiesCount:
          type: integer
          format: int32
        succeededEntitiesCount:
          type: integer
          format: int32
          readOnly: true
        isSynchronous:
          type: boolean
        data:
          allOf:
            - $ref: '#/components/schemas/CustomerBankAccountDTOPagedResponseModelDTO'
          description: The updated entity in case of modifications or creation
          nullable: true
      additionalProperties: false
    CustomerBillingSettingsAutomaticSettlementDTO:
      type: object
      properties:
        automaticSettlement:
          type: boolean
          description: Indicates whether automatic settlement is enabled for this customer.
          nullable: true
        originatorType:
          allOf:
            - $ref: '#/components/schemas/EntitySubjectType'
          description: The type of entity that initiated the automatic settlement setting.
          nullable: true
        originatorId:
          type: string
          description: The unique identifier of the entity that initiated the automatic settlement setting.
          nullable: true
      additionalProperties: false
      description: "Represents settings for automatic settlement of transactions.\r\nThis DTO contains configuration options that determine how transactions are automatically settled."
    CustomerBillingSettingsDTO:
      type: object
      properties:
        automaticSettlementSetting:
          allOf:
            - $ref: '#/components/schemas/CustomerBillingSettingsAutomaticSettlementDTO'
          description: Settings related to automatic settlement of transactions.
          nullable: true
      additionalProperties: false
      description: "Represents the billing settings for a customer.\r\nThis DTO contains configuration options that affect how billing is handled for the customer."
    CustomerGroupQuickFilter:
      enum:
        - all
      type: string
    CustomerGroupReferenceDTO:
      type: object
      properties:
        id:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
      additionalProperties: false
    CustomerMandateDTO:
      type: object
      properties:
        number:
          type: string
          description: The unique mandate number.
          nullable: true
        signedDateTime:
          type: string
          description: The date and time when the mandate was signed.
          format: date-time
        cancelledDateTime:
          type: string
          description: 'The date and time when the mandate was cancelled, if applicable.'
          format: date-time
        type:
          allOf:
            - $ref: '#/components/schemas/MandateType'
          description: 'The type of mandate (e.g., SEPA, B2B).'
          nullable: true
        status:
          allOf:
            - $ref: '#/components/schemas/MandateStatus'
          description: The current status of the mandate.
          nullable: true
      additionalProperties: false
      description: "Represents a mandate associated with a customer's bank account.\r\nThis DTO contains information about the mandate's status, type, and relevant dates."
    CustomerQuickFilter:
      enum:
        - all
        - supplied
        - unsupplied
        - requireattention
      type: string
    CustomerScenarioType:
      enum:
        - portalconfirmation
        - portalresetpassword
        - annualstatement
      type: string
    CustomerType:
      enum:
        - person
        - organization
      type: string
    DataExportCommunicationType:
      enum:
        - manualdownload
        - ftp
        - sftp
        - ftps
      type: string
    DataExportInvoiceFormatType:
      enum:
        - lord
        - bdo
        - sapisu
      type: string
    DataFrequency:
      enum:
        - pt1m
        - pt5m
        - pt15m
        - pt30m
        - pt1h
        - p1d
        - na
      type: string
    DataImportCommunicationType:
      enum:
        - sftp
        - ftp
        - ftps
        - inboundemail
        - manualupload
        - configuredplugin
        - inboundapi
      type: string
    DataImportMeteringFormatType:
      enum:
        - elvaco_1104
        - elvaco_1112
        - customcsv
        - kamstrupready_v1
        - izarcenter
        - flamco
        - cadis
        - climaways
        - equinox_sinapsi
        - siemens_synco
        - cadislora
        - ycongouda
        - synergirbisgen3
        - synergirbisgen1_2
        - engelmann
        - inboundapi
        - synergirbisgen4
      type: string
    DataImportMigrationFormatType:
      enum:
        - zf_bulkimport
      type: string
    DataType:
      enum:
        - text
        - number
        - date
        - dateandtime
        - enumeration
      type: string
    DateRange:
      type: object
      properties:
        startDateTime:
          type: string
          format: date-time
        endDateTime:
          type: string
          format: date-time
      additionalProperties: false
    DateTimeFormatInfo:
      type: object
      properties:
        amDesignator:
          type: string
          nullable: true
        calendar:
          allOf:
            - $ref: '#/components/schemas/Calendar'
          nullable: true
        dateSeparator:
          type: string
          nullable: true
        firstDayOfWeek:
          allOf:
            - $ref: '#/components/schemas/DayOfWeek'
        calendarWeekRule:
          allOf:
            - $ref: '#/components/schemas/CalendarWeekRule'
        fullDateTimePattern:
          type: string
          nullable: true
        longDatePattern:
          type: string
          nullable: true
        longTimePattern:
          type: string
          nullable: true
        monthDayPattern:
          type: string
          nullable: true
        pmDesignator:
          type: string
          nullable: true
        rfC1123Pattern:
          type: string
          nullable: true
          readOnly: true
        shortDatePattern:
          type: string
          nullable: true
        shortTimePattern:
          type: string
          nullable: true
        sortableDateTimePattern:
          type: string
          nullable: true
          readOnly: true
        timeSeparator:
          type: string
          nullable: true
        universalSortableDateTimePattern:
          type: string
          nullable: true
          readOnly: true
        yearMonthPattern:
          type: string
          nullable: true
        abbreviatedDayNames:
          type: array
          items:
            type: string
          nullable: true
        shortestDayNames:
          type: array
          items:
            type: string
          nullable: true
        dayNames:
          type: array
          items:
            type: string
          nullable: true
        abbreviatedMonthNames:
          type: array
          items:
            type: string
          nullable: true
        monthNames:
          type: array
          items:
            type: string
          nullable: true
        isReadOnly:
          type: boolean
          readOnly: true
        nativeCalendarName:
          type: string
          nullable: true
          readOnly: true
        abbreviatedMonthGenitiveNames:
          type: array
          items:
            type: string
          nullable: true
        monthGenitiveNames:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
    DayOfWeek:
      enum:
        - Sunday
        - Monday
        - Tuesday
        - Wednesday
        - Thursday
        - Friday
        - Saturday
      type: string
    DebtorDTO:
      type: object
      properties:
        customerId:
          type: string
          description: The unique identifier of the customer.
          nullable: true
        displayName:
          type: string
          description: The display name of the customer.
          nullable: true
        customerAccountNumber:
          type: string
          description: The account number assigned to the customer.
          nullable: true
        customerType:
          allOf:
            - $ref: '#/components/schemas/CustomerType'
          description: 'The type of customer (e.g., individual, business).'
          nullable: true
        customerGroup:
          allOf:
            - $ref: '#/components/schemas/CustomerGroupReferenceDTO'
          description: Reference to the customer group this debtor belongs to.
          nullable: true
      additionalProperties: false
      description: "Represents a debtor in the billing system.\r\nContains essential information about a customer who owes payment."
    DigitShapes:
      enum:
        - Context
        - None
        - NativeNational
      type: string
    Direction:
      enum:
        - offtake
        - injection
        - na
      type: string
    DnsRecordMeaning:
      enum:
        - mailcname
        - mx
        - spf
        - dkim1
        - dkim2
      type: string
    DnsRecordStatus:
      enum:
        - unverified
        - valid
        - error
      type: string
    DocumentOutputFormat:
      enum:
        - pdf
        - html
        - xml
      type: string
    DomainProblemDataType:
      enum:
        - generalproductissue
        - generalbillingitemissue
        - generalcompanybankaccountissue
        - message
        - generalexportjobissue
        - generaltemplateissue
        - serviceconsumptioncalculationissue
        - billingcalculationissue
        - mandateissue
        - tariffcalculationissue
        - allocationcalculationissue
        - daterangeissue
        - taxperiodissue
      type: string
    DownloadIncomingBankingTransactionZipRequest:
      type: object
      properties:
        incomingBankingTransactionIds:
          type: array
          items:
            type: string
          description: An array of IDs for the incoming banking transactions whose documents should be included in the ZIP file.
          nullable: true
      additionalProperties: false
      description: "Represents a request to download banking transaction documents as a ZIP file.\r\nThis DTO is used to retrieve transaction-related documents for multiple transactions at once."
    EavEstimationRunStatus:
      enum:
        - gatheringdata
        - estimating
      type: string
    EmailConfirmationType:
      enum:
        - advanceamountchanged
        - ibanchanged
        - paymentmethodchanged
      type: string
    EntityAttachmentGroupQuickFilter:
      enum:
        - all
      type: string
    EntityAttachmentOrigin:
      enum:
        - customer
        - contract
        - product
        - entityattachmentgroup
      type: string
    EntityAttachmentQuickFilter:
      enum:
        - all
        - visibletocustomer
      type: string
    EntityAttributeType:
      enum:
        - capacity
        - quota
        - surface
        - occupants
        - propertyquota
      type: string
    EntitySubjectType:
      enum:
        - none
        - customer
        - contract
        - meter
        - servicelocation
        - invoice
        - importjob
        - propertygroup
        - payment
        - communicationentry
        - exportjob
        - dataexport
        - dataimport
        - entityattribute
        - asset
        - bankaccount
        - billingitem
        - billingtariff
        - costcomponent
        - costcomponentvalue
        - model
        - numbersequence
        - billingparameters
        - product
        - taxcode
        - template
        - billingrelation
        - transaction
        - dataimportfileformat
        - dataexportfileformat
        - tenant
        - consumption
        - attachment
        - exportjobline
        - culturetable
        - collectioncase
        - collectionflowstep
        - consumptionunittype
        - incominginvoice
        - moverequest
        - activityentry
        - commententry
        - problem
        - relatedentity
        - customeragingreport
        - billingcompleteness
        - propertygroupbillingconfiguration
        - propertygroupbillingperiod
        - collectionflow
        - configuredplugin
        - organizationscenarios
        - paymentterms
        - paymentdelaysetting
        - paymentparameters
        - domainauthenticationparameters
        - communicationparameters
        - organization
        - incominginvoicecomponent
        - costallocationcomponent
        - scheduledattempt
        - plugintrigger
        - exportentitycontainer
        - externalbankstatement
        - externalbanktransaction
        - externalmeasurement
        - importjobentityissue
        - intermediateexportformat
        - consumptionunit
        - calculatedconsumption
        - propertygroupmeteringconfiguration
        - measurement
        - externalchannel
        - serviceconsumption
        - purgerequest
        - migrationversion
        - formulaconsumption
        - templatedataobject
        - dataupgradebaseline
        - processrequest
        - validationrequest
        - postprocessrequest
        - outgoingbankingtransaction
        - incomingmutation
        - outgoingmutation
        - incomingbankingtransaction
        - customerbankaccount
        - pluginmanualtrigger
        - billingcustomer
        - enumsymboltranslation
        - scenariotranslation
        - syntheticloadprofile
        - consumergroup
        - estimablecontract
        - plugininboundwebhooktrigger
        - pluginmappingentry
        - eavestimationrun
        - customentitypropertytype
        - customentityproperty
        - pluginfeedentry
        - regionalregulationsconfiguration
        - entityattachment
        - entityattachmentgroup
        - propertygroupforecastingconfiguration
        - prepaymenttransaction
        - customeragingheader
        - estimatedbillingcompleteness
        - estimatedinvoice
        - customergroup
        - meteringissue
        - meteringparameters
        - mutingrule
        - reportmappingentry
        - meteringimport
        - prepaymentaccount
        - user
        - role
        - baseimport
        - systemusagerecord
        - portalsettings
        - annualstatement
        - organizationscenario
        - accounting
        - socialtariffexport
        - socialtariffimportheader
        - socialtariffimportline
      type: string
    Enumeration:
      type: string
    EnvelopePosition:
      enum:
        - left
        - right
      type: string
    ErrorCode:
      enum:
        - ASSET_ALREADY_EXISTS
        - ASSET_DOES_NOT_EXIST
        - TRANSLATION_ALREADY_EXISTS
        - TRANSLATION_DOES_NOT_EXIST
        - TRANSLATION_HAS_NO_CHANGES
        - TRANSLATION_HAS_NO_DEFAULT
        - NUMBER_SEQUENCE_DOES_NOT_EXIST
        - BANK_ACCOUNT_NOT_FOUND
        - BANK_ACCOUNT_ALREADY_EXISTS
        - BILLING_ITEM_ALREADY_EXISTS
        - BILLING_RELATION_NOT_BLOCKED
        - BILLING_RELATION_BLOCKED
        - BILLING_RELATION_DOES_NOT_EXIST
        - BILLING_RELATION_NOT_DUE
        - CANNOT_CREATE_ORG_FROM_ORG
        - CHANNEL_NOT_FOUND
        - CONTRACT_HAS_NO_ADVANCE_FREQUENCY
        - CONTACT_ENTRY_NOT_FOUND
        - CONTRACTUAL_ADVANCE_AMOUNT_CANNOT_BE_EMPTY_WHEN_ADVANCE_FREQUENCY_IS_NOT_NONE
        - CONTRACT_HAS_NO_SERVICES
        - CONTRACT_IS_ALREADY_SIGNED
        - CONTRACT_IS_NOT_SIGNED
        - CONTRACT_NOT_FOUND
        - COULD_NOT_APPROVE_INVOICE
        - COULD_NOT_CREATE_BILLED_SERVICE
        - COULD_NOT_CREATE_BILLING_RELATION
        - COULD_NOT_CREATE_CONTRACT
        - COULD_NOT_CREATE_CUSTOMER
        - COULD_NOT_CREATE_INVOICE
        - COULD_NOT_CREATE_METER
        - COULD_NOT_CREATE_SERVICELOCATION
        - COULD_NOT_GENERATE_CONTRACT_NUMBER
        - COULD_NOT_GENERATE_CUSTOMER_NUMBER
        - COULD_NOT_GENERATE_INVOICE_NUMBER
        - COULD_NOT_UPLOAD_FILE
        - CUSTOMER_ALREADY_EXISTS
        - CUSTOMER_DOES_NOT_EXIST
        - CUSTOMER_IS_NOT_AN_ORGANIZATION
        - CUSTOMER_IS_NOT_A_PERSON
        - DATAIMPORT_DOES_NOT_EXIST
        - DATAIMPORT_NAME_ALREADY_EXISTS
        - DOCUMENT_CATEGORY_NOT_SUPPORTED
        - DUPLICATE_CHANNEL
        - DUPLICATE_FORMAT_PROVIDER_NAME
        - DUPLICATE_SERVICE
        - DUPLICATE_SERVICELOCATION
        - END_DATE_NOT_AFTER_GIVEN_DATE
        - END_DATE_NOT_AFTER_OR_EQUAL_TO_GIVEN_DATE
        - FIELD_CANNOT_BE_EMPTY
        - FIELD_CANNOT_BE_LOWER_OR_EQUAL_TO_ZERO
        - FIELD_CANNOT_BE_NULL
        - FIELD_CANNOT_CONTAIN_SPECIAL_CHARACTERS
        - FIELD_NOT_AN_ENUM
        - FIELD_NOT_A_COUNTRY
        - FIELD_NOT_A_GUID
        - FIELD_MUST_BE_HIGHER_THAN_OR_EQUAL_TO_ZERO
        - FIELD_CAN_ONLY_CONTAIN_ALPHANUMERICAL_CHARACTERS
        - FIELDS_MUST_BE_EQUAL
        - FILEFORMATPROVIDER_ALREADY_EXISTS
        - FILEFORMATPROVIDER_DOES_NOT_EXIST
        - FILEFORMATPROVIDER_WITH_THIS_NAME_ALREADY_EXISTS
        - IBAN_EMPTY
        - IBAN_INVALID_COUNTRY
        - IBAN_MODULE_CHECK_FAILED
        - IBAN_TOO_BIG
        - IBAN_TOO_SHORT
        - INSTANCE_NAME_ALREADY_USED
        - INSTANCE_DUPLICATE_IN_LIST
        - INVALID_ENDDATETIME
        - INVALID_ENDDATETIME_OR_FORMAT
        - INVALID_CULTURE_NAME
        - INVALID_INTERVAL
        - INVALID_NUMBERFORMAT
        - INVALID_NUMBERSEQUENCE_REFERENCE_ENTITY
        - INVALID_NUMBERSEQUENCE_SEGMENT_TYPE
        - INVALID_STARTDATETIME
        - INVALID_STARTDATETIME_OR_FORMAT
        - INVALID_TIMEZONE
        - INVALID_VALUE
        - INVOICE_DOES_NOT_EXIST
        - INVOICE_LINE_SPANS_MULTIPLE_TAX_RATE_PERIODS
        - INVOICE_LINE_SPANS_NO_TAX_RATE_PERIODS
        - INVOICE_NOT_APPROVED_STATUS
        - INVOICE_NOT_CREATED_STATUS
        - INVOICE_TEMPLATE_NOT_CONFIGURED
        - INVOICE_TYPE_NOT_SUPPORTED_FOR_GENERATION
        - LIST_CANNOT_BE_EMPTY
        - METER_ALREADY_EXISTS
        - METER_DOES_NOT_EXIST
        - METER_NOT_CONFIRMED
        - METER_NOT_REQUESTED_OR_REMOVED
        - METER_REMOVED
        - MISSING_DATETIMEFORMAT
        - MISSING_DELIMITER
        - MISSING_ENDDATETIME
        - MISSING_METERSN_OR_EXTERNAL_IDENTIFIER
        - MISSING_NAME
        - MISSING_NUMBERDECIMALSEPERATOR
        - MISSING_NUMBERTHOUSANDSSEPERATOR
        - MISSING_TIMEZONE
        - MODEL_ALREADY_EXISTS
        - MODEL_BRANDNAME_EMPTY
        - MODEL_DOES_NOT_EXIST
        - MODEL_NAME_EMPTY
        - NOT_ALL_SEGMENTS_PROVIDED
        - NO_ADVANCE_FREQUENCY_BUT_AMOUNT_PROVIDED
        - NO_CONTRACTUAL_AMOUNT_BUT_ADVANCE_FREQUENCY_PROVIDED
        - NO_DEFAULT_TAXCODE_FOR_ADVANCES_SPECIFIED
        - NO_FILES_PROVIDED
        - ONE_OR_MORE_FILES_NOT_CORRECT_TYPE
        - PAYMENT_METHOD_ALREADY_USED
        - PAYMENT_METHOD_EMPTY
        - PRODUCT_DOES_NOT_EXIST
        - PROVIDER_ALREADY_CONTAINS_INSTANCE_FOR_ORG_AND_DIR
        - PROVIDER_ALREADY_CONTAINS_INSTANCE_WITH_SAME_NAME
        - SDD_REQUIRES_BANK_ACCOUNT
        - SERVICELOCATION_DOES_NOT_EXIST
        - SERVICE_ALREADY_EXISTS
        - TAXCODE_FOR_DEFAULT_ADVANCE_RATE_CANNOT_BE_DELETED
        - TAXCODE_ALREADY_EXISTS
        - TAXCODE_DOES_NOT_EXIST
        - TAX_CODE_NOT_FOUND
        - TEMPLATE_ALREADY_CONTAINS_DOCUMENT_FOR_CATEGORY_AND_TYPE
        - TEMPLATE_ALREADY_EXISTS
        - TEMPLATE_DOES_NOT_EXIST
        - TEMPLATE_HAS_ERRORS
        - VALUE_DIRECTION_MISMATCH
        - VALUE_METERINGTYPE_MISMATCH
        - VALUE_MULTIPLE_CHANNEL_CANDIDATES
        - VALUE_NO_CHANNEL_CANDIDATES
        - VALUE_TIMEOFUSE_MISMATCH
        - VALUE_UNITOFMEASURE_MISMATCH
        - BILLING_RELATION_NOT_FOUND
        - INVALID_BILLING_CALCULATION_TYPE
        - PRODUCT_ALREADY_EXISTS
        - BILLING_ITEM_DOES_NOT_EXIST
        - CANCELLATION_ITEM_DOES_NOT_EXIST
        - BILLING_TARIFF_DOES_NOT_EXIST
        - TARIFF_PERIOD_INCOMPLETE
        - DATE_CANNOT_BE_BEFORE_1900_01_01
        - FIELD_MUST_BE_EMPTY_FEATURE_NOT_YET_AVAILABLE
        - CONSUMPTION_PERIOD_INCOMPLETE
        - DUPLICATE_CONTRACT_NUMBER
        - INVOICE_NOT_GENERATED_STATUS
        - PRODUCT_HAS_NO_BILLING_ITEMS
        - INVOICE_RECALCULATION_NOT_SUPPORTED
        - ARCHIVE_DIRECTORY_CANNOT_BE_EMPTY_WHEN_DELETE_AFTER_UPLOAD
        - FIELD_NOT_AN_EMAILADRESS
        - COST_COMPONENT_DOES_NOT_EXIST
        - COST_COMPONENT_ALREADY_EXISTS
        - COST_COMPONENT_VALUE_DOES_NOT_EXIST
        - BILLING_TARIFF_UNIT_PRICE_NOT_ALLOWED_FOR_FORMULA
        - BILLING_TARIFF_MISSING_EXPRESSION
        - BILLING_TARIFF_INPUT_MISSING_REFERENCE
        - BILLING_TARIFF_INPUT_INVALID_REFERENCE
        - TARIFF_INPUT_UNSUPPORTED_INPUT_TYPE
        - TARIFF_INPUT_VARIABLE_NOT_DEFINED
        - TARIFF_INPUT_EXPRESSION_UNPARSABLE
        - TARIFF_INPUT_CANNOT_PROCESS_EXPRESSION
        - ENTITY_ATTRIBUTE_DOES_NOT_EXIST
        - ENTITY_ATTRIBUTE_ALREADY_EXISTS_FOR_SUBJECT_ID_AND_TYPE_AND_ATTRIBUTE_TYPE
        - ORGANIZATION_CODE_ALREADY_EXISTS
        - ORGANIZATION_DOES_NOT_EXIST
        - ORGANIZATION_NOT_FOUND
        - MISSING_ORGANIZATION_LOGO
        - ASSET_IS_NOT_AN_IMAGE
        - CULTURE_NOT_FOUND
        - DATA_PROVIDER_PARAMETERS_DO_NOT_MATCH_TYPE
        - CANNOT_BILL_UNBILLED_PERIODS
        - INVOICE_IS_ALREADY_CREDITED
        - NEED_DEFAULT_BANK_ACCOUNT
        - NEED_DEFAULT_BANK_ACCOUNT_FOR_SDD
        - PAYMENT_DOES_NOT_EXIST
        - PAYMENT_IS_NOT_CREATED
        - PAYMENT_CANNOT_BE_PROCESSED
        - CONTRACT_NUMBER_CANNOT_BE_EMPTY
        - ACCOUNT_NUMBER_CANNOT_BE_EMPTY
        - COMMUNICATION_TYPES_DO_NOT_MATCH
        - INVOICE_ALREADY_EXISTS
        - APPROVED_INVOICES_CANNOT_BE_DELETED
        - CREATED_INVOICES_CANNOT_BE_CREDITED
        - CATCH_ALL_COMMUNICATION_PREFERENCE_CANNOT_BE_ADDED_WHEN_OTHERS_EXIST
        - TEMPLATE_HAS_WRONG_USECASE
        - ATTACHMENT_FILE_DOES_NOT_EXIST
        - NO_TAXCODE_SPECIFIED
        - TEMPLATE_DATATYPE_NOT_CONFIGURED
        - USER_HAS_NO_EMAIL_ADDRESS
        - USER_HAS_NO_POSTAL_ADDRESS
        - NO_TEMPLATE_FOR_EMAIL_BODY
        - CANNOT_PROVIDE_VALUES_FOR_BUILTIN_FILE_FORMAT
        - CANNOT_PROVIDE_VALUES_FOR_OTHER_IMPORT_THAN_METERING
        - IMPORTJOB_DOES_NOT_EXIST
        - IMPORTJOB_HAS_INCORRECT_STATUS
        - MISSING_CUSTOMER_BANK_ACCOUNT
        - PAYMENTS_ARE_DISABLED
        - ONLY_INBOUND_PAYMENTS_CAN_BE_MATCHED
        - NO_CUSTOMER_FOUND_FOR_PAYMENT
        - CREDITED_INVOICES_FOLLOWED_BY_A_NEWER_INVOICE_CANNONT_BE_DELETED
        - NOT_A_VALID_FORMAT_STRING
        - DATE_IS_NOT_VALID
        - EMAIL_COMMUNICATION_PREFERENCE_REQUIRES_EMAILADDRESS_CONTACT_ENTRY
        - TRANSACTION_REFERENCE_DOES_NOT_EXIST
        - EXPORTJOB_HAS_INCORRECT_STATUS
        - INVALID_DEBIT_CREDIT_INDICATOR
        - INVALID_TRANSACTION_TO_SETTLE
        - COMPANY_BANK_ACCOUNT_NOT_FOUND
        - DATAEXPORT_ALREADY_EXISTS
        - DATAEXPORT_DOES_NOT_EXIST
        - COULD_NOT_CREATE_DOMAIN_WITH_SENDGRID
        - NO_DOMAIN_AUTHENTICATION_PARAMETERS_EXIST_FOR_ORGANISATION
        - COULD_NOT_VALIDATE_DOMAIN_WITH_SENDGRID
        - SENDER_EMAIL_DOMAIN_NOT_AUTHENTICATED
        - PROPERTY_DOES_NOT_EXIST
        - INVOICE_MONTH_MUST_BE_EMPTY_WHEN_INVOICE_FREQUENCY_IS_NOT_YEARLY
        - PROPERTY_WITH_GIVEN_NAME_ALREADY_EXISTS
        - MANAGEMENT_DETAILS_CANNOT_CONTAIN_DOUBLES
        - SANDBOX_MODE_NEEDS_RECIPIENT_EMAIL
        - POSTAL_NOT_SUPPORTED_FOR_NOW
        - SERVICE_LOCATION_RELATION_DOES_NOT_EXIST
        - TEMPLATE_HAS_NO_USECASE
        - PROBLEM_NOT_FOUND
        - PROBLEM_ALREADY_RESOLVED
        - ALREADY_ACTIVE_MANDATE
        - MANDATE_DOES_NOT_EXIST
        - MANDATE_IS_NOT_REQUESTED
        - COULD_NOT_GENERATE_MANDATE_NUMBER
        - PROPERTY_FOR_THIS_ADDRESS_ALREADY_EXISTS
        - SERVICE_LOCATION_IS_ALREADY_PART_OF_A_PROPERTY_AT_THIS_MOMENT
        - UNSUPPORTED_DATA_FORMAT_FOR_PAYMENT_REQUEST_DATA_EXPORT
        - FILE_COULD_NOT_BE_GENERATED
        - MISSING_ACTIVE_MANDATE
        - NO_SERVICE_LOCATION_FOUND
        - NO_PROTOCOL_SPECIFIED
        - SSH_CONNECTION_FAILED
        - FAILED_CONNECTING_TO_SOURCE
        - MISSING_COMMUNICATION_SCENARIO
        - UNKNOWN_TEMPLATE_DATA_TYPE
        - FIELD_NOT_A_VALID_TIMEZONE
        - MISSING_INTERNAL_PAYMENT_REFUND_DATAEXPORT
        - ADVANCE_FREQUENCY_CANNOT_BE_SLOWER_THAN_INVOICE_FREQUENCY
        - CANNOT_ADD_MULTIPLE_VALUES_FOR_CONSTANT_SEGMENT_TYPE
        - CREDITED_INVOICE_NOT_FOUND
        - NOT_IMPLEMENTED_YET
        - AT_LEAST_ONE_ENTITY_MUST_EXIST_FOR_REQUIRE_ATTENTION
        - MISSING_INTERNAL_PAYMENT_REQUEST_DATAEXPORT
        - EXPORTJOB_DOES_NOT_EXIST
        - NO_PROBLEMS_FOUND
        - FIELD_MUST_BE_EMPTY
        - FILE_TOO_BIG
        - DATAEXPORT_FILEFORMAT_DOES_NOT_EXISTS
        - DATAEXPORT_FILEFORMAT_SETTINGS_CATEGORY_DOES_NOT_MATCH
        - DATAEXPORT_FILEFORMAT_ALREADY_EXISTS
        - NO_PAYMENT_PARAMETERS_FOUND
        - NO_EXTERNAL_BANK_TRANSACTION_FOUND
        - PROCESSED_TRANSACTIONS_CANNOT_BE_IGNORED
        - RESUBMISSION_LIMIT_REACHED
        - TRANSACTION_NOT_A_SDD_REVERSAL
        - DATE_IS_IN_THE_PAST
        - TRANSACTION_DOES_NOT_EXIST
        - DATE_FORMAT_NOT_VALID
        - TENANT_NOT_FOUND
        - TENANT_NAME_TAKEN
        - EXPORTJOBLINE_DOES_NOT_EXIST
        - DATAIMPORT_FILEFORMAT_DOES_NOT_EXISTS
        - DATAIMPORT_FILEFORMAT_SETTINGS_CATEGORY_DOES_NOT_MATCH
        - DATAIMPORT_FILEFORMAT_ALREADY_EXISTS
        - DUPLICATE_ENTITY_ATTRIBUTE_VALUES
        - ENTITY_ATTRIBUTE_NOT_COMPATIBLE_WITH_SUBJECT_TYPE
        - METER_NOT_INSTALLED
        - PROPERTY_SERVICE_LOCATIONS_INCORRECT
        - PROPERTY_MANAGEMENT_DETAILS_INCORRECT
        - FTP_FILE_UPLOAD_FAILED
        - EXPORTJOB_HAS_NO_DATA
        - BILLING_ITEM_CALCULATION_CAN_NOT_BE_CHANGED
        - PORT_OUT_OF_RANGE
        - EXTERNAL_BANK_TRANSACTION_ALREADY_PROCESSED
        - PAYMENT_IGNORED
        - TRANSACTIONS_ALREADY_LINKED
        - DOMAIN_NAME_ALREADY_TAKEN
        - MEASUREMENT_CONTEXT_INVALID
        - MEASUREMENTS_UNLINKED
        - MEASUREMENT_NOT_FOUND
        - BANK_TRANSACTIONS_FAILED_PROCESSING
        - ACCOUNT_HOLDER_EMPTY
        - CUSTOMER_ID_MISSING
        - COULD_NOT_REVERSE_TRANSACTION
        - PAYMENT_TERMS_DO_NOT_EXIST
        - PAYMENT_TERMS_USED_BY_ORGANISATION_CANNOT_BE_DELETED
        - PAYMENT_TERMS_ALREADY_EXIST
        - SIGNED_MANDATES_NEED_AN_IBAN
        - UNITOFMEASURE_NOT_SUPPORTED_FOR_SUBSCRIPTION
        - UNITOFMEASURE_NOT_SUPPORTED_FOR_CONSUMPTION
        - UNITOFMEASURE_NOT_SUPPORTED
        - UNITOFMEASURE_NOT_SUPPORTED_FOR_ATTRIBUTE
        - UNITOFMEASURE_NOT_SUPPORTED_FOR_CONSUMPTIONUNIT
        - UNITOFMEASURE_NOT_SUPPORTED_FOR_CUSTOMENTITYPROPERTY
        - CONTRACT_NOT_SUPPORTED_FOR_NOW
        - UTILITY_TYPE_NOT_SUPPORTED_FOR_SUBSCRIPTION
        - METERING_TYPE_NOT_SUPPORTED_FOR_SUBSCRIPTION
        - LIST_CONTAINS_DUPLICATES
        - PROPERTY_HAS_NO_QUOTA
        - SERVICELOCATION_HAS_NO_QUOTA
        - PROPERTY_HAS_NO_MATCHING_AGGREGATING_METERS
        - PROPERTY_HAS_NO_MATCHING_COMMUNAL_METERS
        - FIELD_CANNOT_BE_LOWER_THAN_ZERO
        - CREDIT_NOTE_IN_UNSUPPLIED_PERIOD_CANNOT_BE_REMOVED
        - INVOICED_ADVANCES_CANNOT_BE_CREDITED
        - CREDIT_NOTE_CANNOT_BE_CREDITED
        - ONLY_CORE_SUPPORTED_FOR_NOW
        - CHANNEL_NOT_ACTIVE
        - ENTITY_TRANSLATION_ALREADY_EXISTS
        - NO_CULTURE_TABLE_FOUND_FOR_THIS_TENANT
        - ENTITY_TRANSLATION_DOES_NOT_EXIST
        - LIST_DOES_NOT_CONTAIN_GIVEN_CULTURE
        - CULTURE_NOT_SUPPORTED_BY_TENANT
        - TRANSLATED_FIELDS_CANNOT_BE_EMPTY
        - UNSUPPORTED_FILE_EXTENSION
        - INVOICE_NOT_SETTLED
        - BILLING_COMPLETENESS_ALREADY_CALCULATING
        - BILLING_COMPLETENESS_NOT_FOUND
        - BILLING_COMPLETENESS_WRONG_STATUS
        - SERVICELOCATION_EXTERNALID_ALREADY_USED
        - MANDATE_ALREADY_EXISTS
        - MISSING_RECEIVER
        - CONTRACT_TERMINATION_NOT_ON_OR_AFTER_SUPPLYSTARTDATE
        - NO_LOCK_CREATED
        - PAYMENT_DELAY_DOES_NOT_EXIST
        - PAYMENT_DELAY_ALREADY_EXISTS_FOR_TYPE
        - PAYMENT_RETRY_PARAMETERS_HAS_DUPLICATE_RETRY_ATTEMPT
        - PAYMENT_RETRY_PARAMETERS_HAS_MISSING_RETRY_ATTEMPT
        - DUPLICATE_INVOICE_NUMBER
        - INVOICE_NOT_FOUND
        - INVOICE_DOCUMENT_NOT_INCLUDED_IN_IMPORTJOB
        - IMPORTED_CONTRACTS_HAVE_NO_BILLING_RELATION
        - DUPLICATE_METER_NUMBER
        - METER_CANNOT_BE_INSTALLED_IN_MULTIPLE_LOCATIONS
        - PREVIOUS_COMPLETENESS_PERIOD_NOT_CLOSED
        - UNSUPPORTED_ENTITY_SUBJECT_TYPE
        - PRODUCT_MISSES_GIVEN_SERVICE
        - COLLECTION_CASE_DOES_NOT_EXIST
        - COLLECTION_CASE_ALREADY_CLOSED
        - INVOICE_ALREADY_IN_COLLECTION
        - COLLECTION_CASE_WORKLOW_NOT_FOUND
        - COLLECTION_CASE_MANUAL_INTERVENTION_NOT_ALLOWED
        - COLLECTION_STEP_NOT_FOUND
        - RANGE_UPPER_LIMIT_MUST_BE_HIGHER_THAN_LOWER_LIMIT
        - COLLECTION_STEP_PARAMETERS_DO_NOT_MATCH_CHARGE_TYPE
        - COLLECTION_STEP_TIER_FROMT_TO_RANGE_OVERLAPS
        - COULD_NOT_GENERATE_COLLECTION_CASE_NUMBER
        - TEMPLATE_HAS_WRONG_TARGET_TYPE
        - TEMPLATE_HAS_NO_TARGET_TYPE
        - COLLECTION_TEMPLATE_NOT_CONFIGURED
        - COLLECTION_NOT_ENABLED
        - INVOICE_CREATION_DATE_BEFORE_COLLECTION_BORDER_DATE
        - INVALID_WRITE_OFF
        - COLLECTION_STEP_ALREADY_CLOSED
        - COLLECTION_STEP_HAS_WRONG_STATUS
        - COLLECTION_FLOW_NOT_FOUND
        - COLLECTION_CASE_ALREADY_EXISTS
        - FIELD_MUST_BE_NULL_WHEN_NO_COMMUNICATION
        - FIELD_MUST_BE_NULL_WHEN_NO_CHARGE
        - NO_DATA_EXPORT_EXISTS_FOR_TYPE
        - DEBIT_SCT_PAYMENT_ALREADY_EXISTS
        - BILLING_TARIFF_EXPRESSION_NOT_ALLOWED_FOR_FORMULA
        - BILLING_TARIFF_MISSING_UNIT_PRICE
        - TRANSACTION_HAS_NO_OPEN_AMOUNT
        - PREVIOUS_COLLECTION_STEP_NOT_EXECUTED
        - NEXT_COLLECTION_STEP_ALREADY_EXECUTED
        - STEP_HAS_NO_DOCUMENT
        - CONSUMPTION_UNIT_TYPE_ALREADY_EXISTS
        - CONSUMPTION_UNIT_TYPE_DOES_NOT_EXIST
        - CONSUMPTION_UNIT_DOES_NOT_EXIST
        - CONSUMPTION_UNIT_UNIQUE_CONSTRAINT
        - INVALID_TARIFF_CALCULATION_TYPE
        - FILE_NOT_FOUND
        - TEMPLATE_IS_BUILTIN
        - CANNOT_BE_LARGER_THAN_140_CHARACTERS
        - MANDATE_WITH_IBAN_ALREADY_EXISTS
        - IBAN_ALREADY_EXISTS_FOR_CUSTOMER
        - ENDNOTE_ENDDATE_MUST_MATCH_CONTRACT_ENDDATE
        - UTILITY_TYPE_NOT_SUPPORTED_FOR_SUBSCRIPTION_ON_CONTRACT
        - COST_ALLOCATION_COMPONENT_ALREADY_EXISTS
        - COST_ALLOCATION_COMPONENT_DOES_NOT_EXIST
        - CONTRACT_CAN_ONLY_HAVE_SERVICES_OF_ONE_PROPERTY_GROUP
        - PRODUCT_NOT_PROVIDED
        - BILLING_COMPLETENESS_CAN_ONLY_BE_BILLED_VIA_PROPERTY_GROUP
        - PROP_GROUP_CALC_CONFIGURATION_ALREADY_EXISTS
        - PROP_GROUP_CALC_CONFIGURATION_CONTAINS_NO_BILLING_ITEMS
        - NO_CUSTOMER_BANK_ACCOUNT_EXISTS_WITH_GIVEN_IBAN
        - UTILITY_TYPE_REQUIRED_FOR_SUBSCRIPTION_ON_SERVICE
        - INTERMEDIATE_INVOICING_DATE_CANNOT_BE_OUTSIDE_COMPLETENESS_PERIOD
        - INTERMEDIATE_INVOICING_NOT_ALLOWED_BEFORE_CLOSED_BILLINGCOMPLETENESS_PERIODS
        - PROPERTY_METERING_CONFIGURATION_NOT_FOUND
        - DUPLICATE_OUTPUT_CHANNEL
        - PROPERTY_METERING_CONFIGURATION_NOT_VALIDATED
        - OUTPUT_CHANNEL_NOT_FOUND
        - NO_MATCHING_METERS_FOUND
        - NO_SERVICECONSUMPTIONS_FOUND
        - MISSING_SERVICECONSUMPTIONS
        - MISSING_SERVICECONSUMPTIONS_FOR_COMPLETE_PERIOD
        - NO_METERCONSUMPTIONS_FOUND
        - MISSING_METERCONSUMPTIONS_FOR_COMPLETE_PERIOD
        - BILLING_CONFIGURATION_FOR_PROPERTY_DOES_NOT_EXIST
        - PROP_GROUP_CALC_CONFIGURATION_NAMES_MUST_BE_UNIQUE
        - PROPERTY_GROUP_BILLING_CONFIGURATION_REQUIRED_INCOMING_INVOICE_COMPONENTS_MUST_BE_UNIQUE
        - INCOMING_INVOICE_ALREADY_EXISTS
        - INCOMING_INVOICE_COMPONENT_DOES_NOT_EXIST
        - SERVICE_LOCATION_ALREADY_USED_IN_OTHER_PROPERTY_GROUP_BILLING_CONFIGURATION
        - PROPERTY_GROUP_BILLING_CONFIGURATION_ALREADY_EXISTS
        - UNITOFMEASURE_ISNOT_PERIODBASED
        - INVOICE_FREQUENCY_MUST_BE_NULL_OR_EQUAL_TO_PROPERTY_GROUP_CONFIG_FOR_COST_ALLOCATION
        - ADVANCE_FREQUENCY_MUST_BE_NULL_OR_EQUAL_TO_PROPERTY_GROUP_CONFIG_FOR_COST_ALLOCATION
        - INCOMING_INVOICE_DOES_NOT_EXIST
        - PROPERTY_GROUP_BILLING_CONFIGURATION_COST_ALLOCATION_NOT_ENABLED
        - PROPERTY_GROUP_BILLING_PERIOD_DOES_NOT_EXIST
        - INCOMING_INVOICE_COMPONENT_NOT_LINKED_IN_PERIOD
        - NO_CHANNELS_FOUND
        - MISSING_CONSUMPTIONS
        - PROPERTY_GROUP_BILLING_CONFIGURATION_COST_ALLOCATION_NOT_VALIDATED
        - PROPERTY_GROUP_BILLING_PERIOD_LOCKED
        - PROPERTY_GROUP_BILLING_PERIOD_OVERLAP
        - PROPERTY_GROUP_BILLING_PERIOD_GAP
        - PROPERTY_GROUP_BILLING_PERIOD_MISSING_TARIFFS
        - PROPERTY_GROUP_BILLING_PERIOD_MISSING_CONFIGURATIONS
        - PROPERTY_GROUP_BILLING_PERIOD_NOT_LOCKED
        - PROPERTY_GROUP_BILLING_PERIOD_HAS_NO_SEQUENTIAL_PERIODS
        - NO_MATCHING_CHANNELS_FOUND
        - NEXT_INVOICE_DATE_NOT_ALLOWED_FOR_COST_ALLOCATION
        - CONTRACT_WRONG_STATUS
        - PROPERTY_GROUP_HAS_NO_LOCKED_BILLING_PERIOD
        - BILLING_RELATION_NOT_PART_OF_PROPERTY
        - CANNOT_INVOICE_UPFRONT_WITH_CONSUMPTION
        - CANNOT_HAVE_ADVANCE_FREQUENCY_AND_INVOICING_UPFRONT
        - PRODUCT_MUST_HAVE_ONE_REGULAR_BILLING_ITEM
        - CUSTOMER_DETAILS_MISSING
        - SERVICELOCATION_DETAILS_MISSING
        - MOVEREQUEST_NOT_FOUND
        - MOVEREQUEST_WRONG_STATUS
        - CUSTOMER_ALREADY_CREATED_OR_LINKED
        - MISSING_CUSTOMER_ID
        - MISSING_SERVICELOCATION_ID
        - MULTIPLE_CONTRACTS_FOUND
        - MISSING_METER
        - MOVEREQUEST_FAILED_PROCESSING
        - COULD_NOT_TERMINATE_CONTRACT
        - MOVEREQUEST_CONTRACT_ALREADY_PROCESSED
        - NO_TEMPLATE_FOR_LETTER
        - UNKNOWN_PLUGIN
        - PLUGIN_ALREADY_INSTALLED
        - INSTALLEDPLUGIN_NOT_FOUND
        - INVALID_PLUGIN_CONFIGURATION
        - MOVE_REQUEST_ALREADY_EXISTS
        - INVOICE_LINE_CANNOT_SPAN_MULTIPLE_YEARS
        - TOO_MANY_METERS
        - TOO_MANY_SERVICELOCATIONS
        - NO_MATCHING_STAIR_STEP
        - IBAN_INVALID
        - ADVANCE_AMOUNT_TO_LOW
        - DUPLICATE_MEASUREMENT_ENDDATETIME
        - NO_MATCHING_COMMUNICATION_PREFERENCE
        - COULD_NOT_UPDATE_CUSTOMER_INVOICE_ADDRESS
        - DUPLICATE_MEASUREMENT_FOR_ROUNDED_ENDDATETIME
        - FIELD_MUST_BE_TRUE
        - OUTGOING_BANKING_TRANSACTION_DOES_NOT_EXIST
        - OUTGOING_BANKING_TRANSACTION_INCORRECT_STATUS
        - OUTGOING_BANKING_TRANSACTION_INCORRECT_TYPE
        - OUTGOING_BANKING_TRANSACTION_COLLECTION_DATE_NOT_VALID
        - OUTGOING_BANKING_TRANSACTION_MISSING_INVOICEIDS
        - OUTGOING_BANKING_TRANSACTION_NO_ENTRIES_ADDED
        - OUTGOING_BANKING_TRANSACTION_LOCKED
        - OUTGOING_BANKING_TRANSACTION_CONTAINS_ERRORS
        - OUTGOING_BANKING_TRANSACTION_CONTAINS_INVOICES
        - OUTGOING_MUTATION_DOES_NOT_EXIST
        - OUTGOING_MUTATION_TRANSACTION_INCORRECT_STATUS
        - INVOICE_WRONG_PAYMENT_STATUS
        - AMOUNT_CANNOT_BE_ZERO_OR_NEGATIVE
        - AMOUNT_CANNOT_BE_ZERO_OR_POSITIVE
        - CANNOT_OVERWRITE_COLLECTION_DATE_WHEN_NO_NEW_BATCH
        - COULD_NOT_PARSE_BANK_FILE
        - BANK_FILE_CONTAINS_NO_STATEMENTS
        - PAYMENT_ALREADY_REVERSED
        - TRANSACTION_ALREADY_REVERSED
        - INVALID_BANK_STATEMENT_INCOMING_BANKING_TRANSACTION_FORMAT_TYPE
        - INVALID_PAYMENT_OUTGOING_BANKING_TRANSACTION_FORMAT_TYPE
        - UNSUPPORTED_OUTGOING_BANKING_TRANSACTION_FORMAT_TYPE
        - BIC_EMPTY
        - SEPA_CREDITOR_EMPTY
        - COMPANY_BANK_ACCOUNT_INVALID
        - INCOMING_BANKING_TRANSACTION_DOES_NOT_EXIST
        - INCOMING_BANKING_TRANSACTION_ALREADY_EXISTS
        - INCOMING_BANKING_TRANSACTION_INCORRECT_STATUS
        - INCOMING_MUTATION_NO_MATCH_FOUND
        - OUTGOING_BANKING_TRANSACTION_ALREADY_CONFIRMED
        - OUTGOING_MUTATION_ALREADY_CONFIRMED
        - INCOMING_MUTATION_IBAN_DOES_NOT_MATCH_OUTGOING_MUTATION_IBAN
        - NO_MATCHING_OUTGOING_PAYMENT_REQUEST_BANKING_TRANSACTION_FOUND
        - NO_MATCHING_OUTGOING_PAYMENT_REQUEST_MUTATION_FOUND
        - NO_MATCHING_OUTGOING_REFUND_BANKING_TRANSACTION_FOUND
        - NO_MATCHING_OUTGOING_REFUND_MUTATION_FOUND
        - NO_MATCHING_INCOMING_MUTATIONS_FOUND_FOR_IBAN
        - INCOMING_MUTATION_DOES_NOT_EXIST
        - INCOMING_MUTATION_INCORRECT_STATUS
        - PAYMENT_FOR_MUTATION_ALREADY_EXISTS
        - INVOICE_CHANGE_PAYMENT_METHOD_NOT_ALLOWED
        - INCOMING_MUTATION_INVALID_TYPE
        - OUTGOING_MUTATION_INVALID_TYPE
        - INVOICE_WRONG_STATUS
        - ACTION_NOT_SUPPORTED_FOR_MIGRATED_DATA
        - IMPORTJOB_DOES_NOT_SUPPORT_DOWNLOAD
        - NO_FUNCTIONS_IN_FORMULA
        - FUNCTION_NOT_FOUND
        - NO_MATCHING_INPUTPARAMETER_DEFINED
        - RUNTIMEPARAMETER_NOT_FOUND
        - RUNTIMEPARAMETER_TYPE_MISMATCH
        - FIXEDPARAMETER_TYPE_MISMATCH
        - OUTPUTPARAMETER_NOT_FOUND
        - MULTIPLE_OUTPUTPARAMETERS_FOUND
        - FUNCTION_REFERENCED_IS_AFTER_THIS_FUNCTION
        - FUNCTION_REFERENCED_OUTPUT_TYPE_MISMATCH
        - LAST_FUNCTION_OUTPUT_TYPE_INCORRECT
        - CREDIT_NOTE_NOT_APPROVED
        - PROCESSING_FAILED
        - PROCESSING_FINAL_UPDATE_FAILED
        - COULD_NOT_SIGN_MANDATE
        - COULD_NOT_UPDATE_PROPERTYYGROUPBILLINGCONFIGURATION
        - COULD_NOT_CREATE_ENTITY_ATTRIBUTE
        - COULD_NOT_CREATE_PROPERTYGROUP
        - PLUGINTRIGGER_NOT_FOUND
        - PLUGINTRIGGER_NOT_RUN_YET
        - INSTALLEDPLUGIN_NOT_ENABLED
        - INSTALLEDPLUGIN_DOES_NOT_SUPPORT_MANUAL_TRIGGER
        - INSTALLEDPLUGIN_DOES_NOT_SUPPORT_CONFIG_TRIGGER
        - MIGRATION_MODE_CANNOT_BE_REENABLED
        - ENUM_NOT_TRANSLATABLE
        - FIELD_MUST_BE_NULL
        - INVALID_TELEPHONE_NUMBER
        - INSTALLEDPLUGIN_DOES_NOT_SUPPORT_QUERY_TRIGGER
        - UNSUPPORTED_QUERY_TYPE
        - INCOMING_MUTATION_DUPLICATE
        - BILLING_ITEMS_HAS_DUPLICATE_ORDER
        - LIST_TOO_LARGE
        - DATAFREQUENCY_NOT_SUPPORTED
        - INSTALLEDPLUGIN_DOES_NOT_SUPPORT_INBOUND_WEBHOOK_TRIGGER
        - DOCUMENT_CANNOT_BE_EXTERNALLY_PRINTED
        - COLLECTION_CASE_COMMUNICATION_NOT_ALLOWED
        - CUSTOM_ENTITY_PROPERTY_TYPE_ALREADY_EXISTS
        - CUSTOM_ENTITY_PROPERTY_TYPE_DOES_NOT_EXIST
        - CUSTOM_ENTITY_PROPERTY_ALREADY_EXISTS_FOR_SUBJECT_ID_AND_TYPE_AND_PROPERTY_TYPE
        - CUSTOM_ENTITY_PROPERTY_DOES_NOT_EXIST
        - CONSUMER_GROUP_NOT_FOUND
        - LOAD_PROFILE_NOT_FOUND
        - LOAD_PROFILE_HAS_NO_DATA_FOR_THIS_YEAR
        - CANNOT_CONVERT_UNITOFMEASURE
        - CONTRACT_TERMINATED_BEFORE_YEAR
        - CONTRACT_HAS_NO_CONSUMPTION_SERVICES
        - ESTIMATION_RUN_IN_PROGRESS
        - ESTIMATION_RUN_NOT_FOUND
        - SERVICE_MISSING_ESTIMATION
        - ESTIMATION_NOT_POSSIBLE_BEFORE_FIRST_YEAR
        - SERVICE_MISSING_ESTIMATION_IN_UNIT_OF_MEASURE
        - UNSUPPORTED_AGGREGATION_FREQUENCY
        - NO_INVOICE_LINES
        - CUSTOM_ENTITY_PROPERTY_TYPE_NOT_SUPPORTED
        - SSIN_CANNOT_BE_PROVIDED_FOR_ORGANIZATIONS
        - SSIN_REQUIRED_WHEN_SSIN_COUNTRY_PROVIDED
        - SSIN_INVALID
        - SSIN_COUNTRY_REQUIRED_WHEN_SSIN_PROVIDED
        - COUNTRY_NOT_SUPPORTED_FOR_SSIN
        - EDIT_PRODUCT_NOT_ALLOWED_FOR_COST_ALLOCATION
        - NOT_CONFIGURED
        - SOCIAL_TARIFF_EXPORT_NOT_FOUND
        - SOCIAL_TARIFF_EXPORT_NOT_GENERATED
        - SOCIAL_TARIFF_EXPORT_ALREADY_EXISTS
        - ADVANCE_AMOUNT_NOT_IN_RANGE
        - INTERNAL_ATTACHMENTS_NOT_SUPPORTED
        - MOVE_IN_ATTACHMENTS_NOT_SUPPORTED
        - COULD_NOT_UPDATE_ATTACHMENT_FROM_OTHER_ENTITY
        - COULD_NOT_DELETE_ATTACHMENT_FROM_OTHER_ENTITY
        - APPROVAL_ONLY_AVAILABLE_ON_MOVE_IN
        - INVALID_FILE_SIZE
        - CUSTOMER_ALREADY_IN_COLLECTION
        - COULD_NOT_SIGN_ATTACHMENT
        - DUPLICATE_FORM_KEY
        - ATTACHMENT_FILE_ALREADY_EXISTS
        - ENTIY_ATTACHMENT_GROUP_DOES_NOT_EXISTS
        - ENTIY_ATTACHMENT_ALREADY_EXISTS
        - INVALID_INVOICE_TYPE
        - UNSUPPORTED_ORIGIN
        - FILEFORMAT_CONTAINS_ERRORS
        - COULD_NOT_DOWNLOAD_FILE
        - NO_MATCHING_CONTRACTS_FOR_ESTIMATION_FOUND
        - UNSUPPORTED_YEAR
        - INVALID_REGIONAL_REGULATIONS_CONFIG
        - CONSUMER_GROUP_NOT_MANUAL
        - AMOUNT_CANNOT_BE_NEGATIVE
        - CONSUMER_GROUP_CODE_IN_USE
        - PREPAYMENT_NOT_SUPPORTED
        - PREPAYMENT_ACTION_NOT_SUPPORTED
        - PREPAYMENT_METER_CANNOT_BE_PARENT_OF_PREPAYMENT_METER
        - METER_INVALID_TYPE
        - PERCENTAGE_NOT_IN_RANGE
        - BILLING_TARIFF_GAP_DETAILS
        - TAX_RATE_GAP_DETAILS
        - TAX_CODE_TAX_RATE_GAP_DETAILS
        - TARIFF_INPUT_GAP_DETAILS
        - TARIFF_INPUT_GAP_DETAILS_NAMED
        - COULD_NOT_ESTIMATE_INVOICE
        - MISSING_ESTIMABLE_BILLING_ITEMS
        - MISSING_RECEIVING_PERIOD
        - MISSING_RECEIVING_PERIOD_FOR_ESTIMATION
        - INVALID_COMMUNICATION_TYPE
        - FAILED_SENDING_EMAIL
        - FAILED_SENDING_SMS
        - MESSAGE_UNDELIVERABLE
        - INVALID_DELIVERY_ADDRESS
        - EMAIL_DROPPED
        - EMAIL_BLOCKED
        - EMAIL_INVALID
        - DATE_CANNOT_BE_OUTSIDE_COMPLETENESS_PERIOD
        - DATE_MUST_MATCH_ADVANCE_PERIOD
        - PERIOD_CANNOT_OVERLAP_WITH_ANOTHER_ADVANCE
        - CONTRACT_TERMINATION_NOT_AFTER_SUPPLYENDDATE
        - ACTIVE_PRODUCT_NOT_FOUND_FOR_CONTRACT
        - CONTRACT_ALREADY_TERMINATED_ON_ANOTHER_DATE
        - PERIOD_CANNOT_OVERLAP_PERIOD_WITH_OTHER_PRODUCT
        - ADVANCE_CANNOT_BE_APPROVED_WHEN_ENDNOTE_IS_ALREADY_MADE
        - TARIFFPERIOD_CAN_NOT_HAVE_TIERED_STAIRSTEP_VOLUME_TARIFF_WITH_OPEN_START_OR_END_DATES
        - TARIFFPERIOD_TIERED_STAIRSTEP_VOLUME_TARIFF_WITH_OPEN_START_OR_END_DATES_EXISTS
        - CUSTOMERGROUP_ALREADY_EXISTS
        - CUSTOMERGROUP_DOES_NOT_EXIST
        - COLLECTION_FLOW_ALREADY_EXISTS
        - MISSING_PROPERTY_GROUP_ON_SERVICE_LOCATION
        - MISSING_COMPANY_ON_PROPERTY_GROUP
        - MISSING_COMPANY_IBAN_ON_PROPERTY_GROUP
        - TRANSACTION_COULD_NOT_BE_MAPPED_TO_COMPANY
        - UNSUPPORTED_CONTRACTS_WITH_MULTIPLE_COMPANIES
        - UNSUPPORTED_COMPANY_BANK_ACCOUNTS_WITH_MULTIPLE_COMPANIES
        - MISSING_CONTRACT_ON_CUSTOMER
        - CONTRACTSERVICELOCATION_HAS_NO_SERVICES
        - CONTRACT_HAS_NO_SERVICELOCATIONS
        - BILLING_SCOPE_INVALID
        - BILLING_SCOPE_CONTRACT_NOT_SUPPORTED
        - UTILITY_TYPE_NOT_SUPPORTED_FOR_SCOPE_CONTRACT
        - BILLING_ITEM_CALCULATION_TYPE_NOT_SUPPORTED
        - DATE_NOT_IN_CONTRACT_SUPPLY_RANGE
        - NO_MATCHING_SERVICE_FOUND
        - METERINGISSUE_NOT_FOUND
        - METERINGISSUE_NOT_UNRESOLVED
        - CONTRACT_MAXIMUM_LOCATION_LIMIT_REACHED
        - INVOICE_ESTIMATION_NOT_ENABLED
        - ADVANCE_LIMIT_TYPE_NOT_SUPPORTED
        - VALIDATIONRULES_SHOULD_BE_UNIQUE
        - BULK_RESOLUTION_NOT_ALLOWED
        - INCORRECT_METERING_ISSUE_RESOLUTION
        - FIELD_MUST_BE_CHANGED
        - AWAITING_BANK_CONFIRMATION
        - CREATED_INVOICE_CANT_BE_PAID
        - CONSUMPTION_MEASUREMENT_MISMATCH
        - TRANSACTION_SETTLEMENT_NOT_FOUND
        - SERVICELOCATION_SERVICES_MISSING
        - POSTALCODE_IS_NOT_THE_CORRECT_LENGHT
        - UBL_COUNTRY_NOT_SUPPORTED
        - UBL_VATNUMBER_INVALID_FORMAT
        - UBL_VATNUMBER_INVALID_FORMAT_CUSTOMER
        - UBL_VATNUMBER_REQUIRED
        - UBL_VATNUMBER_REQUIRED_CUSTOMER
        - UBL_REGISTRATION_NAME_REQUIRED
        - UBL_VATNUMBER_EMPTY
        - UBL_EXPORT_CONTAINS_VALIDATION_ERRORS
        - UBL_EXPORT_NOT_GENERATED
        - UBL_INVOICE_NOT_GENERATED
        - UBL_INVOICES_NOT_GENERATED
        - UBL_INVOICE_IN_PROGRESS
        - UBL_INVOICES_IN_PROGRESS
        - UBL_INVOICE_INVALID_CUSTOMERTYPE
        - UBL_INVOICES_INVALID_CUSTOMERTYPE
        - UBL_INVOICE_AMOUNTS_INVALID
        - QR_GENERATION_FAILED
        - TOO_MANY_DECIMALS
        - CANNOT_CREATE_ADVANCE_TEMPLATE_DATAOBJECT_WITH_AMOUNT_NEGATIVE
        - INVALID_URL
        - TEMPLATE_DATA_CONTAINER_NOT_FOUND
        - INVALID_TEMPLATE_DATA_OBJECT_TYPE
        - PAYMENTLINK_GENERATION_FAILED
        - CANNOT_DISABLE_INVOICE_COLLECTION_ANYMORE
        - INVOICE_LINE_TYPE_NOT_SUPPORTED
        - VALUE_TOO_OLD
        - CANNOT_CHANGE_TIMEZONE_ANYMORE
        - PAYMENT_REFERENCE_INVALID
        - COULD_NOT_CALCULATE_DUE_DATE
        - BILLING_TARIFFS_INCOHERENT_CONDITIONS
        - PREPAYMENT_ACCOUNT_COULD_NOT_BE_SET
        - PREPAYMENT_SHARED_BALANCE_METER_CANNOT_BE_INSTALLED_ON_MULTI_CONTRACT_SERVICELOCATION
        - PREPAYMENT_MULTIPLE_CONTRACTS_FOR_SAME_UTILILTY_TYPE
        - TIER_CALCULATION_METHOD_CAN_NOT_BE_TARIFF_PERIOD_FOR_NON_CONSUMPTION_BILLING_ITEM
        - MEASUREMENT_READINGDATE_TOO_OLD
        - PREPAYMENT_ACCOUNT_DOES_NOT_EXIST
        - METERING_TYPE_NOT_SUPPORTED
        - UTILITY_TYPE_NOT_SUPPORTED
        - DIRECTION_VALUE_NOT_SUPPORTED
        - INVALID_CUSTOM_ENTITY_PROPERTY_ENTITY_SUBJECT_TYPE
        - INVALID_CUSTOM_ENTITY_PROPERTY_VALUE_TYPE
        - DEVICE_ID_NOT_FOUND
        - MISSING_METER_SERIAL_NUMBER
        - BILLING_METHODS_NOT_MATCHING
        - ADMIN_USER_NOT_FOUND
        - USER_ALREADY_EXISTS
        - USER_NOT_FOUND
        - ROLE_NOT_FOUND
        - ROLE_NOT_IN_SCOPE
        - ROLE_ALREADY_EXISTS
        - PERMISSION_INVALID
        - IMPORT_COLUMN_MISMATCH
        - IMPORT_INVALID_UNITPRICE
        - IMPORT_INVALID_ORIGIN
        - IMPORT_INVALID_TARIFFTYPE
        - IMPORT_BILLINGTARIFF_ALREADYEXISTS
        - IMPORT_PREVIOUS_BILLINGTARIFF_NOTFOUND
        - IMPORT_CALCULATIONTYPE_DOES_NOT_MATCH
        - IMPORT_NUMBER_IS_NOT_A_DECIMAL
        - IMPORT_TIER_KEY_IS_NOT_THE_SAME_AS_PREVIOUS_TARIFF
        - IMPORT_CEP_COLUMN_NOT_FOUND_IN_FILE
        - IMPORT_CEP_DOES_NOT_MATCH_PREVIOUS_TARIFF
        - IMPORT_NEED_BOTH_SDD_AND_SCT
        - IMPORT_MISSING_TARIFF_FOR_CEP
        - IMPORT_AMOUNT_OF_CEP_VALUES_DOES_NOT_MATCH
        - IMPORT_ALREADY_LOCKED
        - IMPORT_NOT_LOCKED
        - SERVICE_LOCATION_HAS_INSTALLED_METERS
        - SERVICE_LOCATION_IS_PART_OF_PROPERTY_GROUP
        - SERVICE_LOCATION_HAS_CONTRACTS
        - IMPORT_CANT_HAVE_ORIGIN_BILLINGITEM_WITH_PRODUCT
        - END_CANT_BE_BEFORE_START
        - CONSTANT_SEGMENT_TYPE_SINGLE_VALUE
        - SERVICELOCATIONS_DO_NOT_HAVE_PREPAYMENT_METERS_FOR_CONTRACT_DATE_RANGE
        - DIFFERENT_DECIMAL_SEPARATOR_CONFIGURED
        - DIFFERENT_THOUSANDS_SEPARATOR_CONFIGURED
        - DIFFERENT_THOUSANDS_OR_DECIMAL_SEPARATOR_CONFIGURED
        - DIFFERENT_DATE_FORMAT_CONFIGURED
        - DUPLICATE_TIER_IN_LIST
        - SERVICELOCATION_ALREADY_HAS_SHAREDBALANCEMETER_AND_SERVICE_SUPPLIED_FOR_CONTRACT_DATE_RANGE
        - UNINSTALL_METER_SERVICELOCATIONS_DO_NOT_HAVE_PREPAYMENT_METERS_FOR_CONTRACT_DATE_RANGE
        - INSTALL_SHARED_BALANCE_METER_SERVICELOCATION_HAS_MORE_THEN_ONE_CONTRACT
        - USER_HAS_NO_MOBILE_PHONENUMBER
        - INVOICE_NOT_APPROVALINPROGRESS_STATUS
        - INVALID_CONTRACT_BILLING_METHOD
        - FEATURE_NOT_YET_AVAILABLE
        - INVALID_NUMBER_SEPARATOR
        - INVALID_DATE_FORMAT
        - INVALID_TIMEZONE_CONFIGURED
        - INVALID_METERING_TYPE
        - METERING_IMPORT_UNITOFMEASURE_NOT_SUPPORTED
        - METERING_IMPORT_UNITOFMEASURE_NOT_SUPPORTED_INFO
        - INVALID_UTILITY_TYPE
        - INVALID_DIRECTION_VALUE
        - COLLECTION_STEP_EXECUTION_DATE_ALREADY_REACHED
        - COLLECTION_STEP_HAS_WRONG_TYPE
        - COLLECTION_STEP_HAS_WRONG_COMMUNICATION_TYPE
        - SANDBOX_MODE_NEEDS_RECIPIENT_PHONE
        - ANNUAL_STATEMENT_ALREADY_GENERATED
        - ANNUAL_STATEMENT_GENERATION_IN_PROGRESS
        - ANNUAL_STATEMENTS_FEATURE_NOT_ENABLED
        - TEMPLATE_NOT_FOUND
        - CONFIRMATION_TOKEN_MISSING
        - RESET_PASSWORD_TOKEN_MISSING
        - EMAIL_CANNOT_BE_CHANGED
        - USER_CANNOT_BE_CHANGED
        - ANNUAL_STATEMENT_WRONG_STATUS
        - ANNUAL_STATEMENT_DOES_NOT_EXIST
        - WRONG_STATUS
        - INVALID_FILE
        - COULD_NOT_PARSE_MEASUREMENT_FILE
        - DATE_IS_IN_FUTURE
        - CONFIRM_PASSWORD_DOES_NOT_MATCH
        - PASSWORD_MINIMUM_LENGTH_12
        - INCOMING_MUTATION_INVALID_AMOUNTS_TO_SETTLE
        - LIMIT_TOO_BIG
        - CUSTOMER_HAS_NO_DATA_FOR_ANNUAL_STATEMENT
        - FIELD_SHOULD_CONTAIN_AT_LEAST_ONE_CHARACTER
        - IMPORT_BILLINGTARIFF_ALREADYEXISTS_IN_THE_SAME_FILE
        - PINGEN_NOT_ENABLED
        - GENERAL_LEDGER_CATEGORY_NOT_FOUND
        - METERING_IMPORT_VALUE_WAS_EMPTY
        - PORTAL_PAGE_NOTIFICATION_ALREADY_EXISTS_FOR_PAGE_IDENTIFIER
        - METER_CANNOT_HAVE_ITSELF_AS_PARENT
        - REQUESTED_FILE_NOT_FOUND
        - BUILT_IN_FILE_FORMAT_MISSING
        - METERING_IMPORT_NO_ADDITIONAL_INFO
        - UNKNOWN
      type: string
    ErrorCodeMessage:
      type: object
      properties:
        errorCode:
          allOf:
            - $ref: '#/components/schemas/ErrorCode'
        values:
          type: array
          items:
            $ref: '#/components/schemas/ErrorCodeMessageValue'
          nullable: true
      additionalProperties: false
    ErrorCodeMessageValue:
      type: object
      properties:
        dataType:
          allOf:
            - $ref: '#/components/schemas/DataType'
          nullable: true
        value:
          type: string
          nullable: true
        capitalize:
          type: boolean
      additionalProperties: false
    EstimatedAdvancePeriodDTO:
      type: object
      properties:
        periodStartDateTime:
          type: string
          description: The start date and time of the advance period.
          format: date-time
        periodEndDateTime:
          type: string
          description: The end date and time of the advance period.
          format: date-time
        amountExclVAT:
          type: number
          description: The advance amount excluding VAT.
          format: double
        vat:
          type: number
          description: The VAT amount for this advance.
          format: double
        amountInclVAT:
          type: number
          description: The advance amount including VAT.
          format: double
        quantity:
          type: number
          description: The quantity associated with this advance.
          format: double
        unitPrice:
          type: number
          description: The unit price for this advance.
          format: double
        vatRate:
          type: number
          description: The VAT rate applied to this advance.
          format: double
        paid:
          type: boolean
          description: Indicates whether this advance has been paid.
        invoiceId:
          type: string
          description: The unique identifier of the invoice associated with this advance.
          nullable: true
      additionalProperties: false
      description: "Represents an advance period in an estimated invoice.\r\nThis DTO contains information about advance payments, including amounts, periods, and payment status."
    EstimatedAnnualVolumeOrigin:
      enum:
        - manual
        - frompreviousyear
        - fromconsumergroup
        - forecast
      type: string
    EstimatedBillingCompletenessDTO:
      type: object
      properties:
        id:
          type: string
          description: Gets or sets the unique identifier.
          nullable: true
        entityType:
          allOf:
            - $ref: '#/components/schemas/EntitySubjectType'
          description: Gets or sets the type of the entity.
          nullable: true
        createdDateTime:
          type: string
          description: Gets or sets the date and time when the entity was created.
          format: date-time
        discriminator:
          type: string
          description: Gets or sets the discriminator value.
          nullable: true
        _etag:
          type: string
          description: Gets or sets the ETag value.
          nullable: true
        requireAttention:
          type: boolean
          description: Gets a value indicating whether the entity requires attention.
          readOnly: true
        hasErrors:
          type: boolean
          description: Gets or sets a value indicating whether the entity has errors.
        hasWarnings:
          type: boolean
          description: Gets or sets a value indicating whether the entity has warnings.
        isReadOnly:
          type: boolean
          description: Gets or sets a value indicating whether the entity is read-only.
        organisationId:
          type: string
          description: Gets or sets the organization identifier.
          nullable: true
        contractId:
          type: string
          description: Unique identifier of the contract
          nullable: true
        contractNum:
          type: string
          description: Contract number
          nullable: true
        debtor:
          allOf:
            - $ref: '#/components/schemas/DebtorDTO'
          description: Information about the debtor
          nullable: true
        billingRelationId:
          type: string
          description: Unique identifier of the billing relation
          nullable: true
        periodStartDateTime:
          type: string
          description: Start date and time of the billing period
          format: date-time
        periodEndDateTime:
          type: string
          description: End date and time of the billing period
          format: date-time
        status:
          allOf:
            - $ref: '#/components/schemas/BillingCompletenessStatus'
          description: Current status of billing completeness
          nullable: true
        inputMissingDetails:
          allOf:
            - $ref: '#/components/schemas/InputMissingDetailsDTO'
          description: Details about any missing input data
          nullable: true
        hasCorrections:
          type: boolean
          description: Indicates if there are any corrections made to the billing data
        invoiceType:
          allOf:
            - $ref: '#/components/schemas/InvoiceType'
          description: Type of invoice being generated
          nullable: true
        blocked:
          type: boolean
          description: Indicates if the billing is currently blocked
        requiredQuantitiesGrouped:
          allOf:
            - $ref: '#/components/schemas/RequiredQuantityGroupedDTO'
          description: Grouped required quantities for billing
          nullable: true
        advancePeriods:
          type: array
          items:
            $ref: '#/components/schemas/AdvancePeriodDTO'
          description: List of advance payment periods
          nullable: true
        expectAdvancesToBeImportedPeriodically:
          type: boolean
          description: Indicates if advances are expected to be imported periodically
        costAllocationBillable:
          type: boolean
          description: Indicates if cost allocation is billable
        invoicingUpfront:
          type: boolean
          description: Indicates if invoicing is done upfront
        invoicingCheckpointDateTime:
          type: string
          description: Date and time of the last invoicing checkpoint
          format: date-time
        productId:
          type: string
          description: Unique identifier of the product
          nullable: true
        propertyGroups:
          type: array
          items:
            $ref: '#/components/schemas/PropertyGroupReferenceDTO'
          description: List of property groups associated with this billing
          nullable: true
        originalBillingCompletenessId:
          type: string
          description: ID of the original billing completeness entry
          nullable: true
        estimationMessagesRequested:
          type: array
          items:
            type: string
          description: Collection of reference IDs for estimation messages
          nullable: true
        validationErrors:
          type: array
          items:
            $ref: '#/components/schemas/ErrorCodeMessage'
          description: List of validation errors encountered during estimation
          nullable: true
      additionalProperties: false
      description: Represents an estimated billing completeness status
    EstimatedBillingCompletenessDTOApiResponseDTO:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/LocalisedErrorDTO'
          nullable: true
        success:
          type: boolean
        applicableEntitiesCount:
          type: integer
          format: int32
        requestedEntitiesCount:
          type: integer
          format: int32
        succeededEntitiesCount:
          type: integer
          format: int32
          readOnly: true
        isSynchronous:
          type: boolean
        data:
          allOf:
            - $ref: '#/components/schemas/EstimatedBillingCompletenessDTO'
          description: The updated entity in case of modifications or creation
          nullable: true
      additionalProperties: false
    EstimatedInvoiceDTO:
      type: object
      properties:
        customerId:
          type: string
          description: The unique identifier of the customer.
          nullable: true
        contractId:
          type: string
          description: The unique identifier of the contract.
          nullable: true
        originalBillingCompletenessId:
          type: string
          description: The unique identifier of the original billing completeness record.
          nullable: true
        product:
          allOf:
            - $ref: '#/components/schemas/ProductReferenceDTO'
          description: Reference to the product associated with this estimated invoice.
          nullable: true
        calculationDate:
          type: string
          description: The date and time when this estimation was calculated.
          format: date-time
        periodEndDateTime:
          type: string
          description: The end date and time of the billing period.
          format: date-time
        periodStartDateTime:
          type: string
          description: The start date and time of the billing period.
          format: date-time
        totalAmountInclVAT:
          type: number
          description: The total amount including VAT.
          format: double
        totalAmountExclVAT:
          type: number
          description: The total amount excluding VAT.
          format: double
        totalVATAmount:
          type: number
          description: The total VAT amount.
          format: double
        remainingAmount:
          type: number
          description: The remaining amount to be billed.
          format: double
        lines:
          type: array
          items:
            $ref: '#/components/schemas/EstimatedInvoiceLineDTO'
          description: List of line items in the estimated invoice.
          nullable: true
        advances:
          type: array
          items:
            $ref: '#/components/schemas/EstimatedAdvancePeriodDTO'
          description: List of advance periods associated with this estimated invoice.
          nullable: true
        accuracy:
          allOf:
            - $ref: '#/components/schemas/Level'
          description: The accuracy level of this estimation.
          nullable: true
      additionalProperties: false
      description: "Represents an estimated invoice for a customer.\r\nThis DTO contains information about the estimated charges, periods, and accuracy of the estimation."
    EstimatedInvoiceDTOApiResponseDTO:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/LocalisedErrorDTO'
          nullable: true
        success:
          type: boolean
        applicableEntitiesCount:
          type: integer
          format: int32
        requestedEntitiesCount:
          type: integer
          format: int32
        succeededEntitiesCount:
          type: integer
          format: int32
          readOnly: true
        isSynchronous:
          type: boolean
        data:
          allOf:
            - $ref: '#/components/schemas/EstimatedInvoiceDTO'
          description: The updated entity in case of modifications or creation
          nullable: true
      additionalProperties: false
    EstimatedInvoiceLineDTO:
      type: object
      properties:
        calculationType:
          allOf:
            - $ref: '#/components/schemas/BillingCalculationType'
          description: The type of calculation used for this line item.
          nullable: true
        billingItemReference:
          allOf:
            - $ref: '#/components/schemas/BillingItemReference'
          description: Reference to the billing item associated with this line.
          nullable: true
        startDateTime:
          type: string
          description: The start date and time of the billing period.
          format: date-time
        endDateTime:
          type: string
          description: The end date and time of the billing period.
          format: date-time
        amountExclVAT:
          type: number
          description: The amount excluding VAT.
          format: double
        vat:
          type: number
          description: The VAT amount.
          format: double
        amountInclVAT:
          type: number
          description: The amount including VAT.
          format: double
        quantity:
          type: number
          description: The quantity being billed.
          format: double
        rawQuantity:
          type: number
          description: The raw quantity before any adjustments.
          format: double
          nullable: true
        unitPrice:
          type: number
          description: The unit price for this line item.
          format: double
        vatRate:
          type: number
          description: The VAT rate applied to this line item.
          format: double
        unitOfMeasure:
          allOf:
            - $ref: '#/components/schemas/UnitOfMeasure'
          description: The unit of measure for the quantity.
          nullable: true
        utilityType:
          allOf:
            - $ref: '#/components/schemas/UtilityType'
          description: The type of utility being billed.
          nullable: true
        serviceLocationId:
          type: string
          description: The unique identifier of the service location.
          nullable: true
        billingTariffAccuracy:
          allOf:
            - $ref: '#/components/schemas/PeriodForEntityDTO'
          description: The accuracy period information for the billing tariff.
          nullable: true
        costComponentAccuracies:
          type: array
          items:
            $ref: '#/components/schemas/PeriodForEntityDTO'
          description: List of accuracy periods for cost components.
          nullable: true
        taxAccuracy:
          allOf:
            - $ref: '#/components/schemas/PeriodForEntityDTO'
          description: The accuracy period information for tax calculations.
          nullable: true
        accuracy:
          allOf:
            - $ref: '#/components/schemas/Level'
          description: The overall accuracy level of this line item.
          nullable: true
        quantityAccuracy:
          allOf:
            - $ref: '#/components/schemas/Level'
          description: The accuracy level of the quantity calculation.
          nullable: true
      additionalProperties: false
      description: "Base class for estimated invoice line items.\r\nThis abstract class defines the common properties for all types of estimated invoice lines."
    ExecutionStatus:
      enum:
        - unknown
        - uploaded
        - ignored
        - processed
        - failed
        - processedwitherrors
        - readallcontents
        - processing
      type: string
    ExportJobLineStatus:
      enum:
        - created
        - gatheringdata
        - ready
      type: string
    ExportJobStatus:
      enum:
        - created
        - generating
        - generated
        - transferred
        - failed
        - gatheringdata
        - ready
        - gathereddata
        - transferring
      type: string
    ExportJobsQuickFilter:
      enum:
        - all
        - created
        - failed
        - generated
        - exported
        - requireattention
      type: string
    ExportOutgoingBankingTransactionBulkRequest:
      type: object
      properties:
        outgoingBankingTransactionIds:
          type: array
          items:
            type: string
          description: List of outgoing banking transaction IDs to be exported.
          nullable: true
      additionalProperties: false
      description: "Represents a bulk request to export outgoing banking transactions.\r\nThis DTO is used to export multiple outgoing banking transactions in a single operation."
    ExportOutgoingBankingTransactionPaymentRefundFormatType:
      enum:
        - pain_001001003
      type: string
    ExportOutgoingBankingTransactionPaymentRefundFormatTypeListApiResponseDTO:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/LocalisedErrorDTO'
          nullable: true
        success:
          type: boolean
        applicableEntitiesCount:
          type: integer
          format: int32
        requestedEntitiesCount:
          type: integer
          format: int32
        succeededEntitiesCount:
          type: integer
          format: int32
          readOnly: true
        isSynchronous:
          type: boolean
        data:
          type: array
          items:
            $ref: '#/components/schemas/ExportOutgoingBankingTransactionPaymentRefundFormatType'
          description: The updated entity in case of modifications or creation
          nullable: true
      additionalProperties: false
    ExportOutgoingBankingTransactionPaymentRefundRequest:
      type: object
      properties:
        formatType:
          allOf:
            - $ref: '#/components/schemas/ExportOutgoingBankingTransactionPaymentRefundFormatType'
          description: The format type to be used for exporting the payment refund transactions.
          nullable: true
      additionalProperties: false
      description: "Represents a request to export outgoing banking transaction payment refunds.\r\nThis DTO is used to export payment refund transactions in a specified format."
    ExportOutgoingBankingTransactionPaymentRequestFormatType:
      enum:
        - pain_008001002
      type: string
    ExportOutgoingBankingTransactionPaymentRequestFormatTypeListApiResponseDTO:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/LocalisedErrorDTO'
          nullable: true
        success:
          type: boolean
        applicableEntitiesCount:
          type: integer
          format: int32
        requestedEntitiesCount:
          type: integer
          format: int32
        succeededEntitiesCount:
          type: integer
          format: int32
          readOnly: true
        isSynchronous:
          type: boolean
        data:
          type: array
          items:
            $ref: '#/components/schemas/ExportOutgoingBankingTransactionPaymentRequestFormatType'
          description: The updated entity in case of modifications or creation
          nullable: true
      additionalProperties: false
    ExportOutgoingBankingTransactionPaymentRequestRequest:
      type: object
      properties:
        formatType:
          allOf:
            - $ref: '#/components/schemas/ExportOutgoingBankingTransactionPaymentRequestFormatType'
          description: The format type to be used for exporting the payment request transactions.
          nullable: true
      additionalProperties: false
      description: "Represents a request to export outgoing banking transaction payment requests.\r\nThis DTO is used to export payment request transactions in a specified format."
    ExportSettingsCategoryType:
      enum:
        - invoice
      type: string
    ExportStatus:
      enum:
        - notexported
        - exported
      type: string
    ExportUblFormatBulkRequest:
      type: object
      properties:
        invoiceIds:
          type: array
          items:
            type: string
          description: List of invoice IDs to be exported in UBL format.
          nullable: true
        markAsExported:
          type: boolean
          description: Indicates whether the exported invoices should be marked as exported in the system.
      additionalProperties: false
      description: "Represents a bulk request to export invoices in UBL format.\r\nThis DTO is used to export multiple invoices in UBL (Universal Business Language) format in a single operation."
    ExportUblFormatSingleRequest:
      type: object
      properties:
        invoiceId:
          type: string
          description: The ID of the invoice to be exported in UBL format.
          nullable: true
        markAsExported:
          type: boolean
          description: Indicates whether the exported invoice should be marked as exported in the system.
      additionalProperties: false
      description: "Represents a request to export a single invoice in UBL format.\r\nThis DTO is used to export one invoice in UBL (Universal Business Language) format."
    ExportUblValidateRequest:
      type: object
      properties:
        invoiceIds:
          type: array
          items:
            type: string
          description: List of invoice IDs to be validated against UBL format specifications.
          nullable: true
      additionalProperties: false
      description: "Represents a request to validate invoices in UBL format.\r\nThis DTO is used to validate multiple invoices against UBL (Universal Business Language) format specifications."
    ExternalMeasurementsQuickFilter:
      enum:
        - all
        - contextinvalid
        - linked
        - unlinked
        - unprocessed
      type: string
    FileSizeType:
      enum:
        - b
        - kb
        - mb
        - gb
      type: string
    FirstInvoiceEndDateTimeSuggestionResponseDTO:
      type: object
      properties:
        firstInvoiceEndDateTime:
          type: string
          description: Suggested end date and time for the first invoice
          format: date-time
      additionalProperties: false
      description: Represents a suggested end date and time for the first invoice
    FirstInvoiceEndDateTimeSuggestionResponseDTOApiResponseDTO:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/LocalisedErrorDTO'
          nullable: true
        success:
          type: boolean
        applicableEntitiesCount:
          type: integer
          format: int32
        requestedEntitiesCount:
          type: integer
          format: int32
        succeededEntitiesCount:
          type: integer
          format: int32
          readOnly: true
        isSynchronous:
          type: boolean
        data:
          allOf:
            - $ref: '#/components/schemas/FirstInvoiceEndDateTimeSuggestionResponseDTO'
          description: The updated entity in case of modifications or creation
          nullable: true
      additionalProperties: false
    FlatConsumptionAggregates:
      enum:
        - min
        - max
        - avg
        - total
        - mindate
        - maxdate
      type: string
    FormulaFunctionCategory:
      enum:
        - billing
        - consumptions
        - contracts
        - math
        - meterconfig
        - meters
      type: string
    FormulaFunctionExceptionDTO:
      type: object
      properties:
        functionPosition:
          type: integer
          description: Position of the function in the formula where the error occurred
          format: int32
        error:
          allOf:
            - $ref: '#/components/schemas/LocalisedErrorDTO'
          description: Localized error information
          nullable: true
        message:
          type: string
          description: Human-readable error message
          nullable: true
        parameters:
          type: array
          items:
            type: string
          description: Parameters that were passed to the function when the error occurred
          nullable: true
      additionalProperties: false
      description: Represents an error that occurred during formula function execution
    FormulaFunctionInputParameterDTO:
      type: object
      properties:
        name:
          type: string
          description: Name of the input parameter
          nullable: true
        referenceType:
          allOf:
            - $ref: '#/components/schemas/FormulaFunctionInputParameterReferenceType'
          description: Type of reference for the parameter value
          nullable: true
        referenceTypeParameters:
          allOf:
            - $ref: '#/components/schemas/FormulaFunctionInputReferenceTypeParametersDTO'
          description: Parameters specific to the reference type
          nullable: true
      additionalProperties: false
      description: Represents an input parameter for a formula function
    FormulaFunctionInputParameterReferenceType:
      enum:
        - fixed
        - runtimeparameter
        - formulafunctionoutput
      type: string
    FormulaFunctionInputReferenceTypeParametersDTO:
      type: object
      additionalProperties: false
      description: Base class for formula function input reference type parameters
    FormulaFunctionInstanceDTO:
      type: object
      properties:
        functionType:
          allOf:
            - $ref: '#/components/schemas/FormulaFunctionType'
          description: Type of formula function being instantiated
          nullable: true
        inputParameters:
          type: array
          items:
            $ref: '#/components/schemas/FormulaFunctionInputParameterDTO'
          description: List of input parameters required by the function
          nullable: true
        outputParameterName:
          type: string
          description: Name of the output parameter that will store the function's result
          nullable: true
      additionalProperties: false
      description: Represents an instance of a formula function with its input parameters and output configuration
    FormulaFunctionType:
      enum:
        - getmeterslinkedtopropertygroup
        - getmatchingchannelsformeters
        - getserviceconsumptionsforexternalchannels
        - aggregateconsumptions
        - subtractconsumptions
        - getmeterconsumptionsforexternalchannels
        - gettotaloutputchannelconsumption
        - gettotalmonthssuppliedforproperty
        - dividevalues
        - multiplyvalues
        - gettotalincominginvoicecomponentvalue
        - aggregatetotalconsumptions
        - applycorrectionfactortoconsumptions
        - addvalues
        - subtractvalues
      type: string
    FormulaType:
      enum:
        - calculatedconsumption
        - calculatedtariff
      type: string
    FormulaValidationResultDTO:
      type: object
      properties:
        valid:
          type: boolean
          description: Indicates whether the formula is valid
        generalValidationErrors:
          type: array
          items:
            $ref: '#/components/schemas/LocalisedErrorDTO'
          description: List of general validation errors that apply to the entire formula
          nullable: true
        functionValidationErrors:
          type: array
          items:
            $ref: '#/components/schemas/FormulaValidationResultFunctionValidationErrorDTO'
          description: List of validation errors specific to individual functions in the formula
          nullable: true
      additionalProperties: false
      description: 'Represents the result of validating a formula, including any validation errors'
    FormulaValidationResultFunctionValidationErrorDTO:
      type: object
      properties:
        functionPosition:
          type: integer
          description: Position of the function in the formula where the validation error occurred
          format: int32
        error:
          allOf:
            - $ref: '#/components/schemas/LocalisedErrorDTO'
          description: Localized error information
          nullable: true
        value:
          type: string
          description: The value that caused the validation error
          nullable: true
      additionalProperties: false
      description: Represents a validation error for a specific function in the formula
    FractionFrequency:
      enum:
        - daily
        - hourly
      type: string
    FtpProtocol:
      enum:
        - none
        - ssl2
        - ssl3
        - tls
        - default
        - tls11
        - tls12
      type: string
    FunctionDescriptionDTO:
      type: object
      properties:
        functionCategory:
          allOf:
            - $ref: '#/components/schemas/FormulaFunctionCategory'
          description: Category classification of the function
          nullable: true
        functionType:
          allOf:
            - $ref: '#/components/schemas/FormulaFunctionType'
          description: Specific type of the formula function
          nullable: true
        outputType:
          type: string
          description: Data type of the function's output
          nullable: true
        inputParameters:
          type: object
          additionalProperties:
            type: string
            nullable: true
          description: Dictionary mapping input parameter names to their data types
          nullable: true
      additionalProperties: false
      description: 'Represents a description of a formula function, including its category, type, and parameter information'
    FunctionDescriptionDTOListApiResponseDTO:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/LocalisedErrorDTO'
          nullable: true
        success:
          type: boolean
        applicableEntitiesCount:
          type: integer
          format: int32
        requestedEntitiesCount:
          type: integer
          format: int32
        succeededEntitiesCount:
          type: integer
          format: int32
          readOnly: true
        isSynchronous:
          type: boolean
        data:
          type: array
          items:
            $ref: '#/components/schemas/FunctionDescriptionDTO'
          description: The updated entity in case of modifications or creation
          nullable: true
      additionalProperties: false
    GeneralLedgerCategory:
      enum:
        - product
        - billingitem
        - taxcode
        - collectionflow
        - bankaccount
        - waitingaccount
      type: string
    GeneralLedgerMappingStatus:
      enum:
        - unlinked
        - linked
      type: string
    GetAnnualStatementsQueryParams:
      type: object
      properties:
        flexSearch:
          type: string
          nullable: true
        includeOnlyIds:
          type: array
          items:
            type: string
          nullable: true
        excludeIds:
          type: array
          items:
            type: string
          nullable: true
        customerId:
          type: string
          nullable: true
        statuses:
          type: array
          items:
            type: string
          nullable: true
        year:
          type: integer
          format: int32
          nullable: true
        limit:
          type: integer
          format: int32
          nullable: true
      additionalProperties: false
    GetBillingCompletenessQueryParams:
      type: object
      properties:
        flexSearch:
          type: string
          nullable: true
        includeOnlyIds:
          type: array
          items:
            type: string
          nullable: true
        excludeIds:
          type: array
          items:
            type: string
          nullable: true
        billingRelationId:
          type: string
          nullable: true
        customerId:
          type: string
          nullable: true
        propertyGroupIds:
          type: array
          items:
            type: string
          nullable: true
        contractId:
          type: string
          nullable: true
        invoiceType:
          type: string
          nullable: true
        status:
          type: string
          nullable: true
        onlyOpen:
          type: boolean
        skipBlocked:
          type: boolean
        periodStartDateTime:
          type: string
          format: date-time
          nullable: true
        periodEndDateTime:
          type: string
          format: date-time
          nullable: true
        invoicingCheckpointStartDateTime:
          type: string
          format: date-time
          nullable: true
        invoicingCheckpointEndDateTime:
          type: string
          format: date-time
          nullable: true
      additionalProperties: false
    GetIncomingBankingTransactionExportRequest:
      type: object
      properties:
        incomingBankingTransactionIds:
          type: array
          items:
            type: string
          description: A list of IDs for the incoming banking transactions to be included in the export.
          nullable: true
      additionalProperties: false
      description: "Represents a request to export data for specific incoming banking transactions.\r\nThis DTO is used to retrieve transaction data in a format suitable for export."
    GetIncomingBankingTransactionsQueryParams:
      type: object
      properties:
        flexSearch:
          type: string
          nullable: true
        includeOnlyIds:
          type: array
          items:
            type: string
          nullable: true
        excludeIds:
          type: array
          items:
            type: string
          nullable: true
        companyBankAccountId:
          type: string
          nullable: true
        mutationDateTimeStart:
          type: string
          format: date-time
          nullable: true
        mutationDateTimeEnd:
          type: string
          format: date-time
          nullable: true
        openingBalanceDateStart:
          type: string
          format: date-time
          nullable: true
        openingBalanceDateEnd:
          type: string
          format: date-time
          nullable: true
      additionalProperties: false
    GetIncomingMutationsQueryParams:
      type: object
      properties:
        flexSearch:
          type: string
          nullable: true
        includeOnlyIds:
          type: array
          items:
            type: string
          nullable: true
        excludeIds:
          type: array
          items:
            type: string
          nullable: true
        status:
          type: string
          nullable: true
        incomingMutationType:
          type: string
          nullable: true
        incomingBankingTransactionId:
          type: string
          nullable: true
        transactionDateStart:
          type: string
          format: date-time
          nullable: true
        transactionDateEnd:
          type: string
          format: date-time
          nullable: true
      additionalProperties: false
    GetInvoicesQueryParams:
      type: object
      properties:
        flexSearch:
          type: string
          nullable: true
        includeOnlyIds:
          type: array
          items:
            type: string
          nullable: true
        excludeIds:
          type: array
          items:
            type: string
          nullable: true
        invoiceType:
          type: array
          items:
            type: string
          nullable: true
        propertyGroupIds:
          type: array
          items:
            type: string
          nullable: true
        productId:
          type: string
          description: Filter invoices by product.
          nullable: true
        customerId:
          type: string
          nullable: true
        contractId:
          type: string
          nullable: true
        invoiceStatus:
          type: array
          items:
            type: string
          nullable: true
        paymentProcessStatus:
          type: array
          items:
            type: string
          nullable: true
        billingCompletenessId:
          type: string
          nullable: true
        paymentMethod:
          type: string
          nullable: true
        startDateTime:
          type: string
          format: date-time
          nullable: true
        endDateTime:
          type: string
          format: date-time
          nullable: true
        periodStartDateTime:
          type: string
          format: date-time
          nullable: true
        periodEndDateTime:
          type: string
          format: date-time
          nullable: true
        periodStartDateTimeBegin:
          type: string
          format: date-time
          nullable: true
        periodStartDateTimeEnd:
          type: string
          format: date-time
          nullable: true
        periodEndDateTimeBegin:
          type: string
          format: date-time
          nullable: true
        periodEndDateTimeEnd:
          type: string
          format: date-time
          nullable: true
        paidDateTimeBegin:
          type: string
          format: date-time
          nullable: true
        exportStatus:
          type: string
          nullable: true
        collectionCaseId:
          type: string
          nullable: true
        customerGroupId:
          type: string
          nullable: true
        companyBankAccountId:
          type: string
          nullable: true
      additionalProperties: false
    GetOutgoingBankingTransactionExportRequest:
      type: object
      properties:
        outgoingBankingTransactionIds:
          type: array
          items:
            type: string
          description: A list of IDs for the outgoing banking transactions to be included in the export.
          nullable: true
      additionalProperties: false
      description: "Represents a request to export data for specific outgoing banking transactions.\r\nThis DTO is used to retrieve transaction data in a format suitable for export."
    GetOutgoingBankingTransactionsQueryParams:
      type: object
      properties:
        flexSearch:
          type: string
          nullable: true
        includeOnlyIds:
          type: array
          items:
            type: string
          nullable: true
        excludeIds:
          type: array
          items:
            type: string
          nullable: true
        companyBankAccountId:
          type: string
          nullable: true
        outgoingBankingTransactionType:
          type: string
          nullable: true
        mutationDateTimeStart:
          type: string
          format: date-time
          nullable: true
        mutationDateTimeEnd:
          type: string
          format: date-time
          nullable: true
      additionalProperties: false
    GetOutgoingMutationsQueryParams:
      type: object
      properties:
        flexSearch:
          type: string
          nullable: true
        includeOnlyIds:
          type: array
          items:
            type: string
          nullable: true
        excludeIds:
          type: array
          items:
            type: string
          nullable: true
        outgoingBankingTransactionId:
          type: string
          nullable: true
        status:
          type: string
          nullable: true
        referenceType:
          type: string
          nullable: true
      additionalProperties: false
    GetPaymentsQueryParams:
      type: object
      properties:
        flexSearch:
          type: string
          nullable: true
        includeOnlyIds:
          type: array
          items:
            type: string
          nullable: true
        excludeIds:
          type: array
          items:
            type: string
          nullable: true
        paymentType:
          type: string
          nullable: true
        customerId:
          type: string
          nullable: true
        startDateTime:
          type: string
          format: date-time
          nullable: true
        endDateTime:
          type: string
          format: date-time
          nullable: true
        batchMutationId:
          type: string
          nullable: true
      additionalProperties: false
    GetPropertyGroupBillingConfigurationConsolidatedNotesToCustomerRequest:
      type: object
      properties:
        propertyGroupIds:
          type: array
          items:
            type: string
          description: List of property group IDs for which to retrieve consolidated notes.
          nullable: true
        culture:
          allOf:
            - $ref: '#/components/schemas/CultureInfo'
          description: 'The culture to use for formatting the notes. If null, the system will use the default culture.'
          nullable: true
      additionalProperties: false
      description: "Represents a request to get consolidated notes to customer for property group billing configurations.\r\nThis DTO is used to retrieve combined notes that will be displayed to customers for multiple property groups."
    IbanConfirmationStatus:
      enum:
        - unspecified
        - known
        - unknownfirst
        - unknownsecond
      type: string
    IgnoreIncomingMutationsRequest:
      type: object
      properties:
        incomingMutationIds:
          type: array
          items:
            type: string
          description: A list of IDs for the incoming mutations that should be ignored.
          nullable: true
      additionalProperties: false
      description: "Represents a request to ignore specific incoming banking transactions.\r\nThis DTO is used when certain incoming transactions should be marked as ignored and not processed further."
    ImpactedEntityDTO:
      type: object
      properties:
        entitySubjectType:
          allOf:
            - $ref: '#/components/schemas/EntitySubjectType'
          description: Type of the entity subject
          nullable: true
        entitySubjectId:
          type: string
          description: Identifier of the entity subject
          nullable: true
      additionalProperties: false
      description: Represents the entity that is impacted by the validation error
    ImportCategoryType:
      enum:
        - metering
        - bankstatement
        - migration
      type: string
    ImportContractInvoiceDateHandling:
      enum:
        - donothing
        - recalculateinvoicedates
        - nextinvoicedateminusfrequency
      type: string
    ImportJobEntityIssueStage:
      enum:
        - validation
        - processing
      type: string
    ImportJobEntityType:
      enum:
        - externalmeasurement
        - banktransaction
        - property
        - servicelocation
        - meter
        - calculationgroup
        - customer
        - customermandate
        - contract
        - payment
        - invoice
        - attachment
        - entityattribute
        - contractedservice
        - invoiceline
        - billingcompleteness
        - meterchannel
        - service
        - communicationpreferences
        - consumptionunit
        - intermediateinvoicing
        - propertygroupbillingconfiguration
        - prepaymentaccount
      type: string
    ImportJobStatus:
      enum:
        - created
        - reading
        - storing
        - stored
        - processing
        - processed
        - failed
        - validating
        - validated
        - invalid
        - postprocessing
        - finished
      type: string
    ImportJobsQuickFilter:
      enum:
        - all
        - stored
        - ongoing
        - requireattention
        - completed
      type: string
    ImportStatus:
      enum:
        - created
        - validating
        - processing
        - finished
        - failed
        - undone
      type: string
    ImportType:
      enum:
        - billingtariff
      type: string
    IncomingBankingTransactionBankAccountInsightDTO:
      type: object
      properties:
        iban:
          type: string
          description: The International Bank Account Number (IBAN) of the account.
          nullable: true
        lastFetchedDateTime:
          type: string
          description: The date and time when transactions were last fetched for this account.
          format: date-time
          nullable: true
        pluginRunStatus:
          allOf:
            - $ref: '#/components/schemas/StatusCode'
          description: The status of the last plugin run for this account.
          nullable: true
      additionalProperties: false
      description: "Provides insight information for a specific company bank account.\r\nThis DTO contains details about the account's status and last fetch time."
    IncomingBankingTransactionBankAccountsInsightDTO:
      type: object
      properties:
        companyBankAccounts:
          type: array
          items:
            $ref: '#/components/schemas/IncomingBankingTransactionBankAccountInsightDTO'
          description: List of insights for individual company bank accounts.
          nullable: true
      additionalProperties: false
      description: "Provides insights about company bank accounts associated with incoming banking transactions.\r\nThis DTO contains a collection of bank account insights."
    IncomingBankingTransactionBankAccountsInsightDTOApiResponseDTO:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/LocalisedErrorDTO'
          nullable: true
        success:
          type: boolean
        applicableEntitiesCount:
          type: integer
          format: int32
        requestedEntitiesCount:
          type: integer
          format: int32
        succeededEntitiesCount:
          type: integer
          format: int32
          readOnly: true
        isSynchronous:
          type: boolean
        data:
          allOf:
            - $ref: '#/components/schemas/IncomingBankingTransactionBankAccountsInsightDTO'
          description: The updated entity in case of modifications or creation
          nullable: true
      additionalProperties: false
    IncomingBankingTransactionCompanyBankAccountDTO:
      type: object
      properties:
        id:
          type: string
          description: The unique identifier of the company bank account.
          nullable: true
        iban:
          type: string
          description: The International Bank Account Number (IBAN) of the account.
          nullable: true
        bic:
          type: string
          description: The Bank Identifier Code (BIC) of the bank.
          nullable: true
        accountHolder:
          type: string
          description: The name of the account holder.
          nullable: true
        sepaCreditorId:
          type: string
          description: The SEPA creditor identifier.
          nullable: true
      additionalProperties: false
      description: Represents the company bank account information associated with an incoming banking transaction.
    IncomingBankingTransactionDTO:
      type: object
      properties:
        id:
          type: string
          description: Gets or sets the unique identifier.
          nullable: true
        entityType:
          allOf:
            - $ref: '#/components/schemas/EntitySubjectType'
          description: Gets or sets the type of the entity.
          nullable: true
        createdDateTime:
          type: string
          description: Gets or sets the date and time when the entity was created.
          format: date-time
        discriminator:
          type: string
          description: Gets or sets the discriminator value.
          nullable: true
        _etag:
          type: string
          description: Gets or sets the ETag value.
          nullable: true
        requireAttention:
          type: boolean
          description: Gets a value indicating whether the entity requires attention.
          readOnly: true
        hasErrors:
          type: boolean
          description: Gets or sets a value indicating whether the entity has errors.
        hasWarnings:
          type: boolean
          description: Gets or sets a value indicating whether the entity has warnings.
        isReadOnly:
          type: boolean
          description: Gets or sets a value indicating whether the entity is read-only.
        organisationId:
          type: string
          description: Gets or sets the organization identifier.
          nullable: true
        identification:
          type: string
          description: The unique identifier of the transaction file.
          nullable: true
        sequenceNum:
          type: integer
          description: The sequence number of the transaction file.
          format: int64
        status:
          allOf:
            - $ref: '#/components/schemas/IncomingBankingTransactionStatus'
          description: The current status of the transaction file.
          nullable: true
        fileCreationDateTime:
          type: string
          description: The date and time when the file was created.
          format: date-time
        openingBalance:
          type: number
          description: The opening balance of the account at the start of the transaction period.
          format: double
          nullable: true
        closingBalance:
          type: number
          description: The closing balance of the account at the end of the transaction period.
          format: double
          nullable: true
        openingBalanceDate:
          type: string
          description: The date and time of the opening balance.
          format: date-time
        closingBalanceDate:
          type: string
          description: The date and time of the closing balance.
          format: date-time
        companyBankAccount:
          allOf:
            - $ref: '#/components/schemas/IncomingBankingTransactionCompanyBankAccountDTO'
          description: Information about the company bank account associated with this transaction.
          nullable: true
        fileName:
          type: string
          description: The name of the transaction file.
          nullable: true
        internalFilePath:
          type: string
          description: The internal file path where the transaction file is stored.
          nullable: true
        entityCounts:
          allOf:
            - $ref: '#/components/schemas/IncomingBankingTransactionEntityCountsDTO'
          description: Statistics about the entities processed in this transaction file.
          nullable: true
        locked:
          type: boolean
          description: Indicates whether the transaction file is locked for processing.
        errors:
          type: array
          items:
            $ref: '#/components/schemas/LocalisedErrorDTO'
          description: List of localized errors that occurred during processing.
          nullable: true
        automaticallyCreated:
          type: boolean
          description: Indicates whether this transaction was automatically created.
        ibanConfirmations:
          type: array
          items:
            $ref: '#/components/schemas/IncomingBankingTransactionIbanConfirmationDTO'
          description: List of IBAN confirmations associated with this transaction.
          nullable: true
      additionalProperties: false
      description: "Represents an incoming banking transaction file and its associated data.\r\nThis DTO contains information about the transaction file, balances, and processing status."
    IncomingBankingTransactionDTOApiResponseDTO:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/LocalisedErrorDTO'
          nullable: true
        success:
          type: boolean
        applicableEntitiesCount:
          type: integer
          format: int32
        requestedEntitiesCount:
          type: integer
          format: int32
        succeededEntitiesCount:
          type: integer
          format: int32
          readOnly: true
        isSynchronous:
          type: boolean
        data:
          allOf:
            - $ref: '#/components/schemas/IncomingBankingTransactionDTO'
          description: The updated entity in case of modifications or creation
          nullable: true
      additionalProperties: false
    IncomingBankingTransactionDTOListApiResponseDTO:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/LocalisedErrorDTO'
          nullable: true
        success:
          type: boolean
        applicableEntitiesCount:
          type: integer
          format: int32
        requestedEntitiesCount:
          type: integer
          format: int32
        succeededEntitiesCount:
          type: integer
          format: int32
          readOnly: true
        isSynchronous:
          type: boolean
        data:
          type: array
          items:
            $ref: '#/components/schemas/IncomingBankingTransactionDTO'
          description: The updated entity in case of modifications or creation
          nullable: true
      additionalProperties: false
    IncomingBankingTransactionDTOPagedResponseModelDTO:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/IncomingBankingTransactionDTO'
          nullable: true
        hasNextPage:
          type: boolean
        nextPageToken:
          type: string
          nullable: true
        totalRecords:
          type: integer
          format: int32
        sortableFields:
          type: array
          items:
            type: string
          nullable: true
        aggregateDetails:
          type: array
          items:
            $ref: '#/components/schemas/AggregateDetailsDTO'
          nullable: true
      additionalProperties: false
    IncomingBankingTransactionDTOPagedResponseModelDTOApiResponseDTO:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/LocalisedErrorDTO'
          nullable: true
        success:
          type: boolean
        applicableEntitiesCount:
          type: integer
          format: int32
        requestedEntitiesCount:
          type: integer
          format: int32
        succeededEntitiesCount:
          type: integer
          format: int32
          readOnly: true
        isSynchronous:
          type: boolean
        data:
          allOf:
            - $ref: '#/components/schemas/IncomingBankingTransactionDTOPagedResponseModelDTO'
          description: The updated entity in case of modifications or creation
          nullable: true
      additionalProperties: false
    IncomingBankingTransactionEntityCountsDTO:
      type: object
      properties:
        numberOfBankTransfers:
          type: integer
          description: Total number of bank transfers in the file.
          format: int32
        numberOfReversals:
          type: integer
          description: Total number of reversals in the file.
          format: int32
        numberOfConfirmations:
          type: integer
          description: Total number of confirmations in the file.
          format: int32
        processedBankTransfers:
          type: integer
          description: Number of successfully processed bank transfers.
          format: int32
        processedReversals:
          type: integer
          description: Number of successfully processed reversals.
          format: int32
        processedConfirmations:
          type: integer
          description: Number of successfully processed confirmations.
          format: int32
        failedBankTransfers:
          type: integer
          description: Number of failed bank transfers.
          format: int32
        failedReversals:
          type: integer
          description: Number of failed reversals.
          format: int32
        failedConfirmations:
          type: integer
          description: Number of failed confirmations.
          format: int32
      additionalProperties: false
      description: Contains statistics about the entities processed in an incoming banking transaction file.
    IncomingBankingTransactionFormatType:
      enum:
        - camt053_001_02
      type: string
    IncomingBankingTransactionFormatTypeListApiResponseDTO:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/LocalisedErrorDTO'
          nullable: true
        success:
          type: boolean
        applicableEntitiesCount:
          type: integer
          format: int32
        requestedEntitiesCount:
          type: integer
          format: int32
        succeededEntitiesCount:
          type: integer
          format: int32
          readOnly: true
        isSynchronous:
          type: boolean
        data:
          type: array
          items:
            $ref: '#/components/schemas/IncomingBankingTransactionFormatType'
          description: The updated entity in case of modifications or creation
          nullable: true
      additionalProperties: false
    IncomingBankingTransactionIbanConfirmationDTO:
      type: object
      properties:
        customerId:
          type: string
          description: The unique identifier of the customer.
          nullable: true
        iban:
          type: string
          description: The International Bank Account Number (IBAN) being confirmed.
          nullable: true
      additionalProperties: false
      description: Represents an IBAN confirmation associated with an incoming banking transaction.
    IncomingBankingTransactionInsightsDTO:
      type: object
      properties:
        incomingBankingTransactionId:
          type: string
          description: The unique identifier of the incoming banking transaction.
          nullable: true
        identification:
          type: string
          description: The identification number of the transaction file.
          nullable: true
        openingBalance:
          type: number
          description: The opening balance of the account at the start of the transaction period.
          format: double
          nullable: true
        closingBalance:
          type: number
          description: The closing balance of the account at the end of the transaction period.
          format: double
          nullable: true
        balanceDifference:
          type: number
          description: The difference between the closing and opening balances.
          format: double
          nullable: true
        openingBalanceDate:
          type: string
          description: The date and time of the opening balance.
          format: date-time
        closingBalanceDate:
          type: string
          description: The date and time of the closing balance.
          format: date-time
        statusDetails:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/IncomingMutationGroupedDetailsDTO'
          description: Details of mutations grouped by their status.
          nullable: true
        mutationTypeDetails:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/IncomingMutationGroupedDetailsDTO'
          description: Details of mutations grouped by their type.
          nullable: true
        paymentMethodDetails:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/IncomingMutationGroupedDetailsDTO'
          description: Details of mutations grouped by their payment method.
          nullable: true
      additionalProperties: false
      description: "Provides detailed insights and analytics about an incoming banking transaction.\r\nThis DTO contains aggregated information about mutations grouped by status, type, and payment method."
    IncomingBankingTransactionInsightsDTOApiResponseDTO:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/LocalisedErrorDTO'
          nullable: true
        success:
          type: boolean
        applicableEntitiesCount:
          type: integer
          format: int32
        requestedEntitiesCount:
          type: integer
          format: int32
        succeededEntitiesCount:
          type: integer
          format: int32
          readOnly: true
        isSynchronous:
          type: boolean
        data:
          allOf:
            - $ref: '#/components/schemas/IncomingBankingTransactionInsightsDTO'
          description: The updated entity in case of modifications or creation
          nullable: true
      additionalProperties: false
    IncomingBankingTransactionOverviewCountDTO:
      type: object
      properties:
        all:
          type: integer
          description: The total number of incoming banking transactions.
          format: int32
        ready:
          type: integer
          description: The number of transactions that are ready for processing.
          format: int32
        resolveIssues:
          type: integer
          description: The number of transactions that have issues requiring resolution.
          format: int32
        closed:
          type: integer
          description: The number of closed transactions.
          format: int32
        attention:
          type: integer
          description: The number of transactions that require attention.
          format: int32
      additionalProperties: false
      description: "Provides an overview of incoming banking transaction counts by their status.\r\nThis DTO contains aggregated counts of transactions in different states."
    IncomingBankingTransactionOverviewCountDTOApiResponseDTO:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/LocalisedErrorDTO'
          nullable: true
        success:
          type: boolean
        applicableEntitiesCount:
          type: integer
          format: int32
        requestedEntitiesCount:
          type: integer
          format: int32
        succeededEntitiesCount:
          type: integer
          format: int32
          readOnly: true
        isSynchronous:
          type: boolean
        data:
          allOf:
            - $ref: '#/components/schemas/IncomingBankingTransactionOverviewCountDTO'
          description: The updated entity in case of modifications or creation
          nullable: true
      additionalProperties: false
    IncomingBankingTransactionQuickFilter:
      enum:
        - all
        - ready
        - closed
        - attention
        - resolveissues
        - requireattention
      type: string
    IncomingBankingTransactionStatus:
      enum:
        - created
        - processing
        - matching
        - resolveissues
        - readytoprocess
        - closed
      type: string
    IncomingBankingTransactionsExportDTO:
      type: object
      properties:
        transactionIdentification:
          type: string
          description: The unique identification of the transaction.
          nullable: true
        openingBalanceDate:
          type: string
          description: The date and time of the opening balance.
          format: date-time
        closingBalanceDate:
          type: string
          description: The date and time of the closing balance.
          format: date-time
        transactionStatus:
          allOf:
            - $ref: '#/components/schemas/IncomingBankingTransactionStatus'
          description: The current status of the transaction.
          nullable: true
        companyBankAccountHolder:
          type: string
          description: The name of the company bank account holder.
          nullable: true
        companyBankAccountIban:
          type: string
          description: The IBAN of the company bank account.
          nullable: true
        mutationType:
          allOf:
            - $ref: '#/components/schemas/IncomingMutationType'
          description: The type of mutation.
          nullable: true
        mutationDate:
          type: string
          description: The date and time when the mutation occurred.
          format: date-time
        mutationAmount:
          type: number
          description: The amount of the mutation.
          format: double
        mutationStatus:
          allOf:
            - $ref: '#/components/schemas/IncomingMutationStatus'
          description: The current status of the mutation.
          nullable: true
        mutationReference:
          type: string
          description: The reference number or description of the mutation.
          nullable: true
        accountHolder:
          type: string
          description: The name of the account holder.
          nullable: true
        accountIban:
          type: string
          description: The IBAN of the account.
          nullable: true
        customerAccountNumber:
          type: string
          description: The account number of the customer.
          nullable: true
        customerName:
          type: string
          description: The name of the customer.
          nullable: true
        outgoingBankingIdentification:
          type: string
          description: The identification of the matching outgoing banking transaction.
          nullable: true
        matchingOutgoingBankingMutationIdentification:
          type: string
          description: The identification of the matching outgoing banking mutation.
          nullable: true
        matchingOutgoingMutationDescription:
          type: string
          description: The description of the matching outgoing mutation.
          nullable: true
        isManualMatch:
          type: boolean
          description: Indicates whether this mutation was manually matched.
      additionalProperties: false
      description: "Represents an incoming banking transaction for export purposes.\r\nThis DTO contains comprehensive information about the transaction, including company, customer, and matching details."
    IncomingBankingTransactionsExportDTOListApiResponseDTO:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/LocalisedErrorDTO'
          nullable: true
        success:
          type: boolean
        applicableEntitiesCount:
          type: integer
          format: int32
        requestedEntitiesCount:
          type: integer
          format: int32
        succeededEntitiesCount:
          type: integer
          format: int32
          readOnly: true
        isSynchronous:
          type: boolean
        data:
          type: array
          items:
            $ref: '#/components/schemas/IncomingBankingTransactionsExportDTO'
          description: The updated entity in case of modifications or creation
          nullable: true
      additionalProperties: false
    IncomingInvoiceComponentDTO:
      type: object
      properties:
        id:
          type: string
          description: The unique identifier of the incoming invoice component.
          nullable: true
        optional:
          type: boolean
          description: Indicates whether this component is optional.
      additionalProperties: false
      description: "Represents a required incoming invoice component for a property group billing configuration.\r\nThis DTO specifies which components are required and whether they are optional."
    IncomingInvoiceComponentDetailsDTO:
      type: object
      properties:
        incomingInvoiceComponentId:
          type: string
          description: The unique identifier of the incoming invoice component.
          nullable: true
        potentiallyComplete:
          type: boolean
          description: Indicates whether all required values for this component are potentially present.
        values:
          type: array
          items:
            $ref: '#/components/schemas/IncomingInvoiceComponentValueDTO'
          description: List of values associated with this invoice component.
          nullable: true
      additionalProperties: false
      description: "Represents detailed information about an incoming invoice component.\r\nContains the component's identifier, completion status, and associated values."
    IncomingInvoiceComponentValueDTO:
      type: object
      properties:
        id:
          type: string
          description: The unique identifier of the value entry.
          nullable: true
        value:
          type: number
          description: The numerical value of the invoice component.
          format: double
        incomingInvoiceId:
          type: string
          description: The unique identifier of the associated incoming invoice.
          nullable: true
      additionalProperties: false
      description: "Represents a specific value entry for an incoming invoice component.\r\nContains the value and its associated invoice information."
    IncomingInvoiceDTO:
      type: object
      properties:
        id:
          type: string
          description: Gets or sets the unique identifier.
          nullable: true
        entityType:
          allOf:
            - $ref: '#/components/schemas/EntitySubjectType'
          description: Gets or sets the type of the entity.
          nullable: true
        createdDateTime:
          type: string
          description: Gets or sets the date and time when the entity was created.
          format: date-time
        discriminator:
          type: string
          description: Gets or sets the discriminator value.
          nullable: true
        _etag:
          type: string
          description: Gets or sets the ETag value.
          nullable: true
        requireAttention:
          type: boolean
          description: Gets a value indicating whether the entity requires attention.
          readOnly: true
        hasErrors:
          type: boolean
          description: Gets or sets a value indicating whether the entity has errors.
        hasWarnings:
          type: boolean
          description: Gets or sets a value indicating whether the entity has warnings.
        isReadOnly:
          type: boolean
          description: Gets or sets a value indicating whether the entity is read-only.
        organisationId:
          type: string
          description: Gets or sets the organization identifier.
          nullable: true
        propertyGroupId:
          type: string
          description: The unique identifier of the property group associated with this invoice.
          nullable: true
        invoiceNumber:
          type: string
          description: The unique invoice number assigned to this invoice.
          nullable: true
        invoiceDate:
          type: string
          description: The date when the invoice was issued.
          format: date-time
        description:
          type: string
          description: A description or summary of the invoice contents.
          nullable: true
        startDate:
          type: string
          description: The start date of the period covered by this invoice.
          format: date-time
        endDate:
          type: string
          description: The end date of the period covered by this invoice.
          format: date-time
        totalAmountExclVat:
          type: number
          description: The total amount of the invoice excluding Value Added Tax (VAT).
          format: double
        totalAmountInclVat:
          type: number
          description: The total amount of the invoice including Value Added Tax (VAT).
          format: double
      additionalProperties: false
      description: "Represents an incoming invoice in the billing system.\r\nThis DTO contains information about the invoice, including its financial details and validity period."
    IncomingInvoiceDTOApiResponseDTO:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/LocalisedErrorDTO'
          nullable: true
        success:
          type: boolean
        applicableEntitiesCount:
          type: integer
          format: int32
        requestedEntitiesCount:
          type: integer
          format: int32
        succeededEntitiesCount:
          type: integer
          format: int32
          readOnly: true
        isSynchronous:
          type: boolean
        data:
          allOf:
            - $ref: '#/components/schemas/IncomingInvoiceDTO'
          description: The updated entity in case of modifications or creation
          nullable: true
      additionalProperties: false
    IncomingInvoiceDTOPagedResponseModelDTO:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/IncomingInvoiceDTO'
          nullable: true
        hasNextPage:
          type: boolean
        nextPageToken:
          type: string
          nullable: true
        totalRecords:
          type: integer
          format: int32
        sortableFields:
          type: array
          items:
            type: string
          nullable: true
        aggregateDetails:
          type: array
          items:
            $ref: '#/components/schemas/AggregateDetailsDTO'
          nullable: true
      additionalProperties: false
    IncomingInvoiceDTOPagedResponseModelDTOApiResponseDTO:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/LocalisedErrorDTO'
          nullable: true
        success:
          type: boolean
        applicableEntitiesCount:
          type: integer
          format: int32
        requestedEntitiesCount:
          type: integer
          format: int32
        succeededEntitiesCount:
          type: integer
          format: int32
          readOnly: true
        isSynchronous:
          type: boolean
        data:
          allOf:
            - $ref: '#/components/schemas/IncomingInvoiceDTOPagedResponseModelDTO'
          description: The updated entity in case of modifications or creation
          nullable: true
      additionalProperties: false
    IncomingMutationDTO:
      type: object
      properties:
        id:
          type: string
          description: Gets or sets the unique identifier.
          nullable: true
        entityType:
          allOf:
            - $ref: '#/components/schemas/EntitySubjectType'
          description: Gets or sets the type of the entity.
          nullable: true
        createdDateTime:
          type: string
          description: Gets or sets the date and time when the entity was created.
          format: date-time
        discriminator:
          type: string
          description: Gets or sets the discriminator value.
          nullable: true
        _etag:
          type: string
          description: Gets or sets the ETag value.
          nullable: true
        requireAttention:
          type: boolean
          description: Gets a value indicating whether the entity requires attention.
          readOnly: true
        hasErrors:
          type: boolean
          description: Gets or sets a value indicating whether the entity has errors.
        hasWarnings:
          type: boolean
          description: Gets or sets a value indicating whether the entity has warnings.
        isReadOnly:
          type: boolean
          description: Gets or sets a value indicating whether the entity is read-only.
        organisationId:
          type: string
          description: Gets or sets the organization identifier.
          nullable: true
        incomingBankingTransactionId:
          type: string
          description: The unique identifier of the incoming banking transaction.
          nullable: true
        transactionDate:
          type: string
          description: The date and time when the transaction occurred.
          format: date-time
        type:
          allOf:
            - $ref: '#/components/schemas/IncomingMutationType'
          description: The type of incoming mutation.
          nullable: true
        status:
          allOf:
            - $ref: '#/components/schemas/IncomingMutationStatus'
          description: The current status of the incoming mutation.
          nullable: true
        amount:
          type: number
          description: The transaction amount.
          format: double
        isManualMatch:
          type: boolean
          description: Indicates whether this mutation was manually matched.
        details:
          allOf:
            - $ref: '#/components/schemas/BaseIncomingMutationDetailsDTO'
          description: The details specific to this type of incoming mutation.
          nullable: true
        errors:
          type: array
          items:
            $ref: '#/components/schemas/LocalisedErrorDTO'
          description: List of localized errors associated with this mutation.
          nullable: true
      additionalProperties: false
      description: "Represents an incoming banking transaction mutation.\r\nThis DTO contains information about the transaction, its status, and associated details."
    IncomingMutationDTOApiResponseDTO:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/LocalisedErrorDTO'
          nullable: true
        success:
          type: boolean
        applicableEntitiesCount:
          type: integer
          format: int32
        requestedEntitiesCount:
          type: integer
          format: int32
        succeededEntitiesCount:
          type: integer
          format: int32
          readOnly: true
        isSynchronous:
          type: boolean
        data:
          allOf:
            - $ref: '#/components/schemas/IncomingMutationDTO'
          description: The updated entity in case of modifications or creation
          nullable: true
      additionalProperties: false
    IncomingMutationDTOPagedResponseModelDTO:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/IncomingMutationDTO'
          nullable: true
        hasNextPage:
          type: boolean
        nextPageToken:
          type: string
          nullable: true
        totalRecords:
          type: integer
          format: int32
        sortableFields:
          type: array
          items:
            type: string
          nullable: true
        aggregateDetails:
          type: array
          items:
            $ref: '#/components/schemas/AggregateDetailsDTO'
          nullable: true
      additionalProperties: false
    IncomingMutationDTOPagedResponseModelDTOApiResponseDTO:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/LocalisedErrorDTO'
          nullable: true
        success:
          type: boolean
        applicableEntitiesCount:
          type: integer
          format: int32
        requestedEntitiesCount:
          type: integer
          format: int32
        succeededEntitiesCount:
          type: integer
          format: int32
          readOnly: true
        isSynchronous:
          type: boolean
        data:
          allOf:
            - $ref: '#/components/schemas/IncomingMutationDTOPagedResponseModelDTO'
          description: The updated entity in case of modifications or creation
          nullable: true
      additionalProperties: false
    IncomingMutationGroupedDetailsDTO:
      type: object
      properties:
        count:
          type: integer
          description: The number of mutations in the group.
          format: int32
        amount:
          type: number
          description: The total amount of all mutations in the group.
          format: double
      additionalProperties: false
      description: Contains aggregated details about a group of mutations.
    IncomingMutationIbanConfirmationStatusDTO:
      type: object
      properties:
        customerId:
          type: string
          description: The unique identifier of the customer.
          nullable: true
        ibanConfirmationStatus:
          allOf:
            - $ref: '#/components/schemas/IbanConfirmationStatus'
          description: The current status of the IBAN confirmation.
          nullable: true
        isIbanConfirmedOnTransaction:
          type: boolean
          description: Indicates whether the IBAN is confirmed on the transaction.
      additionalProperties: false
      description: "Represents the IBAN confirmation status for an incoming mutation.\r\nThis DTO contains information about the customer's IBAN confirmation status."
    IncomingMutationIbanConfirmationStatusDTOApiResponseDTO:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/LocalisedErrorDTO'
          nullable: true
        success:
          type: boolean
        applicableEntitiesCount:
          type: integer
          format: int32
        requestedEntitiesCount:
          type: integer
          format: int32
        succeededEntitiesCount:
          type: integer
          format: int32
          readOnly: true
        isSynchronous:
          type: boolean
        data:
          allOf:
            - $ref: '#/components/schemas/IncomingMutationIbanConfirmationStatusDTO'
          description: The updated entity in case of modifications or creation
          nullable: true
      additionalProperties: false
    IncomingMutationPaymentMethod:
      enum:
        - sddconfirmations
        - reversals
        - sct
        - unknown
      type: string
    IncomingMutationQuickFilter:
      enum:
        - all
        - banktransfers
        - bankconfirmations
        - reversals
        - resolveissues
      type: string
    IncomingMutationStatus:
      enum:
        - created
        - ignored
        - resolveissues
        - readytoprocess
        - processing
        - processed
        - failed
        - matched
      type: string
    IncomingMutationType:
      enum:
        - incomingtransfer
        - outgoingtransfer
        - paymentrequestreversal
        - refundreversal
        - unknown
        - paymentrequesttransactionconfirmation
        - paymentrequestmutationconfirmation
        - refundtransactionconfirmation
        - refundmutationconfirmation
        - requestconfirmation
        - refundconfirmation
      type: string
    IncomingMutationsOverviewCountDTO:
      type: object
      properties:
        all:
          type: integer
          description: The total number of incoming mutations.
          format: int32
        bankTransfers:
          type: integer
          description: The number of bank transfer mutations.
          format: int32
        reversals:
          type: integer
          description: The number of reversal mutations.
          format: int32
        bankConfirmations:
          type: integer
          description: The number of bank confirmation mutations.
          format: int32
        resolveIssues:
          type: integer
          description: The number of mutations that have issues requiring resolution.
          format: int32
      additionalProperties: false
      description: "Provides an overview of incoming mutation counts by their type.\r\nThis DTO contains aggregated counts of different types of mutations."
    IncomingMutationsOverviewCountDTOApiResponseDTO:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/LocalisedErrorDTO'
          nullable: true
        success:
          type: boolean
        applicableEntitiesCount:
          type: integer
          format: int32
        requestedEntitiesCount:
          type: integer
          format: int32
        succeededEntitiesCount:
          type: integer
          format: int32
          readOnly: true
        isSynchronous:
          type: boolean
        data:
          allOf:
            - $ref: '#/components/schemas/IncomingMutationsOverviewCountDTO'
          description: The updated entity in case of modifications or creation
          nullable: true
      additionalProperties: false
    IncrementationType:
      enum:
        - delta
        - cumul
        - na
      type: string
    InputMissingDetailsDTO:
      type: object
      properties:
        reason:
          allOf:
            - $ref: '#/components/schemas/InputMissingReason'
          description: Reason why input data is missing
          nullable: true
        extraInfo:
          type: string
          description: Additional information about the missing input
          nullable: true
      additionalProperties: false
      description: Represents details about missing input data
    InputMissingReason:
      enum:
        - unknown
        - missingadvances
        - missingreceivingperiods
        - missingtariffs
        - invoicecreationfailed
        - invoicelinecalculationfailed
        - missingreceivingperiodsfortieredtariffcalculation
        - missingbillingitems
        - missingcustomentityproperty
        - missingaskingperiods
        - askingperiodscontainsgap
        - missingtaxrate
        - missingpropertygrouponlocation
        - propertygroupnotfound
        - servicelocationnotfound
        - missingcep
        - missingmeter
        - firstmeasurementonwrongdate
        - nomeasurementonstart
        - nomeasurementonend
        - nomeasurementsfound
        - lastmeasurementonwrongdate
        - measurementnotwithindeviationwindow
        - noproductfound
      type: string
    InvoiceAmount:
      enum:
        - positive
        - negative
      type: string
    InvoiceBillingConfigurationSuggestionsResponseDTO:
      type: object
      properties:
        advanceFrequency:
          allOf:
            - $ref: '#/components/schemas/AdvanceFrequency'
          description: Suggested frequency for advance payments
          nullable: true
        invoiceFrequency:
          allOf:
            - $ref: '#/components/schemas/InvoiceFrequency'
          description: Suggested frequency for invoice generation
          nullable: true
        paymentTermsId:
          type: string
          description: Identifier of the suggested payment terms
          nullable: true
        message:
          allOf:
            - $ref: '#/components/schemas/LocalisedSystemMessageDTO'
          description: Localized system message with additional information
          nullable: true
        invoiceMonth:
          type: integer
          description: Suggested month for invoice generation (1-12)
          format: int32
          nullable: true
        invoiceDay:
          type: integer
          description: Suggested day of the month for invoice generation (1-31)
          format: int32
          nullable: true
        iban:
          type: string
          description: Suggested IBAN for payments
          nullable: true
        companyBankAccountId:
          type: string
          description: Identifier of the suggested company bank account
          nullable: true
      additionalProperties: false
      description: Represents suggested billing configuration settings for an invoice
    InvoiceBillingConfigurationSuggestionsResponseDTOApiResponseDTO:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/LocalisedErrorDTO'
          nullable: true
        success:
          type: boolean
        applicableEntitiesCount:
          type: integer
          format: int32
        requestedEntitiesCount:
          type: integer
          format: int32
        succeededEntitiesCount:
          type: integer
          format: int32
          readOnly: true
        isSynchronous:
          type: boolean
        data:
          allOf:
            - $ref: '#/components/schemas/InvoiceBillingConfigurationSuggestionsResponseDTO'
          description: The updated entity in case of modifications or creation
          nullable: true
      additionalProperties: false
    InvoiceBillingConfigurationsSuggestionsRequest:
      type: object
      properties:
        serviceLocationIds:
          type: array
          items:
            type: string
          description: List of service location IDs for which to get billing configuration suggestions.
          nullable: true
        contractId:
          type: string
          description: The ID of the contract associated with the billing configurations.
          nullable: true
      additionalProperties: false
      description: "Represents a request to get suggested invoice billing configurations.\r\nThis DTO is used to retrieve recommended billing configurations based on service locations and contract."
    InvoiceDTO:
      type: object
      properties:
        id:
          type: string
          description: Gets or sets the unique identifier.
          nullable: true
        entityType:
          allOf:
            - $ref: '#/components/schemas/EntitySubjectType'
          description: Gets or sets the type of the entity.
          nullable: true
        createdDateTime:
          type: string
          description: Gets or sets the date and time when the entity was created.
          format: date-time
        discriminator:
          type: string
          description: Gets or sets the discriminator value.
          nullable: true
        _etag:
          type: string
          description: Gets or sets the ETag value.
          nullable: true
        requireAttention:
          type: boolean
          description: Gets a value indicating whether the entity requires attention.
          readOnly: true
        hasErrors:
          type: boolean
          description: Gets or sets a value indicating whether the entity has errors.
        hasWarnings:
          type: boolean
          description: Gets or sets a value indicating whether the entity has warnings.
        isReadOnly:
          type: boolean
          description: Gets or sets a value indicating whether the entity is read-only.
        organisationId:
          type: string
          description: Gets or sets the organization identifier.
          nullable: true
        invoiceNum:
          type: string
          description: Invoice number
          nullable: true
        sequenceNumber:
          type: integer
          description: Sequential number of the invoice
          format: int64
        invoiceDate:
          type: string
          description: Date when the invoice was created
          format: date-time
        type:
          allOf:
            - $ref: '#/components/schemas/InvoiceType'
          description: Type of the invoice
          nullable: true
        status:
          allOf:
            - $ref: '#/components/schemas/InvoiceStatus'
          description: Current status of the invoice
          nullable: true
        debtor:
          allOf:
            - $ref: '#/components/schemas/DebtorDTO'
          description: Debtor information for the invoice
          nullable: true
        contractId:
          type: string
          description: Identifier of the associated contract
          nullable: true
        contractNumber:
          type: string
          description: Contract number
          nullable: true
        noteToCustomer:
          type: string
          description: Note to be displayed to the customer
          nullable: true
        externalReference:
          type: string
          description: External reference for the invoice
          nullable: true
        dueDate:
          type: string
          description: Date when the invoice is due for payment
          format: date-time
        periodStartDateTime:
          type: string
          description: Start date and time of the billing period
          format: date-time
        periodEndDateTime:
          type: string
          description: End date and time of the billing period
          format: date-time
        lines:
          type: array
          items:
            $ref: '#/components/schemas/InvoiceLineDTO'
          description: List of invoice lines
          nullable: true
        remainingInvoiceAmount:
          type: number
          description: Remaining amount to be paid on the invoice
          format: double
        totalAmountInclVAT:
          type: number
          description: Total invoice amount including VAT
          format: double
        totalAmountExclVAT:
          type: number
          description: Total invoice amount excluding VAT
          format: double
        paymentDetails:
          allOf:
            - $ref: '#/components/schemas/PaymentDetailsDTO'
          description: Payment details for the invoice
          nullable: true
        attachmentId:
          type: string
          description: Identifier of the associated attachment
          nullable: true
        creditedByInvoiceId:
          type: string
          description: Identifier of the invoice that credited this invoice
          nullable: true
        creditedInvoiceId:
          type: string
          description: Identifier of the invoice that was credited by this invoice
          nullable: true
        billingCompletenessId:
          type: string
          description: Identifier of the associated billing completeness record
          nullable: true
        propertyGroups:
          type: array
          items:
            $ref: '#/components/schemas/PropertyGroupReferenceDTO'
          description: List of associated property groups
          nullable: true
        product:
          allOf:
            - $ref: '#/components/schemas/ProductReferenceDTO'
          description: Associated product reference
          nullable: true
        companyBankAccountId:
          type: string
          description: Identifier of the company's bank account
          nullable: true
        consumptionCalculationInputs:
          type: array
          items:
            $ref: '#/components/schemas/ConsumptionCalculationInputDTO'
          description: List of consumption calculation inputs
          nullable: true
        collectionDetails:
          allOf:
            - $ref: '#/components/schemas/CollectionCaseDetailsDTO'
          description: Collection case details
          nullable: true
        sent:
          allOf:
            - $ref: '#/components/schemas/SentStatus'
          description: Status of invoice sending
          nullable: true
        failureReasonCode:
          allOf:
            - $ref: '#/components/schemas/LocalisedErrorDTO'
          description: Localized error code for any failure
          nullable: true
        failureDetails:
          type: string
          description: Detailed failure information
          nullable: true
        supportsExternalPrinting:
          type: boolean
          description: Indicates if the document can be printed externally
        exportStatus:
          allOf:
            - $ref: '#/components/schemas/ExportStatus'
          description: Status of invoice export
          nullable: true
        newAdvanceAmountExclVAT:
          type: number
          description: 'New advance amount excluding VAT (obsolete, use AdvanceCalculationDetails)'
          format: double
          nullable: true
          readOnly: true
          deprecated: true
        newAdvanceAmountInclVAT:
          type: number
          description: 'New advance amount including VAT (obsolete, use AdvanceCalculationDetails)'
          format: double
          nullable: true
          readOnly: true
          deprecated: true
        advanceCalculationDetails:
          allOf:
            - $ref: '#/components/schemas/AdvanceCalculationDetailsDTO'
          description: Details of advance payment calculations
          nullable: true
        ublAttachmentDetails:
          allOf:
            - $ref: '#/components/schemas/InvoiceUBLAttachmentDetailsDTO'
          description: Details of UBL attachment
          nullable: true
      additionalProperties: false
      description: Represents an invoice in the billing system
    InvoiceDTOApiResponseDTO:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/LocalisedErrorDTO'
          nullable: true
        success:
          type: boolean
        applicableEntitiesCount:
          type: integer
          format: int32
        requestedEntitiesCount:
          type: integer
          format: int32
        succeededEntitiesCount:
          type: integer
          format: int32
          readOnly: true
        isSynchronous:
          type: boolean
        data:
          allOf:
            - $ref: '#/components/schemas/InvoiceDTO'
          description: The updated entity in case of modifications or creation
          nullable: true
      additionalProperties: false
    InvoiceDTOPagedResponseModelDTO:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/InvoiceDTO'
          nullable: true
        hasNextPage:
          type: boolean
        nextPageToken:
          type: string
          nullable: true
        totalRecords:
          type: integer
          format: int32
        sortableFields:
          type: array
          items:
            type: string
          nullable: true
        aggregateDetails:
          type: array
          items:
            $ref: '#/components/schemas/AggregateDetailsDTO'
          nullable: true
      additionalProperties: false
    InvoiceDTOPagedResponseModelDTOApiResponseDTO:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/LocalisedErrorDTO'
          nullable: true
        success:
          type: boolean
        applicableEntitiesCount:
          type: integer
          format: int32
        requestedEntitiesCount:
          type: integer
          format: int32
        succeededEntitiesCount:
          type: integer
          format: int32
          readOnly: true
        isSynchronous:
          type: boolean
        data:
          allOf:
            - $ref: '#/components/schemas/InvoiceDTOPagedResponseModelDTO'
          description: The updated entity in case of modifications or creation
          nullable: true
      additionalProperties: false
    InvoiceDetailsDTO:
      type: object
      properties:
        invoiceFrequency:
          allOf:
            - $ref: '#/components/schemas/InvoiceFrequency'
          description: The frequency at which invoices are generated.
          nullable: true
        firstInvoiceStartDateTime:
          type: string
          description: The start date and time of the first invoice period.
          format: date-time
        firstInvoiceEndDateTime:
          type: string
          description: The end date and time of the first invoice period.
          format: date-time
      additionalProperties: false
      description: "Represents details about invoice generation for a billing relation.\r\nThis DTO contains information about invoice frequencies and periods."
    InvoiceExportType:
      enum:
        - invoicetoexcel
        - invoicelinestoexcel
        - createexportjob
        - invoicetoxml
        - integration
      type: string
    InvoiceFrequency:
      enum:
        - monthly
        - quarterly
        - halfyearly
        - yearly
      type: string
    InvoiceLineDTO:
      type: object
      properties:
        billingItemId:
          type: string
          description: Identifier of the billing item
          nullable: true
        billingTariffId:
          type: string
          description: Identifier of the billing tariff
          nullable: true
        description:
          type: string
          description: Description of the line item
          nullable: true
        amountExclVAT:
          type: number
          description: Amount excluding VAT
          format: double
        amountInclVAT:
          type: number
          description: Amount including VAT
          format: double
        vat:
          type: number
          description: VAT amount
          format: double
        quantity:
          type: number
          description: Quantity of items
          format: double
        rawQuantity:
          type: number
          description: Raw quantity before any adjustments
          format: double
          nullable: true
        unitPrice:
          type: number
          description: Price per unit
          format: double
        startDateTime:
          type: string
          description: Start date and time of the line item
          format: date-time
        endDateTime:
          type: string
          description: End date and time of the line item
          format: date-time
        taxCodeId:
          type: string
          description: Identifier of the tax code
          nullable: true
        taxRate:
          type: number
          description: Tax rate applied
          format: double
        unitOfMeasure:
          allOf:
            - $ref: '#/components/schemas/UnitOfMeasure'
          description: Unit of measure for the quantity
          nullable: true
        utilityType:
          allOf:
            - $ref: '#/components/schemas/UtilityType'
          description: Type of utility being billed
          nullable: true
        lineType:
          allOf:
            - $ref: '#/components/schemas/InvoiceLineType'
          description: Type of the line item
          nullable: true
        consumptionBased:
          type: boolean
          description: Indicates if the line item is based on consumption
        serviceLocationId:
          type: string
          description: Identifier of the service location
          nullable: true
        originalInvoiceId:
          type: string
          description: Identifier of the original invoice
          nullable: true
        sortOrder:
          type: integer
          description: Sort order of the line item
          format: int32
          nullable: true
        id:
          type: string
          description: Unique identifier of the line item
          nullable: true
      additionalProperties: false
      description: Represents a line item on an invoice
    InvoiceLineType:
      enum:
        - advance
        - previouslyadvanced
        - charge
        - vatpennydifference
      type: string
    InvoiceOverviewCountDTO:
      type: object
      properties:
        requireAttention:
          type: integer
          description: Number of invoices requiring attention
          format: int32
        all:
          type: integer
          description: Total number of all invoices
          format: int32
        toApprove:
          type: integer
          description: Number of invoices pending approval
          format: int32
        toSend:
          type: integer
          description: Number of invoices pending sending
          format: int32
        unpaid:
          type: integer
          description: Number of unpaid invoices
          format: int32
        overdue:
          type: integer
          description: Number of overdue invoices
          format: int32
        readyForPaymentCollection:
          type: integer
          description: Number of invoices ready for payment collection
          format: int32
        toExport:
          type: integer
          description: Number of invoices pending export
          format: int32
      additionalProperties: false
      description: Represents counts of invoices in different states for overview purposes
    InvoiceOverviewCountDTOApiResponseDTO:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/LocalisedErrorDTO'
          nullable: true
        success:
          type: boolean
        applicableEntitiesCount:
          type: integer
          format: int32
        requestedEntitiesCount:
          type: integer
          format: int32
        succeededEntitiesCount:
          type: integer
          format: int32
          readOnly: true
        isSynchronous:
          type: boolean
        data:
          allOf:
            - $ref: '#/components/schemas/InvoiceOverviewCountDTO'
          description: The updated entity in case of modifications or creation
          nullable: true
      additionalProperties: false
    InvoiceProductConfigurationSuggestionsResponseDTO:
      type: object
      properties:
        productId:
          type: string
          description: Identifier of the suggested product
          nullable: true
        productName:
          type: string
          description: Name of the suggested product
          nullable: true
        costAllocationEnabled:
          type: boolean
          description: Indicates if cost allocation is enabled for the product
        message:
          allOf:
            - $ref: '#/components/schemas/LocalisedSystemMessageDTO'
          description: Localized system message with additional information
          nullable: true
      additionalProperties: false
      description: Represents suggested product configuration settings for an invoice
    InvoiceProductConfigurationSuggestionsResponseDTOApiResponseDTO:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/LocalisedErrorDTO'
          nullable: true
        success:
          type: boolean
        applicableEntitiesCount:
          type: integer
          format: int32
        requestedEntitiesCount:
          type: integer
          format: int32
        succeededEntitiesCount:
          type: integer
          format: int32
          readOnly: true
        isSynchronous:
          type: boolean
        data:
          allOf:
            - $ref: '#/components/schemas/InvoiceProductConfigurationSuggestionsResponseDTO'
          description: The updated entity in case of modifications or creation
          nullable: true
      additionalProperties: false
    InvoiceProductConfigurationsSuggestionsRequest:
      type: object
      properties:
        serviceLocationIds:
          type: array
          items:
            type: string
          nullable: true
        contractId:
          type: string
          nullable: true
      additionalProperties: false
    InvoiceQuickFilter:
      enum:
        - all
        - toapprove
        - tosend
        - readyforpaymentcollection
        - toexport
        - unpaid
        - overdue
        - requireattention
      type: string
    InvoiceScenarioType:
      enum:
        - advance
        - correctionnote
        - creditnote
        - endnote
        - incidentalnote
        - invoice
      type: string
    InvoiceStatus:
      enum:
        - created
        - approvalinprogress
        - approved
        - settled
        - generated
        - generationfailed
      type: string
    InvoiceType:
      enum:
        - advance
        - invoice
        - endnote
        - creditnote
        - incidentalnote
        - correctionnote
      type: string
    InvoiceUBLAttachmentDetailsDTO:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/InvoiceUBLValidationErrorDTO'
          description: List of UBL validation errors
          nullable: true
        attachmentId:
          type: string
          description: Identifier of the attachment
          nullable: true
        attachmentFileName:
          type: string
          description: Name of the attachment file
          nullable: true
      additionalProperties: false
      description: Represents details of a UBL attachment
    InvoiceUBLValidationErrorDTO:
      type: object
      properties:
        originatorType:
          allOf:
            - $ref: '#/components/schemas/EntitySubjectType'
          description: Type of the originator of the error
          nullable: true
        originatorId:
          type: string
          description: Identifier of the originator
          nullable: true
        message:
          allOf:
            - $ref: '#/components/schemas/LocalisedErrorDTO'
          description: Localized error message
          nullable: true
      additionalProperties: false
      description: Represents a UBL validation error
    InvoiceUBLValidationErrorResponseDTO:
      type: object
      properties:
        generalErrors:
          type: array
          items:
            $ref: '#/components/schemas/InvoiceUBLValidationGeneralErrorDTO'
          description: List of general validation errors that apply to multiple invoices
          nullable: true
        specificErrors:
          type: array
          items:
            $ref: '#/components/schemas/InvoiceUBLValidationSpecificErrorDTO'
          description: List of specific validation errors for individual invoices
          nullable: true
        uniqueInvoicesWithErrors:
          type: integer
          description: Number of unique invoices that have validation errors
          format: int32
          readOnly: true
      additionalProperties: false
      description: Represents UBL validation errors for invoices
    InvoiceUBLValidationGeneralErrorDTO:
      type: object
      properties:
        errorMessage:
          allOf:
            - $ref: '#/components/schemas/LocalisedErrorDTO'
          description: Localized error message
          nullable: true
      additionalProperties: false
      description: Represents a general UBL validation error that applies to multiple invoices
    InvoiceUBLValidationSpecificErrorDTO:
      type: object
      properties:
        invoiceId:
          type: string
          description: Identifier of the invoice with the error
          nullable: true
        invoiceNumber:
          type: string
          description: Invoice number
          nullable: true
        errorSubject:
          allOf:
            - $ref: '#/components/schemas/EntitySubjectType'
          description: Type of entity that caused the error
          nullable: true
        errorSubjectId:
          type: string
          description: Identifier of the entity that caused the error
          nullable: true
        errorMessage:
          allOf:
            - $ref: '#/components/schemas/LocalisedErrorDTO'
          description: Localized error message
          nullable: true
      additionalProperties: false
      description: Represents a specific UBL validation error for a single invoice
    LatestCustomerTransactionsResponseDTO:
      type: object
      properties:
        latestOpenTransactions:
          type: array
          items:
            $ref: '#/components/schemas/TransactionDTO'
          description: List of the most recent open transactions for the customer
          nullable: true
        latestClosedTransactions:
          type: array
          items:
            $ref: '#/components/schemas/TransactionDTO'
          description: List of the most recent closed transactions for the customer
          nullable: true
        hasMoreOpenTransactions:
          type: boolean
          description: Indicates if there are more open transactions beyond the ones returned
        hasMoreClosedTransactions:
          type: boolean
          description: Indicates if there are more closed transactions beyond the ones returned
        cashPosition:
          type: number
          description: Current cash position of the customer (net amount)
          format: double
        cashPositionDebit:
          type: number
          description: Current debit cash position of the customer (amount owed)
          format: double
        cashPositionCredit:
          type: number
          description: Current credit cash position of the customer (amount available)
          format: double
      additionalProperties: false
      description: Represents a response containing the latest transactions for a customer
    LatestCustomerTransactionsResponseDTOApiResponseDTO:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/LocalisedErrorDTO'
          nullable: true
        success:
          type: boolean
        applicableEntitiesCount:
          type: integer
          format: int32
        requestedEntitiesCount:
          type: integer
          format: int32
        succeededEntitiesCount:
          type: integer
          format: int32
          readOnly: true
        isSynchronous:
          type: boolean
        data:
          allOf:
            - $ref: '#/components/schemas/LatestCustomerTransactionsResponseDTO'
          description: The updated entity in case of modifications or creation
          nullable: true
      additionalProperties: false
    Level:
      enum:
        - low
        - moderate
        - high
      type: string
    LocalisationLevel:
      enum:
        - none
        - partial
        - all
      type: string
    LocalisedErrorDTO:
      type: object
      properties:
        key:
          allOf:
            - $ref: '#/components/schemas/ErrorCode'
        correlationId:
          type: string
          nullable: true
        message:
          type: string
          nullable: true
        messageValues:
          type: array
          items:
            $ref: '#/components/schemas/LocalisedErrorDTOMessageValue'
          nullable: true
      additionalProperties: false
    LocalisedErrorDTOListApiResponseDTO:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/LocalisedErrorDTO'
          nullable: true
        success:
          type: boolean
        applicableEntitiesCount:
          type: integer
          format: int32
        requestedEntitiesCount:
          type: integer
          format: int32
        succeededEntitiesCount:
          type: integer
          format: int32
          readOnly: true
        isSynchronous:
          type: boolean
        data:
          type: array
          items:
            $ref: '#/components/schemas/LocalisedErrorDTO'
          description: The updated entity in case of modifications or creation
          nullable: true
      additionalProperties: false
    LocalisedErrorDTOMessageValue:
      type: object
      properties:
        dataType:
          allOf:
            - $ref: '#/components/schemas/DataType'
          nullable: true
        value:
          type: string
          nullable: true
        capitalize:
          type: boolean
      additionalProperties: false
    LocalisedSystemMessageDTO:
      type: object
      properties:
        key:
          allOf:
            - $ref: '#/components/schemas/SystemMessageCode'
        message:
          type: string
          nullable: true
        messageValues:
          type: array
          items:
            $ref: '#/components/schemas/LocalisedSystemMessageDtoValue'
          nullable: true
        level:
          allOf:
            - $ref: '#/components/schemas/SystemMessageLevel'
      additionalProperties: false
    LocalisedSystemMessageDtoValue:
      type: object
      properties:
        dataType:
          allOf:
            - $ref: '#/components/schemas/DataType'
          nullable: true
        value:
          type: string
          nullable: true
      additionalProperties: false
    ManagementRelationType:
      enum:
        - owner
        - propertymanager
      type: string
    MandateStatus:
      enum:
        - requested
        - cancelled
        - signed
      type: string
    MandateType:
      enum:
        - core
        - b2b
      type: string
    ManualMatchIncomingMutationRequest:
      type: object
      properties:
        outgoingBankingTransactionId:
          type: string
          description: "The ID of the outgoing banking transaction to match with.\r\nThis field must be empty if other matching criteria are provided."
          nullable: true
        outgoingMutationId:
          type: string
          description: "The ID of the outgoing mutation to match with.\r\nThis field must be empty if other matching criteria are provided."
          nullable: true
        customerId:
          type: string
          description: "The ID of the customer to match with.\r\nThis field must be empty if other matching criteria are provided."
          nullable: true
        matchingTransactions:
          type: array
          items:
            $ref: '#/components/schemas/MatchingTransactionRequest'
          description: "A list of transactions to match with their respective settlement amounts.\r\nThis field must be empty if other matching criteria are provided."
          nullable: true
      additionalProperties: false
      description: "Represents a request to manually match an incoming banking transaction with outgoing transactions or a customer.\r\nThis DTO allows for flexible matching scenarios including direct transaction matching, customer-based matching,\r\nor matching with specific outgoing transactions."
    ManuallyAddPaymentRequest:
      type: object
      properties:
        customerId:
          type: string
          description: The ID of the customer who made the payment.
          nullable: true
        iban:
          type: string
          description: The International Bank Account Number (IBAN) from which the payment was made.
          nullable: true
        amount:
          type: number
          description: The amount of the payment.
          format: double
        paymentDateTime:
          type: string
          description: The date and time when the payment was made.
          format: date-time
        companyBankAccountId:
          type: string
          description: The ID of the company bank account that received the payment.
          nullable: true
        paymentReference:
          type: string
          description: The payment reference text associated with the payment.
          nullable: true
        references:
          type: array
          items:
            $ref: '#/components/schemas/PaymentEntityReferenceRequest'
          description: A list of references linking this payment to other entities in the system.
          nullable: true
        isPaymentReferenceStructured:
          type: boolean
          description: Indicates whether the payment reference follows a structured format.
        organizationCountry:
          allOf:
            - $ref: '#/components/schemas/CountryCode'
          description: "The country code of the organization processing the payment.\r\nUsed for validating structured payment references."
          nullable: true
      additionalProperties: false
      description: "Represents a request to manually add a payment to the system.\r\nThis DTO is used to record payments that are not automatically processed through the banking system."
    ManuallyProcessCollectionCaseRequest:
      type: object
      properties:
        executeUntil:
          type: string
          description: "The date and time until which the collection case should be processed.\r\nIf null, the case will be processed until the current date."
          format: date-time
          nullable: true
      additionalProperties: false
      description: "Represents a request to manually process a collection case.\r\nThis DTO is used to trigger manual processing of a collection case up to a specified date."
    MarkCollectionCaseManuallyClosedRequest:
      type: object
      properties:
        writeOffFees:
          type: boolean
          description: Indicates whether any collection fees should be written off when closing the case.
        writeOffHandlingType:
          allOf:
            - $ref: '#/components/schemas/WriteOffHandlingType'
          description: "Specifies how any collection fees should be handled when closing the case.\r\nThis is required when WriteOffFees is true."
          nullable: true
      additionalProperties: false
      description: "Represents a request to manually close a collection case.\r\nThis DTO is used to close a collection case and optionally handle any associated fees."
    MatchingTransactionRequest:
      type: object
      properties:
        matchingTransactionId:
          type: string
          description: The ID of the transaction to be matched.
          nullable: true
        amountToSettle:
          type: number
          description: The amount to be settled for this transaction.
          format: double
      additionalProperties: false
      description: Represents a single transaction to be matched with its settlement amount.
    MeasurementSource:
      enum:
        - importjob
        - moverequest
        - measurementimport
      type: string
    MessageType:
      enum:
        - informational
        - warning
        - error
      type: string
    MeterQuickFilter:
      enum:
        - all
        - installed
        - inactive
        - requireattention
      type: string
    MeterReadingFrequency:
      enum:
        - hourly
        - daily
        - weekly
        - monthly
        - bimonthly
        - quarterly
        - halfyearly
        - yearly
      type: string
    MeterStatus:
      enum:
        - requested
        - installed
        - removed
      type: string
    MeterType:
      enum:
        - individual
        - aggregating
        - communal
        - root
        - prepayment
      type: string
    MeteringImportMeasurementsQuickFilter:
      enum:
        - invalid
        - valid
        - notprocessed
        - processed
      type: string
    MeteringImportQuickFilter:
      enum:
        - all
        - toprocess
        - processed
        - formatissues
        - invalid
        - issues
      type: string
    MeteringImportStatus:
      enum:
        - uploading
        - uploadfailed
        - invalidformat
        - validating
        - valid
        - validationfailed
        - toprocess
        - processing
        - processed
        - processedwithissues
      type: string
    MeteringImportType:
      enum:
        - measurements
      type: string
    MeteringIssueError:
      enum:
        - consumptionnegative
        - measurementfrequencytoolow
      type: string
    MeteringIssueErrorGroup:
      enum:
        - measurement
        - meterreadingfrequency
      type: string
    MeteringIssueQuickFilter:
      enum:
        - all
        - unresolved
        - requireattention
      type: string
    MeteringIssueResolutionReason:
      enum:
        - newmeasurementimportjob
        - measurementdeleted
        - newmeasurementmanuallyadded
        - newmeasurementmoverequest
        - measurementvalidated
      type: string
    MeteringIssueResolutionType:
      enum:
        - manual
        - automatic
      type: string
    MeteringIssueStatus:
      enum:
        - unresolved
        - ignored
        - resolved
        - muted
      type: string
    MeteringIssuesGroupBy:
      enum:
        - none
        - meter
      type: string
    MeteringType:
      enum:
        - none
        - energy
        - volume
        - volumeflow
        - flowtemp
        - returntemp
        - difftemp
        - balance
      type: string
    Month:
      enum:
        - january
        - february
        - march
        - april
        - may
        - june
        - july
        - august
        - september
        - october
        - november
        - december
      type: string
    MoveRequestQuickFilter:
      enum:
        - all
        - tobeprocessed
        - processed
        - rejected
      type: string
    MoveRequestScenarioType:
      enum:
        - acknowledgemovein
        - rejectmovein
        - acknowledgemoveout
        - rejectmoveout
      type: string
    MoveRequestStatus:
      enum:
        - new
        - pendingatcustomer
        - pendingatsupplier
        - processed
        - rejected
        - gatheringdata
      type: string
    MoveRequestType:
      enum:
        - movein
        - moveout
      type: string
    MutingRuleQuickFilter:
      enum:
        - all
        - expired
        - active
      type: string
    MutingRuleTimePeriod:
      enum:
        - day
        - week
        - month
      type: string
    NullQuickFilter:
      enum:
        - default
      type: string
    NumberFormatInfo:
      type: object
      properties:
        currencyDecimalDigits:
          type: integer
          format: int32
        currencyDecimalSeparator:
          type: string
          nullable: true
        isReadOnly:
          type: boolean
          readOnly: true
        currencyGroupSizes:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
        numberGroupSizes:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
        percentGroupSizes:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
        currencyGroupSeparator:
          type: string
          nullable: true
        currencySymbol:
          type: string
          nullable: true
        naNSymbol:
          type: string
          nullable: true
        currencyNegativePattern:
          type: integer
          format: int32
        numberNegativePattern:
          type: integer
          format: int32
        percentPositivePattern:
          type: integer
          format: int32
        percentNegativePattern:
          type: integer
          format: int32
        negativeInfinitySymbol:
          type: string
          nullable: true
        negativeSign:
          type: string
          nullable: true
        numberDecimalDigits:
          type: integer
          format: int32
        numberDecimalSeparator:
          type: string
          nullable: true
        numberGroupSeparator:
          type: string
          nullable: true
        currencyPositivePattern:
          type: integer
          format: int32
        positiveInfinitySymbol:
          type: string
          nullable: true
        positiveSign:
          type: string
          nullable: true
        percentDecimalDigits:
          type: integer
          format: int32
        percentDecimalSeparator:
          type: string
          nullable: true
        percentGroupSeparator:
          type: string
          nullable: true
        percentSymbol:
          type: string
          nullable: true
        perMilleSymbol:
          type: string
          nullable: true
        nativeDigits:
          type: array
          items:
            type: string
          nullable: true
        digitSubstitution:
          allOf:
            - $ref: '#/components/schemas/DigitShapes'
      additionalProperties: false
    NumberOfAddresses:
      enum:
        - one
        - multiple
      type: string
    NumberSequenceReferenceEntity:
      enum:
        - customer
        - contract
        - invoice
        - mandate
        - exportjob
        - collectioncase
        - bankingtransaction
      type: string
    NumberSequenceSegmentType:
      enum:
        - constant
        - year
        - invoicetype
        - date
      type: string
    NumberSign:
      enum:
        - negative
        - positive
      type: string
    OutgoingBankingTransactionCompanyBankAccountDTO:
      type: object
      properties:
        id:
          type: string
          description: The unique identifier of the company bank account.
          nullable: true
        iban:
          type: string
          description: The International Bank Account Number (IBAN) of the account.
          nullable: true
        bic:
          type: string
          description: The Bank Identifier Code (BIC) of the account.
          nullable: true
        accountHolder:
          type: string
          description: The name of the account holder.
          nullable: true
        sepaCreditorId:
          type: string
          description: The SEPA creditor identifier associated with the account.
          nullable: true
      additionalProperties: false
      description: Contains information about a company bank account associated with an outgoing banking transaction.
    OutgoingBankingTransactionDTO:
      type: object
      properties:
        id:
          type: string
          description: Gets or sets the unique identifier.
          nullable: true
        entityType:
          allOf:
            - $ref: '#/components/schemas/EntitySubjectType'
          description: Gets or sets the type of the entity.
          nullable: true
        createdDateTime:
          type: string
          description: Gets or sets the date and time when the entity was created.
          format: date-time
        discriminator:
          type: string
          description: Gets or sets the discriminator value.
          nullable: true
        _etag:
          type: string
          description: Gets or sets the ETag value.
          nullable: true
        requireAttention:
          type: boolean
          description: Gets a value indicating whether the entity requires attention.
          readOnly: true
        hasErrors:
          type: boolean
          description: Gets or sets a value indicating whether the entity has errors.
        hasWarnings:
          type: boolean
          description: Gets or sets a value indicating whether the entity has warnings.
        isReadOnly:
          type: boolean
          description: Gets or sets a value indicating whether the entity is read-only.
        organisationId:
          type: string
          description: Gets or sets the organization identifier.
          nullable: true
        identification:
          type: string
          description: The unique identification of the outgoing banking transaction.
          nullable: true
        sequenceNum:
          type: integer
          description: The sequence number of the transaction.
          format: int64
        type:
          allOf:
            - $ref: '#/components/schemas/OutgoingBankingTransactionType'
          description: The type of outgoing banking transaction.
          nullable: true
        status:
          allOf:
            - $ref: '#/components/schemas/OutgoingBankingTransactionStatus'
          description: The current status of the outgoing banking transaction.
          nullable: true
        mutationDateTime:
          type: string
          description: The date and time when the mutation occurred.
          format: date-time
        companyBankAccount:
          allOf:
            - $ref: '#/components/schemas/OutgoingBankingTransactionCompanyBankAccountDTO'
          description: Information about the company bank account associated with this transaction.
          nullable: true
        fileName:
          type: string
          description: The name of the file containing the transaction details.
          nullable: true
        internalFilePath:
          type: string
          description: The internal file path where the transaction file is stored.
          nullable: true
        totalAmount:
          type: number
          description: The total amount of the transaction.
          format: double
        entityCounts:
          allOf:
            - $ref: '#/components/schemas/OutgoingBankingTransactionEntityCountsDTO'
          description: Counts of various entities associated with this transaction.
          nullable: true
        migrated:
          type: boolean
          description: Indicates whether this transaction has been migrated from an older system.
        locked:
          type: boolean
          description: Indicates whether this transaction is locked for modifications.
        confirmingIncomingBankingTransactions:
          type: object
          additionalProperties:
            type: string
            nullable: true
          description: Dictionary mapping incoming banking transaction IDs to their confirmations.
          nullable: true
      additionalProperties: false
      description: "Represents an outgoing banking transaction in the system.\r\nThis DTO contains comprehensive information about the transaction, including its status, amounts, and related entities."
    OutgoingBankingTransactionDTOApiResponseDTO:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/LocalisedErrorDTO'
          nullable: true
        success:
          type: boolean
        applicableEntitiesCount:
          type: integer
          format: int32
        requestedEntitiesCount:
          type: integer
          format: int32
        succeededEntitiesCount:
          type: integer
          format: int32
          readOnly: true
        isSynchronous:
          type: boolean
        data:
          allOf:
            - $ref: '#/components/schemas/OutgoingBankingTransactionDTO'
          description: The updated entity in case of modifications or creation
          nullable: true
      additionalProperties: false
    OutgoingBankingTransactionDTOPagedResponseModelDTO:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/OutgoingBankingTransactionDTO'
          nullable: true
        hasNextPage:
          type: boolean
        nextPageToken:
          type: string
          nullable: true
        totalRecords:
          type: integer
          format: int32
        sortableFields:
          type: array
          items:
            type: string
          nullable: true
        aggregateDetails:
          type: array
          items:
            $ref: '#/components/schemas/AggregateDetailsDTO'
          nullable: true
      additionalProperties: false
    OutgoingBankingTransactionDTOPagedResponseModelDTOApiResponseDTO:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/LocalisedErrorDTO'
          nullable: true
        success:
          type: boolean
        applicableEntitiesCount:
          type: integer
          format: int32
        requestedEntitiesCount:
          type: integer
          format: int32
        succeededEntitiesCount:
          type: integer
          format: int32
          readOnly: true
        isSynchronous:
          type: boolean
        data:
          allOf:
            - $ref: '#/components/schemas/OutgoingBankingTransactionDTOPagedResponseModelDTO'
          description: The updated entity in case of modifications or creation
          nullable: true
      additionalProperties: false
    OutgoingBankingTransactionEntityCountsDTO:
      type: object
      properties:
        numberOfMutations:
          type: integer
          description: The total number of mutations in the transaction.
          format: int32
        confirmedMutations:
          type: integer
          description: The number of mutations that have been confirmed.
          format: int32
        reversedMutations:
          type: integer
          description: The number of mutations that have been reversed.
          format: int32
      additionalProperties: false
      description: Contains counts of various entities associated with an outgoing banking transaction.
    OutgoingBankingTransactionOverviewCountDTO:
      type: object
      properties:
        all:
          type: integer
          description: The total number of outgoing banking transactions.
          format: int32
        readyToSend:
          type: integer
          description: The number of transactions that are ready to be sent.
          format: int32
        toConfirm:
          type: integer
          description: The number of transactions waiting for confirmation.
          format: int32
        closed:
          type: integer
          description: The number of closed transactions.
          format: int32
        dateExpired:
          type: integer
          description: The number of transactions that have expired due to date constraints.
          format: int32
        resolveIssues:
          type: integer
          description: The number of transactions that have issues requiring resolution.
          format: int32
      additionalProperties: false
      description: "Provides an overview of outgoing banking transaction counts by their status.\r\nThis DTO contains aggregated counts of transactions in different states."
    OutgoingBankingTransactionOverviewCountDTOApiResponseDTO:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/LocalisedErrorDTO'
          nullable: true
        success:
          type: boolean
        applicableEntitiesCount:
          type: integer
          format: int32
        requestedEntitiesCount:
          type: integer
          format: int32
        succeededEntitiesCount:
          type: integer
          format: int32
          readOnly: true
        isSynchronous:
          type: boolean
        data:
          allOf:
            - $ref: '#/components/schemas/OutgoingBankingTransactionOverviewCountDTO'
          description: The updated entity in case of modifications or creation
          nullable: true
      additionalProperties: false
    OutgoingBankingTransactionPreviewDTO:
      type: object
      properties:
        requests:
          allOf:
            - $ref: '#/components/schemas/OutgoingBankingTransactionPreviewInsightsDTO'
          description: Insights about payment requests in the preview.
          nullable: true
        refunds:
          allOf:
            - $ref: '#/components/schemas/OutgoingBankingTransactionPreviewInsightsDTO'
          description: Insights about refund transactions in the preview.
          nullable: true
      additionalProperties: false
      description: "Provides a preview of outgoing banking transactions, separating requests and refunds.\r\nThis DTO contains insights about both payment requests and refund transactions."
    OutgoingBankingTransactionPreviewDTOApiResponseDTO:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/LocalisedErrorDTO'
          nullable: true
        success:
          type: boolean
        applicableEntitiesCount:
          type: integer
          format: int32
        requestedEntitiesCount:
          type: integer
          format: int32
        succeededEntitiesCount:
          type: integer
          format: int32
          readOnly: true
        isSynchronous:
          type: boolean
        data:
          allOf:
            - $ref: '#/components/schemas/OutgoingBankingTransactionPreviewDTO'
          description: The updated entity in case of modifications or creation
          nullable: true
      additionalProperties: false
    OutgoingBankingTransactionPreviewInsightsDTO:
      type: object
      properties:
        numberOfInvoices:
          type: integer
          description: The total number of invoices included in this preview.
          format: int32
        totalAmount:
          type: number
          description: The total amount of all invoices in this preview.
          format: double
      additionalProperties: false
      description: "Contains insights about a specific type of outgoing banking transaction.\r\nThis DTO provides information about the number of invoices and total amount."
    OutgoingBankingTransactionQuickFilter:
      enum:
        - all
        - readytosend
        - toconfirm
        - closed
        - dateexpired
        - resolveissues
        - open
      type: string
    OutgoingBankingTransactionStatus:
      enum:
        - created
        - closed
        - toconfirmbybank
        - cancelled
        - readytosend
        - resolveissues
        - dateexpired
        - partiallyclosed
      type: string
    OutgoingBankingTransactionType:
      enum:
        - paymentrequests
        - paymentrefunds
      type: string
    OutgoingBankingTransactionsExportDTO:
      type: object
      properties:
        transactionIdentification:
          type: string
          description: The unique identification of the outgoing banking transaction.
          nullable: true
        transactionType:
          allOf:
            - $ref: '#/components/schemas/OutgoingBankingTransactionType'
          description: The type of outgoing banking transaction.
          nullable: true
        transactionStatus:
          allOf:
            - $ref: '#/components/schemas/OutgoingBankingTransactionStatus'
          description: The current status of the outgoing banking transaction.
          nullable: true
        transactionCollectionDate:
          type: string
          description: The date when the transaction collection is scheduled.
          format: date-time
        transactionTotalAmount:
          type: number
          description: The total amount of the transaction.
          format: double
        companyBankAccountHolder:
          type: string
          description: The name of the company bank account holder.
          nullable: true
        companyBankAccountIban:
          type: string
          description: The IBAN of the company bank account.
          nullable: true
        outgoingMutationType:
          allOf:
            - $ref: '#/components/schemas/OutgoingMutationType'
          description: The type of outgoing mutation.
          nullable: true
        outgoingMutationStatus:
          allOf:
            - $ref: '#/components/schemas/OutgoingMutationStatus'
          description: The current status of the outgoing mutation.
          nullable: true
        outgoingMutationAmount:
          type: number
          description: The amount of the outgoing mutation.
          format: double
        outgoingMutationDecription:
          type: string
          description: The description of the outgoing mutation.
          nullable: true
        customerAccountNumber:
          type: string
          description: The account number of the customer.
          nullable: true
        customerName:
          type: string
          description: The name of the customer.
          nullable: true
        customerBankAccountIban:
          type: string
          description: The IBAN of the customer's bank account.
          nullable: true
        propertyGroups:
          type: array
          items:
            $ref: '#/components/schemas/PropertyGroupReferenceDTO'
          description: List of property groups associated with this transaction.
          nullable: true
        invoiceNumber:
          type: string
          description: The number of the associated invoice.
          nullable: true
        invoiceDate:
          type: string
          description: The date when the invoice was issued.
          format: date-time
          nullable: true
        invoiceDueDate:
          type: string
          description: The due date of the invoice.
          format: date-time
          nullable: true
        invoiceAmount:
          type: number
          description: The amount of the invoice.
          format: double
          nullable: true
        invoiceType:
          allOf:
            - $ref: '#/components/schemas/InvoiceType'
          description: The type of the invoice.
          nullable: true
        invoicePeriodStartDateTime:
          type: string
          description: The start date of the invoice period.
          format: date-time
          nullable: true
        invoicePeriodEndDateTime:
          type: string
          description: The end date of the invoice period.
          format: date-time
          nullable: true
      additionalProperties: false
      description: "Represents an outgoing banking transaction for export purposes.\r\nThis DTO contains comprehensive information about the transaction, including company, customer, and invoice details."
    OutgoingBankingTransactionsExportDTOListApiResponseDTO:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/LocalisedErrorDTO'
          nullable: true
        success:
          type: boolean
        applicableEntitiesCount:
          type: integer
          format: int32
        requestedEntitiesCount:
          type: integer
          format: int32
        succeededEntitiesCount:
          type: integer
          format: int32
          readOnly: true
        isSynchronous:
          type: boolean
        data:
          type: array
          items:
            $ref: '#/components/schemas/OutgoingBankingTransactionsExportDTO'
          description: The updated entity in case of modifications or creation
          nullable: true
      additionalProperties: false
    OutgoingMutationCustomerBankAccountDTO:
      type: object
      properties:
        iban:
          type: string
          description: The International Bank Account Number (IBAN) of the customer's account.
          nullable: true
        accountHolder:
          type: string
          description: The name of the account holder.
          nullable: true
        mandateNumber:
          type: string
          description: The mandate number associated with this account.
          nullable: true
        mandateSignedDate:
          type: string
          description: The date when the mandate was signed.
          format: date-time
      additionalProperties: false
      description: "Contains information about a customer's bank account for an outgoing mutation.\r\nThis DTO includes details about the account and associated mandate information."
    OutgoingMutationDTO:
      type: object
      properties:
        id:
          type: string
          description: Gets or sets the unique identifier.
          nullable: true
        entityType:
          allOf:
            - $ref: '#/components/schemas/EntitySubjectType'
          description: Gets or sets the type of the entity.
          nullable: true
        createdDateTime:
          type: string
          description: Gets or sets the date and time when the entity was created.
          format: date-time
        discriminator:
          type: string
          description: Gets or sets the discriminator value.
          nullable: true
        _etag:
          type: string
          description: Gets or sets the ETag value.
          nullable: true
        requireAttention:
          type: boolean
          description: Gets a value indicating whether the entity requires attention.
          readOnly: true
        hasErrors:
          type: boolean
          description: Gets or sets a value indicating whether the entity has errors.
        hasWarnings:
          type: boolean
          description: Gets or sets a value indicating whether the entity has warnings.
        isReadOnly:
          type: boolean
          description: Gets or sets a value indicating whether the entity is read-only.
        organisationId:
          type: string
          description: Gets or sets the organization identifier.
          nullable: true
        outgoingBankingTransactionId:
          type: string
          description: The unique identifier of the associated outgoing banking transaction.
          nullable: true
        type:
          allOf:
            - $ref: '#/components/schemas/OutgoingBankingTransactionType'
          description: The type of outgoing banking transaction.
          nullable: true
        amount:
          type: number
          description: The amount of the mutation.
          format: double
        description:
          type: string
          description: A description of the mutation.
          nullable: true
        referenceDetails:
          allOf:
            - $ref: '#/components/schemas/OutgoingMutationReferenceDetailsDTO'
          description: Reference details associated with this mutation.
          nullable: true
        customerBankAccount:
          allOf:
            - $ref: '#/components/schemas/OutgoingMutationCustomerBankAccountDTO'
          description: Information about the customer's bank account.
          nullable: true
        status:
          allOf:
            - $ref: '#/components/schemas/OutgoingMutationStatus'
          description: The current status of the outgoing mutation.
          nullable: true
        errors:
          type: array
          items:
            $ref: '#/components/schemas/LocalisedErrorDTO'
          description: List of localized errors associated with this mutation.
          nullable: true
        confirmingIncomingBankingTransactionId:
          type: string
          description: The ID of the incoming banking transaction that confirms this mutation.
          nullable: true
        confirmingIncomingBankingTransactionIdentification:
          type: string
          description: The identification of the incoming banking transaction that confirms this mutation.
          nullable: true
        confirmingIncomingMutationId:
          type: string
          description: The ID of the incoming mutation that confirms this mutation.
          nullable: true
        revertingIncomingBankingTransactionId:
          type: string
          description: The ID of the incoming banking transaction that reverts this mutation.
          nullable: true
        revertingIncomingBankingTransactionIdentification:
          type: string
          description: The identification of the incoming banking transaction that reverts this mutation.
          nullable: true
        revertingIncomingMutationId:
          type: string
          description: The ID of the incoming mutation that reverts this mutation.
          nullable: true
      additionalProperties: false
      description: "Represents an outgoing mutation in the banking system.\r\nThis DTO contains comprehensive information about the mutation, including its status, amount, and related transactions."
    OutgoingMutationDTOApiResponseDTO:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/LocalisedErrorDTO'
          nullable: true
        success:
          type: boolean
        applicableEntitiesCount:
          type: integer
          format: int32
        requestedEntitiesCount:
          type: integer
          format: int32
        succeededEntitiesCount:
          type: integer
          format: int32
          readOnly: true
        isSynchronous:
          type: boolean
        data:
          allOf:
            - $ref: '#/components/schemas/OutgoingMutationDTO'
          description: The updated entity in case of modifications or creation
          nullable: true
      additionalProperties: false
    OutgoingMutationDTOPagedResponseModelDTO:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/OutgoingMutationDTO'
          nullable: true
        hasNextPage:
          type: boolean
        nextPageToken:
          type: string
          nullable: true
        totalRecords:
          type: integer
          format: int32
        sortableFields:
          type: array
          items:
            type: string
          nullable: true
        aggregateDetails:
          type: array
          items:
            $ref: '#/components/schemas/AggregateDetailsDTO'
          nullable: true
      additionalProperties: false
    OutgoingMutationDTOPagedResponseModelDTOApiResponseDTO:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/LocalisedErrorDTO'
          nullable: true
        success:
          type: boolean
        applicableEntitiesCount:
          type: integer
          format: int32
        requestedEntitiesCount:
          type: integer
          format: int32
        succeededEntitiesCount:
          type: integer
          format: int32
          readOnly: true
        isSynchronous:
          type: boolean
        data:
          allOf:
            - $ref: '#/components/schemas/OutgoingMutationDTOPagedResponseModelDTO'
          description: The updated entity in case of modifications or creation
          nullable: true
      additionalProperties: false
    OutgoingMutationQuickFilter:
      enum:
        - all
        - invoices
        - manualentries
        - resolveissues
      type: string
    OutgoingMutationReferenceDetailsDTO:
      type: object
      properties:
        referenceType:
          allOf:
            - $ref: '#/components/schemas/OutgoingMutationType'
          description: The type of reference for this mutation.
          nullable: true
        referenceId:
          type: string
          description: The unique identifier of the reference.
          nullable: true
        parameters:
          allOf:
            - $ref: '#/components/schemas/OutgoingMutationReferenceParametersDTO'
          description: The parameters associated with this reference.
          nullable: true
      additionalProperties: false
      description: "Contains reference details for an outgoing mutation.\r\nThis DTO includes information about the type of reference and its associated parameters."
    OutgoingMutationReferenceParametersDTO:
      type: object
      additionalProperties: false
      description: "Base class for outgoing mutation reference parameters.\r\nThis abstract class serves as the foundation for different types of reference parameters."
    OutgoingMutationStatus:
      enum:
        - created
        - readytosend
        - resolveissues
        - toconfirmbybank
        - closed
        - reversed
        - failedtoclose
        - failedtoreverse
        - cancelled
      type: string
    OutgoingMutationType:
      enum:
        - invoice
        - customer
      type: string
    OutgoingMutationsOverviewCountDTO:
      type: object
      properties:
        all:
          type: integer
          description: The total number of outgoing mutations.
          format: int32
        invoices:
          type: integer
          description: The number of invoice-related mutations.
          format: int32
        manualEntries:
          type: integer
          description: The number of manually entered mutations.
          format: int32
        resolveIssues:
          type: integer
          description: The number of mutations that have issues requiring resolution.
          format: int32
      additionalProperties: false
      description: "Provides an overview of outgoing mutation counts by their type.\r\nThis DTO contains aggregated counts of different types of mutations."
    OutgoingMutationsOverviewCountDTOApiResponseDTO:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/LocalisedErrorDTO'
          nullable: true
        success:
          type: boolean
        applicableEntitiesCount:
          type: integer
          format: int32
        requestedEntitiesCount:
          type: integer
          format: int32
        succeededEntitiesCount:
          type: integer
          format: int32
          readOnly: true
        isSynchronous:
          type: boolean
        data:
          allOf:
            - $ref: '#/components/schemas/OutgoingMutationsOverviewCountDTO'
          description: The updated entity in case of modifications or creation
          nullable: true
      additionalProperties: false
    PagedPropertyGroupBillingConfigurationsQueryParams:
      type: object
      properties:
        propertyGroupIds:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
    PaymentDTO:
      type: object
      properties:
        id:
          type: string
          description: Gets or sets the unique identifier.
          nullable: true
        entityType:
          allOf:
            - $ref: '#/components/schemas/EntitySubjectType'
          description: Gets or sets the type of the entity.
          nullable: true
        createdDateTime:
          type: string
          description: Gets or sets the date and time when the entity was created.
          format: date-time
        discriminator:
          type: string
          description: Gets or sets the discriminator value.
          nullable: true
        _etag:
          type: string
          description: Gets or sets the ETag value.
          nullable: true
        requireAttention:
          type: boolean
          description: Gets a value indicating whether the entity requires attention.
          readOnly: true
        hasErrors:
          type: boolean
          description: Gets or sets a value indicating whether the entity has errors.
        hasWarnings:
          type: boolean
          description: Gets or sets a value indicating whether the entity has warnings.
        isReadOnly:
          type: boolean
          description: Gets or sets a value indicating whether the entity is read-only.
        organisationId:
          type: string
          description: Gets or sets the organization identifier.
          nullable: true
        type:
          allOf:
            - $ref: '#/components/schemas/PaymentType'
          description: The type of payment.
          nullable: true
        paymentDateTime:
          type: string
          description: The date and time when the payment was made.
          format: date-time
        paymentReference:
          type: string
          description: The unique reference number for the payment.
          nullable: true
        remittanceInformation:
          type: string
          description: Additional remittance information associated with the payment.
          nullable: true
        amount:
          type: number
          description: The amount of the payment.
          format: double
        companyBankAccountId:
          type: string
          description: The unique identifier of the company bank account.
          nullable: true
        debtor:
          allOf:
            - $ref: '#/components/schemas/DebtorDTO'
          description: Information about the debtor associated with this payment.
          nullable: true
        customerBankAccountIBAN:
          type: string
          description: The IBAN of the customer's bank account.
          nullable: true
        isManual:
          type: boolean
          description: Indicates whether this payment was manually entered.
        paymentEntityReferences:
          type: array
          items:
            $ref: '#/components/schemas/PaymentEntityReferenceDTO'
          description: List of entity references associated with this payment.
          nullable: true
        isReversed:
          type: boolean
          description: Indicates whether this payment has been reversed.
        reversalDetails:
          allOf:
            - $ref: '#/components/schemas/PaymentReversalDetailsDTO'
          description: 'Details about the payment reversal, if applicable.'
          nullable: true
        outgoingMutationId:
          type: string
          description: The ID of the associated outgoing mutation.
          nullable: true
        outgoingBankingTransactionId:
          type: string
          description: The ID of the associated outgoing banking transaction.
          nullable: true
        outgoingBankingTransactionIdentification:
          type: string
          description: The identification of the associated outgoing banking transaction.
          nullable: true
        isConfirmedByBank:
          type: boolean
          description: Indicates whether this payment has been confirmed by the bank.
        incomingBankingTransactionId:
          type: string
          description: The ID of the associated incoming banking transaction.
          nullable: true
        incomingBankingTransactionIdentification:
          type: string
          description: The identification of the associated incoming banking transaction.
          nullable: true
        incomingMutationId:
          type: string
          description: The ID of the associated incoming mutation.
          nullable: true
        canonicalSearch:
          type: string
          description: A canonical search string for this payment.
          nullable: true
      additionalProperties: false
      description: "Represents a payment in the billing system.\r\nThis DTO contains comprehensive information about the payment, including its status, amounts, and related transactions."
    PaymentDTOApiResponseDTO:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/LocalisedErrorDTO'
          nullable: true
        success:
          type: boolean
        applicableEntitiesCount:
          type: integer
          format: int32
        requestedEntitiesCount:
          type: integer
          format: int32
        succeededEntitiesCount:
          type: integer
          format: int32
          readOnly: true
        isSynchronous:
          type: boolean
        data:
          allOf:
            - $ref: '#/components/schemas/PaymentDTO'
          description: The updated entity in case of modifications or creation
          nullable: true
      additionalProperties: false
    PaymentDTOPagedResponseModelDTO:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/PaymentDTO'
          nullable: true
        hasNextPage:
          type: boolean
        nextPageToken:
          type: string
          nullable: true
        totalRecords:
          type: integer
          format: int32
        sortableFields:
          type: array
          items:
            type: string
          nullable: true
        aggregateDetails:
          type: array
          items:
            $ref: '#/components/schemas/AggregateDetailsDTO'
          nullable: true
      additionalProperties: false
    PaymentDTOPagedResponseModelDTOApiResponseDTO:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/LocalisedErrorDTO'
          nullable: true
        success:
          type: boolean
        applicableEntitiesCount:
          type: integer
          format: int32
        requestedEntitiesCount:
          type: integer
          format: int32
        succeededEntitiesCount:
          type: integer
          format: int32
          readOnly: true
        isSynchronous:
          type: boolean
        data:
          allOf:
            - $ref: '#/components/schemas/PaymentDTOPagedResponseModelDTO'
          description: The updated entity in case of modifications or creation
          nullable: true
      additionalProperties: false
    PaymentDelay:
      enum:
        - delayuntilfixeddayofmonth
        - delaynumberofdays
      type: string
    PaymentDetailsDTO:
      type: object
      properties:
        paid:
          type: boolean
          description: Indicates if the invoice has been paid
        currentPaymentStatus:
          allOf:
            - $ref: '#/components/schemas/PaymentProcessStatus'
          description: Current status of the payment process
          nullable: true
        paymentReference:
          type: string
          description: Payment reference number
          nullable: true
        paymentMethod:
          allOf:
            - $ref: '#/components/schemas/PaymentMethod'
          description: Method of payment
          nullable: true
        directDebitCollectionDate:
          type: string
          description: Date when direct debit will be collected
          format: date-time
        amountOfTimesRetried:
          type: integer
          description: Number of times payment has been retried
          format: int32
        statusHistory:
          type: array
          items:
            $ref: '#/components/schemas/PaymentStatusHistoryDTO'
          description: History of payment status changes
          nullable: true
      additionalProperties: false
      description: Represents payment details for an invoice
    PaymentEntityReferenceDTO:
      type: object
      properties:
        transactionId:
          type: string
          description: The ID of the associated transaction.
          nullable: true
        referenceId:
          type: string
          description: The reference ID associated with this entity.
          nullable: true
        referenceType:
          allOf:
            - $ref: '#/components/schemas/TransactionReferenceType'
          description: The type of reference for this entity.
          nullable: true
      additionalProperties: false
      description: "Contains reference information for entities associated with a payment.\r\nThis DTO links payments to related transactions and references."
    PaymentEntityReferenceRequest:
      type: object
      properties:
        transactionId:
          type: string
          description: The ID of the transaction being referenced.
          nullable: true
        referenceId:
          type: string
          description: The ID of the reference entity.
          nullable: true
        referenceType:
          allOf:
            - $ref: '#/components/schemas/TransactionReferenceType'
          description: The type of reference relationship.
          nullable: true
      additionalProperties: false
      description: "Represents a reference linking a payment to another entity in the system.\r\nThis DTO is used to establish relationships between payments and other transactions."
    PaymentMethod:
      enum:
        - sct
        - sdd
      type: string
    PaymentOverviewCountDTO:
      type: object
      properties:
        all:
          type: integer
          description: The total number of payments.
          format: int32
        reversed:
          type: integer
          description: The number of reversed payments.
          format: int32
      additionalProperties: false
      description: "Provides an overview of payment counts by their status.\r\nThis DTO contains aggregated counts of payments in different states."
    PaymentOverviewCountDTOApiResponseDTO:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/LocalisedErrorDTO'
          nullable: true
        success:
          type: boolean
        applicableEntitiesCount:
          type: integer
          format: int32
        requestedEntitiesCount:
          type: integer
          format: int32
        succeededEntitiesCount:
          type: integer
          format: int32
          readOnly: true
        isSynchronous:
          type: boolean
        data:
          allOf:
            - $ref: '#/components/schemas/PaymentOverviewCountDTO'
          description: The updated entity in case of modifications or creation
          nullable: true
      additionalProperties: false
    PaymentProcessStatus:
      enum:
        - readyforpaymentcollection
        - pendingpaymentexport
        - pendingpaymentcollectionconfirmation
        - paid
        - paymentrejected
        - waitingforpayment
      type: string
    PaymentQuickFilter:
      enum:
        - all
        - reversed
      type: string
    PaymentRetryAction:
      enum:
        - retryonfixedday
        - daysafterreversal
      type: string
    PaymentReversalDetailsDTO:
      type: object
      properties:
        reversalReason:
          allOf:
            - $ref: '#/components/schemas/PaymentReversalReason'
          description: The reason for the payment reversal.
          nullable: true
        reversalAdditionalInformation:
          type: string
          description: Additional information about the reversal.
          nullable: true
        reversalDate:
          type: string
          description: The date when the reversal occurred.
          format: date-time
        reversalIncomingBankingTransactionId:
          type: string
          description: The ID of the incoming banking transaction that reversed this payment.
          nullable: true
        reversalIncomingBankingTransactionIdentification:
          type: string
          description: The identification of the incoming banking transaction that reversed this payment.
          nullable: true
        reversalIncomingMutationId:
          type: string
          description: The ID of the incoming mutation that reversed this payment.
          nullable: true
      additionalProperties: false
      description: "Contains details about a payment reversal.\r\nThis DTO includes information about why and when a payment was reversed."
    PaymentReversalReason:
      enum:
        - manualreverse
        - unpaiddirectdebit
        - reversalsepadirectdebit
        - rejectdomesticdirectdebit
        - unknownbankaccount
        - terminatedbankaccount
        - blockedbankaccount
        - unsupportedbankaccount
        - invalidsequencetype
        - insufficientfunds
        - invalidmandate
        - debtordeceased
        - refusalbydebtor
        - refusalotherreason
        - maximumamountperiodreached
      type: string
    PaymentReversalReasonCode:
      enum:
        - ac01
        - ac04
        - ac06
        - ag02
        - am04
        - md01
        - md06
        - md07
        - ms02
        - ms03
        - sl01
        - ag01
        - am02
      type: string
    PaymentStatusHistoryDTO:
      type: object
      properties:
        paymentStatus:
          allOf:
            - $ref: '#/components/schemas/PaymentProcessStatus'
          description: Status of the payment process
          nullable: true
        outgoingBankingTransactionId:
          type: string
          description: Identifier of the outgoing banking transaction
          nullable: true
        outgoingBankingTransactionIdentification:
          type: string
          description: Identification of the outgoing banking transaction
          nullable: true
        outgoingMutationId:
          type: string
          description: Identifier of the outgoing mutation
          nullable: true
        outgoingMutationDescription:
          type: string
          description: Description of the outgoing mutation
          nullable: true
        incomingBankingTransactionId:
          type: string
          description: Identifier of the incoming banking transaction
          nullable: true
        incomingBankingTransactionIdentification:
          type: string
          description: Identification of the incoming banking transaction
          nullable: true
        incomingMutationId:
          type: string
          description: Identifier of the incoming mutation
          nullable: true
        incomingMutationDescription:
          type: string
          description: Description of the incoming mutation
          nullable: true
        reversalReason:
          allOf:
            - $ref: '#/components/schemas/PaymentReversalReason'
          description: Reason for payment reversal
          nullable: true
        reversalAdditionalInformation:
          type: string
          description: Additional information about the reversal
          nullable: true
        mutationDateTime:
          type: string
          description: Date and time of the mutation
          format: date-time
      additionalProperties: false
      description: Represents a history entry for payment status changes
    PaymentTermsFrequency:
      enum:
        - day
        - week
        - month
      type: string
    PaymentType:
      enum:
        - incomingtransfer
        - outgoingtransfer
        - directdebit
      type: string
    PeriodForEntityDTO:
      type: object
      properties:
        entityId:
          type: string
          description: The unique identifier of the entity.
          nullable: true
        entityPeriod:
          allOf:
            - $ref: '#/components/schemas/DateRange'
          description: The date range during which the entity is valid.
          nullable: true
        outDated:
          type: boolean
          description: Indicates whether the entity's period is outdated.
      additionalProperties: false
      description: "Represents a period associated with an entity in the estimated invoice.\r\nThis DTO contains information about the entity's validity period and its current status."
    PingenCulture:
      enum:
        - en
        - de
        - nl
        - fr
      type: string
    PluginFeedActivityType:
      enum:
        - movein
        - moveout
        - emailconfirmed
        - advanceamountchanged
        - attachmentviewed
        - attachmentsigned
        - invoicegenerated
      type: string
    PluginFeedStatus:
      enum:
        - new
        - pendingatcustomer
        - pendingatsupplier
        - processed
        - rejected
        - deleted
      type: string
    PluginFeedTopic:
      enum:
        - movein
        - moveout
        - communication
        - useraction
        - invoice
      type: string
    PluginTriggerDataType:
      enum:
        - cultureupdated
        - productcreated
        - productupdated
        - featureflagsupdated
        - customercreated
        - customerdetailschanged
        - servicelocationcreated
        - servicelocationupdated
        - servicelocationdeleted
        - contractremoved
        - contractsigned
        - contractservicesupdated
        - contractterminated
        - mailsent
        - generatepaymentlink
        - advanceamountupdated
        - invoiceavailable
        - invoicepaymentdetailschanged
        - meterinstalled
        - meterreconfigured
        - meteruninstalled
        - invoiceassignedtocollectioncase
        - collectioncaseclosed
        - documentprinted
        - documentprintingfailed
        - contractupdated
        - entityattachmentgroupcreated
        - entityattachmentgroupupdated
        - entityattachmentgroupdeleted
        - externaldocumentdeliveryfailed
        - invoiceregenerated
        - invoiceexportrequested
        - transactioncreated
        - measurementsstored
        - consumptionprocessed
        - consumptiondeleted
        - documentapprovedforprinting
        - productentityattachmentsforcustomerchanged
        - entityattachmentcreated
        - entityattachmentupdated
        - entityattachmentdeleted
      type: string
    PluginTriggerPriority:
      enum:
        - a
        - b
        - c
        - d
        - e
      type: string
    PluginType:
      enum:
        - enduserportal
        - httprequestwithpreviousresponse
        - brunatawms
        - zendeskcrm
        - freshdeskcrm
        - fortesmetering
        - pingendocumentprinting
        - zerofrictiondemometering
        - twikey
        - paytbillingplugin
        - sendgridemailsending
        - tkbtrustit
        - fortesmeteringv3
        - bergerlevrault
        - webhooksubscription
        - accounting
      type: string
    PortalEmailType:
      enum:
        - confirmemail
        - resetpassword
      type: string
    PortalNotificationType:
      enum:
        - neutral
        - warning
        - important
      type: string
    PortalPageIdentifier:
      enum:
        - startpage
        - login
        - register
        - movein
        - moveout
        - consumptions
        - invoices
        - mydetails
        - overview
        - forgotpassword
      type: string
    PrepaymentAccountStatus:
      enum:
        - draft
        - signed
      type: string
    PrepaymentTransactionOrigin:
      enum:
        - paypoint
        - wiretransfer
        - stripe
      type: string
    PrepaymentTransactionStatus:
      enum:
        - pending
        - successful
        - failed
        - cancelled
      type: string
    PrepaymentTransactionType:
      enum:
        - creditreset
        - creditincrementaladjustment
        - credittopup
        - debitreset
        - debitincrementaladjustment
      type: string
    ProblemDetails:
      type: object
      properties:
        type:
          type: string
          nullable: true
        title:
          type: string
          nullable: true
        status:
          type: integer
          format: int32
          nullable: true
        detail:
          type: string
          nullable: true
        instance:
          type: string
          nullable: true
      additionalProperties: { }
    ProblemLevel:
      enum:
        - error
        - warning
      type: string
    ProblemResolutionStatus:
      enum:
        - unresolved
        - manualresolution
        - automaticresolution
      type: string
    ProductExportStatus:
      enum:
        - new
        - current
      type: string
    ProductItemPeriodicityType:
      enum:
        - regular
        - onmovein
        - onmoveout
        - fixedamount
        - fixedduration
      type: string
    ProductPeriodReferenceDTO:
      type: object
      properties:
        productId:
          type: string
          nullable: true
        productName:
          type: string
          nullable: true
        startDateTime:
          type: string
          format: date-time
        endDateTime:
          type: string
          format: date-time
      additionalProperties: false
    ProductReferenceDTO:
      type: object
      properties:
        id:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
          readOnly: true
        productId:
          type: string
          nullable: true
          readOnly: true
        productName:
          type: string
          nullable: true
      additionalProperties: false
    PropertyGroupBillingConfigurationDTO:
      type: object
      properties:
        id:
          type: string
          description: Gets or sets the unique identifier.
          nullable: true
        entityType:
          allOf:
            - $ref: '#/components/schemas/EntitySubjectType'
          description: Gets or sets the type of the entity.
          nullable: true
        createdDateTime:
          type: string
          description: Gets or sets the date and time when the entity was created.
          format: date-time
        discriminator:
          type: string
          description: Gets or sets the discriminator value.
          nullable: true
        _etag:
          type: string
          description: Gets or sets the ETag value.
          nullable: true
        requireAttention:
          type: boolean
          description: Gets a value indicating whether the entity requires attention.
          readOnly: true
        hasErrors:
          type: boolean
          description: Gets or sets a value indicating whether the entity has errors.
        hasWarnings:
          type: boolean
          description: Gets or sets a value indicating whether the entity has warnings.
        isReadOnly:
          type: boolean
          description: Gets or sets a value indicating whether the entity is read-only.
        organisationId:
          type: string
          description: Gets or sets the organization identifier.
          nullable: true
        propertyGroup:
          allOf:
            - $ref: '#/components/schemas/PropertyGroupReferenceDTO'
          description: Reference to the property group associated with this configuration.
          nullable: true
        companyBankAccountId:
          type: string
          description: The unique identifier of the company bank account.
          nullable: true
        advanceFrequency:
          allOf:
            - $ref: '#/components/schemas/AdvanceFrequency'
          description: The frequency at which advance payments are made.
          nullable: true
        invoiceFrequency:
          allOf:
            - $ref: '#/components/schemas/InvoiceFrequency'
          description: The frequency at which invoices are generated.
          nullable: true
        invoiceDay:
          type: integer
          description: The day of the month when invoices are generated.
          format: int32
        invoiceMonth:
          type: integer
          description: The month when invoices are generated (for yearly frequency).
          format: int32
        productId:
          type: string
          description: The unique identifier of the product.
          nullable: true
        paymentTermsId:
          type: string
          description: The unique identifier of the payment terms.
          nullable: true
        requiredIncomingInvoiceComponents:
          type: array
          items:
            $ref: '#/components/schemas/IncomingInvoiceComponentDTO'
          description: List of required incoming invoice components.
          nullable: true
        calculationConfigurations:
          type: array
          items:
            $ref: '#/components/schemas/PropertyGroupCalculationConfigurationDTO'
          description: List of calculation configurations for this property group.
          nullable: true
        costAllocationEnabled:
          type: boolean
          description: Indicates whether cost allocation is enabled for this configuration.
        costAllocationValidated:
          type: boolean
          description: Indicates whether the cost allocation has been validated.
        noteToCustomer:
          type: string
          description: A note to be included for the customer.
          nullable: true
        localisationLevel:
          allOf:
            - $ref: '#/components/schemas/LocalisationLevel'
          description: The level of localization for this configuration.
          nullable: true
        localisedFields:
          type: array
          items:
            type: string
          description: List of fields that have been localized.
          nullable: true
        translatedFields:
          type: object
          additionalProperties:
            type: object
            additionalProperties:
              type: string
            nullable: true
          description: Dictionary of translated fields by culture.
          nullable: true
      additionalProperties: false
      description: "Represents a billing configuration for a property group.\r\nThis DTO contains comprehensive information about billing settings, including frequencies, components, and localization."
    PropertyGroupBillingConfigurationDTOApiResponseDTO:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/LocalisedErrorDTO'
          nullable: true
        success:
          type: boolean
        applicableEntitiesCount:
          type: integer
          format: int32
        requestedEntitiesCount:
          type: integer
          format: int32
        succeededEntitiesCount:
          type: integer
          format: int32
          readOnly: true
        isSynchronous:
          type: boolean
        data:
          allOf:
            - $ref: '#/components/schemas/PropertyGroupBillingConfigurationDTO'
          description: The updated entity in case of modifications or creation
          nullable: true
      additionalProperties: false
    PropertyGroupBillingConfigurationDTOPagedResponseModelDTO:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/PropertyGroupBillingConfigurationDTO'
          nullable: true
        hasNextPage:
          type: boolean
        nextPageToken:
          type: string
          nullable: true
        totalRecords:
          type: integer
          format: int32
        sortableFields:
          type: array
          items:
            type: string
          nullable: true
        aggregateDetails:
          type: array
          items:
            $ref: '#/components/schemas/AggregateDetailsDTO'
          nullable: true
      additionalProperties: false
    PropertyGroupBillingConfigurationDTOPagedResponseModelDTOApiResponseDTO:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/LocalisedErrorDTO'
          nullable: true
        success:
          type: boolean
        applicableEntitiesCount:
          type: integer
          format: int32
        requestedEntitiesCount:
          type: integer
          format: int32
        succeededEntitiesCount:
          type: integer
          format: int32
          readOnly: true
        isSynchronous:
          type: boolean
        data:
          allOf:
            - $ref: '#/components/schemas/PropertyGroupBillingConfigurationDTOPagedResponseModelDTO'
          description: The updated entity in case of modifications or creation
          nullable: true
      additionalProperties: false
    PropertyGroupBillingPeriodCalculationConfigurationDetailsDTO:
      type: object
      properties:
        calculationConfigurationId:
          type: string
          description: The unique identifier of the calculation configuration.
          nullable: true
        tariffStatus:
          allOf:
            - $ref: '#/components/schemas/PropertyGroupBillingPeriodTariffStatus'
          description: The current status of tariff calculations for this configuration.
          nullable: true
        billingItems:
          type: array
          items:
            $ref: '#/components/schemas/BillingItemDetailsDTO'
          description: List of billing items included in this calculation configuration.
          nullable: true
      additionalProperties: false
      description: "Represents calculation configuration details for a property group billing period.\r\nContains information about tariff status and billing items."
    PropertyGroupBillingPeriodDTO:
      type: object
      properties:
        id:
          type: string
          description: Gets or sets the unique identifier.
          nullable: true
        entityType:
          allOf:
            - $ref: '#/components/schemas/EntitySubjectType'
          description: Gets or sets the type of the entity.
          nullable: true
        createdDateTime:
          type: string
          description: Gets or sets the date and time when the entity was created.
          format: date-time
        discriminator:
          type: string
          description: Gets or sets the discriminator value.
          nullable: true
        _etag:
          type: string
          description: Gets or sets the ETag value.
          nullable: true
        requireAttention:
          type: boolean
          description: Gets a value indicating whether the entity requires attention.
          readOnly: true
        hasErrors:
          type: boolean
          description: Gets or sets a value indicating whether the entity has errors.
        hasWarnings:
          type: boolean
          description: Gets or sets a value indicating whether the entity has warnings.
        isReadOnly:
          type: boolean
          description: Gets or sets a value indicating whether the entity is read-only.
        organisationId:
          type: string
          description: Gets or sets the organization identifier.
          nullable: true
        propertyGroupId:
          type: string
          description: The unique identifier of the property group.
          nullable: true
        startDate:
          type: string
          description: The start date and time of the billing period.
          format: date-time
        endDate:
          type: string
          description: The end date and time of the billing period.
          format: date-time
        incomingInvoiceComponents:
          type: array
          items:
            $ref: '#/components/schemas/IncomingInvoiceComponentDetailsDTO'
          description: List of incoming invoice components associated with this billing period.
          nullable: true
        calculationConfigurations:
          type: array
          items:
            $ref: '#/components/schemas/PropertyGroupBillingPeriodCalculationConfigurationDetailsDTO'
          description: List of calculation configurations and their details for this billing period.
          nullable: true
        locked:
          type: boolean
          description: Indicates whether the billing period is locked for modifications.
      additionalProperties: false
      description: "Represents a billing period for a property group.\r\nContains information about the period's duration, components, calculations, and lock status."
    PropertyGroupBillingPeriodDTOApiResponseDTO:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/LocalisedErrorDTO'
          nullable: true
        success:
          type: boolean
        applicableEntitiesCount:
          type: integer
          format: int32
        requestedEntitiesCount:
          type: integer
          format: int32
        succeededEntitiesCount:
          type: integer
          format: int32
          readOnly: true
        isSynchronous:
          type: boolean
        data:
          allOf:
            - $ref: '#/components/schemas/PropertyGroupBillingPeriodDTO'
          description: The updated entity in case of modifications or creation
          nullable: true
      additionalProperties: false
    PropertyGroupBillingPeriodDTOPagedResponseModelDTO:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/PropertyGroupBillingPeriodDTO'
          nullable: true
        hasNextPage:
          type: boolean
        nextPageToken:
          type: string
          nullable: true
        totalRecords:
          type: integer
          format: int32
        sortableFields:
          type: array
          items:
            type: string
          nullable: true
        aggregateDetails:
          type: array
          items:
            $ref: '#/components/schemas/AggregateDetailsDTO'
          nullable: true
      additionalProperties: false
    PropertyGroupBillingPeriodDTOPagedResponseModelDTOApiResponseDTO:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/LocalisedErrorDTO'
          nullable: true
        success:
          type: boolean
        applicableEntitiesCount:
          type: integer
          format: int32
        requestedEntitiesCount:
          type: integer
          format: int32
        succeededEntitiesCount:
          type: integer
          format: int32
          readOnly: true
        isSynchronous:
          type: boolean
        data:
          allOf:
            - $ref: '#/components/schemas/PropertyGroupBillingPeriodDTOPagedResponseModelDTO'
          description: The updated entity in case of modifications or creation
          nullable: true
      additionalProperties: false
    PropertyGroupBillingPeriodTariffStatus:
      enum:
        - nocalculatedtariffsrequired
        - calculatedtariffsmissing
        - calculatedtariffsavailable
      type: string
    PropertyGroupCalculationConfigurationDTO:
      type: object
      properties:
        name:
          type: string
          description: The name of the calculation configuration.
          nullable: true
        id:
          type: string
          description: The unique identifier of the calculation configuration.
          nullable: true
        serviceLocationIds:
          type: array
          items:
            type: string
          description: List of service location identifiers that this configuration applies to.
          nullable: true
        billingItems:
          type: array
          items:
            $ref: '#/components/schemas/CalculationConfigurationBillingItemDTO'
          description: List of billing items that are part of this calculation configuration.
          nullable: true
      additionalProperties: false
      description: "Represents a calculation configuration for a property group.\r\nThis DTO defines how billing items should be calculated for specific service locations."
    PropertyGroupCalculationConfigurationRequest:
      type: object
      properties:
        name:
          type: string
          description: The name of the calculation configuration.
          nullable: true
        id:
          type: string
          description: The ID of the calculation configuration.
          nullable: true
        serviceLocationIds:
          type: array
          items:
            type: string
          description: List of service location IDs included in this calculation configuration.
          nullable: true
        billingItems:
          type: array
          items:
            $ref: '#/components/schemas/CalculationConfigurationBillingItemRequest'
          description: List of billing items with their specific calculation configurations.
          nullable: true
      additionalProperties: false
      description: "Represents a request to configure calculation settings for a property group.\r\nThis DTO is used to set up billing calculations and formulas for multiple service locations within a property group."
    PropertyGroupFirstInvoiceEndDateTimeSuggestionsRequest:
      type: object
      properties:
        serviceLocationIds:
          type: array
          items:
            type: string
          description: List of service location IDs for which to generate invoice end date suggestions.
          nullable: true
        invoiceFrequency:
          allOf:
            - $ref: '#/components/schemas/InvoiceFrequency'
          description: The frequency at which invoices will be generated.
          nullable: true
        invoiceStartDateTimeUTC:
          type: string
          description: The start date and time (in UTC) from which the first invoice period will begin.
          format: date-time
      additionalProperties: false
      description: "Represents a request to get suggested end dates for the first invoice of a property group.\r\nThis DTO is used to determine appropriate billing period end dates based on service locations and invoice frequency."
    PropertyGroupQuickFilter:
      enum:
        - all
        - requireattention
      type: string
    PropertyGroupReferenceDTO:
      type: object
      properties:
        id:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
      additionalProperties: false
    PropertyGroupType:
      enum:
        - building
        - project
      type: string
    PropertyType:
      enum:
        - value
        - array
        - object
        - xmlattribute
      type: string
    ReasonEntityDTO:
      type: object
      properties:
        entitySubjectType:
          allOf:
            - $ref: '#/components/schemas/EntitySubjectType'
          description: Type of the entity subject
          nullable: true
        entitySubjectId:
          type: string
          description: Identifier of the entity subject
          nullable: true
      additionalProperties: false
      description: Represents the entity that caused the validation error
    RelatedEntityDTO:
      type: object
      properties:
        entitySubjectType:
          allOf:
            - $ref: '#/components/schemas/EntitySubjectType'
          description: Type of the entity subject
          nullable: true
        entitySubjectId:
          type: string
          description: Identifier of the entity subject
          nullable: true
      additionalProperties: false
      description: Represents an entity related to the validation error
    RequestInvoiceExportRequest:
      type: object
      properties:
        queryParams:
          allOf:
            - $ref: '#/components/schemas/GetInvoicesQueryParams'
          description: Query parameters to filter the invoices to be exported.
          nullable: true
        quickFilter:
          type: string
          description: Quick filter string to filter invoices without using complex query parameters.
          nullable: true
        configuredPluginId:
          type: string
          description: The unique identifier of the configured export plugin to use for the export.
          nullable: true
        markAsExported:
          type: boolean
          description: Indicates whether the exported invoices should be marked as exported in the system.
      additionalProperties: false
      description: "Represents a request to export invoices.\r\nThis DTO is used to initiate the export of invoices based on specified criteria and configuration."
    RequiredIncomingInvoiceComponentRequestDetails:
      type: object
      properties:
        id:
          type: string
          description: The ID of the incoming invoice component.
          nullable: true
        optional:
          type: boolean
          description: Indicates whether this component is optional in the billing configuration.
      additionalProperties: false
      description: "Represents details for a required incoming invoice component.\r\nThis DTO is used to specify which invoice components are required and whether they are optional."
    RequiredQuantityContractGroupedDTO:
      type: object
      properties:
        billingItemId:
          type: string
          description: Unique identifier of the billing item
          nullable: true
        requiredQuantities:
          type: array
          items:
            $ref: '#/components/schemas/RequiredQuantityDTO'
          description: List of required quantities for this contract
          nullable: true
      additionalProperties: false
      description: Represents required quantities grouped by contract
    RequiredQuantityDTO:
      type: object
      properties:
        billingItemId:
          type: string
          description: Unique identifier of the billing item
          nullable: true
        serviceLocationId:
          type: string
          description: Unique identifier of the service location
          nullable: true
        calculationGroupId:
          type: string
          description: Unique identifier of the calculation group
          nullable: true
        complete:
          type: boolean
          description: Indicates if all required data is complete
        errors:
          type: array
          items:
            $ref: '#/components/schemas/LocalisedErrorDTO'
          description: List of localized error messages
          nullable: true
        validationErrors:
          type: array
          items:
            $ref: '#/components/schemas/RequiredQuantityValidationErrorDTO'
          description: List of validation errors for this quantity
          nullable: true
      additionalProperties: false
      description: Base class for all required quantity types in billing completeness
    RequiredQuantityGroupedDTO:
      type: object
      properties:
        contractRequiredQuantities:
          type: array
          items:
            $ref: '#/components/schemas/RequiredQuantityContractGroupedDTO'
          description: Required quantities grouped by contract
          nullable: true
        locationRequiredQuantities:
          type: array
          items:
            $ref: '#/components/schemas/RequiredQuantityLocationGroupedDTO'
          description: Required quantities grouped by location
          nullable: true
      additionalProperties: false
      description: Represents grouped required quantities for billing
    RequiredQuantityLocationGroupedDTO:
      type: object
      properties:
        serviceLocationId:
          type: string
          description: Unique identifier of the service location
          nullable: true
        requiredQuantities:
          type: array
          items:
            $ref: '#/components/schemas/RequiredQuantityDTO'
          description: List of required quantities for this location
          nullable: true
      additionalProperties: false
      description: Represents required quantities grouped by location
    RequiredQuantityValidationErrorDTO:
      type: object
      properties:
        reason:
          allOf:
            - $ref: '#/components/schemas/InputMissingReason'
          description: Reason for missing input (mutually exclusive with Error)
          nullable: true
        error:
          allOf:
            - $ref: '#/components/schemas/ErrorCode'
          description: Error code for validation failure (mutually exclusive with Reason)
        problemEntity:
          allOf:
            - $ref: '#/components/schemas/ReasonEntityDTO'
          description: Entity that caused the validation error
          nullable: true
        impactedEntity:
          allOf:
            - $ref: '#/components/schemas/ImpactedEntityDTO'
          description: Entity that is impacted by the validation error
          nullable: true
        relatedEntities:
          type: array
          items:
            $ref: '#/components/schemas/RelatedEntityDTO'
          description: List of entities related to the validation error
          nullable: true
      additionalProperties: false
      description: Represents validation errors for required quantities in billing completeness
    ReversePaymentRequest:
      type: object
      properties:
        reversalAdditionalInformation:
          type: string
          description: Additional information or reason for the payment reversal.
          nullable: true
      additionalProperties: false
      description: "Represents a request to reverse a payment.\r\nThis DTO is used to initiate the reversal of a previously processed payment."
    ScenarioGroupingType:
      enum:
        - invoice
        - collectioncase
        - contract
        - moverequest
        - personalinformation
      type: string
    ScheduledJobRecurrence:
      enum:
        - none
        - pt5m
        - pt1h
        - pt1d
      type: string
    ScheduledJobType:
      enum:
        - billingadvancerun
        - meterdataimport
      type: string
    SentStatus:
      enum:
        - notsent
        - sending
        - printing
        - skipped
        - sent
        - failed
      type: string
    ServiceLocationQuickFilter:
      enum:
        - all
        - supplied
        - unsupplied
        - requireattention
      type: string
    ServiceStatus:
      enum:
        - supplied
        - unsupplied
        - requested
        - removed
      type: string
    SettleTransactionsRequest:
      type: object
      properties:
        transactionIds:
          type: array
          items:
            type: string
          description: List of transaction IDs to be marked as settled.
          nullable: true
      additionalProperties: false
      description: "Represents a request to settle multiple transactions.\r\nThis DTO is used to mark multiple transactions as settled, indicating they have been processed and completed."
    SettledTransactionDTO:
      type: object
      properties:
        transactionId:
          type: string
          description: Identifier of the transaction
          nullable: true
        settledAmount:
          type: number
          description: Amount that has been settled
          format: double
        transactionReferenceType:
          allOf:
            - $ref: '#/components/schemas/TransactionReferenceType'
          description: Type of transaction reference
          nullable: true
        transactionReferenceId:
          type: string
          description: Identifier of the transaction reference
          nullable: true
        transactionReferenceDisplayName:
          type: string
          description: Display name of the transaction reference
          nullable: true
        transactionDateTime:
          type: string
          description: Date and time when the transaction occurred
          format: date-time
      additionalProperties: false
      description: Represents a transaction that has been settled
    SettlementDetailsDTO:
      type: object
      properties:
        settledTransactionsWithAmounts:
          type: array
          items:
            $ref: '#/components/schemas/SettledTransactionDTO'
          description: List of transactions that have been settled with their amounts
          nullable: true
      additionalProperties: false
      description: Represents settlement details for a transaction
    SocialTariffExportType:
      enum:
        - customerportfolio
        - claimsprotectedcustomers
      type: string
    SortVersion:
      type: object
      properties:
        fullVersion:
          type: integer
          format: int32
        sortId:
          type: string
          format: uuid
      additionalProperties: false
    SshAuthenticationMethod:
      enum:
        - password
        - privatekey
      type: string
    StatusCode:
      enum:
        - active
        - inactive
        - failed
      type: string
    StepChargeDTO:
      type: object
      properties:
        stepChargeAmountInclVAT:
          type: number
          description: The charge amount including VAT.
          format: double
        stepVATAmount:
          type: number
          description: The VAT amount for this charge.
          format: double
        transactionId:
          type: string
          description: The unique identifier of the transaction associated with this charge.
          nullable: true
      additionalProperties: false
      description: "Represents charges associated with a collection step.\r\nThis DTO contains information about the amount charged and the associated transaction."
    StringApiResponseDTO:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/LocalisedErrorDTO'
          nullable: true
        success:
          type: boolean
        applicableEntitiesCount:
          type: integer
          format: int32
        requestedEntitiesCount:
          type: integer
          format: int32
        succeededEntitiesCount:
          type: integer
          format: int32
          readOnly: true
        isSynchronous:
          type: boolean
        data:
          type: string
          description: The updated entity in case of modifications or creation
          nullable: true
      additionalProperties: false
    SyntheticLoadProfileOrigin:
      enum:
        - manual
        - systemgenerated
      type: string
    SystemMessageCode:
      enum:
        - BILLING_SETTINGS_COPIED_FROM_PROPERTY_GROUP
        - BILLING_SETTINGS_PROPERTY_GROUP_MIXED
        - SERVICE_LOCATIONS_PRODUCTS_MIXED
        - PRODUCT_COPIED_FROM_SERVICE_LOCATION
        - SERVICE_LOCATIONS_PRODUCTS_MIXED_EXISTING_CONTRACT
        - BILLING_SETTINGS_PROPERTY_GROUP_MIXED_EXISTING_CONTRACT
      type: string
    SystemMessageLevel:
      enum:
        - Information
        - Warning
      type: string
    SystemUsageRecordType:
      enum:
        - servicelocationsactivewithoutservicesonly
        - servicelocationsactivewithservicesonly
        - servicelocationsinactivewithoutservicesonly
        - servicelocationsinactivewithservicesonly
        - servicelocationswithmorethanallowedmeters
        - metersreceivingmeteringwithoutlinkedaddress
        - measurementscreated
        - invoicescreated
        - documentssentviapostal
        - documentssentviaemail
        - contracthistoricalmoveins
        - contractmoveins
        - contracthistoricalmoveouts
        - contractmoveouts
        - users
        - activeintegration
        - servicelocationsactive
        - servicelocationsinactive
        - databasesize
        - filesize
        - smssent
      type: string
    TariffFormulaDTO:
      type: object
      properties:
        functions:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/FormulaFunctionInstanceDTO'
          description: "Dictionary of formula function instances, keyed by their order in the formula.\r\nEach function represents a step in the tariff calculation process."
          nullable: true
      additionalProperties: false
      description: "Represents a tariff formula used in property group billing calculations.\r\nThis DTO contains a collection of formula functions that define how tariffs are calculated."
    TariffOrigin:
      enum:
        - product
        - billingitem
      type: string
    TemplateAssetType:
      enum:
        - css
        - headertemplate
        - footertemplate
        - image
        - constant
      type: string
    TemplateObjectType:
      enum:
        - invoice
        - collectioncase
        - moverequest
        - contract
        - billingrelation
        - invoiceubl
        - portalcustomer
        - annualstatement
      type: string
    TemplateUsecase:
      enum:
        - pdf
        - email
      type: string
    TextInfo:
      type: object
      properties:
        ansiCodePage:
          type: integer
          format: int32
          readOnly: true
        oemCodePage:
          type: integer
          format: int32
          readOnly: true
        macCodePage:
          type: integer
          format: int32
          readOnly: true
        ebcdicCodePage:
          type: integer
          format: int32
          readOnly: true
        lcid:
          type: integer
          format: int32
          readOnly: true
        cultureName:
          type: string
          nullable: true
          readOnly: true
        isReadOnly:
          type: boolean
          readOnly: true
        listSeparator:
          type: string
          nullable: true
        isRightToLeft:
          type: boolean
          readOnly: true
      additionalProperties: false
    TierCalculationMethod:
      enum:
        - invoiceperiod
        - tariffperiod
      type: string
    TransactionDTO:
      type: object
      properties:
        id:
          type: string
          description: Gets or sets the unique identifier.
          nullable: true
        entityType:
          allOf:
            - $ref: '#/components/schemas/EntitySubjectType'
          description: Gets or sets the type of the entity.
          nullable: true
        createdDateTime:
          type: string
          description: Gets or sets the date and time when the entity was created.
          format: date-time
        discriminator:
          type: string
          description: Gets or sets the discriminator value.
          nullable: true
        _etag:
          type: string
          description: Gets or sets the ETag value.
          nullable: true
        requireAttention:
          type: boolean
          description: Gets a value indicating whether the entity requires attention.
          readOnly: true
        hasErrors:
          type: boolean
          description: Gets or sets a value indicating whether the entity has errors.
        hasWarnings:
          type: boolean
          description: Gets or sets a value indicating whether the entity has warnings.
        isReadOnly:
          type: boolean
          description: Gets or sets a value indicating whether the entity is read-only.
        organisationId:
          type: string
          description: Gets or sets the organization identifier.
          nullable: true
        transactionType:
          allOf:
            - $ref: '#/components/schemas/TransactionType'
          description: Type of the transaction
          nullable: true
        transactionSubType:
          allOf:
            - $ref: '#/components/schemas/TransactionSubType'
          description: Subtype of the transaction
          nullable: true
        transactionDateTime:
          type: string
          description: Date and time when the transaction occurred
          format: date-time
        transactionDueDateTime:
          type: string
          description: Date and time when the transaction is due
          format: date-time
        transactionAmount:
          type: number
          description: Total amount of the transaction
          format: double
        transactionOpenAmount:
          type: number
          description: Remaining open amount of the transaction
          format: double
        customerId:
          type: string
          description: Identifier of the customer
          nullable: true
        debtor:
          allOf:
            - $ref: '#/components/schemas/DebtorDTO'
          description: Debtor information
          nullable: true
        organisationBankAccountId:
          type: string
          description: 'Identifier of the organization''s bank account (obsolete, for backwards compatibility)'
          nullable: true
          deprecated: true
        companyBankAccountId:
          type: string
          description: Identifier of the company's bank account
          nullable: true
        paymentReference:
          type: string
          description: Payment reference number
          nullable: true
        referenceDetails:
          allOf:
            - $ref: '#/components/schemas/TransactionReferenceDetailsDTO'
          description: Reference details for the transaction
          nullable: true
        settlementDetails:
          allOf:
            - $ref: '#/components/schemas/SettlementDetailsDTO'
          description: Settlement details for the transaction
          nullable: true
        reversed:
          type: boolean
          description: Indicates if the transaction has been reversed
        reversalReason:
          allOf:
            - $ref: '#/components/schemas/PaymentReversalReason'
          description: Reason for payment reversal
          nullable: true
        reversalAdditionalInformation:
          type: string
          description: Additional information about the reversal
          nullable: true
        automaticallyClosed:
          type: boolean
          description: Indicates if the transaction was automatically closed
        awaitingBankConfirmation:
          type: boolean
          description: Indicates if the transaction is awaiting bank confirmation
        awaitingBankConfirmationTransactionId:
          type: string
          description: Identifier of the transaction awaiting bank confirmation
          nullable: true
        awaitingBankConfirmationTransactionIdentification:
          type: string
          description: Identification of the transaction awaiting bank confirmation
          nullable: true
        awaitingBankConfirmationTransactionType:
          allOf:
            - $ref: '#/components/schemas/OutgoingBankingTransactionType'
          description: Type of outgoing banking transaction awaiting confirmation
          nullable: true
        propertyGroups:
          type: array
          items:
            $ref: '#/components/schemas/PropertyGroupReferenceDTO'
          description: List of associated property groups
          nullable: true
        incomingBankingTransactionId:
          type: string
          description: Identifier of the incoming banking transaction
          nullable: true
        incomingMutationId:
          type: string
          description: Identifier of the incoming mutation
          nullable: true
        outgoingBankingTransactionId:
          type: string
          description: Identifier of the outgoing banking transaction
          nullable: true
        outgoingMutationId:
          type: string
          description: Identifier of the outgoing mutation
          nullable: true
      additionalProperties: false
      description: Represents a transaction in the billing system
    TransactionDTOApiResponseDTO:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/LocalisedErrorDTO'
          nullable: true
        success:
          type: boolean
        applicableEntitiesCount:
          type: integer
          format: int32
        requestedEntitiesCount:
          type: integer
          format: int32
        succeededEntitiesCount:
          type: integer
          format: int32
          readOnly: true
        isSynchronous:
          type: boolean
        data:
          allOf:
            - $ref: '#/components/schemas/TransactionDTO'
          description: The updated entity in case of modifications or creation
          nullable: true
      additionalProperties: false
    TransactionDTOListApiResponseDTO:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/LocalisedErrorDTO'
          nullable: true
        success:
          type: boolean
        applicableEntitiesCount:
          type: integer
          format: int32
        requestedEntitiesCount:
          type: integer
          format: int32
        succeededEntitiesCount:
          type: integer
          format: int32
          readOnly: true
        isSynchronous:
          type: boolean
        data:
          type: array
          items:
            $ref: '#/components/schemas/TransactionDTO'
          description: The updated entity in case of modifications or creation
          nullable: true
      additionalProperties: false
    TransactionDTOPagedResponseModelDTO:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/TransactionDTO'
          nullable: true
        hasNextPage:
          type: boolean
        nextPageToken:
          type: string
          nullable: true
        totalRecords:
          type: integer
          format: int32
        sortableFields:
          type: array
          items:
            type: string
          nullable: true
        aggregateDetails:
          type: array
          items:
            $ref: '#/components/schemas/AggregateDetailsDTO'
          nullable: true
      additionalProperties: false
    TransactionDTOPagedResponseModelDTOApiResponseDTO:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/LocalisedErrorDTO'
          nullable: true
        success:
          type: boolean
        applicableEntitiesCount:
          type: integer
          format: int32
        requestedEntitiesCount:
          type: integer
          format: int32
        succeededEntitiesCount:
          type: integer
          format: int32
          readOnly: true
        isSynchronous:
          type: boolean
        data:
          allOf:
            - $ref: '#/components/schemas/TransactionDTOPagedResponseModelDTO'
          description: The updated entity in case of modifications or creation
          nullable: true
      additionalProperties: false
    TransactionOverviewCountDTO:
      type: object
      properties:
        all:
          type: integer
          description: Total number of all transactions
          format: int32
        toPay:
          type: integer
          description: Number of transactions pending payment
          format: int32
        toRefund:
          type: integer
          description: Number of transactions pending refund
          format: int32
        onlyOpen:
          type: integer
          description: Number of open transactions
          format: int32
        onlyClosed:
          type: integer
          description: Number of closed transactions
          format: int32
      additionalProperties: false
      description: Represents counts of transactions in different states for overview purposes
    TransactionOverviewCountDTOApiResponseDTO:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/LocalisedErrorDTO'
          nullable: true
        success:
          type: boolean
        applicableEntitiesCount:
          type: integer
          format: int32
        requestedEntitiesCount:
          type: integer
          format: int32
        succeededEntitiesCount:
          type: integer
          format: int32
          readOnly: true
        isSynchronous:
          type: boolean
        data:
          allOf:
            - $ref: '#/components/schemas/TransactionOverviewCountDTO'
          description: The updated entity in case of modifications or creation
          nullable: true
      additionalProperties: false
    TransactionQuickFilter:
      enum:
        - all
        - topay
        - torefund
        - onlyopen
        - onlyclosed
      type: string
    TransactionReferenceDetailsDTO:
      type: object
      properties:
        transactionReferenceType:
          allOf:
            - $ref: '#/components/schemas/TransactionReferenceType'
          description: Type of transaction reference
          nullable: true
        transactionReferenceId:
          type: string
          description: Identifier of the transaction reference
          nullable: true
        parameters:
          allOf:
            - $ref: '#/components/schemas/TransactionReferenceParametersDTO'
          description: Parameters for the transaction reference
          nullable: true
      additionalProperties: false
      description: Represents reference details for a transaction
    TransactionReferenceParametersDTO:
      type: object
      additionalProperties: false
      description: Base class for transaction reference parameters
    TransactionReferenceType:
      enum:
        - payment
        - invoice
        - collectionstep
      type: string
    TransactionStatus:
      enum:
        - notsettled
        - partiallysettled
        - settled
        - reversed
      type: string
    TransactionSubType:
      enum:
        - adjustbalance
        - incomingpayment
        - outgoingpayment
      type: string
    TransactionType:
      enum:
        - invoice
        - payment
        - reversal
        - collectionfee
        - writeoff
      type: string
    TranslationStatus:
      enum:
        - defaulttranslation
        - missingtranslation
        - translated
      type: string
    TriggerBillingCompletenessRequest:
      type: object
      properties:
        onlyAdvances:
          type: boolean
          description: Indicates if only advance payments should be calculated
        recalculateIfNeeded:
          type: boolean
          description: Indicates if recalculation should be performed if needed
        advanceUntilDateTime:
          type: string
          description: Date and time until which advance payments should be calculated
          format: date-time
      additionalProperties: false
      description: Represents a request to trigger billing completeness calculation
    UblTranslations:
      enum:
        - invoices
        - vatnumber
        - invoice
        - vatnumberorganisationnumber
      type: string
    UnitOfMeasure:
      enum:
        - none
        - wh
        - kwh
        - mwh
        - gwh
        - j
        - kj
        - mj
        - gj
        - day
        - month
        - year
        - litre
        - m3
        - units
        - m3_h
        - celcius
        - k
        - kw
      type: string
    UpdateContractProductParameter:
      enum:
        - fromcontractstartdate
        - fromfirstopenperiod
        - fromsupplieddate
        - fromdatebasedonspecificperiod
      type: string
    UpdateCustomEntityPropertiesRequest:
      type: object
      properties:
        properties:
          type: array
          items:
            $ref: '#/components/schemas/UpdateCustomEntityPropertyRequest'
          nullable: true
      additionalProperties: false
    UpdateCustomEntityPropertyRequest:
      type: object
      properties:
        customEntityPropertyTypeId:
          type: string
          nullable: true
        values:
          type: array
          items:
            $ref: '#/components/schemas/UpdateCustomEntityPropertyValueRequest'
          nullable: true
      additionalProperties: false
    UpdateCustomEntityPropertyValueRequest:
      type: object
      properties:
        startDateTime:
          type: string
          format: date-time
        endDateTime:
          type: string
          format: date-time
        valueDecimal:
          type: number
          format: double
        valueString:
          type: string
          nullable: true
        valueBoolean:
          type: boolean
        valueNumber:
          type: integer
          format: int64
        valueDateTime:
          type: string
          format: date-time
          nullable: true
        valueDropdown:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
    UpdateCustomerBankAccountActiveMandateRequest:
      type: object
      properties:
        number:
          type: string
          description: The unique mandate number assigned to this mandate.
          nullable: true
        type:
          allOf:
            - $ref: '#/components/schemas/MandateType'
          description: "The type of mandate (e.g., CORE, B2B).\r\nCurrently only CORE mandates are supported."
          nullable: true
        signedDateTime:
          type: string
          description: The date and time when the mandate was signed by the customer.
          format: date-time
      additionalProperties: false
      description: "Represents the updated mandate information for a customer's bank account.\r\nThis DTO contains details about the mandate that authorizes direct debit transactions."
    UpdateCustomerBankAccountRequest:
      type: object
      properties:
        iban:
          type: string
          description: The International Bank Account Number (IBAN) of the bank account.
          nullable: true
        bic:
          type: string
          description: The Bank Identifier Code (BIC) of the bank.
          nullable: true
        isDefault:
          type: boolean
          description: Indicates whether this bank account should be set as the default account for the customer.
        activeMandate:
          allOf:
            - $ref: '#/components/schemas/UpdateCustomerBankAccountActiveMandateRequest'
          description: Information about the active mandate associated with this bank account.
          nullable: true
      additionalProperties: false
      description: "Represents a request to update an existing customer bank account.\r\nThis DTO is used to modify the details of a customer's bank account and its associated mandate information."
    UpdateEntityTranslationRequest:
      type: object
      properties:
        translatedFields:
          type: object
          additionalProperties:
            type: object
            additionalProperties:
              type: string
            nullable: true
          nullable: true
      additionalProperties: false
    UpdateIncomingBankingTransactionIbanRequest:
      type: object
      properties:
        customerId:
          type: string
          description: The ID of the customer associated with the transaction.
          nullable: true
        iban:
          type: string
          description: The new IBAN (International Bank Account Number) to be associated with the transaction.
          nullable: true
        confirm:
          type: boolean
          description: Indicates whether the user confirms the IBAN update.
      additionalProperties: false
      description: "Represents a request to update the IBAN associated with an incoming banking transaction.\r\nThis DTO is used to correct or update the bank account information for a transaction."
    UpdateIncomingInvoiceRequest:
      type: object
      properties:
        invoiceDate:
          type: string
          description: The updated date when the invoice was issued.
          format: date-time
        description:
          type: string
          description: The updated description of the goods or services covered by the invoice.
          nullable: true
        startDate:
          type: string
          description: The updated start date of the period covered by the invoice.
          format: date-time
        endDate:
          type: string
          description: The updated end date of the period covered by the invoice.
          format: date-time
        totalAmountExclVat:
          type: number
          description: The updated total amount excluding VAT.
          format: double
        totalAmountInclVat:
          type: number
          description: The updated total amount including VAT.
          format: double
      additionalProperties: false
      description: "Represents a request to update an existing incoming invoice.\r\nThis DTO is used to modify the details of a previously registered invoice."
    UpdateOutgoingBankingTransactionBankAccountRequest:
      type: object
      properties:
        companyBankAccountId:
          type: string
          description: The ID of the company bank account to be used for the transaction.
          nullable: true
      additionalProperties: false
      description: "Represents a request to update the bank account associated with an outgoing banking transaction.\r\nThis DTO is used to change which company bank account the transaction will be processed from."
    UpdateOutgoingBankingTransactionCollectionDateRequest:
      type: object
      properties:
        collectionDate:
          type: string
          description: The new date and time when the transaction should be collected.
          format: date-time
      additionalProperties: false
      description: "Represents a request to update the collection date of an outgoing banking transaction.\r\nThis DTO is used to modify when a transaction should be collected from the customer's account."
    UpdateOutgoingMutationEntryRequest:
      type: object
      properties:
        amount:
          type: number
          description: The new amount for the mutation entry.
          format: double
        paymentReference:
          type: string
          description: The new payment reference text for the mutation entry.
          nullable: true
        iban:
          type: string
          description: "The new IBAN (International Bank Account Number) for the mutation entry.\r\nThis field is optional and can be null."
          nullable: true
      additionalProperties: false
      description: "Represents a request to update an existing outgoing mutation entry.\r\nThis DTO is used to modify the details of a specific entry within an outgoing banking transaction."
    UpdatePropertyGroupBillingConfigurationCostAllocationRequest:
      type: object
      properties:
        requiredIncomingInvoiceComponents:
          type: array
          items:
            $ref: '#/components/schemas/RequiredIncomingInvoiceComponentRequestDetails'
          description: List of required incoming invoice components with their details.
          nullable: true
        calculationConfigurations:
          type: array
          items:
            $ref: '#/components/schemas/PropertyGroupCalculationConfigurationRequest'
          description: List of calculation configurations for the property group.
          nullable: true
      additionalProperties: false
      description: "Represents a request to update cost allocation settings for a property group billing configuration.\r\nThis DTO is used to configure how costs are allocated across different components and calculation configurations."
    UpdatePropertyGroupBillingConfigurationNoteToCustomerRequest:
      type: object
      properties:
        noteToCustomer:
          type: string
          description: The new note text to be displayed to customers on invoices.
          nullable: true
      additionalProperties: false
      description: "Represents a request to update the note to customer for a property group billing configuration.\r\nThis DTO is used to modify the note that will be displayed to customers on invoices."
    UpdatePropertyGroupBillingConfigurationRequest:
      type: object
      properties:
        propertyGroup:
          allOf:
            - $ref: '#/components/schemas/PropertyGroupReferenceDTO'
          description: Reference to the property group being configured.
          nullable: true
        companyBankAccountId:
          type: string
          description: The ID of the company bank account to be used for billing.
          nullable: true
        advanceFrequency:
          allOf:
            - $ref: '#/components/schemas/AdvanceFrequency'
          description: The frequency at which advance payments will be collected.
          nullable: true
        invoiceFrequency:
          allOf:
            - $ref: '#/components/schemas/InvoiceFrequency'
          description: The frequency at which invoices will be generated.
          nullable: true
        invoiceDay:
          type: integer
          description: The day of the month when invoices should be generated.
          format: int32
        invoiceMonth:
          type: integer
          description: The month when invoices should be generated (used for yearly frequency).
          format: int32
        productId:
          type: string
          description: The ID of the product associated with this billing configuration.
          nullable: true
        paymentTermsId:
          type: string
          description: The ID of the payment terms to be applied.
          nullable: true
      additionalProperties: false
      description: "Represents a request to update a property group billing configuration.\r\nThis DTO is used to modify various billing settings for a property group, including frequencies, payment terms, and bank account details."
    UserQuickFilter:
      enum:
        - all
        - users
        - admins
        - customroles
      type: string
    UtilityType:
      enum:
        - none
        - heat
        - cooling
        - hottapwater
        - water
        - electricity
        - gas
        - rainwater
        - services
      type: string
    ValueProviderType:
      enum:
        - servicelocationidfrominvoicelines
        - attachmentidfrominvoice
        - contractidfrominvoice
        - servicelocationidfrominvoicelinesfallbacktocontractservicelocationid
        - customeridfrominvoice
      type: string
    WriteOffHandlingType:
      enum:
        - nowriteoff
        - openamount
        - chargeamount
      type: string
  securitySchemes:
    apiKeyHeader:
      type: apiKey
      name: apim-sub
      in: header
    apiKeyQuery:
      type: apiKey
      name: subscription-key
      in: query
security:
  - apiKeyHeader: [ ]
  - apiKeyQuery: [ ]
tags:
  - name: BillingCompletenesses
    description: Controller for managing billing completenesses.
  - name: BillingRelations
    description: Controller for managing billing relations.
  - name: CollectionCases
    description: Controller for managing collection cases.
  - name: CustAging
    description: Controller for managing customer aging reports.
  - name: CustomerBankAccounts
    description: Controller for managing customer bank accounts.
  - name: Customers
    description: Controller for managing billing customers.
  - name: EstimatedInvoices
    description: Controller for managing estimated invoices.
  - name: IncomingBankingTransactions
    description: Controller for managing incoming banking transactions.
  - name: IncomingInvoices
    description: Controller for managing incoming invoices.
  - name: IncomingMutations
    description: Controller for managing incoming mutations.
  - name: Integration
    description: Controller for managing integrations related to banking transactions and invoices.
  - name: Invoices
    description: Controller for managing invoices.
  - name: OutgoingBankingTransactions
    description: Controller for managing outgoing banking transactions.
  - name: OutgoingMutations
    description: Controller for managing outgoing mutations.
  - name: Payments
    description: Controller for handling payment-related operations.
  - name: PropertyGroupBillingConfiguration
    description: Controller for managing property group billing configurations.
  - name: PropertyGroupBillingPeriods
    description: Controller for managing property group billing periods.
  - name: Transactions
    description: Controller for handling transactions.
  - name: AnnualStatements
    description: Controller for managing annual statements.