openapi: 3.0.1
info:
  title: Metering
  description: MeterData API
  version: '1.0'
servers:
  - url: https://api.zerofriction.co/api/me
paths:
  '/Consumptions/{extchuuid}':
    get:
      tags:
        - Consumptions
      summary: Retrieves consumption values for a specific external channel within a date range.
      description: Retrieves consumption values for a specific external channel within a date range.
      operationId: get-consumptions-extchuuid
      parameters:
        - name: extchuuid
          in: path
          description: The external channel UUID to retrieve consumption data for.
          required: true
          schema:
            type: string
        - name: startDateTime
          in: query
          description: Format - date-time (as date-time in RFC3339). The start date and time for the consumption data range.
          schema:
            type: string
            format: date-time
        - name: endDateTime
          in: query
          description: Format - date-time (as date-time in RFC3339). The end date and time for the consumption data range.
          schema:
            type: string
            format: date-time
        - name: continuationToken
          in: header
          description: Token for pagination of large result sets.
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/FlatPagedConsumptionDTOPagedResponseModelDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/FlatPagedConsumptionDTOPagedResponseModelDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  results:
                    - externalChannelIdentifier: string
                      complete: true
                      userId: string
                      productionDay: 0
                      productionDayStartUtc: string
                      productionDayEndUtc: string
                      startDateTime: string
                      endDateTime: string
                      value: 0
                  hasNextPage: true
                  nextPageToken: string
                  totalRecords: 0
                  sortableFields:
                    - string
                  aggregateDetails:
                    - code: string
                      translation: string
                      value: 0
                      valueDate: string
            text/json:
              schema:
                $ref: '#/components/schemas/FlatPagedConsumptionDTOPagedResponseModelDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  results:
                    - externalChannelIdentifier: string
                      complete: true
                      userId: string
                      productionDay: 0
                      productionDayStartUtc: string
                      productionDayEndUtc: string
                      startDateTime: string
                      endDateTime: string
                      value: 0
                  hasNextPage: true
                  nextPageToken: string
                  totalRecords: 0
                  sortableFields:
                    - string
                  aggregateDetails:
                    - code: string
                      translation: string
                      value: 0
                      valueDate: string
  /Consumptions/export/sum:
    post:
      tags:
        - Consumptions
      summary: Calculates and exports the sum of consumption values for a list of meters.
      description: Calculates and exports the sum of consumption values for a list of meters.
      operationId: post-consumptions-export-sum
      parameters:
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: 'The request containing the list of meters, date range, and filtering parameters.'
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ExportConsumptionsForMetersRequest'
            example:
              queryParams:
                flexSearch: string
                includeOnlyIds:
                  - string
                excludeIds:
                  - string
                servicelocationIds:
                  - string
                propertyGroupIds:
                  - string
                meterType: { }
                receivedMeteringDataStart: string
                receivedMeteringDataEnd: string
                nextExpectedReadingDateStart: string
                nextExpectedReadingDateEnd: string
                parentSerialNumber: string
                filterByReadingFrequency: true
                readingFrequency: { }
                customerId: string
                meterTypeGroup: string
                meterSerialNumber: string
              quickFilter: string
              meterIds:
                - string
              startDateTime: string
              endDateTime: string
              onlyValidate: true
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ExportConsumptionsForMetersRequest'
            example:
              queryParams:
                flexSearch: string
                includeOnlyIds:
                  - string
                excludeIds:
                  - string
                servicelocationIds:
                  - string
                propertyGroupIds:
                  - string
                meterType: { }
                receivedMeteringDataStart: string
                receivedMeteringDataEnd: string
                nextExpectedReadingDateStart: string
                nextExpectedReadingDateEnd: string
                parentSerialNumber: string
                filterByReadingFrequency: true
                readingFrequency: { }
                customerId: string
                meterTypeGroup: string
                meterSerialNumber: string
              quickFilter: string
              meterIds:
                - string
              startDateTime: string
              endDateTime: string
              onlyValidate: true
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ExportConsumptionsForMetersRequest'
            example:
              queryParams:
                flexSearch: string
                includeOnlyIds:
                  - string
                excludeIds:
                  - string
                servicelocationIds:
                  - string
                propertyGroupIds:
                  - string
                meterType: { }
                receivedMeteringDataStart: string
                receivedMeteringDataEnd: string
                nextExpectedReadingDateStart: string
                nextExpectedReadingDateEnd: string
                parentSerialNumber: string
                filterByReadingFrequency: true
                readingFrequency: { }
                customerId: string
                meterTypeGroup: string
                meterSerialNumber: string
              quickFilter: string
              meterIds:
                - string
              startDateTime: string
              endDateTime: string
              onlyValidate: true
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AggregatedConsumptionsByMeterDTOListApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/AggregatedConsumptionsByMeterDTOListApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  - meterSerialNumber: string
                    meterTag: string
                    utilityType: { }
                    unitOfMeasure: { }
                    timeOfUse: string
                    periodStartDate: string
                    periodEndDate: string
                    propertyGroupId: string
                    propertyGroupName: string
                    total: 0
            text/json:
              schema:
                $ref: '#/components/schemas/AggregatedConsumptionsByMeterDTOListApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  - meterSerialNumber: string
                    meterTag: string
                    utilityType: { }
                    unitOfMeasure: { }
                    timeOfUse: string
                    periodStartDate: string
                    periodEndDate: string
                    propertyGroupId: string
                    propertyGroupName: string
                    total: 0
  '/Consumptions/{extchuuid}/flat':
    get:
      tags:
        - Consumptions
      summary: Retrieves flat consumption values for a specific external channel with optional grouping by period.
      description: Retrieves flat consumption values for a specific external channel with optional grouping by period.
      operationId: get-consumptions-extchuuid-flat
      parameters:
        - name: extchuuid
          in: path
          description: The external channel UUID to retrieve consumption data for.
          required: true
          schema:
            type: string
        - name: groupByPeriod
          in: query
          description: 'Optional period for aggregating consumption data (daily, weekly, monthly, etc.).'
          schema:
            type: string
        - name: startDateTime
          in: query
          description: Format - date-time (as date-time in RFC3339). The start date and time for the consumption data range.
          schema:
            type: string
            format: date-time
        - name: endDateTime
          in: query
          description: Format - date-time (as date-time in RFC3339). The end date and time for the consumption data range.
          schema:
            type: string
            format: date-time
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/FlatConsumptionDTOPagedResponseModelDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/FlatConsumptionDTOPagedResponseModelDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  results:
                    - externalChannelIdentifier: string
                      startDateTime: string
                      endDateTime: string
                      value: 0
                  hasNextPage: true
                  nextPageToken: string
                  totalRecords: 0
                  sortableFields:
                    - string
                  aggregateDetails:
                    - code: string
                      translation: string
                      value: 0
                      valueDate: string
            text/json:
              schema:
                $ref: '#/components/schemas/FlatConsumptionDTOPagedResponseModelDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  results:
                    - externalChannelIdentifier: string
                      startDateTime: string
                      endDateTime: string
                      value: 0
                  hasNextPage: true
                  nextPageToken: string
                  totalRecords: 0
                  sortableFields:
                    - string
                  aggregateDetails:
                    - code: string
                      translation: string
                      value: 0
                      valueDate: string
  '/Consumptions/{extchuuid}/recalculate':
    post:
      tags:
        - Consumptions
      summary: Recalculates consumption values for a specific channel within a given date range.
      description: Recalculates consumption values for a specific channel within a given date range.
      operationId: post-consumptions-extchuuid-recalculate
      parameters:
        - name: extchuuid
          in: path
          description: The external channel UUID to recalculate consumption data for.
          required: true
          schema:
            type: string
        - name: startDateTime
          in: query
          description: Format - date-time (as date-time in RFC3339). The start date and time for the consumption data range to recalculate.
          schema:
            type: string
            format: date-time
        - name: endDateTime
          in: query
          description: Format - date-time (as date-time in RFC3339). The end date and time for the consumption data range to recalculate.
          schema:
            type: string
            format: date-time
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/BooleanApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/BooleanApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data: true
            text/json:
              schema:
                $ref: '#/components/schemas/BooleanApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data: true
  /Integrations/import:
    get:
      tags:
        - Integrations
      summary: Gets a paged list of metering imports based on the specified filters.
      description: Gets a paged list of metering imports based on the specified filters.
      operationId: get-integrations-import
      parameters:
        - name: Status
          in: query
          schema:
            type: array
            items:
              type: string
        - name: CommunicationType
          in: query
          schema:
            type: string
        - name: MeteringFormat
          in: query
          schema:
            type: string
        - name: CreatedStartDateTime
          in: query
          description: Format - date-time (as date-time in RFC3339).
          schema:
            type: string
            format: date-time
            nullable: true
        - name: CreatedEndDateTime
          in: query
          description: Format - date-time (as date-time in RFC3339).
          schema:
            type: string
            format: date-time
            nullable: true
        - name: FlexSearch
          in: query
          schema:
            type: string
        - name: IncludeOnlyIds
          in: query
          schema:
            type: array
            items:
              type: string
        - name: ExcludeIds
          in: query
          schema:
            type: array
            items:
              type: string
        - name: Name
          in: query
          schema:
            type: string
        - name: Id
          in: query
          description: Format - int32.
          schema:
            type: integer
            format: int32
        - name: orderBy
          in: query
          description: Field to order the results by.
          schema:
            type: string
        - name: continuationToken
          in: header
          description: Token for pagination.
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/MeteringImportDTOPagedResponseModelDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/MeteringImportDTOPagedResponseModelDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  results:
                    - id: string
                      entityType: { }
                      createdDateTime: string
                      discriminator: string
                      _etag: string
                      requireAttention: true
                      hasErrors: true
                      hasWarnings: true
                      isReadOnly: true
                      organisationId: string
                      type: { }
                      customFileFormatId: string
                      dataImport:
                        id: string
                        name: string
                      dataFileFormatSettings:
                        name: string
                        delimiter: string
                        dateTimeFormat: string
                        timeZone: string
                        decimalSeparator: string
                        thousandsSeparator: string
                        culture: string
                        firstLineIsHeader: true
                      meteringFormat: { }
                      communicationType: { }
                      automaticallyProcess: true
                      status: { }
                      fileName: string
                      source: string
                      interpretationResult:
                        amountSuccess: 0
                        amountFailed: 0
                        amountIgnored: 0
                      validationResult:
                        amountSuccess: 0
                        amountFailed: 0
                        amountIgnored: 0
                      processingResult:
                        amountSuccess: 0
                        amountFailed: 0
                        amountIgnored: 0
                  hasNextPage: true
                  nextPageToken: string
                  totalRecords: 0
                  sortableFields:
                    - string
                  aggregateDetails:
                    - code: string
                      translation: string
                      value: 0
                      valueDate: string
            text/json:
              schema:
                $ref: '#/components/schemas/MeteringImportDTOPagedResponseModelDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  results:
                    - id: string
                      entityType: { }
                      createdDateTime: string
                      discriminator: string
                      _etag: string
                      requireAttention: true
                      hasErrors: true
                      hasWarnings: true
                      isReadOnly: true
                      organisationId: string
                      type: { }
                      customFileFormatId: string
                      dataImport:
                        id: string
                        name: string
                      dataFileFormatSettings:
                        name: string
                        delimiter: string
                        dateTimeFormat: string
                        timeZone: string
                        decimalSeparator: string
                        thousandsSeparator: string
                        culture: string
                        firstLineIsHeader: true
                      meteringFormat: { }
                      communicationType: { }
                      automaticallyProcess: true
                      status: { }
                      fileName: string
                      source: string
                      interpretationResult:
                        amountSuccess: 0
                        amountFailed: 0
                        amountIgnored: 0
                      validationResult:
                        amountSuccess: 0
                        amountFailed: 0
                        amountIgnored: 0
                      processingResult:
                        amountSuccess: 0
                        amountFailed: 0
                        amountIgnored: 0
                  hasNextPage: true
                  nextPageToken: string
                  totalRecords: 0
                  sortableFields:
                    - string
                  aggregateDetails:
                    - code: string
                      translation: string
                      value: 0
                      valueDate: string
    post:
      tags:
        - Integrations
      summary: Upload measurements for specific file formats.
      description: Upload measurements for specific file formats.
      operationId: post-integrations-import
      parameters:
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                file:
                  type: string
                  format: binary
                customFileFormatId:
                  type: string
                meteringFormat:
                  type: string
                source:
                  type: string
                automaticProcessing:
                  type: boolean
                  default: true
                communicationType:
                  type: string
      responses:
        '201':
          description: Created
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/MeteringImportDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/MeteringImportDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  type: { }
                  customFileFormatId: string
                  dataImport:
                    id: string
                    name: string
                  dataFileFormatSettings:
                    name: string
                    delimiter: string
                    dateTimeFormat: string
                    timeZone: string
                    decimalSeparator: string
                    thousandsSeparator: string
                    culture: string
                    firstLineIsHeader: true
                  meteringFormat: { }
                  communicationType: { }
                  automaticallyProcess: true
                  status: { }
                  fileName: string
                  source: string
                  interpretationResult:
                    amountSuccess: 0
                    amountFailed: 0
                    amountIgnored: 0
                  validationResult:
                    amountSuccess: 0
                    amountFailed: 0
                    amountIgnored: 0
                  processingResult:
                    amountSuccess: 0
                    amountFailed: 0
                    amountIgnored: 0
            text/json:
              schema:
                $ref: '#/components/schemas/MeteringImportDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  type: { }
                  customFileFormatId: string
                  dataImport:
                    id: string
                    name: string
                  dataFileFormatSettings:
                    name: string
                    delimiter: string
                    dateTimeFormat: string
                    timeZone: string
                    decimalSeparator: string
                    thousandsSeparator: string
                    culture: string
                    firstLineIsHeader: true
                  meteringFormat: { }
                  communicationType: { }
                  automaticallyProcess: true
                  status: { }
                  fileName: string
                  source: string
                  interpretationResult:
                    amountSuccess: 0
                    amountFailed: 0
                    amountIgnored: 0
                  validationResult:
                    amountSuccess: 0
                    amountFailed: 0
                    amountIgnored: 0
                  processingResult:
                    amountSuccess: 0
                    amountFailed: 0
                    amountIgnored: 0
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
    delete:
      tags:
        - Integrations
      summary: 'Deletes imports based on provided id''s. If there are too many id''s, deletes are done asynchronously'
      description: 'Deletes imports based on provided id''s. If there are too many id''s, deletes are done asynchronously'
      operationId: delete-integrations-import
      parameters:
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: Data containing unique identifiers of imports that need to be deleted
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BulkDeleteMeteringImportsRequest'
            example:
              onlyValidate: true
              queryParams:
                flexSearch: string
                includeOnlyIds:
                  - string
                excludeIds:
                  - string
                status:
                  - string
                communicationType: string
                meteringFormat: string
                createdStartDateTime: string
                createdEndDateTime: string
              quickFilter: string
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BulkDeleteMeteringImportsRequest'
            example:
              onlyValidate: true
              queryParams:
                flexSearch: string
                includeOnlyIds:
                  - string
                excludeIds:
                  - string
                status:
                  - string
                communicationType: string
                meteringFormat: string
                createdStartDateTime: string
                createdEndDateTime: string
              quickFilter: string
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BulkDeleteMeteringImportsRequest'
            example:
              onlyValidate: true
              queryParams:
                flexSearch: string
                includeOnlyIds:
                  - string
                excludeIds:
                  - string
                status:
                  - string
                communicationType: string
                meteringFormat: string
                createdStartDateTime: string
                createdEndDateTime: string
              quickFilter: string
      responses:
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: string
                title: string
                status: 0
                detail: string
                instance: string
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: string
                title: string
                status: 0
                detail: string
                instance: string
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
  /Integrations/import/overviewcount:
    get:
      tags:
        - Integrations
      summary: 'Gets count information for metering import overview, grouped by their status.'
      description: 'Gets count information for metering import overview, grouped by their status.'
      operationId: get-integrations-import-overviewcount
      parameters:
        - name: Status
          in: query
          schema:
            type: array
            items:
              type: string
        - name: CommunicationType
          in: query
          schema:
            type: string
        - name: MeteringFormat
          in: query
          schema:
            type: string
        - name: CreatedStartDateTime
          in: query
          description: Format - date-time (as date-time in RFC3339).
          schema:
            type: string
            format: date-time
            nullable: true
        - name: CreatedEndDateTime
          in: query
          description: Format - date-time (as date-time in RFC3339).
          schema:
            type: string
            format: date-time
            nullable: true
        - name: FlexSearch
          in: query
          schema:
            type: string
        - name: IncludeOnlyIds
          in: query
          schema:
            type: array
            items:
              type: string
        - name: ExcludeIds
          in: query
          schema:
            type: array
            items:
              type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/MeteringImportOverviewCountDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/MeteringImportOverviewCountDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  all: 0
                  toProcess: 0
                  processed: 0
                  formatIssues: 0
                  issues: 0
                  invalid: 0
            text/json:
              schema:
                $ref: '#/components/schemas/MeteringImportOverviewCountDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  all: 0
                  toProcess: 0
                  processed: 0
                  formatIssues: 0
                  issues: 0
                  invalid: 0
  '/Integrations/import/{uuid}':
    get:
      tags:
        - Integrations
      summary: "Fetch the details of a metering import to know the status of the metering import and to known how many\r\nvalues were successfully parsed, validated and processed."
      description: "Fetch the details of a metering import to know the status of the metering import and to known how many\r\nvalues were successfully parsed, validated and processed."
      operationId: get-integrations-import-uuid
      parameters:
        - name: uuid
          in: path
          description: The ID of the metering import.
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/MeteringImportDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/MeteringImportDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  type: { }
                  customFileFormatId: string
                  dataImport:
                    id: string
                    name: string
                  dataFileFormatSettings:
                    name: string
                    delimiter: string
                    dateTimeFormat: string
                    timeZone: string
                    decimalSeparator: string
                    thousandsSeparator: string
                    culture: string
                    firstLineIsHeader: true
                  meteringFormat: { }
                  communicationType: { }
                  automaticallyProcess: true
                  status: { }
                  fileName: string
                  source: string
                  interpretationResult:
                    amountSuccess: 0
                    amountFailed: 0
                    amountIgnored: 0
                  validationResult:
                    amountSuccess: 0
                    amountFailed: 0
                    amountIgnored: 0
                  processingResult:
                    amountSuccess: 0
                    amountFailed: 0
                    amountIgnored: 0
            text/json:
              schema:
                $ref: '#/components/schemas/MeteringImportDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  type: { }
                  customFileFormatId: string
                  dataImport:
                    id: string
                    name: string
                  dataFileFormatSettings:
                    name: string
                    delimiter: string
                    dateTimeFormat: string
                    timeZone: string
                    decimalSeparator: string
                    thousandsSeparator: string
                    culture: string
                    firstLineIsHeader: true
                  meteringFormat: { }
                  communicationType: { }
                  automaticallyProcess: true
                  status: { }
                  fileName: string
                  source: string
                  interpretationResult:
                    amountSuccess: 0
                    amountFailed: 0
                    amountIgnored: 0
                  validationResult:
                    amountSuccess: 0
                    amountFailed: 0
                    amountIgnored: 0
                  processingResult:
                    amountSuccess: 0
                    amountFailed: 0
                    amountIgnored: 0
  '/Integrations/import/{meteringImportId}/issues/interpretation':
    get:
      tags:
        - Integrations
      summary: Get an overview of issues that were detected during the interpretation of a metering import.
      description: Get an overview of issues that were detected during the interpretation of a metering import.
      operationId: get-integrations-import-meteringimportid-issues-interpretation
      parameters:
        - name: meteringImportId
          in: path
          description: The ID of the metering import.
          required: true
          schema:
            type: string
        - name: ErrorCodes
          in: query
          schema:
            type: array
            items:
              type: string
        - name: FlexSearch
          in: query
          schema:
            type: string
        - name: IncludeOnlyIds
          in: query
          schema:
            type: array
            items:
              type: string
        - name: ExcludeIds
          in: query
          schema:
            type: array
            items:
              type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/MeteringImportInterpretationResultDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/MeteringImportInterpretationResultDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  issues:
                    - errorCode:
                        key: { }
                        correlationId: string
                        message: string
                        messageValues:
                          - dataType: { }
                            value: string
                            capitalize: true
                      errorCodeInfo:
                        key: { }
                        correlationId: string
                        message: string
                        messageValues:
                          - dataType: { }
                            value: string
                            capitalize: true
                      lineNumber: 0
                      message: string
            text/json:
              schema:
                $ref: '#/components/schemas/MeteringImportInterpretationResultDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  issues:
                    - errorCode:
                        key: { }
                        correlationId: string
                        message: string
                        messageValues:
                          - dataType: { }
                            value: string
                            capitalize: true
                      errorCodeInfo:
                        key: { }
                        correlationId: string
                        message: string
                        messageValues:
                          - dataType: { }
                            value: string
                            capitalize: true
                      lineNumber: 0
                      message: string
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
  '/Integrations/import/{meteringImportId}/measurements':
    get:
      tags:
        - Integrations
      summary: Get an overview of all the measurements for a metering import with their possible validation or processing issues.
      description: Get an overview of all the measurements for a metering import with their possible validation or processing issues.
      operationId: get-integrations-import-meteringimportid-measurements
      parameters:
        - name: meteringImportId
          in: path
          description: The ID of the metering import.
          required: true
          schema:
            type: string
        - name: Meter
          in: query
          schema:
            type: string
        - name: ErrorCodes
          in: query
          schema:
            type: array
            items:
              type: string
        - name: FlexSearch
          in: query
          schema:
            type: string
        - name: IncludeOnlyIds
          in: query
          schema:
            type: array
            items:
              type: string
        - name: ExcludeIds
          in: query
          schema:
            type: array
            items:
              type: string
        - name: Name
          in: query
          schema:
            type: string
        - name: Id
          in: query
          description: Format - int32.
          schema:
            type: integer
            format: int32
        - name: orderBy
          in: query
          description: Order the measurements from the metering import by the available options from Enumerations.QuickFilters.MeteringImportMeasurementsOrderBy
          schema:
            type: string
        - name: continuationToken
          in: header
          description: Token which allows you to fetch the next records. The continuation token is returned in the response and can be reused in the next request to fetch additional data.
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ImportedMeasurementsOverviewDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ImportedMeasurementsOverviewDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  measurements:
                    results:
                      - meterSerialNumber: string
                        externalChannelIdentifier: string
                        externalReference: string
                        meteringType: { }
                        utilityType: { }
                        direction: { }
                        unitOfMeasure: { }
                        readingDateTime: string
                        timeOfUse: string
                        readingValue: 0
                        errorCode: string
                        lineNumber: 0
                        processedOn: string
                        wasIgnored: true
                    hasNextPage: true
                    nextPageToken: string
                    totalRecords: 0
                    sortableFields:
                      - string
                    aggregateDetails:
                      - code: string
                        translation: string
                        value: 0
                        valueDate: string
                  totalInvalidMeasurements: 0
                  totalValidMeasurements: 0
                  totalMeasurementsNotProcessed: 0
                  totalMeasurementsProcessed: 0
                  totalLinesWithFormatIssues: 0
            text/json:
              schema:
                $ref: '#/components/schemas/ImportedMeasurementsOverviewDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  measurements:
                    results:
                      - meterSerialNumber: string
                        externalChannelIdentifier: string
                        externalReference: string
                        meteringType: { }
                        utilityType: { }
                        direction: { }
                        unitOfMeasure: { }
                        readingDateTime: string
                        timeOfUse: string
                        readingValue: 0
                        errorCode: string
                        lineNumber: 0
                        processedOn: string
                        wasIgnored: true
                    hasNextPage: true
                    nextPageToken: string
                    totalRecords: 0
                    sortableFields:
                      - string
                    aggregateDetails:
                      - code: string
                        translation: string
                        value: 0
                        valueDate: string
                  totalInvalidMeasurements: 0
                  totalValidMeasurements: 0
                  totalMeasurementsNotProcessed: 0
                  totalMeasurementsProcessed: 0
                  totalLinesWithFormatIssues: 0
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
  /Integrations/import/measurements:
    post:
      tags:
        - Integrations
      summary: Upload measurements for a collection of different meters.
      description: Upload measurements for a collection of different meters.
      operationId: post-integrations-import-measurements
      parameters:
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: The data containing the necessary information to import the measurements.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/UploadMeasurementsRequest'
              description: Request data to upload measurements for specific meters.
            example:
              automaticProcessing: true
              source: string
              uploadIdentifier: string
              channelMeasurements:
                - utilityType: { }
                  unitOfMeasure: { }
                  meteringType: { }
                  direction: { }
                  meterSerialNumber: string
                  externalChannelIdentifier: string
                  measurements:
                    - readingDateTime: string
                      value: 0
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/UploadMeasurementsRequest'
              description: Request data to upload measurements for specific meters.
            example:
              automaticProcessing: true
              source: string
              uploadIdentifier: string
              channelMeasurements:
                - utilityType: { }
                  unitOfMeasure: { }
                  meteringType: { }
                  direction: { }
                  meterSerialNumber: string
                  externalChannelIdentifier: string
                  measurements:
                    - readingDateTime: string
                      value: 0
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/UploadMeasurementsRequest'
              description: Request data to upload measurements for specific meters.
            example:
              automaticProcessing: true
              source: string
              uploadIdentifier: string
              channelMeasurements:
                - utilityType: { }
                  unitOfMeasure: { }
                  meteringType: { }
                  direction: { }
                  meterSerialNumber: string
                  externalChannelIdentifier: string
                  measurements:
                    - readingDateTime: string
                      value: 0
      responses:
        '201':
          description: Created
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/MeteringImportDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/MeteringImportDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  type: { }
                  customFileFormatId: string
                  dataImport:
                    id: string
                    name: string
                  dataFileFormatSettings:
                    name: string
                    delimiter: string
                    dateTimeFormat: string
                    timeZone: string
                    decimalSeparator: string
                    thousandsSeparator: string
                    culture: string
                    firstLineIsHeader: true
                  meteringFormat: { }
                  communicationType: { }
                  automaticallyProcess: true
                  status: { }
                  fileName: string
                  source: string
                  interpretationResult:
                    amountSuccess: 0
                    amountFailed: 0
                    amountIgnored: 0
                  validationResult:
                    amountSuccess: 0
                    amountFailed: 0
                    amountIgnored: 0
                  processingResult:
                    amountSuccess: 0
                    amountFailed: 0
                    amountIgnored: 0
            text/json:
              schema:
                $ref: '#/components/schemas/MeteringImportDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  type: { }
                  customFileFormatId: string
                  dataImport:
                    id: string
                    name: string
                  dataFileFormatSettings:
                    name: string
                    delimiter: string
                    dateTimeFormat: string
                    timeZone: string
                    decimalSeparator: string
                    thousandsSeparator: string
                    culture: string
                    firstLineIsHeader: true
                  meteringFormat: { }
                  communicationType: { }
                  automaticallyProcess: true
                  status: { }
                  fileName: string
                  source: string
                  interpretationResult:
                    amountSuccess: 0
                    amountFailed: 0
                    amountIgnored: 0
                  validationResult:
                    amountSuccess: 0
                    amountFailed: 0
                    amountIgnored: 0
                  processingResult:
                    amountSuccess: 0
                    amountFailed: 0
                    amountIgnored: 0
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
  /Integrations/import/processall:
    post:
      tags:
        - Integrations
      summary: Processes all imports that have status 'To process' and 'Processed with issues'
      description: Processes all imports that have status 'To process' and 'Processed with issues'
      operationId: post-integrations-import-processall
      parameters:
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/BooleanApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/BooleanApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data: true
            text/json:
              schema:
                $ref: '#/components/schemas/BooleanApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data: true
  '/Integrations/import/process/{meteringImportId}':
    post:
      tags:
        - Integrations
      summary: "Processes the import if it has the status 'Validation failed', 'To process', or 'Processed with issues'.\r\nBefore processing valid measurements, it revalidates any current invalid measurements.\r\n            \r\nFor example, if a meter or channel did not exist when the import was created but has since b"
      description: "Processes the import if it has the status 'Validation failed', 'To process', or 'Processed with issues'.\r\nBefore processing valid measurements, it revalidates any current invalid measurements.\r\n            \r\nFor example, if a meter or channel did not exist when the import was created but has since been added,\r\nthe new measurements will be processed as well."
      operationId: post-integrations-import-process-meteringimportid
      parameters:
        - name: meteringImportId
          in: path
          description: Unique identifier of the import
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
  /Integrations/import/process:
    post:
      tags:
        - Integrations
      summary: "Processes all selected imports if they have the status 'Validation failed', 'To process', or 'Processed with issues'.\r\nBefore processing valid measurements, it revalidates any current invalid measurements.\r\n            \r\nFor example, if a meter or channel did not exist when the import was created bu"
      description: "Processes all selected imports if they have the status 'Validation failed', 'To process', or 'Processed with issues'.\r\nBefore processing valid measurements, it revalidates any current invalid measurements.\r\n            \r\nFor example, if a meter or channel did not exist when the import was created but has since been added,\r\nthe new measurements will be processed as well."
      operationId: post-integrations-import-process
      parameters:
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BulkProcessMeteringImportRequest'
            example:
              onlyValidate: true
              queryParams:
                flexSearch: string
                includeOnlyIds:
                  - string
                excludeIds:
                  - string
                status:
                  - string
                communicationType: string
                meteringFormat: string
                createdStartDateTime: string
                createdEndDateTime: string
              quickFilter: string
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BulkProcessMeteringImportRequest'
            example:
              onlyValidate: true
              queryParams:
                flexSearch: string
                includeOnlyIds:
                  - string
                excludeIds:
                  - string
                status:
                  - string
                communicationType: string
                meteringFormat: string
                createdStartDateTime: string
                createdEndDateTime: string
              quickFilter: string
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BulkProcessMeteringImportRequest'
            example:
              onlyValidate: true
              queryParams:
                flexSearch: string
                includeOnlyIds:
                  - string
                excludeIds:
                  - string
                status:
                  - string
                communicationType: string
                meteringFormat: string
                createdStartDateTime: string
                createdEndDateTime: string
              quickFilter: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
  /Integrations/import/download:
    post:
      tags:
        - Integrations
      summary: Downloads the original files for all imports that are requested
      description: Downloads the original files for all imports that are requested
      operationId: post-integrations-import-download
      parameters:
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: Data containing id's of the imports for which you want to download the original files
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/DownloadOriginalMeteringImportsRequest'
              description: Represents a request to download the original metering imports.
            example:
              queryParams:
                flexSearch: string
                includeOnlyIds:
                  - string
                excludeIds:
                  - string
                status:
                  - string
                communicationType: string
                meteringFormat: string
                createdStartDateTime: string
                createdEndDateTime: string
              quickFilter: string
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/DownloadOriginalMeteringImportsRequest'
              description: Represents a request to download the original metering imports.
            example:
              queryParams:
                flexSearch: string
                includeOnlyIds:
                  - string
                excludeIds:
                  - string
                status:
                  - string
                communicationType: string
                meteringFormat: string
                createdStartDateTime: string
                createdEndDateTime: string
              quickFilter: string
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/DownloadOriginalMeteringImportsRequest'
              description: Represents a request to download the original metering imports.
            example:
              queryParams:
                flexSearch: string
                includeOnlyIds:
                  - string
                excludeIds:
                  - string
                status:
                  - string
                communicationType: string
                meteringFormat: string
                createdStartDateTime: string
                createdEndDateTime: string
              quickFilter: string
      responses:
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: string
                title: string
                status: 0
                detail: string
                instance: string
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: string
                title: string
                status: 0
                detail: string
                instance: string
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: string
                format: binary
              examples:
                default:
                  value: 
            application/json:
              schema:
                type: string
                format: binary
              example: string
            text/json:
              schema:
                type: string
                format: binary
              example: string
  '/Integrations/import/{meteringImportId}':
    delete:
      tags:
        - Integrations
      summary: Delete an existing import by it's identifier
      description: Delete an existing import by it's identifier
      operationId: delete-integrations-import-meteringimportid
      parameters:
        - name: meteringImportId
          in: path
          description: Unique identifier of the import
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: string
                title: string
                status: 0
                detail: string
                instance: string
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: string
                title: string
                status: 0
                detail: string
                instance: string
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
  /Integrations/import/markprocessed:
    patch:
      tags:
        - Integrations
      summary: 'Marks requested imports as processed, if the current status of the import allows it'
      description: 'Marks requested imports as processed, if the current status of the import allows it'
      operationId: patch-integrations-import-markprocessed
      parameters:
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: Data containing unique identifiers of imports that should be marked as processed
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BulkMarkMeteringImportsAsProcessedRequest'
            example:
              onlyValidate: true
              queryParams:
                flexSearch: string
                includeOnlyIds:
                  - string
                excludeIds:
                  - string
                status:
                  - string
                communicationType: string
                meteringFormat: string
                createdStartDateTime: string
                createdEndDateTime: string
              quickFilter: string
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BulkMarkMeteringImportsAsProcessedRequest'
            example:
              onlyValidate: true
              queryParams:
                flexSearch: string
                includeOnlyIds:
                  - string
                excludeIds:
                  - string
                status:
                  - string
                communicationType: string
                meteringFormat: string
                createdStartDateTime: string
                createdEndDateTime: string
              quickFilter: string
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BulkMarkMeteringImportsAsProcessedRequest'
            example:
              onlyValidate: true
              queryParams:
                flexSearch: string
                includeOnlyIds:
                  - string
                excludeIds:
                  - string
                status:
                  - string
                communicationType: string
                meteringFormat: string
                createdStartDateTime: string
                createdEndDateTime: string
              quickFilter: string
      responses:
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: string
                title: string
                status: 0
                detail: string
                instance: string
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: string
                title: string
                status: 0
                detail: string
                instance: string
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
  '/Integrations/import/validate/{meteringImportId}':
    patch:
      tags:
        - Integrations
      summary: Attempts to revalidate a specified import
      description: Attempts to revalidate a specified import
      operationId: patch-integrations-import-validate-meteringimportid
      parameters:
        - name: meteringImportId
          in: path
          description: Unique identifier of the import
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: string
                title: string
                status: 0
                detail: string
                instance: string
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: string
                title: string
                status: 0
                detail: string
                instance: string
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
  '/Measurements/{extchuuid}':
    get:
      tags:
        - Measurements
      summary: Gets measurement values for a specific external channel identifier within a date range.
      description: Gets measurement values for a specific external channel identifier within a date range.
      operationId: get-measurements-extchuuid
      parameters:
        - name: extchuuid
          in: path
          description: The external channel identifier.
          required: true
          schema:
            type: string
        - name: startDateTime
          in: query
          description: Format - date-time (as date-time in RFC3339). The start date and time for the query range.
          schema:
            type: string
            format: date-time
        - name: endDateTime
          in: query
          description: Format - date-time (as date-time in RFC3339). The end date and time for the query range.
          schema:
            type: string
            format: date-time
        - name: orderBy
          in: query
          description: Field to order the results by.
          schema:
            type: string
        - name: continuationToken
          in: header
          description: Token for pagination.
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/MeasurementDTOPagedResponseModelDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/MeasurementDTOPagedResponseModelDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  results:
                    - id: string
                      entityType: { }
                      createdDateTime: string
                      discriminator: string
                      _etag: string
                      requireAttention: true
                      hasErrors: true
                      hasWarnings: true
                      isReadOnly: true
                      organisationId: string
                      externalChannelIdentifier: string
                      meterSerialNumber: string
                      operationId: string
                      value: 0
                      endDateTime: string
                      deleted: true
                      dataFrequency: { }
                      incrementationType: { }
                      meteringType: { }
                      utilityType: { }
                      direction: { }
                      unitOfMeasure: { }
                      timeOfUse: string
                      issue:
                        meteringIssueId: string
                        error: { }
                        status: { }
                        noticedDateTime: string
                      hasIssue: true
                  hasNextPage: true
                  nextPageToken: string
                  totalRecords: 0
                  sortableFields:
                    - string
                  aggregateDetails:
                    - code: string
                      translation: string
                      value: 0
                      valueDate: string
            text/json:
              schema:
                $ref: '#/components/schemas/MeasurementDTOPagedResponseModelDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  results:
                    - id: string
                      entityType: { }
                      createdDateTime: string
                      discriminator: string
                      _etag: string
                      requireAttention: true
                      hasErrors: true
                      hasWarnings: true
                      isReadOnly: true
                      organisationId: string
                      externalChannelIdentifier: string
                      meterSerialNumber: string
                      operationId: string
                      value: 0
                      endDateTime: string
                      deleted: true
                      dataFrequency: { }
                      incrementationType: { }
                      meteringType: { }
                      utilityType: { }
                      direction: { }
                      unitOfMeasure: { }
                      timeOfUse: string
                      issue:
                        meteringIssueId: string
                        error: { }
                        status: { }
                        noticedDateTime: string
                      hasIssue: true
                  hasNextPage: true
                  nextPageToken: string
                  totalRecords: 0
                  sortableFields:
                    - string
                  aggregateDetails:
                    - code: string
                      translation: string
                      value: 0
                      valueDate: string
  /Measurements/export/values:
    post:
      tags:
        - Measurements
      summary: Exports measurement values for a list of meters within a date range.
      description: Exports measurement values for a list of meters within a date range.
      operationId: post-measurements-export-values
      parameters:
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: The request containing meter IDs and date range for export.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ExportMeasurementsRequest'
            example:
              meterIds:
                - string
              startDateTime: string
              endDateTime: string
              orderBy: string
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ExportMeasurementsRequest'
            example:
              meterIds:
                - string
              startDateTime: string
              endDateTime: string
              orderBy: string
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ExportMeasurementsRequest'
            example:
              meterIds:
                - string
              startDateTime: string
              endDateTime: string
              orderBy: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ExportMeasurementDTOListApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ExportMeasurementDTOListApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  - id: string
                    externalChannelIdentifier: string
                    meterSerialNumber: string
                    meterTag: string
                    operationId: string
                    value: 0
                    endDateTime: string
                    deleted: true
                    dataFrequency: { }
                    incrementationType: { }
                    meteringType: { }
                    utilityType: { }
                    direction: { }
                    unitOfMeasure: { }
                    timeOfUse: string
                    propertyGroupName: string
                    propertyGroupId: string
            text/json:
              schema:
                $ref: '#/components/schemas/ExportMeasurementDTOListApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  - id: string
                    externalChannelIdentifier: string
                    meterSerialNumber: string
                    meterTag: string
                    operationId: string
                    value: 0
                    endDateTime: string
                    deleted: true
                    dataFrequency: { }
                    incrementationType: { }
                    meteringType: { }
                    utilityType: { }
                    direction: { }
                    unitOfMeasure: { }
                    timeOfUse: string
                    propertyGroupName: string
                    propertyGroupId: string
  '/Measurements/m/{meteruuid}':
    get:
      tags:
        - Measurements
      summary: Gets adjacent measurement pairs for a meter at a specific measurement date.
      description: Gets adjacent measurement pairs for a meter at a specific measurement date.
      operationId: get-measurements-m-meteruuid
      parameters:
        - name: meteruuid
          in: path
          description: The meter identifier.
          required: true
          schema:
            type: string
        - name: measurementDate
          in: query
          description: Format - date-time (as date-time in RFC3339). The reference measurement date.
          schema:
            type: string
            format: date-time
        - name: limit
          in: query
          description: Format - int32. The maximum number of pairs to return (defaults to 1).
          schema:
            type: integer
            format: int32
            nullable: true
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AdjacentMeasurementPairsDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/AdjacentMeasurementPairsDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  pairs:
                    - externalChannelId: string
                      startDateTime: string
                      endDateTime: string
                      previousMeasurements:
                        - id: string
                          entityType: { }
                          createdDateTime: string
                          discriminator: string
                          _etag: string
                          requireAttention: true
                          hasErrors: true
                          hasWarnings: true
                          isReadOnly: true
                          organisationId: string
                          externalChannelIdentifier: string
                          meterSerialNumber: string
                          operationId: string
                          value: 0
                          endDateTime: string
                          deleted: true
                          dataFrequency: { }
                          incrementationType: { }
                          meteringType: { }
                          utilityType: { }
                          direction: { }
                          unitOfMeasure: { }
                          timeOfUse: string
                          issue:
                            meteringIssueId: string
                            error: { }
                            status: { }
                            noticedDateTime: string
                          hasIssue: true
                      nextMeasurements:
                        - id: string
                          entityType: { }
                          createdDateTime: string
                          discriminator: string
                          _etag: string
                          requireAttention: true
                          hasErrors: true
                          hasWarnings: true
                          isReadOnly: true
                          organisationId: string
                          externalChannelIdentifier: string
                          meterSerialNumber: string
                          operationId: string
                          value: 0
                          endDateTime: string
                          deleted: true
                          dataFrequency: { }
                          incrementationType: { }
                          meteringType: { }
                          utilityType: { }
                          direction: { }
                          unitOfMeasure: { }
                          timeOfUse: string
                          issue:
                            meteringIssueId: string
                            error: { }
                            status: { }
                            noticedDateTime: string
                          hasIssue: true
                      previousMeasurement:
                        id: string
                        entityType: { }
                        createdDateTime: string
                        discriminator: string
                        _etag: string
                        requireAttention: true
                        hasErrors: true
                        hasWarnings: true
                        isReadOnly: true
                        organisationId: string
                        externalChannelIdentifier: string
                        meterSerialNumber: string
                        operationId: string
                        value: 0
                        endDateTime: string
                        deleted: true
                        dataFrequency: { }
                        incrementationType: { }
                        meteringType: { }
                        utilityType: { }
                        direction: { }
                        unitOfMeasure: { }
                        timeOfUse: string
                        issue:
                          meteringIssueId: string
                          error: { }
                          status: { }
                          noticedDateTime: string
                        hasIssue: true
                      nextMeasurement:
                        id: string
                        entityType: { }
                        createdDateTime: string
                        discriminator: string
                        _etag: string
                        requireAttention: true
                        hasErrors: true
                        hasWarnings: true
                        isReadOnly: true
                        organisationId: string
                        externalChannelIdentifier: string
                        meterSerialNumber: string
                        operationId: string
                        value: 0
                        endDateTime: string
                        deleted: true
                        dataFrequency: { }
                        incrementationType: { }
                        meteringType: { }
                        utilityType: { }
                        direction: { }
                        unitOfMeasure: { }
                        timeOfUse: string
                        issue:
                          meteringIssueId: string
                          error: { }
                          status: { }
                          noticedDateTime: string
                        hasIssue: true
            text/json:
              schema:
                $ref: '#/components/schemas/AdjacentMeasurementPairsDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  pairs:
                    - externalChannelId: string
                      startDateTime: string
                      endDateTime: string
                      previousMeasurements:
                        - id: string
                          entityType: { }
                          createdDateTime: string
                          discriminator: string
                          _etag: string
                          requireAttention: true
                          hasErrors: true
                          hasWarnings: true
                          isReadOnly: true
                          organisationId: string
                          externalChannelIdentifier: string
                          meterSerialNumber: string
                          operationId: string
                          value: 0
                          endDateTime: string
                          deleted: true
                          dataFrequency: { }
                          incrementationType: { }
                          meteringType: { }
                          utilityType: { }
                          direction: { }
                          unitOfMeasure: { }
                          timeOfUse: string
                          issue:
                            meteringIssueId: string
                            error: { }
                            status: { }
                            noticedDateTime: string
                          hasIssue: true
                      nextMeasurements:
                        - id: string
                          entityType: { }
                          createdDateTime: string
                          discriminator: string
                          _etag: string
                          requireAttention: true
                          hasErrors: true
                          hasWarnings: true
                          isReadOnly: true
                          organisationId: string
                          externalChannelIdentifier: string
                          meterSerialNumber: string
                          operationId: string
                          value: 0
                          endDateTime: string
                          deleted: true
                          dataFrequency: { }
                          incrementationType: { }
                          meteringType: { }
                          utilityType: { }
                          direction: { }
                          unitOfMeasure: { }
                          timeOfUse: string
                          issue:
                            meteringIssueId: string
                            error: { }
                            status: { }
                            noticedDateTime: string
                          hasIssue: true
                      previousMeasurement:
                        id: string
                        entityType: { }
                        createdDateTime: string
                        discriminator: string
                        _etag: string
                        requireAttention: true
                        hasErrors: true
                        hasWarnings: true
                        isReadOnly: true
                        organisationId: string
                        externalChannelIdentifier: string
                        meterSerialNumber: string
                        operationId: string
                        value: 0
                        endDateTime: string
                        deleted: true
                        dataFrequency: { }
                        incrementationType: { }
                        meteringType: { }
                        utilityType: { }
                        direction: { }
                        unitOfMeasure: { }
                        timeOfUse: string
                        issue:
                          meteringIssueId: string
                          error: { }
                          status: { }
                          noticedDateTime: string
                        hasIssue: true
                      nextMeasurement:
                        id: string
                        entityType: { }
                        createdDateTime: string
                        discriminator: string
                        _etag: string
                        requireAttention: true
                        hasErrors: true
                        hasWarnings: true
                        isReadOnly: true
                        organisationId: string
                        externalChannelIdentifier: string
                        meterSerialNumber: string
                        operationId: string
                        value: 0
                        endDateTime: string
                        deleted: true
                        dataFrequency: { }
                        incrementationType: { }
                        meteringType: { }
                        utilityType: { }
                        direction: { }
                        unitOfMeasure: { }
                        timeOfUse: string
                        issue:
                          meteringIssueId: string
                          error: { }
                          status: { }
                          noticedDateTime: string
                        hasIssue: true
  '/Measurements/{extchuuid}/delete/{measurementId}':
    delete:
      tags:
        - Measurements
      summary: Deletes a specific measurement from an external channel.
      description: Deletes a specific measurement from an external channel.
      operationId: delete-measurements-extchuuid-delete-measurementid
      parameters:
        - name: extchuuid
          in: path
          description: The external channel identifier.
          required: true
          schema:
            type: string
        - name: measurementId
          in: path
          description: The ID of the measurement to delete.
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/BooleanApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/BooleanApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data: true
            text/json:
              schema:
                $ref: '#/components/schemas/BooleanApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data: true
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
  /Measurements/bulk/delete:
    post:
      tags:
        - Measurements
      summary: Bulk deletes measurements based on specified criteria.
      description: Bulk deletes measurements based on specified criteria.
      operationId: post-measurements-bulk-delete
      parameters:
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: The request containing criteria for measurements to delete.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BulkDeleteMeasurementRequest'
            example:
              onlyValidate: true
              queryParams:
                flexSearch: string
                includeOnlyIds:
                  - string
                excludeIds:
                  - string
                externalChannelIdentifier: string
                startDateTime: string
                endDateTime: string
                showInvalid: true
                dataFrequency: { }
              quickFilter: string
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BulkDeleteMeasurementRequest'
            example:
              onlyValidate: true
              queryParams:
                flexSearch: string
                includeOnlyIds:
                  - string
                excludeIds:
                  - string
                externalChannelIdentifier: string
                startDateTime: string
                endDateTime: string
                showInvalid: true
                dataFrequency: { }
              quickFilter: string
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BulkDeleteMeasurementRequest'
            example:
              onlyValidate: true
              queryParams:
                flexSearch: string
                includeOnlyIds:
                  - string
                excludeIds:
                  - string
                externalChannelIdentifier: string
                startDateTime: string
                endDateTime: string
                showInvalid: true
                dataFrequency: { }
              quickFilter: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/BooleanApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/BooleanApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data: true
            text/json:
              schema:
                $ref: '#/components/schemas/BooleanApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data: true
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
  /Measurements/validate:
    post:
      tags:
        - Measurements
      summary: Validates measurements against business rules without persisting them.
      description: Validates measurements against business rules without persisting them.
      operationId: post-measurements-validate
      parameters:
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: The request containing measurements to validate.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ValidateMeasurementRequest'
            example:
              endDateTime: string
              value: 0
              meterId: string
              externalChannelId: string
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ValidateMeasurementRequest'
            example:
              endDateTime: string
              value: 0
              meterId: string
              externalChannelId: string
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ValidateMeasurementRequest'
            example:
              endDateTime: string
              value: 0
              meterId: string
              externalChannelId: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidateMeasurementDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateMeasurementDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  error: { }
                  isValid: true
                  isErrorMuted: true
            text/json:
              schema:
                $ref: '#/components/schemas/ValidateMeasurementDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  error: { }
                  isValid: true
                  isErrorMuted: true
  '/Measurements/{extchuuid}/flat':
    get:
      tags:
        - Measurements
      summary: Gets flat (non-paged) measurement values for a specific external channel within a date range.
      description: Gets flat (non-paged) measurement values for a specific external channel within a date range.
      operationId: get-measurements-extchuuid-flat
      parameters:
        - name: extchuuid
          in: path
          description: The external channel identifier.
          required: true
          schema:
            type: string
        - name: startDateTime
          in: query
          description: Format - date-time (as date-time in RFC3339). The start date and time for the query range.
          schema:
            type: string
            format: date-time
        - name: endDateTime
          in: query
          description: Format - date-time (as date-time in RFC3339). The end date and time for the query range.
          schema:
            type: string
            format: date-time
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/FlatMeasurementDTOListApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/FlatMeasurementDTOListApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  - externalChannelIdentifier: string
                    endDateTime: string
                    value: 0
            text/json:
              schema:
                $ref: '#/components/schemas/FlatMeasurementDTOListApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  - externalChannelIdentifier: string
                    endDateTime: string
                    value: 0
  /Measurements:
    post:
      tags:
        - Measurements
      summary: Adds a new measurement for an external channel.
      description: Adds a new measurement for an external channel.
      operationId: post-measurements
      parameters:
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: The request containing measurement data to add.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/AddMeasurementRequest'
            example:
              endDateTime: string
              value: 0
              externalChannelIdentifier: string
              meterId: string
              skipValidation: true
              resolveIssuesManually: true
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/AddMeasurementRequest'
            example:
              endDateTime: string
              value: 0
              externalChannelIdentifier: string
              meterId: string
              skipValidation: true
              resolveIssuesManually: true
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/AddMeasurementRequest'
            example:
              endDateTime: string
              value: 0
              externalChannelIdentifier: string
              meterId: string
              skipValidation: true
              resolveIssuesManually: true
      responses:
        '201':
          description: Created
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/MeasurementDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/MeasurementDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  externalChannelIdentifier: string
                  meterSerialNumber: string
                  operationId: string
                  value: 0
                  endDateTime: string
                  deleted: true
                  dataFrequency: { }
                  incrementationType: { }
                  meteringType: { }
                  utilityType: { }
                  direction: { }
                  unitOfMeasure: { }
                  timeOfUse: string
                  issue:
                    meteringIssueId: string
                    error: { }
                    status: { }
                    noticedDateTime: string
                  hasIssue: true
            text/json:
              schema:
                $ref: '#/components/schemas/MeasurementDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  externalChannelIdentifier: string
                  meterSerialNumber: string
                  operationId: string
                  value: 0
                  endDateTime: string
                  deleted: true
                  dataFrequency: { }
                  incrementationType: { }
                  meteringType: { }
                  utilityType: { }
                  direction: { }
                  unitOfMeasure: { }
                  timeOfUse: string
                  issue:
                    meteringIssueId: string
                    error: { }
                    status: { }
                    noticedDateTime: string
                  hasIssue: true
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
  /MeteringIssues:
    get:
      tags:
        - MeteringIssues
      summary: Retrieves a paged list of metering issues based on specified filter criteria.
      description: Retrieves a paged list of metering issues based on specified filter criteria.
      operationId: get-meteringissues
      parameters:
        - name: MeterIds
          in: query
          schema:
            type: array
            items:
              type: string
        - name: NoticedStartDateTime
          in: query
          description: Format - date-time (as date-time in RFC3339).
          schema:
            type: string
            format: date-time
            nullable: true
        - name: NoticedEndDateTime
          in: query
          description: Format - date-time (as date-time in RFC3339).
          schema:
            type: string
            format: date-time
            nullable: true
        - name: Statuses
          in: query
          schema:
            type: array
            items:
              type: string
        - name: PropertyGroupIds
          in: query
          schema:
            type: array
            items:
              type: string
        - name: MeterModelIds
          in: query
          schema:
            type: array
            items:
              type: string
        - name: Errors
          in: query
          schema:
            type: array
            items:
              $ref: '#/components/schemas/MeteringIssueError'
        - name: FlexSearch
          in: query
          schema:
            type: string
        - name: IncludeOnlyIds
          in: query
          schema:
            type: array
            items:
              type: string
        - name: ExcludeIds
          in: query
          schema:
            type: array
            items:
              type: string
        - name: limit
          in: query
          description: Format - int32. Maximum number of items to return.
          schema:
            type: integer
            format: int32
            nullable: true
        - name: Name
          in: query
          schema:
            type: string
        - name: Id
          in: query
          description: Format - int32.
          schema:
            type: integer
            format: int32
        - name: orderBy
          in: query
          description: Property name to order results by.
          schema:
            type: string
        - name: continuationToken
          in: header
          description: Token for pagination.
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/MeteringIssueDTOPagedResponseModelDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/MeteringIssueDTOPagedResponseModelDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  results:
                    - id: string
                      entityType: { }
                      createdDateTime: string
                      discriminator: string
                      _etag: string
                      requireAttention: true
                      hasErrors: true
                      hasWarnings: true
                      isReadOnly: true
                      meter:
                        meterId: string
                        serialNumber: string
                      propertyGroup:
                        id: string
                        name: string
                      meterModelId: string
                      noticedDateTime: string
                      error: { }
                      status: { }
                      details: { }
                      resolution:
                        resolvedDateTime: string
                        type: { }
                        details:
                          resolvedByUserId: string
                          newValue: 0
                  hasNextPage: true
                  nextPageToken: string
                  totalRecords: 0
                  sortableFields:
                    - string
                  aggregateDetails:
                    - code: string
                      translation: string
                      value: 0
                      valueDate: string
            text/json:
              schema:
                $ref: '#/components/schemas/MeteringIssueDTOPagedResponseModelDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  results:
                    - id: string
                      entityType: { }
                      createdDateTime: string
                      discriminator: string
                      _etag: string
                      requireAttention: true
                      hasErrors: true
                      hasWarnings: true
                      isReadOnly: true
                      meter:
                        meterId: string
                        serialNumber: string
                      propertyGroup:
                        id: string
                        name: string
                      meterModelId: string
                      noticedDateTime: string
                      error: { }
                      status: { }
                      details: { }
                      resolution:
                        resolvedDateTime: string
                        type: { }
                        details:
                          resolvedByUserId: string
                          newValue: 0
                  hasNextPage: true
                  nextPageToken: string
                  totalRecords: 0
                  sortableFields:
                    - string
                  aggregateDetails:
                    - code: string
                      translation: string
                      value: 0
                      valueDate: string
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
  /MeteringIssues/getAllByMeter:
    get:
      tags:
        - MeteringIssues
      summary: Retrieves a paged list of metering issues for a specific meter.
      description: Retrieves a paged list of metering issues for a specific meter.
      operationId: get-meteringissues-getallbymeter
      parameters:
        - name: ServicelocationIds
          in: query
          schema:
            type: array
            items:
              type: string
        - name: PropertyGroupIds
          in: query
          schema:
            type: array
            items:
              type: string
        - name: MeterType.Name
          in: query
          schema:
            type: string
        - name: MeterType.Id
          in: query
          description: Format - int32.
          schema:
            type: integer
            format: int32
        - name: ReceivedMeteringDataStart
          in: query
          description: Format - date-time (as date-time in RFC3339).
          schema:
            type: string
            format: date-time
            nullable: true
        - name: ReceivedMeteringDataEnd
          in: query
          description: Format - date-time (as date-time in RFC3339).
          schema:
            type: string
            format: date-time
            nullable: true
        - name: NextExpectedReadingDateStart
          in: query
          description: Format - date-time (as date-time in RFC3339).
          schema:
            type: string
            format: date-time
            nullable: true
        - name: NextExpectedReadingDateEnd
          in: query
          description: Format - date-time (as date-time in RFC3339).
          schema:
            type: string
            format: date-time
            nullable: true
        - name: ParentSerialNumber
          in: query
          schema:
            type: string
        - name: FilterByReadingFrequency
          in: query
          schema:
            type: boolean
        - name: ReadingFrequency.Name
          in: query
          schema:
            type: string
        - name: ReadingFrequency.Id
          in: query
          description: Format - int32.
          schema:
            type: integer
            format: int32
        - name: CustomerId
          in: query
          schema:
            type: string
        - name: MeterTypeGroup
          in: query
          schema:
            type: string
        - name: MeterSerialNumber
          in: query
          schema:
            type: string
        - name: FlexSearch
          in: query
          schema:
            type: string
        - name: IncludeOnlyIds
          in: query
          schema:
            type: array
            items:
              type: string
        - name: ExcludeIds
          in: query
          schema:
            type: array
            items:
              type: string
        - name: Name
          in: query
          schema:
            type: string
        - name: Id
          in: query
          description: Format - int32.
          schema:
            type: integer
            format: int32
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/MeteringIssueDTOPagedResponseModelDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/MeteringIssueDTOPagedResponseModelDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  results:
                    - id: string
                      entityType: { }
                      createdDateTime: string
                      discriminator: string
                      _etag: string
                      requireAttention: true
                      hasErrors: true
                      hasWarnings: true
                      isReadOnly: true
                      meter:
                        meterId: string
                        serialNumber: string
                      propertyGroup:
                        id: string
                        name: string
                      meterModelId: string
                      noticedDateTime: string
                      error: { }
                      status: { }
                      details: { }
                      resolution:
                        resolvedDateTime: string
                        type: { }
                        details:
                          resolvedByUserId: string
                          newValue: 0
                  hasNextPage: true
                  nextPageToken: string
                  totalRecords: 0
                  sortableFields:
                    - string
                  aggregateDetails:
                    - code: string
                      translation: string
                      value: 0
                      valueDate: string
            text/json:
              schema:
                $ref: '#/components/schemas/MeteringIssueDTOPagedResponseModelDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  results:
                    - id: string
                      entityType: { }
                      createdDateTime: string
                      discriminator: string
                      _etag: string
                      requireAttention: true
                      hasErrors: true
                      hasWarnings: true
                      isReadOnly: true
                      meter:
                        meterId: string
                        serialNumber: string
                      propertyGroup:
                        id: string
                        name: string
                      meterModelId: string
                      noticedDateTime: string
                      error: { }
                      status: { }
                      details: { }
                      resolution:
                        resolvedDateTime: string
                        type: { }
                        details:
                          resolvedByUserId: string
                          newValue: 0
                  hasNextPage: true
                  nextPageToken: string
                  totalRecords: 0
                  sortableFields:
                    - string
                  aggregateDetails:
                    - code: string
                      translation: string
                      value: 0
                      valueDate: string
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
  /MeteringIssues/grouped:
    get:
      tags:
        - MeteringIssues
      summary: Retrieves a paged list of metering issues grouped by a specified property.
      description: Retrieves a paged list of metering issues grouped by a specified property.
      operationId: get-meteringissues-grouped
      parameters:
        - name: MeterIds
          in: query
          schema:
            type: array
            items:
              type: string
        - name: NoticedStartDateTime
          in: query
          description: Format - date-time (as date-time in RFC3339).
          schema:
            type: string
            format: date-time
            nullable: true
        - name: NoticedEndDateTime
          in: query
          description: Format - date-time (as date-time in RFC3339).
          schema:
            type: string
            format: date-time
            nullable: true
        - name: Statuses
          in: query
          schema:
            type: array
            items:
              type: string
        - name: PropertyGroupIds
          in: query
          schema:
            type: array
            items:
              type: string
        - name: MeterModelIds
          in: query
          schema:
            type: array
            items:
              type: string
        - name: Errors
          in: query
          schema:
            type: array
            items:
              $ref: '#/components/schemas/MeteringIssueError'
        - name: FlexSearch
          in: query
          schema:
            type: string
        - name: IncludeOnlyIds
          in: query
          schema:
            type: array
            items:
              type: string
        - name: ExcludeIds
          in: query
          schema:
            type: array
            items:
              type: string
        - name: limit
          in: query
          description: Format - int32. Maximum number of items to return.
          schema:
            type: integer
            format: int32
            nullable: true
        - name: groupBy
          in: query
          description: Property name to group results by.
          schema:
            type: string
        - name: Name
          in: query
          schema:
            type: string
        - name: Id
          in: query
          description: Format - int32.
          schema:
            type: integer
            format: int32
        - name: continuationToken
          in: header
          description: Token for pagination.
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/GroupedMeteringIssuesDTOPagedResponseModelDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/GroupedMeteringIssuesDTOPagedResponseModelDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  results:
                    - id: string
                      entityType: { }
                      createdDateTime: string
                      discriminator: string
                      _etag: string
                      requireAttention: true
                      hasErrors: true
                      hasWarnings: true
                      isReadOnly: true
                      meter:
                        meterId: string
                        serialNumber: string
                      issueCount: 0
                      firstIssueDate: string
                      lastIssueDate: string
                  hasNextPage: true
                  nextPageToken: string
                  totalRecords: 0
                  sortableFields:
                    - string
                  aggregateDetails:
                    - code: string
                      translation: string
                      value: 0
                      valueDate: string
            text/json:
              schema:
                $ref: '#/components/schemas/GroupedMeteringIssuesDTOPagedResponseModelDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  results:
                    - id: string
                      entityType: { }
                      createdDateTime: string
                      discriminator: string
                      _etag: string
                      requireAttention: true
                      hasErrors: true
                      hasWarnings: true
                      isReadOnly: true
                      meter:
                        meterId: string
                        serialNumber: string
                      issueCount: 0
                      firstIssueDate: string
                      lastIssueDate: string
                  hasNextPage: true
                  nextPageToken: string
                  totalRecords: 0
                  sortableFields:
                    - string
                  aggregateDetails:
                    - code: string
                      translation: string
                      value: 0
                      valueDate: string
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
  /MeteringIssues/overviewcount:
    get:
      tags:
        - MeteringIssues
      summary: Retrieves count statistics for metering issues based on specified filter criteria.
      description: Retrieves count statistics for metering issues based on specified filter criteria.
      operationId: get-meteringissues-overviewcount
      parameters:
        - name: MeterIds
          in: query
          schema:
            type: array
            items:
              type: string
        - name: NoticedStartDateTime
          in: query
          description: Format - date-time (as date-time in RFC3339).
          schema:
            type: string
            format: date-time
            nullable: true
        - name: NoticedEndDateTime
          in: query
          description: Format - date-time (as date-time in RFC3339).
          schema:
            type: string
            format: date-time
            nullable: true
        - name: Statuses
          in: query
          schema:
            type: array
            items:
              type: string
        - name: PropertyGroupIds
          in: query
          schema:
            type: array
            items:
              type: string
        - name: MeterModelIds
          in: query
          schema:
            type: array
            items:
              type: string
        - name: Errors
          in: query
          schema:
            type: array
            items:
              $ref: '#/components/schemas/MeteringIssueError'
        - name: FlexSearch
          in: query
          schema:
            type: string
        - name: IncludeOnlyIds
          in: query
          schema:
            type: array
            items:
              type: string
        - name: ExcludeIds
          in: query
          schema:
            type: array
            items:
              type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/MeteringIssueOverviewCountDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/MeteringIssueOverviewCountDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  all: 0
                  unresolved: 0
            text/json:
              schema:
                $ref: '#/components/schemas/MeteringIssueOverviewCountDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  all: 0
                  unresolved: 0
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
  /MeteringIssues/meters:
    get:
      tags:
        - MeteringIssues
      summary: Retrieves a paged list of meters that have metering issues.
      description: Retrieves a paged list of meters that have metering issues.
      operationId: get-meteringissues-meters
      parameters:
        - name: noticedStartDateTime
          in: query
          description: Format - date-time (as date-time in RFC3339). Start date and time when issues were noticed.
          schema:
            type: string
            format: date-time
            nullable: true
        - name: noticedEndDateTime
          in: query
          description: Format - date-time (as date-time in RFC3339). End date and time when issues were noticed.
          schema:
            type: string
            format: date-time
            nullable: true
        - name: propertyGroupIds
          in: query
          description: Array of property group IDs to filter by.
          schema:
            type: array
            items:
              type: string
        - name: Name
          in: query
          schema:
            type: string
        - name: Id
          in: query
          description: Format - int32.
          schema:
            type: integer
            format: int32
        - name: flexSearch
          in: query
          description: Flexible search term.
          schema:
            type: string
        - name: continuationToken
          in: header
          description: Token for pagination.
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/MeterReferencePagedResponseModelDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/MeterReferencePagedResponseModelDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  results:
                    - meterId: string
                      serialNumber: string
                  hasNextPage: true
                  nextPageToken: string
                  totalRecords: 0
                  sortableFields:
                    - string
                  aggregateDetails:
                    - code: string
                      translation: string
                      value: 0
                      valueDate: string
            text/json:
              schema:
                $ref: '#/components/schemas/MeterReferencePagedResponseModelDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  results:
                    - meterId: string
                      serialNumber: string
                  hasNextPage: true
                  nextPageToken: string
                  totalRecords: 0
                  sortableFields:
                    - string
                  aggregateDetails:
                    - code: string
                      translation: string
                      value: 0
                      valueDate: string
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
  /MeteringIssues/propertygroups:
    get:
      tags:
        - MeteringIssues
      summary: Retrieves a paged list of property groups that have metering issues.
      description: Retrieves a paged list of property groups that have metering issues.
      operationId: get-meteringissues-propertygroups
      parameters:
        - name: noticedStartDateTime
          in: query
          description: Format - date-time (as date-time in RFC3339). Start date and time when issues were noticed.
          schema:
            type: string
            format: date-time
            nullable: true
        - name: noticedEndDateTime
          in: query
          description: Format - date-time (as date-time in RFC3339). End date and time when issues were noticed.
          schema:
            type: string
            format: date-time
            nullable: true
        - name: meterIds
          in: query
          description: Array of meter IDs to filter by.
          schema:
            type: array
            items:
              type: string
        - name: Name
          in: query
          schema:
            type: string
        - name: Id
          in: query
          description: Format - int32.
          schema:
            type: integer
            format: int32
        - name: flexSearch
          in: query
          description: Flexible search term.
          schema:
            type: string
        - name: continuationToken
          in: header
          description: Token for pagination.
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/PropertyGroupReferencePagedResponseModelDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyGroupReferencePagedResponseModelDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  results:
                    - id: string
                      name: string
                  hasNextPage: true
                  nextPageToken: string
                  totalRecords: 0
                  sortableFields:
                    - string
                  aggregateDetails:
                    - code: string
                      translation: string
                      value: 0
                      valueDate: string
            text/json:
              schema:
                $ref: '#/components/schemas/PropertyGroupReferencePagedResponseModelDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  results:
                    - id: string
                      name: string
                  hasNextPage: true
                  nextPageToken: string
                  totalRecords: 0
                  sortableFields:
                    - string
                  aggregateDetails:
                    - code: string
                      translation: string
                      value: 0
                      valueDate: string
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
  '/MeteringIssues/{issueId}/resolve':
    post:
      tags:
        - MeteringIssues
      summary: Resolves a specific metering issue.
      description: Resolves a specific metering issue.
      operationId: post-meteringissues-issueid-resolve
      parameters:
        - name: issueId
          in: path
          description: ID of the metering issue to resolve.
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: Resolution details.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ResolveMeteringIssueRequest'
            example:
              message: string
              resolutionValue: { }
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ResolveMeteringIssueRequest'
            example:
              message: string
              resolutionValue: { }
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ResolveMeteringIssueRequest'
            example:
              message: string
              resolutionValue: { }
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/MeteringIssueDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/MeteringIssueDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  meter:
                    meterId: string
                    serialNumber: string
                  propertyGroup:
                    id: string
                    name: string
                  meterModelId: string
                  noticedDateTime: string
                  error: { }
                  status: { }
                  details: { }
                  resolution:
                    resolvedDateTime: string
                    type: { }
                    details:
                      resolvedByUserId: string
                      newValue: 0
            text/json:
              schema:
                $ref: '#/components/schemas/MeteringIssueDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  meter:
                    meterId: string
                    serialNumber: string
                  propertyGroup:
                    id: string
                    name: string
                  meterModelId: string
                  noticedDateTime: string
                  error: { }
                  status: { }
                  details: { }
                  resolution:
                    resolvedDateTime: string
                    type: { }
                    details:
                      resolvedByUserId: string
                      newValue: 0
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
  /MeteringIssues/bulk/resolve:
    post:
      tags:
        - MeteringIssues
      summary: Resolves multiple metering issues in bulk.
      description: Resolves multiple metering issues in bulk.
      operationId: post-meteringissues-bulk-resolve
      parameters:
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: Bulk resolution details including filter criteria.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BulkResolveMeteringIssueRequest'
            example:
              message: string
              resolutionValue: { }
              onlyValidate: true
              queryParams:
                flexSearch: string
                includeOnlyIds:
                  - string
                excludeIds:
                  - string
                meterIds:
                  - string
                noticedStartDateTime: string
                noticedEndDateTime: string
                statuses:
                  - string
                propertyGroupIds:
                  - string
                meterModelIds:
                  - string
                errors:
                  - consumptionnegative
              quickFilter: string
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BulkResolveMeteringIssueRequest'
            example:
              message: string
              resolutionValue: { }
              onlyValidate: true
              queryParams:
                flexSearch: string
                includeOnlyIds:
                  - string
                excludeIds:
                  - string
                meterIds:
                  - string
                noticedStartDateTime: string
                noticedEndDateTime: string
                statuses:
                  - string
                propertyGroupIds:
                  - string
                meterModelIds:
                  - string
                errors:
                  - consumptionnegative
              quickFilter: string
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BulkResolveMeteringIssueRequest'
            example:
              message: string
              resolutionValue: { }
              onlyValidate: true
              queryParams:
                flexSearch: string
                includeOnlyIds:
                  - string
                excludeIds:
                  - string
                meterIds:
                  - string
                noticedStartDateTime: string
                noticedEndDateTime: string
                statuses:
                  - string
                propertyGroupIds:
                  - string
                meterModelIds:
                  - string
                errors:
                  - consumptionnegative
              quickFilter: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/BooleanApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/BooleanApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data: true
            text/json:
              schema:
                $ref: '#/components/schemas/BooleanApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data: true
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
  '/MeteringIssues/{issueId}/ignore':
    post:
      tags:
        - MeteringIssues
      summary: Ignores a specific metering issue.
      description: Ignores a specific metering issue.
      operationId: post-meteringissues-issueid-ignore
      parameters:
        - name: issueId
          in: path
          description: ID of the metering issue to ignore.
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: Ignore details.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/IgnoreMeteringIssueRequest'
            example:
              message: string
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/IgnoreMeteringIssueRequest'
            example:
              message: string
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/IgnoreMeteringIssueRequest'
            example:
              message: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/MeteringIssueDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/MeteringIssueDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  meter:
                    meterId: string
                    serialNumber: string
                  propertyGroup:
                    id: string
                    name: string
                  meterModelId: string
                  noticedDateTime: string
                  error: { }
                  status: { }
                  details: { }
                  resolution:
                    resolvedDateTime: string
                    type: { }
                    details:
                      resolvedByUserId: string
                      newValue: 0
            text/json:
              schema:
                $ref: '#/components/schemas/MeteringIssueDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  meter:
                    meterId: string
                    serialNumber: string
                  propertyGroup:
                    id: string
                    name: string
                  meterModelId: string
                  noticedDateTime: string
                  error: { }
                  status: { }
                  details: { }
                  resolution:
                    resolvedDateTime: string
                    type: { }
                    details:
                      resolvedByUserId: string
                      newValue: 0
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
  /MeteringIssues/bulk/ignore:
    post:
      tags:
        - MeteringIssues
      summary: Ignores multiple metering issues in bulk.
      description: Ignores multiple metering issues in bulk.
      operationId: post-meteringissues-bulk-ignore
      parameters:
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: Bulk ignore details including filter criteria.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BulkIgnoreMeteringIssueRequest'
            example:
              message: string
              onlyValidate: true
              queryParams:
                flexSearch: string
                includeOnlyIds:
                  - string
                excludeIds:
                  - string
                meterIds:
                  - string
                noticedStartDateTime: string
                noticedEndDateTime: string
                statuses:
                  - string
                propertyGroupIds:
                  - string
                meterModelIds:
                  - string
                errors:
                  - consumptionnegative
              quickFilter: string
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BulkIgnoreMeteringIssueRequest'
            example:
              message: string
              onlyValidate: true
              queryParams:
                flexSearch: string
                includeOnlyIds:
                  - string
                excludeIds:
                  - string
                meterIds:
                  - string
                noticedStartDateTime: string
                noticedEndDateTime: string
                statuses:
                  - string
                propertyGroupIds:
                  - string
                meterModelIds:
                  - string
                errors:
                  - consumptionnegative
              quickFilter: string
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BulkIgnoreMeteringIssueRequest'
            example:
              message: string
              onlyValidate: true
              queryParams:
                flexSearch: string
                includeOnlyIds:
                  - string
                excludeIds:
                  - string
                meterIds:
                  - string
                noticedStartDateTime: string
                noticedEndDateTime: string
                statuses:
                  - string
                propertyGroupIds:
                  - string
                meterModelIds:
                  - string
                errors:
                  - consumptionnegative
              quickFilter: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/BooleanApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/BooleanApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data: true
            text/json:
              schema:
                $ref: '#/components/schemas/BooleanApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data: true
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
  /MutingRules:
    post:
      tags:
        - MutingRules
      summary: Creates multiple muting rules in bulk
      description: Creates multiple muting rules in bulk
      operationId: CreateMutingRule
      parameters:
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: The bulk creation request containing muting rule details
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BulkCreateMutingRuleRequest'
            example:
              errorType: { }
              message: string
              timePeriod: { }
              onlyValidate: true
              queryParams:
                flexSearch: string
                includeOnlyIds:
                  - string
                excludeIds:
                  - string
                servicelocationIds:
                  - string
                propertyGroupIds:
                  - string
                meterType: { }
                receivedMeteringDataStart: string
                receivedMeteringDataEnd: string
                nextExpectedReadingDateStart: string
                nextExpectedReadingDateEnd: string
                parentSerialNumber: string
                filterByReadingFrequency: true
                readingFrequency: { }
                customerId: string
                meterTypeGroup: string
                meterSerialNumber: string
              quickFilter: string
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BulkCreateMutingRuleRequest'
            example:
              errorType: { }
              message: string
              timePeriod: { }
              onlyValidate: true
              queryParams:
                flexSearch: string
                includeOnlyIds:
                  - string
                excludeIds:
                  - string
                servicelocationIds:
                  - string
                propertyGroupIds:
                  - string
                meterType: { }
                receivedMeteringDataStart: string
                receivedMeteringDataEnd: string
                nextExpectedReadingDateStart: string
                nextExpectedReadingDateEnd: string
                parentSerialNumber: string
                filterByReadingFrequency: true
                readingFrequency: { }
                customerId: string
                meterTypeGroup: string
                meterSerialNumber: string
              quickFilter: string
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BulkCreateMutingRuleRequest'
            example:
              errorType: { }
              message: string
              timePeriod: { }
              onlyValidate: true
              queryParams:
                flexSearch: string
                includeOnlyIds:
                  - string
                excludeIds:
                  - string
                servicelocationIds:
                  - string
                propertyGroupIds:
                  - string
                meterType: { }
                receivedMeteringDataStart: string
                receivedMeteringDataEnd: string
                nextExpectedReadingDateStart: string
                nextExpectedReadingDateEnd: string
                parentSerialNumber: string
                filterByReadingFrequency: true
                readingFrequency: { }
                customerId: string
                meterTypeGroup: string
                meterSerialNumber: string
              quickFilter: string
      responses:
        '200':
          description: Muting rules created successfully
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
        '400':
          description: Invalid request data
        '401':
          description: Unauthorized access
        '403':
          description: Insufficient permissions
  /MutingRules/getall:
    get:
      tags:
        - MutingRules
      summary: Retrieves all muting rules with optional filtering
      description: Retrieves all muting rules with optional filtering
      operationId: GetAllMutingRules
      parameters:
        - name: includeActive
          in: query
          description: Whether to include active muting rules
          schema:
            type: boolean
        - name: includeExpired
          in: query
          description: Whether to include expired muting rules
          schema:
            type: boolean
        - name: meterId
          in: query
          description: Optional meter ID to filter by
          schema:
            type: string
        - name: continuationToken
          in: header
          description: Token for pagination
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '200':
          description: Returns the list of muting rules
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/MutingRuleAggregatorDTOPagedResponseModelDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/MutingRuleAggregatorDTOPagedResponseModelDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  results:
                    - id: string
                      entityType: { }
                      createdDateTime: string
                      discriminator: string
                      _etag: string
                      requireAttention: true
                      hasErrors: true
                      hasWarnings: true
                      isReadOnly: true
                      organisationId: string
                      errorType: { }
                      message: string
                      timePeriod: { }
                      muteFrom: string
                      muteUntil: string
                      meterId: string
                      muteFromWithNumericValue: 0
                      muteUntilWithNumericValue: 0
                      userId: string
                      meterCount: 0
                      meterSerialNumber: string
                  hasNextPage: true
                  nextPageToken: string
                  totalRecords: 0
                  sortableFields:
                    - string
                  aggregateDetails:
                    - code: string
                      translation: string
                      value: 0
                      valueDate: string
            text/json:
              schema:
                $ref: '#/components/schemas/MutingRuleAggregatorDTOPagedResponseModelDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  results:
                    - id: string
                      entityType: { }
                      createdDateTime: string
                      discriminator: string
                      _etag: string
                      requireAttention: true
                      hasErrors: true
                      hasWarnings: true
                      isReadOnly: true
                      organisationId: string
                      errorType: { }
                      message: string
                      timePeriod: { }
                      muteFrom: string
                      muteUntil: string
                      meterId: string
                      muteFromWithNumericValue: 0
                      muteUntilWithNumericValue: 0
                      userId: string
                      meterCount: 0
                      meterSerialNumber: string
                  hasNextPage: true
                  nextPageToken: string
                  totalRecords: 0
                  sortableFields:
                    - string
                  aggregateDetails:
                    - code: string
                      translation: string
                      value: 0
                      valueDate: string
        '401':
          description: Unauthorized access
        '403':
          description: Insufficient permissions
  '/MutingRules/getall/{meterId}':
    get:
      tags:
        - MutingRules
      summary: Retrieves muting rules for a specific meter
      description: Retrieves muting rules for a specific meter
      operationId: GetMutingRulesByMeter
      parameters:
        - name: meterId
          in: path
          description: ID of the meter to get rules for
          required: true
          schema:
            type: string
        - name: includeActive
          in: query
          description: Whether to include active muting rules
          schema:
            type: boolean
        - name: includeExpired
          in: query
          description: Whether to include expired muting rules
          schema:
            type: boolean
        - name: Name
          in: query
          schema:
            type: string
        - name: Id
          in: query
          description: Format - int32.
          schema:
            type: integer
            format: int32
        - name: limit
          in: query
          description: Format - int32. Maximum number of results to return
          schema:
            type: integer
            format: int32
        - name: continuationToken
          in: header
          description: Token for pagination
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '200':
          description: Returns the list of muting rules
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/MutingRuleDTOPagedResponseModelDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/MutingRuleDTOPagedResponseModelDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  results:
                    - id: string
                      entityType: { }
                      createdDateTime: string
                      discriminator: string
                      _etag: string
                      requireAttention: true
                      hasErrors: true
                      hasWarnings: true
                      isReadOnly: true
                      organisationId: string
                      errorType: { }
                      message: string
                      timePeriod: { }
                      muteFrom: string
                      muteUntil: string
                      meterId: string
                      muteFromWithNumericValue: 0
                      muteUntilWithNumericValue: 0
                      userId: string
                  hasNextPage: true
                  nextPageToken: string
                  totalRecords: 0
                  sortableFields:
                    - string
                  aggregateDetails:
                    - code: string
                      translation: string
                      value: 0
                      valueDate: string
            text/json:
              schema:
                $ref: '#/components/schemas/MutingRuleDTOPagedResponseModelDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  results:
                    - id: string
                      entityType: { }
                      createdDateTime: string
                      discriminator: string
                      _etag: string
                      requireAttention: true
                      hasErrors: true
                      hasWarnings: true
                      isReadOnly: true
                      organisationId: string
                      errorType: { }
                      message: string
                      timePeriod: { }
                      muteFrom: string
                      muteUntil: string
                      meterId: string
                      muteFromWithNumericValue: 0
                      muteUntilWithNumericValue: 0
                      userId: string
                  hasNextPage: true
                  nextPageToken: string
                  totalRecords: 0
                  sortableFields:
                    - string
                  aggregateDetails:
                    - code: string
                      translation: string
                      value: 0
                      valueDate: string
        '401':
          description: Unauthorized access
        '403':
          description: Insufficient permissions
  '/MutingRules/{mutingRuleId}':
    get:
      tags:
        - MutingRules
      summary: Retrieves a specific muting rule by its ID
      description: Retrieves a specific muting rule by its ID
      operationId: GetMutingRule
      parameters:
        - name: mutingRuleId
          in: path
          description: The ID of the muting rule to retrieve
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '200':
          description: Returns the muting rule
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/MutingRuleDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/MutingRuleDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  errorType: { }
                  message: string
                  timePeriod: { }
                  muteFrom: string
                  muteUntil: string
                  meterId: string
                  muteFromWithNumericValue: 0
                  muteUntilWithNumericValue: 0
                  userId: string
            text/json:
              schema:
                $ref: '#/components/schemas/MutingRuleDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  errorType: { }
                  message: string
                  timePeriod: { }
                  muteFrom: string
                  muteUntil: string
                  meterId: string
                  muteFromWithNumericValue: 0
                  muteUntilWithNumericValue: 0
                  userId: string
        '404':
          description: Muting rule not found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: string
                title: string
                status: 0
                detail: string
                instance: string
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: string
                title: string
                status: 0
                detail: string
                instance: string
        '401':
          description: Unauthorized access
        '403':
          description: Insufficient permissions
  /MutingRules/getmeters:
    get:
      tags:
        - MutingRules
      summary: Retrieves meters for which a muting rule with the specified parameters applies
      description: Retrieves meters for which a muting rule with the specified parameters applies
      operationId: GetMeters
      parameters:
        - name: errorType
          in: query
          description: Type of error to filter by
          schema:
            type: string
        - name: muteFromWithNumericValue
          in: query
          description: Format - int32. Starting numeric value for muting
          schema:
            type: integer
            format: int32
        - name: muteUntilWithNumericValue
          in: query
          description: Format - int32. Ending numeric value for muting
          schema:
            type: integer
            format: int32
        - name: message
          in: query
          description: Message text to filter by
          schema:
            type: string
        - name: timePeriod
          in: query
          description: Time period for the muting rule
          schema:
            type: string
        - name: userId
          in: query
          description: User ID associated with the muting rule
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '200':
          description: Returns the matching meter IDs
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/StringListApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/StringListApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  - string
            text/json:
              schema:
                $ref: '#/components/schemas/StringListApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  - string
        '404':
          description: No matching meters found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: string
                title: string
                status: 0
                detail: string
                instance: string
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: string
                title: string
                status: 0
                detail: string
                instance: string
        '401':
          description: Unauthorized access
        '403':
          description: Insufficient permissions
  /MutingRules/getallrelated:
    get:
      tags:
        - MutingRules
      summary: Retrieves muting rules related to specific criteria
      description: Retrieves muting rules related to specific criteria
      operationId: GetRelatedMutingRules
      parameters:
        - name: errorType
          in: query
          description: Type of error to filter by
          schema:
            type: string
        - name: muteFromWithNumericValue
          in: query
          description: Format - int32. Starting numeric value for muting
          schema:
            type: integer
            format: int32
        - name: message
          in: query
          description: Message text to filter by
          schema:
            type: string
        - name: timePeriod
          in: query
          description: Time period for the muting rule
          schema:
            type: string
        - name: meterIds
          in: query
          description: List of meter IDs to filter by
          schema:
            type: array
            items:
              type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '200':
          description: Returns the matching muting rules
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/MutingRuleDTOListApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/MutingRuleDTOListApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  - id: string
                    entityType: { }
                    createdDateTime: string
                    discriminator: string
                    _etag: string
                    requireAttention: true
                    hasErrors: true
                    hasWarnings: true
                    isReadOnly: true
                    organisationId: string
                    errorType: { }
                    message: string
                    timePeriod: { }
                    muteFrom: string
                    muteUntil: string
                    meterId: string
                    muteFromWithNumericValue: 0
                    muteUntilWithNumericValue: 0
                    userId: string
            text/json:
              schema:
                $ref: '#/components/schemas/MutingRuleDTOListApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  - id: string
                    entityType: { }
                    createdDateTime: string
                    discriminator: string
                    _etag: string
                    requireAttention: true
                    hasErrors: true
                    hasWarnings: true
                    isReadOnly: true
                    organisationId: string
                    errorType: { }
                    message: string
                    timePeriod: { }
                    muteFrom: string
                    muteUntil: string
                    meterId: string
                    muteFromWithNumericValue: 0
                    muteUntilWithNumericValue: 0
                    userId: string
        '404':
          description: No matching rules found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: string
                title: string
                status: 0
                detail: string
                instance: string
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: string
                title: string
                status: 0
                detail: string
                instance: string
        '401':
          description: Unauthorized access
        '403':
          description: Insufficient permissions
  /MutingRules/GetCount:
    get:
      tags:
        - MutingRules
      summary: Gets the count of muting rules matching the specified criteria
      description: Gets the count of muting rules matching the specified criteria
      operationId: GetCount
      parameters:
        - name: includeActive
          in: query
          description: Whether to include active muting rules
          schema:
            type: boolean
        - name: includeExpired
          in: query
          description: Whether to include expired muting rules
          schema:
            type: boolean
        - name: meterId
          in: query
          description: Optional meter ID to filter by
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '200':
          description: Returns the count of muting rules
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Int32ApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/Int32ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data: 0
            text/json:
              schema:
                $ref: '#/components/schemas/Int32ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data: 0
        '401':
          description: Unauthorized access
        '403':
          description: Insufficient permissions
  '/MutingRules/getall/{meterId}/overviewCount':
    get:
      tags:
        - MutingRules
      summary: Gets an overview count of muting rules for a specific meter
      description: Gets an overview count of muting rules for a specific meter
      operationId: GetOverviewCount
      parameters:
        - name: meterId
          in: path
          description: ID of the meter to get the count for
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '200':
          description: Returns the overview count
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/MutingRuleOverviewCountDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/MutingRuleOverviewCountDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  active: 0
                  expired: 0
            text/json:
              schema:
                $ref: '#/components/schemas/MutingRuleOverviewCountDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  active: 0
                  expired: 0
        '401':
          description: Unauthorized access
        '403':
          description: Insufficient permissions
  '/MutingRules/cancel/{mutingRuleId}':
    put:
      tags:
        - MutingRules
      summary: Cancels a muting rule by its ID
      description: Cancels a muting rule by its ID
      operationId: CancelMutingRuleById
      parameters:
        - name: mutingRuleId
          in: path
          description: ID of the muting rule to cancel
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '404':
          description: Muting rule not found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: string
                title: string
                status: 0
                detail: string
                instance: string
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: string
                title: string
                status: 0
                detail: string
                instance: string
        '200':
          description: Muting rule canceled successfully
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/BooleanApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/BooleanApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data: true
            text/json:
              schema:
                $ref: '#/components/schemas/BooleanApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data: true
        '401':
          description: Unauthorized access
        '403':
          description: Insufficient permissions
  /MutingRules/cancel:
    put:
      tags:
        - MutingRules
      summary: Cancels a muting rule based on provided details
      description: Cancels a muting rule based on provided details
      operationId: CancelMutingRuleByDetails
      parameters:
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: Details of the muting rule to cancel
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/CancelMutingRuleRequest'
            example:
              errorType: { }
              meterIds:
                - string
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/CancelMutingRuleRequest'
            example:
              errorType: { }
              meterIds:
                - string
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/CancelMutingRuleRequest'
            example:
              errorType: { }
              meterIds:
                - string
      responses:
        '404':
          description: Muting rule not found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: string
                title: string
                status: 0
                detail: string
                instance: string
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: string
                title: string
                status: 0
                detail: string
                instance: string
        '200':
          description: Muting rule canceled successfully
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/BooleanApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/BooleanApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data: true
            text/json:
              schema:
                $ref: '#/components/schemas/BooleanApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data: true
        '401':
          description: Unauthorized access
        '403':
          description: Insufficient permissions
  /MutingRules/cancelAggregate:
    put:
      tags:
        - MutingRules
      summary: Cancels a group of muting rules based on aggregate details
      description: Cancels a group of muting rules based on aggregate details
      operationId: CancelMutingRuleByAggregateDetails
      parameters:
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: Aggregate details of the muting rules to cancel
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/CancelMutingRuleAggregateRequest'
            example:
              errorType: { }
              message: string
              timePeriod: { }
              muteFromWithNumericValue: 0
              muteUntilWithNumericValue: 0
              userId: string
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/CancelMutingRuleAggregateRequest'
            example:
              errorType: { }
              message: string
              timePeriod: { }
              muteFromWithNumericValue: 0
              muteUntilWithNumericValue: 0
              userId: string
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/CancelMutingRuleAggregateRequest'
            example:
              errorType: { }
              message: string
              timePeriod: { }
              muteFromWithNumericValue: 0
              muteUntilWithNumericValue: 0
              userId: string
      responses:
        '404':
          description: No matching muting rules found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: string
                title: string
                status: 0
                detail: string
                instance: string
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: string
                title: string
                status: 0
                detail: string
                instance: string
        '200':
          description: Muting rules canceled successfully
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/BooleanApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/BooleanApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data: true
            text/json:
              schema:
                $ref: '#/components/schemas/BooleanApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data: true
        '401':
          description: Unauthorized access
        '403':
          description: Insufficient permissions
  /PrepaymentTransactions/filter:
    post:
      tags:
        - PrepaymentTransactions
      summary: Retrieves a paged list of prepayment transactions based on specified filter criteria.
      description: Retrieves a paged list of prepayment transactions based on specified filter criteria.
      operationId: GetAllPrepaymentTransactions
      parameters:
        - name: continuationToken
          in: header
          description: Token for pagination.
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: Filter criteria for transactions.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/FilterPrepaymentTransactionRequest'
            example:
              meterId: string
              channelIdentifiers:
                - string
              startDateTime: string
              endDateTime: string
              origin: { }
              type: { }
              limit: 0
              orderBy: string
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/FilterPrepaymentTransactionRequest'
            example:
              meterId: string
              channelIdentifiers:
                - string
              startDateTime: string
              endDateTime: string
              origin: { }
              type: { }
              limit: 0
              orderBy: string
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/FilterPrepaymentTransactionRequest'
            example:
              meterId: string
              channelIdentifiers:
                - string
              startDateTime: string
              endDateTime: string
              origin: { }
              type: { }
              limit: 0
              orderBy: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/PrepaymentTransactionDTOPagedResponseModelDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/PrepaymentTransactionDTOPagedResponseModelDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  results:
                    - id: string
                      entityType: { }
                      createdDateTime: string
                      discriminator: string
                      _etag: string
                      requireAttention: true
                      hasErrors: true
                      hasWarnings: true
                      isReadOnly: true
                      organisationId: string
                      meter:
                        meterId: string
                        serialNumber: string
                      channelIdentfier: string
                      customerId: string
                      contractId: string
                      processedDateTime: string
                      amount: 0
                      type: { }
                      origin: { }
                      status: { }
                      externalReference: string
                      operationId: string
                      deleted: true
                  hasNextPage: true
                  nextPageToken: string
                  totalRecords: 0
                  sortableFields:
                    - string
                  aggregateDetails:
                    - code: string
                      translation: string
                      value: 0
                      valueDate: string
            text/json:
              schema:
                $ref: '#/components/schemas/PrepaymentTransactionDTOPagedResponseModelDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  results:
                    - id: string
                      entityType: { }
                      createdDateTime: string
                      discriminator: string
                      _etag: string
                      requireAttention: true
                      hasErrors: true
                      hasWarnings: true
                      isReadOnly: true
                      organisationId: string
                      meter:
                        meterId: string
                        serialNumber: string
                      channelIdentfier: string
                      customerId: string
                      contractId: string
                      processedDateTime: string
                      amount: 0
                      type: { }
                      origin: { }
                      status: { }
                      externalReference: string
                      operationId: string
                      deleted: true
                  hasNextPage: true
                  nextPageToken: string
                  totalRecords: 0
                  sortableFields:
                    - string
                  aggregateDetails:
                    - code: string
                      translation: string
                      value: 0
                      valueDate: string
  /PrepaymentTransactions:
    post:
      tags:
        - PrepaymentTransactions
      summary: Creates a new prepayment transaction.
      description: Creates a new prepayment transaction.
      operationId: CreatePrepaymentTransaction
      parameters:
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: Details of the prepayment transaction to create.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/CreatePrepaymentTransactionRequest'
            example:
              prepaymentAccountId: string
              processedDateTime: string
              origin: { }
              type: { }
              status: { }
              amount: 0
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/CreatePrepaymentTransactionRequest'
            example:
              prepaymentAccountId: string
              processedDateTime: string
              origin: { }
              type: { }
              status: { }
              amount: 0
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/CreatePrepaymentTransactionRequest'
            example:
              prepaymentAccountId: string
              processedDateTime: string
              origin: { }
              type: { }
              status: { }
              amount: 0
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/PrepaymentTransactionDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/PrepaymentTransactionDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  meter:
                    meterId: string
                    serialNumber: string
                  channelIdentfier: string
                  customerId: string
                  contractId: string
                  processedDateTime: string
                  amount: 0
                  type: { }
                  origin: { }
                  status: { }
                  externalReference: string
                  operationId: string
                  deleted: true
            text/json:
              schema:
                $ref: '#/components/schemas/PrepaymentTransactionDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  meter:
                    meterId: string
                    serialNumber: string
                  channelIdentfier: string
                  customerId: string
                  contractId: string
                  processedDateTime: string
                  amount: 0
                  type: { }
                  origin: { }
                  status: { }
                  externalReference: string
                  operationId: string
                  deleted: true
  '/PropertyGroupMeteringConfiguration/{propertyuuid}':
    get:
      tags:
        - PropertyGroupMeteringConfiguration
      summary: Retrieves the metering configuration for a specific property
      description: Retrieves the metering configuration for a specific property
      operationId: get-propertygroupmeteringconfiguration-propertyuuid
      parameters:
        - name: propertyuuid
          in: path
          description: UUID of the property group
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '200':
          description: Returns the property group metering configuration
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/PropertyGroupMeteringConfigurationDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyGroupMeteringConfigurationDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  propertyGroup:
                    id: string
                    name: string
                  outputChannels:
                    - id: string
                      name: string
                      formula:
                        functions: { }
                      unitOfMeasure: { }
                      meteringType: { }
                      utilityType: { }
                      validationResult:
                        valid: true
                        generalValidationErrors:
                          - key: { }
                            correlationId: string
                            message: string
                            messageValues:
                              - dataType: { }
                                value: string
                                capitalize: true
                        functionValidationErrors:
                          - functionPosition: 0
                            error:
                              key: { }
                              correlationId: string
                              message: string
                              messageValues:
                                - dataType: { }
                                  value: string
                                  capitalize: true
                            value: string
                  validated: true
            text/json:
              schema:
                $ref: '#/components/schemas/PropertyGroupMeteringConfigurationDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  propertyGroup:
                    id: string
                    name: string
                  outputChannels:
                    - id: string
                      name: string
                      formula:
                        functions: { }
                      unitOfMeasure: { }
                      meteringType: { }
                      utilityType: { }
                      validationResult:
                        valid: true
                        generalValidationErrors:
                          - key: { }
                            correlationId: string
                            message: string
                            messageValues:
                              - dataType: { }
                                value: string
                                capitalize: true
                        functionValidationErrors:
                          - functionPosition: 0
                            error:
                              key: { }
                              correlationId: string
                              message: string
                              messageValues:
                                - dataType: { }
                                  value: string
                                  capitalize: true
                            value: string
                  validated: true
        '401':
          description: Unauthorized access
        '403':
          description: Insufficient permissions
        '404':
          description: Property group metering configuration not found
    post:
      tags:
        - PropertyGroupMeteringConfiguration
      summary: Updates the output channels for a property group metering configuration
      description: Updates the output channels for a property group metering configuration
      operationId: post-propertygroupmeteringconfiguration-propertyuuid
      parameters:
        - name: propertyuuid
          in: path
          description: UUID of the property group
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: Update request containing the output channel configuration
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/UpdatePropertyGroupMeteringConfigurationRequest'
            example:
              outputChannels:
                - id: string
                  name: string
                  unitOfMeasure: { }
                  meteringType: { }
                  formula:
                    functions: { }
                  utilityType: { }
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/UpdatePropertyGroupMeteringConfigurationRequest'
            example:
              outputChannels:
                - id: string
                  name: string
                  unitOfMeasure: { }
                  meteringType: { }
                  formula:
                    functions: { }
                  utilityType: { }
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/UpdatePropertyGroupMeteringConfigurationRequest'
            example:
              outputChannels:
                - id: string
                  name: string
                  unitOfMeasure: { }
                  meteringType: { }
                  formula:
                    functions: { }
                  utilityType: { }
      responses:
        '200':
          description: Property group metering configuration updated successfully
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/PropertyGroupMeteringConfigurationDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyGroupMeteringConfigurationDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  propertyGroup:
                    id: string
                    name: string
                  outputChannels:
                    - id: string
                      name: string
                      formula:
                        functions: { }
                      unitOfMeasure: { }
                      meteringType: { }
                      utilityType: { }
                      validationResult:
                        valid: true
                        generalValidationErrors:
                          - key: { }
                            correlationId: string
                            message: string
                            messageValues:
                              - dataType: { }
                                value: string
                                capitalize: true
                        functionValidationErrors:
                          - functionPosition: 0
                            error:
                              key: { }
                              correlationId: string
                              message: string
                              messageValues:
                                - dataType: { }
                                  value: string
                                  capitalize: true
                            value: string
                  validated: true
            text/json:
              schema:
                $ref: '#/components/schemas/PropertyGroupMeteringConfigurationDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  propertyGroup:
                    id: string
                    name: string
                  outputChannels:
                    - id: string
                      name: string
                      formula:
                        functions: { }
                      unitOfMeasure: { }
                      meteringType: { }
                      utilityType: { }
                      validationResult:
                        valid: true
                        generalValidationErrors:
                          - key: { }
                            correlationId: string
                            message: string
                            messageValues:
                              - dataType: { }
                                value: string
                                capitalize: true
                        functionValidationErrors:
                          - functionPosition: 0
                            error:
                              key: { }
                              correlationId: string
                              message: string
                              messageValues:
                                - dataType: { }
                                  value: string
                                  capitalize: true
                            value: string
                  validated: true
        '400':
          description: Invalid request data
        '401':
          description: Unauthorized access
        '403':
          description: Insufficient permissions
        '404':
          description: Property group metering configuration not found
  '/PropertyGroupMeteringConfiguration/{propertyuuid}/validate':
    post:
      tags:
        - PropertyGroupMeteringConfiguration
      summary: Validates a property group metering configuration
      description: Validates a property group metering configuration
      operationId: post-propertygroupmeteringconfiguration-propertyuuid-validate
      parameters:
        - name: propertyuuid
          in: path
          description: UUID of the property group
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '200':
          description: Property group metering configuration validated successfully
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/PropertyGroupMeteringConfigurationDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyGroupMeteringConfigurationDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  propertyGroup:
                    id: string
                    name: string
                  outputChannels:
                    - id: string
                      name: string
                      formula:
                        functions: { }
                      unitOfMeasure: { }
                      meteringType: { }
                      utilityType: { }
                      validationResult:
                        valid: true
                        generalValidationErrors:
                          - key: { }
                            correlationId: string
                            message: string
                            messageValues:
                              - dataType: { }
                                value: string
                                capitalize: true
                        functionValidationErrors:
                          - functionPosition: 0
                            error:
                              key: { }
                              correlationId: string
                              message: string
                              messageValues:
                                - dataType: { }
                                  value: string
                                  capitalize: true
                            value: string
                  validated: true
            text/json:
              schema:
                $ref: '#/components/schemas/PropertyGroupMeteringConfigurationDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  propertyGroup:
                    id: string
                    name: string
                  outputChannels:
                    - id: string
                      name: string
                      formula:
                        functions: { }
                      unitOfMeasure: { }
                      meteringType: { }
                      utilityType: { }
                      validationResult:
                        valid: true
                        generalValidationErrors:
                          - key: { }
                            correlationId: string
                            message: string
                            messageValues:
                              - dataType: { }
                                value: string
                                capitalize: true
                        functionValidationErrors:
                          - functionPosition: 0
                            error:
                              key: { }
                              correlationId: string
                              message: string
                              messageValues:
                                - dataType: { }
                                  value: string
                                  capitalize: true
                            value: string
                  validated: true
        '401':
          description: Unauthorized access
        '403':
          description: Insufficient permissions
        '404':
          description: Property group metering configuration not found
  '/PropertyGroupMeteringConfiguration/{propertyuuid}/{outputchanneluuid}/calculate':
    post:
      tags:
        - PropertyGroupMeteringConfiguration
      summary: Calculates values for a specific output channel in a property group metering configuration
      description: Calculates values for a specific output channel in a property group metering configuration
      operationId: post-propertygroupmeteringconfiguration-propertyuuid-outputchanneluuid-calcu
      parameters:
        - name: propertyuuid
          in: path
          description: UUID of the property group
          required: true
          schema:
            type: string
        - name: outputchanneluuid
          in: path
          description: UUID of the output channel
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: Calculation request with parameters
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/CalculateOutputChannelForPropertyGroupMeteringConfigurationRequest'
            example:
              startDateTime: string
              endDateTime: string
              simulationOnly: true
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/CalculateOutputChannelForPropertyGroupMeteringConfigurationRequest'
            example:
              startDateTime: string
              endDateTime: string
              simulationOnly: true
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/CalculateOutputChannelForPropertyGroupMeteringConfigurationRequest'
            example:
              startDateTime: string
              endDateTime: string
              simulationOnly: true
      responses:
        '200':
          description: Output channel calculated successfully
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/FormulaExecutionResultDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/FormulaExecutionResultDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  hasErrors: true
                  errors:
                    - functionPosition: 0
                      error:
                        key: { }
                        correlationId: string
                        message: string
                        messageValues:
                          - dataType: { }
                            value: string
                            capitalize: true
                      message: string
                      parameters:
                        - string
                  output:
                    - outputChannelId: string
                      productionDay: 0
                      timeZone: string
                      productionDayStartUtc: string
                      productionDayEndUtc: string
                      values:
                        - value: 0
                          startDateTime: string
                          endDateTime: string
                      meteringType: { }
                      utilityType: { }
                      direction: { }
                      unitOfMeasure: { }
                      dataFrequency: { }
                      propertyGroup:
                        id: string
                        name: string
                      timeOfUse: string
                      externalChannelIdentifier: string
                      serviceLocationId: string
                      formulaStreamName: string
            text/json:
              schema:
                $ref: '#/components/schemas/FormulaExecutionResultDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  hasErrors: true
                  errors:
                    - functionPosition: 0
                      error:
                        key: { }
                        correlationId: string
                        message: string
                        messageValues:
                          - dataType: { }
                            value: string
                            capitalize: true
                      message: string
                      parameters:
                        - string
                  output:
                    - outputChannelId: string
                      productionDay: 0
                      timeZone: string
                      productionDayStartUtc: string
                      productionDayEndUtc: string
                      values:
                        - value: 0
                          startDateTime: string
                          endDateTime: string
                      meteringType: { }
                      utilityType: { }
                      direction: { }
                      unitOfMeasure: { }
                      dataFrequency: { }
                      propertyGroup:
                        id: string
                        name: string
                      timeOfUse: string
                      externalChannelIdentifier: string
                      serviceLocationId: string
                      formulaStreamName: string
        '400':
          description: Invalid calculation parameters
        '401':
          description: Unauthorized access
        '403':
          description: Insufficient permissions
        '404':
          description: Property group or output channel not found
  '/PropertyGroupMeteringConfiguration/{propertyuuid}/calculatedconsumptions':
    get:
      tags:
        - PropertyGroupMeteringConfiguration
      summary: Retrieves calculated consumptions for output channels within a specified time period
      description: Retrieves calculated consumptions for output channels within a specified time period
      operationId: get-propertygroupmeteringconfiguration-propertyuuid-calculatedconsumptions
      parameters:
        - name: propertyuuid
          in: path
          description: UUID of the property group
          required: true
          schema:
            type: string
        - name: groupByPeriod
          in: query
          description: 'Period to group results by (e.g., Daily, Monthly)'
          schema:
            type: string
        - name: outputChannelIds
          in: query
          description: IDs of the output channels to retrieve consumptions for
          schema:
            type: array
            items:
              type: string
        - name: startDateTime
          in: query
          description: Format - date-time (as date-time in RFC3339). Start date and time for the consumption period
          schema:
            type: string
            format: date-time
        - name: endDateTime
          in: query
          description: Format - date-time (as date-time in RFC3339). End date and time for the consumption period
          schema:
            type: string
            format: date-time
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '200':
          description: Returns the calculated consumptions
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CalculatedConsumptionDTOListApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/CalculatedConsumptionDTOListApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  - outputChannelId: string
                    consumptions:
                      - startDateTime: string
                        endDateTime: string
                        value: 0
            text/json:
              schema:
                $ref: '#/components/schemas/CalculatedConsumptionDTOListApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  - outputChannelId: string
                    consumptions:
                      - startDateTime: string
                        endDateTime: string
                        value: 0
        '401':
          description: Unauthorized access
        '403':
          description: Insufficient permissions
        '404':
          description: Property group or output channels not found
  /PropertyGroupMeteringConfiguration/formulas:
    get:
      tags:
        - PropertyGroupMeteringConfiguration
      summary: Retrieves a list of all available formula functions for use in property group metering configurations
      description: Retrieves a list of all available formula functions for use in property group metering configurations
      operationId: get-propertygroupmeteringconfiguration-formulas
      parameters:
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '200':
          description: Returns the list of available formula functions
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/FunctionDescriptionListApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/FunctionDescriptionListApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  - functionCategory: { }
                    functionType: { }
                    outputType: string
                    inputParameters: { }
            text/json:
              schema:
                $ref: '#/components/schemas/FunctionDescriptionListApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  - functionCategory: { }
                    functionType: { }
                    outputType: string
                    inputParameters: { }
        '401':
          description: Unauthorized access
        '403':
          description: Insufficient permissions
  '/ServiceConsumptions/{sluuid}/range':
    get:
      tags:
        - ServiceConsumptions
      summary: Gets consumption data for a service location grouped by range
      description: Gets consumption data for a service location grouped by range
      operationId: GetConsumptionsForServiceLocationGroupedOnRange
      parameters:
        - name: sluuid
          in: path
          description: Service location UUID
          required: true
          schema:
            type: string
        - name: utilityType
          in: query
          description: Type of utility
          schema:
            type: string
        - name: unitOfMeasure
          in: query
          description: Unit of measure
          schema:
            type: string
        - name: startDateTime
          in: query
          description: Format - date-time (as date-time in RFC3339). Start date and time for the data range
          schema:
            type: string
            format: date-time
        - name: endDateTime
          in: query
          description: Format - date-time (as date-time in RFC3339). End date and time for the data range
          schema:
            type: string
            format: date-time
        - name: orderBy
          in: query
          description: Order by criteria
          schema:
            type: string
        - name: continuationToken
          in: header
          description: Token for paged results continuation
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/GroupedServiceConsumptionDTOListApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/GroupedServiceConsumptionDTOListApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  - externalIdentifier: string
                    serviceLocationId: string
                    timeOfUse: string
                    utilityType: { }
                    unitOfMeasure: { }
                    minProductionDayStartUtc: string
                    maxProductionDayEndUtc: string
                    values:
                      - startDateTime: string
                        endDateTime: string
                        consumptionStartDateTime: string
                        consumptionEndDateTime: string
                        value: 0
            text/json:
              schema:
                $ref: '#/components/schemas/GroupedServiceConsumptionDTOListApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  - externalIdentifier: string
                    serviceLocationId: string
                    timeOfUse: string
                    utilityType: { }
                    unitOfMeasure: { }
                    minProductionDayStartUtc: string
                    maxProductionDayEndUtc: string
                    values:
                      - startDateTime: string
                        endDateTime: string
                        consumptionStartDateTime: string
                        consumptionEndDateTime: string
                        value: 0
  '/ServiceConsumptions/{sluuid}/range/date-range-limit':
    get:
      tags:
        - ServiceConsumptions
      summary: Gets consumption date ranges available for a service location
      description: Gets consumption date ranges available for a service location
      operationId: GetConsumptionDateRangesForServiceLocation
      parameters:
        - name: sluuid
          in: path
          description: Service location UUID
          required: true
          schema:
            type: string
        - name: utilityType
          in: query
          description: Type of utility
          schema:
            type: string
        - name: unitOfMeasure
          in: query
          description: Unit of measure
          schema:
            type: string
        - name: startDateTime
          in: query
          description: Format - date-time (as date-time in RFC3339). Start date and time for the search range
          schema:
            type: string
            format: date-time
        - name: endDateTime
          in: query
          description: Format - date-time (as date-time in RFC3339). End date and time for the search range
          schema:
            type: string
            format: date-time
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ServiceConsumptionGetDateRangeDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceConsumptionGetDateRangeDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  minProductionDayStartUtc: string
                  maxProductionDayEndUtc: string
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceConsumptionGetDateRangeDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  minProductionDayStartUtc: string
                  maxProductionDayEndUtc: string
  '/ServiceConsumptions/{sluuid}':
    get:
      tags:
        - ServiceConsumptions
      summary: Gets paginated consumption data for a service location
      description: Gets paginated consumption data for a service location
      operationId: get-serviceconsumptions-sluuid
      parameters:
        - name: sluuid
          in: path
          description: Service location UUID
          required: true
          schema:
            type: string
        - name: utilityType
          in: query
          description: Type of utility
          schema:
            type: string
        - name: unitOfMeasure
          in: query
          description: Unit of measure
          schema:
            type: string
        - name: startDateTime
          in: query
          description: Format - date-time (as date-time in RFC3339). Start date and time for the data range
          schema:
            type: string
            format: date-time
        - name: endDateTime
          in: query
          description: Format - date-time (as date-time in RFC3339). End date and time for the data range
          schema:
            type: string
            format: date-time
        - name: orderBy
          in: query
          description: Order by criteria
          schema:
            type: string
        - name: continuationToken
          in: header
          description: Token for paged results continuation
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/FlatPagedServiceConsumptionDTOPagedResponseModelDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/FlatPagedServiceConsumptionDTOPagedResponseModelDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  results:
                    - serviceLocationId: string
                      externalChannelIdentifier: string
                      utilityType: string
                      unitOfMeasure: string
                      direction: string
                      productionDay: 0
                      timeZone: string
                      productionDayStartUtc: string
                      productionDayEndUtc: string
                      startDateTime: string
                      endDateTime: string
                      value: 0
                  hasNextPage: true
                  nextPageToken: string
                  totalRecords: 0
                  sortableFields:
                    - string
                  aggregateDetails:
                    - code: string
                      translation: string
                      value: 0
                      valueDate: string
            text/json:
              schema:
                $ref: '#/components/schemas/FlatPagedServiceConsumptionDTOPagedResponseModelDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  results:
                    - serviceLocationId: string
                      externalChannelIdentifier: string
                      utilityType: string
                      unitOfMeasure: string
                      direction: string
                      productionDay: 0
                      timeZone: string
                      productionDayStartUtc: string
                      productionDayEndUtc: string
                      startDateTime: string
                      endDateTime: string
                      value: 0
                  hasNextPage: true
                  nextPageToken: string
                  totalRecords: 0
                  sortableFields:
                    - string
                  aggregateDetails:
                    - code: string
                      translation: string
                      value: 0
                      valueDate: string
  '/ServiceConsumptions/{sluuid}/raw':
    get:
      tags:
        - ServiceConsumptions
      summary: Gets raw consumption data for a service location
      description: Gets raw consumption data for a service location
      operationId: get-serviceconsumptions-sluuid-raw
      parameters:
        - name: sluuid
          in: path
          description: Service location UUID
          required: true
          schema:
            type: string
        - name: utilityType
          in: query
          description: Type of utility
          schema:
            type: string
        - name: unitOfMeasure
          in: query
          description: Unit of measure
          schema:
            type: string
        - name: startDateTime
          in: query
          description: Format - date-time (as date-time in RFC3339). Start date and time for the data range
          schema:
            type: string
            format: date-time
        - name: endDateTime
          in: query
          description: Format - date-time (as date-time in RFC3339). End date and time for the data range
          schema:
            type: string
            format: date-time
        - name: orderBy
          in: query
          description: Order by criteria
          schema:
            type: string
        - name: continuationToken
          in: header
          description: Token for paged results continuation
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ServiceConsumptionDTOPagedResponseModelDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceConsumptionDTOPagedResponseModelDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  results:
                    - externalChannelIdentifier: string
                      serviceLocationId: string
                      formulaStreamName: string
                      productionDay: 0
                      timeZone: string
                      productionDayStartUtc: string
                      productionDayEndUtc: string
                      values:
                        - value: 0
                          startDateTime: string
                          endDateTime: string
                      dataFrequency: { }
                      meteringType: { }
                      utilityType: { }
                      direction: { }
                      unitOfMeasure: { }
                      timeOfUse: string
                      total: 0
                  hasNextPage: true
                  nextPageToken: string
                  totalRecords: 0
                  sortableFields:
                    - string
                  aggregateDetails:
                    - code: string
                      translation: string
                      value: 0
                      valueDate: string
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceConsumptionDTOPagedResponseModelDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  results:
                    - externalChannelIdentifier: string
                      serviceLocationId: string
                      formulaStreamName: string
                      productionDay: 0
                      timeZone: string
                      productionDayStartUtc: string
                      productionDayEndUtc: string
                      values:
                        - value: 0
                          startDateTime: string
                          endDateTime: string
                      dataFrequency: { }
                      meteringType: { }
                      utilityType: { }
                      direction: { }
                      unitOfMeasure: { }
                      timeOfUse: string
                      total: 0
                  hasNextPage: true
                  nextPageToken: string
                  totalRecords: 0
                  sortableFields:
                    - string
                  aggregateDetails:
                    - code: string
                      translation: string
                      value: 0
                      valueDate: string
  /ServiceConsumptions/export/sum:
    post:
      tags:
        - ServiceConsumptions
      summary: Gets sum of consumption values for a list of service locations
      description: Gets sum of consumption values for a list of service locations
      operationId: post-serviceconsumptions-export-sum
      parameters:
        - name: continuationToken
          in: header
          description: Token for paged results continuation
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: Request containing service location IDs and date range
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ServiceConsumptionSumRequest'
            example:
              locationIds:
                - string
              quickFilter: string
              startDateTime: string
              endDateTime: string
              sumByUtilityType: true
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ServiceConsumptionSumRequest'
            example:
              locationIds:
                - string
              quickFilter: string
              startDateTime: string
              endDateTime: string
              sumByUtilityType: true
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ServiceConsumptionSumRequest'
            example:
              locationIds:
                - string
              quickFilter: string
              startDateTime: string
              endDateTime: string
              sumByUtilityType: true
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AggregatedServiceConsumptionsByServiceLocationDTOPagedResponseModelDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/AggregatedServiceConsumptionsByServiceLocationDTOPagedResponseModelDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  results:
                    - serviceLocation: string
                      serviceLocationAddress:
                        streetName: string
                        streetNumber: string
                        streetNumberAddition: string
                        postalCode: string
                        buildingName: string
                        locality: string
                        city: string
                        country: { }
                        localizedDisplay: string
                        lineOne: string
                        lineTwo: string
                      utilityType: { }
                      unitOfMeasure: { }
                      timeOfUse: string
                      periodStartDate: string
                      periodEndDate: string
                      total: 0
                  hasNextPage: true
                  nextPageToken: string
                  totalRecords: 0
                  sortableFields:
                    - string
                  aggregateDetails:
                    - code: string
                      translation: string
                      value: 0
                      valueDate: string
            text/json:
              schema:
                $ref: '#/components/schemas/AggregatedServiceConsumptionsByServiceLocationDTOPagedResponseModelDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  results:
                    - serviceLocation: string
                      serviceLocationAddress:
                        streetName: string
                        streetNumber: string
                        streetNumberAddition: string
                        postalCode: string
                        buildingName: string
                        locality: string
                        city: string
                        country: { }
                        localizedDisplay: string
                        lineOne: string
                        lineTwo: string
                      utilityType: { }
                      unitOfMeasure: { }
                      timeOfUse: string
                      periodStartDate: string
                      periodEndDate: string
                      total: 0
                  hasNextPage: true
                  nextPageToken: string
                  totalRecords: 0
                  sortableFields:
                    - string
                  aggregateDetails:
                    - code: string
                      translation: string
                      value: 0
                      valueDate: string
  '/ServiceConsumptions/{sluuid}/flat':
    get:
      tags:
        - ServiceConsumptions
      summary: Gets flat consumption data for a service location with optional grouping by period
      description: Gets flat consumption data for a service location with optional grouping by period
      operationId: get-serviceconsumptions-sluuid-flat
      parameters:
        - name: sluuid
          in: path
          description: Service location UUID
          required: true
          schema:
            type: string
        - name: utilityType
          in: query
          description: Type of utility
          schema:
            type: string
        - name: unitOfMeasure
          in: query
          description: Unit of measure
          schema:
            type: string
        - name: groupByPeriod
          in: query
          description: Period to group data by
          schema:
            type: string
        - name: startDateTime
          in: query
          description: Format - date-time (as date-time in RFC3339). Start date and time for the data range
          schema:
            type: string
            format: date-time
        - name: endDateTime
          in: query
          description: Format - date-time (as date-time in RFC3339). End date and time for the data range
          schema:
            type: string
            format: date-time
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/FlatServiceConsumptionDTOListApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/FlatServiceConsumptionDTOListApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  - startDateTime: string
                    endDateTime: string
                    consumptionStartDateTime: string
                    consumptionEndDateTime: string
                    value: 0
            text/json:
              schema:
                $ref: '#/components/schemas/FlatServiceConsumptionDTOListApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  - startDateTime: string
                    endDateTime: string
                    consumptionStartDateTime: string
                    consumptionEndDateTime: string
                    value: 0
  '/ServiceConsumptions/{sluuid}/types':
    get:
      tags:
        - ServiceConsumptions
      summary: Gets available consumption types for a service location
      description: Gets available consumption types for a service location
      operationId: get-serviceconsumptions-sluuid-types
      parameters:
        - name: sluuid
          in: path
          description: Service location UUID
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ConsumptionTypeDTOListApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ConsumptionTypeDTOListApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  - utilityType: { }
                    unitOfMeasure: { }
                    timeOfUse: string
                    formulaStreamName: string
            text/json:
              schema:
                $ref: '#/components/schemas/ConsumptionTypeDTOListApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  - utilityType: { }
                    unitOfMeasure: { }
                    timeOfUse: string
                    formulaStreamName: string
  /ServiceConsumptions/aggregatedperperiod:
    post:
      tags:
        - ServiceConsumptions
      summary: Gets aggregated service consumptions per period for a list of service locations
      description: Gets aggregated service consumptions per period for a list of service locations
      operationId: post-serviceconsumptions-aggregatedperperiod
      parameters:
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: Request containing service location IDs and grouping period
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/AggregatedServiceConsumptionPerPeriodRequest'
            example:
              serviceLocationIds:
                - string
              groupByPeriod: { }
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/AggregatedServiceConsumptionPerPeriodRequest'
            example:
              serviceLocationIds:
                - string
              groupByPeriod: { }
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/AggregatedServiceConsumptionPerPeriodRequest'
            example:
              serviceLocationIds:
                - string
              groupByPeriod: { }
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AggregatedServiceConsumptionsPerPeriodDTOListApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/AggregatedServiceConsumptionsPerPeriodDTOListApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  - total: 0
                    utilityType: { }
                    unitOfMeasure: { }
                    period: 0
            text/json:
              schema:
                $ref: '#/components/schemas/AggregatedServiceConsumptionsPerPeriodDTOListApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  - total: 0
                    utilityType: { }
                    unitOfMeasure: { }
                    period: 0
  /ServiceConsumptions/yearlyaverage:
    post:
      tags:
        - ServiceConsumptions
      summary: Gets yearly average consumption per service location
      description: Gets yearly average consumption per service location
      operationId: post-serviceconsumptions-yearlyaverage
      parameters:
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: Request containing service location IDs
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/AverageServiceConsumptionPerServiceLocationRequest'
            example:
              serviceLocationIds:
                - string
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/AverageServiceConsumptionPerServiceLocationRequest'
            example:
              serviceLocationIds:
                - string
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/AverageServiceConsumptionPerServiceLocationRequest'
            example:
              serviceLocationIds:
                - string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AverageServiceConsumptionPerServiceLocationDTOListApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/AverageServiceConsumptionPerServiceLocationDTOListApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  - total: 0
                    amountOfDays: 0
                    utilityType: { }
                    unitOfMeasure: { }
                    serviceLocationId: string
                    averagePerYear: 0
                    period: 0
            text/json:
              schema:
                $ref: '#/components/schemas/AverageServiceConsumptionPerServiceLocationDTOListApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  - total: 0
                    amountOfDays: 0
                    utilityType: { }
                    unitOfMeasure: { }
                    serviceLocationId: string
                    averagePerYear: 0
                    period: 0
  '/Integrations/import/{meteringImportId}/issuescount':
    get:
      tags:
        - Integrations
      summary: Get a count of issues detected during import validation and processing.
      description: Get a count of issues detected during import validation and processing.
      operationId: get-integrations-import-meteringimportid-issuescount
      parameters:
        - name: meteringImportId
          in: path
          description: The ID of the metering import.
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/MeteringImportIssuesCountDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/MeteringImportIssuesCountDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  invalidFormatErrors:
                    - errorCode: string
                      count: 0
                  invalidDataErrors:
                    - errorCode: string
                      count: 0
            text/json:
              schema:
                $ref: '#/components/schemas/MeteringImportIssuesCountDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  invalidFormatErrors:
                    - errorCode: string
                      count: 0
                  invalidDataErrors:
                    - errorCode: string
                      count: 0
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
  /ServiceConsumptions/buckets:
    post:
      tags:
        - ServiceConsumptions
      summary: Gets consumption data for a service locations grouped by provided buckets
      description: Gets consumption data for a service locations grouped by provided buckets
      operationId: post-serviceconsumptions-buckets
      parameters:
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: Request containing buckets and parameters needed to determine service consumption source
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BucketedServiceConsumptionRequest'
            example:
              serviceLocationIds:
                - string
              buckets:
                - startDateTime: string
                  endDateTime: string
              utilityType: { }
              unitOfMeasure: { }
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BucketedServiceConsumptionRequest'
            example:
              serviceLocationIds:
                - string
              buckets:
                - startDateTime: string
                  endDateTime: string
              utilityType: { }
              unitOfMeasure: { }
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BucketedServiceConsumptionRequest'
            example:
              serviceLocationIds:
                - string
              buckets:
                - startDateTime: string
                  endDateTime: string
              utilityType: { }
              unitOfMeasure: { }
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ServiceConsumptionBucketDTOListApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceConsumptionBucketDTOListApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  - value: 0
                    startDateTime: string
                    endDateTime: string
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceConsumptionBucketDTOListApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  - value: 0
                    startDateTime: string
                    endDateTime: string
components:
  schemas:
    AddMeasurementRequest:
      type: object
      properties:
        endDateTime:
          type: string
          format: date-time
        value:
          type: number
          format: double
        externalChannelIdentifier:
          type: string
          nullable: true
        meterId:
          type: string
          nullable: true
        skipValidation:
          type: boolean
        resolveIssuesManually:
          type: boolean
      additionalProperties: false
    AddressDTO:
      type: object
      properties:
        streetName:
          type: string
          nullable: true
        streetNumber:
          type: string
          nullable: true
        streetNumberAddition:
          type: string
          nullable: true
        postalCode:
          type: string
          nullable: true
        buildingName:
          type: string
          nullable: true
        locality:
          type: string
          nullable: true
        city:
          type: string
          nullable: true
        country:
          allOf:
            - $ref: '#/components/schemas/CountryCode'
          nullable: true
        localizedDisplay:
          type: string
          nullable: true
        lineOne:
          type: string
          nullable: true
        lineTwo:
          type: string
          nullable: true
      additionalProperties: false
    AdjacentMeasurementPairsDTO:
      type: object
      properties:
        pairs:
          type: array
          items:
            $ref: '#/components/schemas/MeasurementPairDTO'
          nullable: true
      additionalProperties: false
    AdjacentMeasurementPairsDTOApiResponseDTO:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/LocalisedErrorDTO'
          nullable: true
        success:
          type: boolean
        applicableEntitiesCount:
          type: integer
          format: int32
        requestedEntitiesCount:
          type: integer
          format: int32
        succeededEntitiesCount:
          type: integer
          format: int32
          readOnly: true
        isSynchronous:
          type: boolean
        data:
          allOf:
            - $ref: '#/components/schemas/AdjacentMeasurementPairsDTO'
          description: The updated entity in case of modifications or creation
          nullable: true
      additionalProperties: false
    AdvanceAmountChangedBy:
      enum:
        - systeminvoicecalculation
        - customer
        - customerservicerepresentative
      type: string
    AdvanceAmountLimitType:
      enum:
        - fixed
        - percentage
      type: string
    AdvanceCalculationFallbackReason:
      enum:
        - na
        - deviationtoolow
        - accuracytoolow
        - estimationfailed
        - estimationfailedanddeviationtoolow
        - manuallyoverridden
      type: string
    AdvanceFrequency:
      enum:
        - none
        - monthly
        - quarterly
        - halfyearly
      type: string
    AdvanceRecalculationType:
      enum:
        - none
        - usingpreviousinvoice
        - usingestimatedinvoice
      type: string
    AggregateDetailsDTO:
      type: object
      properties:
        code:
          type: string
          nullable: true
        translation:
          type: string
          nullable: true
        value:
          type: number
          format: double
          nullable: true
        valueDate:
          type: string
          format: date-time
          nullable: true
      additionalProperties: false
    AggregatedConsumptionsByMeterDTO:
      type: object
      properties:
        meterSerialNumber:
          type: string
          nullable: true
        meterTag:
          type: string
          nullable: true
        utilityType:
          allOf:
            - $ref: '#/components/schemas/UtilityType'
          nullable: true
        unitOfMeasure:
          allOf:
            - $ref: '#/components/schemas/UnitOfMeasure'
          nullable: true
        timeOfUse:
          type: string
          nullable: true
        periodStartDate:
          type: string
          format: date-time
          nullable: true
        periodEndDate:
          type: string
          format: date-time
          nullable: true
        propertyGroupId:
          type: string
          nullable: true
        propertyGroupName:
          type: string
          nullable: true
        total:
          type: number
          format: double
      additionalProperties: false
    AggregatedConsumptionsByMeterDTOListApiResponseDTO:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/LocalisedErrorDTO'
          nullable: true
        success:
          type: boolean
        applicableEntitiesCount:
          type: integer
          format: int32
        requestedEntitiesCount:
          type: integer
          format: int32
        succeededEntitiesCount:
          type: integer
          format: int32
          readOnly: true
        isSynchronous:
          type: boolean
        data:
          type: array
          items:
            $ref: '#/components/schemas/AggregatedConsumptionsByMeterDTO'
          description: The updated entity in case of modifications or creation
          nullable: true
      additionalProperties: false
    AggregatedServiceConsumptionPerPeriodRequest:
      type: object
      properties:
        serviceLocationIds:
          type: array
          items:
            type: string
          nullable: true
        groupByPeriod:
          allOf:
            - $ref: '#/components/schemas/AggregationFrequency'
          nullable: true
      additionalProperties: false
    AggregatedServiceConsumptionsByServiceLocationDTO:
      type: object
      properties:
        serviceLocation:
          type: string
          nullable: true
        serviceLocationAddress:
          allOf:
            - $ref: '#/components/schemas/AddressDTO'
          nullable: true
        utilityType:
          allOf:
            - $ref: '#/components/schemas/UtilityType'
          nullable: true
        unitOfMeasure:
          allOf:
            - $ref: '#/components/schemas/UnitOfMeasure'
          nullable: true
        timeOfUse:
          type: string
          nullable: true
        periodStartDate:
          type: string
          format: date-time
          nullable: true
        periodEndDate:
          type: string
          format: date-time
          nullable: true
        total:
          type: number
          format: double
      additionalProperties: false
    AggregatedServiceConsumptionsByServiceLocationDTOPagedResponseModelDTO:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/AggregatedServiceConsumptionsByServiceLocationDTO'
          nullable: true
        hasNextPage:
          type: boolean
        nextPageToken:
          type: string
          nullable: true
        totalRecords:
          type: integer
          format: int32
        sortableFields:
          type: array
          items:
            type: string
          nullable: true
        aggregateDetails:
          type: array
          items:
            $ref: '#/components/schemas/AggregateDetailsDTO'
          nullable: true
      additionalProperties: false
    AggregatedServiceConsumptionsByServiceLocationDTOPagedResponseModelDTOApiResponseDTO:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/LocalisedErrorDTO'
          nullable: true
        success:
          type: boolean
        applicableEntitiesCount:
          type: integer
          format: int32
        requestedEntitiesCount:
          type: integer
          format: int32
        succeededEntitiesCount:
          type: integer
          format: int32
          readOnly: true
        isSynchronous:
          type: boolean
        data:
          allOf:
            - $ref: '#/components/schemas/AggregatedServiceConsumptionsByServiceLocationDTOPagedResponseModelDTO'
          description: The updated entity in case of modifications or creation
          nullable: true
      additionalProperties: false
    AggregatedServiceConsumptionsPerPeriodDTO:
      type: object
      properties:
        total:
          type: number
          format: double
        utilityType:
          allOf:
            - $ref: '#/components/schemas/UtilityType'
          nullable: true
        unitOfMeasure:
          allOf:
            - $ref: '#/components/schemas/UnitOfMeasure'
          nullable: true
        period:
          type: integer
          format: int32
      additionalProperties: false
    AggregatedServiceConsumptionsPerPeriodDTOListApiResponseDTO:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/LocalisedErrorDTO'
          nullable: true
        success:
          type: boolean
        applicableEntitiesCount:
          type: integer
          format: int32
        requestedEntitiesCount:
          type: integer
          format: int32
        succeededEntitiesCount:
          type: integer
          format: int32
          readOnly: true
        isSynchronous:
          type: boolean
        data:
          type: array
          items:
            $ref: '#/components/schemas/AggregatedServiceConsumptionsPerPeriodDTO'
          description: The updated entity in case of modifications or creation
          nullable: true
      additionalProperties: false
    AggregationFrequency:
      enum:
        - none
        - daily
        - monthly
        - yearly
      type: string
    AggregationType:
      enum:
        - Max
        - Avg
        - Sum
        - Min
      type: string
    AnnualStatementOrigin:
      enum:
        - scheduledrun
        - manual
      type: string
    AnnualStatementStatus:
      enum:
        - created
        - generationinprogress
        - generated
        - generationfailed
      type: string
    ApiResponseDTO:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/LocalisedErrorDTO'
          nullable: true
        success:
          type: boolean
        applicableEntitiesCount:
          type: integer
          format: int32
        requestedEntitiesCount:
          type: integer
          format: int32
        succeededEntitiesCount:
          type: integer
          format: int32
          readOnly: true
        isSynchronous:
          type: boolean
      additionalProperties: false
    AppEnvironment:
      enum:
        - development
        - staging
        - production
        - cli
      type: string
    AttachmentVisibility:
      enum:
        - internal
        - portal
        - portalandmovein
      type: string
    AttributeType:
      enum:
        - meterserialnumber
        - externalidentifier
        - meteringtype
        - direction
        - parentmeterserialnumber
        - unitofmeasure
        - timeofuse
        - utilitytype
        - externalreference
      type: string
    AverageServiceConsumptionPerServiceLocationDTO:
      type: object
      properties:
        total:
          type: number
          format: double
        amountOfDays:
          type: integer
          format: int32
        utilityType:
          allOf:
            - $ref: '#/components/schemas/UtilityType'
          nullable: true
        unitOfMeasure:
          allOf:
            - $ref: '#/components/schemas/UnitOfMeasure'
          nullable: true
        serviceLocationId:
          type: string
          nullable: true
        averagePerYear:
          type: number
          format: double
        period:
          type: integer
          format: int32
      additionalProperties: false
    AverageServiceConsumptionPerServiceLocationDTOListApiResponseDTO:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/LocalisedErrorDTO'
          nullable: true
        success:
          type: boolean
        applicableEntitiesCount:
          type: integer
          format: int32
        requestedEntitiesCount:
          type: integer
          format: int32
        succeededEntitiesCount:
          type: integer
          format: int32
          readOnly: true
        isSynchronous:
          type: boolean
        data:
          type: array
          items:
            $ref: '#/components/schemas/AverageServiceConsumptionPerServiceLocationDTO'
          description: The updated entity in case of modifications or creation
          nullable: true
      additionalProperties: false
    AverageServiceConsumptionPerServiceLocationRequest:
      type: object
      properties:
        serviceLocationIds:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
    BankStatementCreditDebit:
      enum:
        - unknown
        - debit
        - credit
      type: string
    BankTransactionType:
      enum:
        - unknown
        - sddreversal
        - sctreceived
      type: string
    BaseMeteringIssueDetailsDTO:
      type: object
      additionalProperties: false
    BaseMeteringIssueResolutionDetailsDTO:
      type: object
      properties:
        resolvedByUserId:
          type: string
          nullable: true
        newValue:
          type: number
          format: double
          nullable: true
          deprecated: true
      additionalProperties: false
    BaseMeteringIssueResolutionValueDTO:
      type: object
      additionalProperties: false
    BillingCalculationStreamStatus:
      enum:
        - open
        - finished
      type: string
    BillingCalculationType:
      enum:
        - consumption
        - subscription
        - attribute
        - consumptionunit
        - customentityproperty
      type: string
    BillingCompletenessQuickFilter:
      enum:
        - all
        - waiting
        - inputmissing
        - manuallycorrected
        - previousstillopen
        - missingadvances
      type: string
    BillingCompletenessStatus:
      enum:
        - waiting
        - gatheringinput
        - inputmissing
        - pendingcalculation
        - calculating
        - closed
        - previousnotclosed
        - manuallycorrected
        - waitingforapproval
        - manuallyclosed
        - waitingfornextestimation
      type: string
    BillingCompletenessTariffInputType:
      enum:
        - paymentmethod
        - customentityproperty
      type: string
    BillingItemLevel:
      enum:
        - contract
        - service
      type: string
    BillingItemTariffCalculationType:
      enum:
        - unitprice
        - tiered
        - volume
        - stairstep
        - condition
      type: string
    BillingItemTariffConditionType:
      enum:
        - paymentmethod
        - customentitypropertytype
      type: string
    BillingRelationScenarioType:
      enum:
        - advanceamountchanged
      type: string
    BillingScope:
      enum:
        - contract
        - location
      type: string
    BillingTariffInputType:
      enum:
        - none
        - fixed
        - costcomponent
      type: string
    BooleanApiResponseDTO:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/LocalisedErrorDTO'
          nullable: true
        success:
          type: boolean
        applicableEntitiesCount:
          type: integer
          format: int32
        requestedEntitiesCount:
          type: integer
          format: int32
        succeededEntitiesCount:
          type: integer
          format: int32
          readOnly: true
        isSynchronous:
          type: boolean
        data:
          type: boolean
          description: The updated entity in case of modifications or creation
      additionalProperties: false
    BucketedServiceConsumptionRequest:
      type: object
      properties:
        serviceLocationIds:
          type: array
          items:
            type: string
          nullable: true
        buckets:
          type: array
          items:
            $ref: '#/components/schemas/DateRange'
          nullable: true
        utilityType:
          allOf:
            - $ref: '#/components/schemas/UtilityType'
          nullable: true
        unitOfMeasure:
          allOf:
            - $ref: '#/components/schemas/UnitOfMeasure'
          nullable: true
      additionalProperties: false
    BulkCreateMutingRuleRequest:
      type: object
      properties:
        errorType:
          allOf:
            - $ref: '#/components/schemas/MeteringIssueError'
          nullable: true
        message:
          type: string
          nullable: true
        timePeriod:
          allOf:
            - $ref: '#/components/schemas/MutingRuleTimePeriod'
          nullable: true
        onlyValidate:
          type: boolean
        queryParams:
          allOf:
            - $ref: '#/components/schemas/GetMetersQueryParams'
          nullable: true
        quickFilter:
          type: string
          nullable: true
      additionalProperties: false
    BulkDeleteMeasurementRequest:
      type: object
      properties:
        onlyValidate:
          type: boolean
        queryParams:
          allOf:
            - $ref: '#/components/schemas/GetMeasurementsQueryParams'
          nullable: true
        quickFilter:
          type: string
          nullable: true
      additionalProperties: false
    BulkDeleteMeteringImportsRequest:
      type: object
      properties:
        onlyValidate:
          type: boolean
        queryParams:
          allOf:
            - $ref: '#/components/schemas/GetMeteringImportsQueryParams'
          nullable: true
        quickFilter:
          type: string
          nullable: true
      additionalProperties: false
    BulkIgnoreMeteringIssueRequest:
      type: object
      properties:
        message:
          type: string
          nullable: true
        onlyValidate:
          type: boolean
        queryParams:
          allOf:
            - $ref: '#/components/schemas/GetMeteringIssuesQueryParams'
          nullable: true
        quickFilter:
          type: string
          nullable: true
      additionalProperties: false
    BulkMarkMeteringImportsAsProcessedRequest:
      type: object
      properties:
        onlyValidate:
          type: boolean
        queryParams:
          allOf:
            - $ref: '#/components/schemas/GetMeteringImportsQueryParams'
          nullable: true
        quickFilter:
          type: string
          nullable: true
      additionalProperties: false
    BulkProcessMeteringImportRequest:
      type: object
      properties:
        onlyValidate:
          type: boolean
        queryParams:
          allOf:
            - $ref: '#/components/schemas/GetMeteringImportsQueryParams'
          nullable: true
        quickFilter:
          type: string
          nullable: true
      additionalProperties: false
    BulkResolveMeteringIssueRequest:
      type: object
      properties:
        message:
          type: string
          nullable: true
        resolutionValue:
          allOf:
            - $ref: '#/components/schemas/BaseMeteringIssueResolutionValueDTO'
          nullable: true
        onlyValidate:
          type: boolean
        queryParams:
          allOf:
            - $ref: '#/components/schemas/GetMeteringIssuesQueryParams'
          nullable: true
        quickFilter:
          type: string
          nullable: true
      additionalProperties: false
    CalculateOutputChannelForPropertyGroupMeteringConfigurationRequest:
      type: object
      properties:
        startDateTime:
          type: string
          format: date-time
        endDateTime:
          type: string
          format: date-time
        simulationOnly:
          type: boolean
      additionalProperties: false
    CalculatedConsumptionDTO:
      type: object
      properties:
        outputChannelId:
          type: string
          nullable: true
        consumptions:
          type: array
          items:
            $ref: '#/components/schemas/CalculatedConsumptionForOutputChannelDTO'
          nullable: true
      additionalProperties: false
    CalculatedConsumptionDTOListApiResponseDTO:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/LocalisedErrorDTO'
          nullable: true
        success:
          type: boolean
        applicableEntitiesCount:
          type: integer
          format: int32
        requestedEntitiesCount:
          type: integer
          format: int32
        succeededEntitiesCount:
          type: integer
          format: int32
          readOnly: true
        isSynchronous:
          type: boolean
        data:
          type: array
          items:
            $ref: '#/components/schemas/CalculatedConsumptionDTO'
          description: The updated entity in case of modifications or creation
          nullable: true
      additionalProperties: false
    CalculatedConsumptionForOutputChannelDTO:
      type: object
      properties:
        startDateTime:
          type: string
          format: date-time
        endDateTime:
          type: string
          format: date-time
        value:
          type: number
          format: double
      additionalProperties: false
    CalculatedLineStatus:
      enum:
        - created
        - transferred
        - approved
      type: string
    CancelMutingRuleAggregateRequest:
      type: object
      properties:
        errorType:
          allOf:
            - $ref: '#/components/schemas/MeteringIssueError'
          nullable: true
        message:
          type: string
          nullable: true
        timePeriod:
          allOf:
            - $ref: '#/components/schemas/MutingRuleTimePeriod'
          nullable: true
        muteFromWithNumericValue:
          type: integer
          format: int32
        muteUntilWithNumericValue:
          type: integer
          format: int32
        userId:
          type: string
          nullable: true
      additionalProperties: false
    CancelMutingRuleRequest:
      type: object
      properties:
        errorType:
          allOf:
            - $ref: '#/components/schemas/MeteringIssueError'
          nullable: true
        meterIds:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
    ChannelMeasurementRequest:
      type: object
      properties:
        utilityType:
          allOf:
            - $ref: '#/components/schemas/UtilityType'
          description: "Indicates what kind of utility the measurement is about (electricity, heat, ...).\r\n\r\nRecommended to be set when the ZFH.DataTransfer.Metering.DTO.v1.Requests.MeteringImports.ChannelMeasurementRequest.ExternalChannelIdentifier is not set to ensure the correct\r\nchannel can be detected."
          nullable: true
        unitOfMeasure:
          allOf:
            - $ref: '#/components/schemas/UnitOfMeasure'
          description: "Indicates the unit of measurement.\r\n\r\nRecommended to be set when the ZFH.DataTransfer.Metering.DTO.v1.Requests.MeteringImports.ChannelMeasurementRequest.ExternalChannelIdentifier is not set to ensure the correct\r\nchannel can be detected."
          nullable: true
        meteringType:
          allOf:
            - $ref: '#/components/schemas/MeteringType'
          description: "Indicates what kind of metering the measurement is about (energy, volume, ...)\r\n\r\nRecommended to be set when the ZFH.DataTransfer.Metering.DTO.v1.Requests.MeteringImports.ChannelMeasurementRequest.ExternalChannelIdentifier is not set to ensure the correct\r\nchannel can be detected."
          nullable: true
        direction:
          allOf:
            - $ref: '#/components/schemas/Direction'
          description: "Is the measurement about injection or off take?\r\n\r\nRecommended to be set when the ZFH.DataTransfer.Metering.DTO.v1.Requests.MeteringImports.ChannelMeasurementRequest.ExternalChannelIdentifier is not set to ensure the correct\r\nchannel can be detected."
          nullable: true
        meterSerialNumber:
          type: string
          description: The serial number of the meter for which the measurements are taken.
          nullable: true
        externalChannelIdentifier:
          type: string
          description: "The channel identifier for the specified meter within the Zero Friction platform.\r\n\r\nIf this is not set, it is recommended to configure the following properties to ensure the correct\r\nchannel can be detected.\r\n- ZFH.DataTransfer.Metering.DTO.v1.Requests.MeteringImports.ChannelMeasurementRequest.UtilityType\r\n- ZFH.DataTransfer.Metering.DTO.v1.Requests.MeteringImports.ChannelMeasurementRequest.UnitOfMeasure\r\n- ZFH.DataTransfer.Metering.DTO.v1.Requests.MeteringImports.ChannelMeasurementRequest.MeteringType\r\n- ZFH.DataTransfer.Metering.DTO.v1.Requests.MeteringImports.ChannelMeasurementRequest.Direction"
          nullable: true
        measurements:
          type: array
          items:
            $ref: '#/components/schemas/MeasurementRequest'
          description: "The actual measurement values.\r\n\r\nThe total number of measurements supported across channel measurements in one request is limited to 5000.\r\nIf you, for instance, have two channel measurements with more than 2500 measurements per channel, a validation\r\nerror will be returned."
          nullable: true
      additionalProperties: false
      description: Holds the measurements for a specific meter.
    CollectionCaseQuickFilter:
      enum:
        - all
        - active
        - requiresmanualintervention
        - closed
        - requireattention
      type: string
    CollectionChargeType:
      enum:
        - none
        - fixed
        - percentageofopenamount
        - tieredpercentageofopenamount
      type: string
    CollectionFlowStatus:
      enum:
        - active
        - manuallyclosed
        - automaticallyclosed
      type: string
    CollectionStepLevel:
      enum:
        - collection
        - reminder
        - noticeofdefault
      type: string
    CollectionStepStatus:
      enum:
        - pending
        - waitingformanualsend
        - closed
        - inprogress
        - skipped
        - generatingdocuments
        - failed
        - printing
      type: string
    CollectionStepType:
      enum:
        - communication
        - manualintervention
      type: string
    CommunicationDocumentType:
      enum:
        - maindocument
        - additionaldocument
        - emailbody
      type: string
    CommunicationEntryQuickFilter:
      enum:
        - all
        - failed
      type: string
    CommunicationEntryStatus:
      enum:
        - generating
        - sending
        - failed
        - successful
        - skipped
      type: string
    CommunicationType:
      enum:
        - postal
        - none
        - email
        - manual
        - skipifsdd
        - sms
      type: string
    ConsumerGroupOrigin:
      enum:
        - manual
        - systemgenerated
      type: string
    ConsumerGroupSuggestion:
      enum:
        - frompropertygroup
        - originmanual
        - originsystemgenerated
      type: string
    ConsumptionOrigin:
      enum:
        - actual
        - manual
        - frompreviousyear
        - fromconsumergroup
        - forecast
      type: string
    ConsumptionTypeDTO:
      type: object
      properties:
        utilityType:
          allOf:
            - $ref: '#/components/schemas/UtilityType'
          nullable: true
        unitOfMeasure:
          allOf:
            - $ref: '#/components/schemas/UnitOfMeasure'
          nullable: true
        timeOfUse:
          type: string
          nullable: true
        formulaStreamName:
          type: string
          nullable: true
      additionalProperties: false
    ConsumptionTypeDTOListApiResponseDTO:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/LocalisedErrorDTO'
          nullable: true
        success:
          type: boolean
        applicableEntitiesCount:
          type: integer
          format: int32
        requestedEntitiesCount:
          type: integer
          format: int32
        succeededEntitiesCount:
          type: integer
          format: int32
          readOnly: true
        isSynchronous:
          type: boolean
        data:
          type: array
          items:
            $ref: '#/components/schemas/ConsumptionTypeDTO'
          description: The updated entity in case of modifications or creation
          nullable: true
      additionalProperties: false
    ContactType:
      enum:
        - email
        - telephone
        - mobiletelephone
        - website
      type: string
    ContractBillingMethod:
      enum:
        - credit
        - prepayment
      type: string
    ContractQuickFilter:
      enum:
        - all
        - ongoing
        - draft
        - blocked
        - requireattention
      type: string
    ContractScenarioType:
      enum:
        - welcome
        - termination
        - locationsadded
        - locationsremoved
      type: string
    ContractServicesUpdatedAction:
      enum:
        - servicesadded
        - servicesremoved
        - servicesupdated
        - servicescorrected
      type: string
    ContractStatus:
      enum:
        - draft
        - sent
        - signed
        - cancelled
        - terminated
      type: string
    CountryCode:
      enum:
        - aut
        - bel
        - bgr
        - cyp
        - cze
        - dnk
        - est
        - fin
        - fra
        - deu
        - grc
        - hun
        - irl
        - ita
        - lva
        - ltu
        - lux
        - mlt
        - nld
        - pol
        - prt
        - rou
        - svk
        - esp
        - swe
        - gbr
        - che
        - isl
        - nor
        - rus
        - blr
        - ukr
        - mda
        - srb
        - alb
        - mne
        - mkd
        - tur
        - lie
        - smr
        - and
        - mco
        - bih
        - bra
        - usa
        - sgp
        - zaf
        - cuw
      type: string
    CreatePrepaymentTransactionRequest:
      type: object
      properties:
        prepaymentAccountId:
          type: string
          nullable: true
        processedDateTime:
          type: string
          format: date-time
        origin:
          allOf:
            - $ref: '#/components/schemas/PrepaymentTransactionOrigin'
          nullable: true
        type:
          allOf:
            - $ref: '#/components/schemas/PrepaymentTransactionType'
          nullable: true
        status:
          allOf:
            - $ref: '#/components/schemas/PrepaymentTransactionStatus'
          nullable: true
        amount:
          type: number
          format: double
      additionalProperties: false
    CustAgingBucketType:
      enum:
        - anyopenexcloverdue
        - anyoverdue
        - anyoverdue30
        - anyoverdue60
        - anyoverdue90
        - anyoverduemorethan90
      type: string
    CustomEntityPropertyTypeTagColor:
      enum:
        - blue
        - slate
        - green
        - yellow
        - orange
        - red
      type: string
    CustomEntityPropertyValueType:
      enum:
        - string
        - number
        - decimal
        - boolean
        - datetime
        - dropdown
      type: string
    CustomerBalance:
      enum:
        - equaltozero
        - smallerthanzero
        - greaterthanzero
      type: string
    CustomerGroupQuickFilter:
      enum:
        - all
      type: string
    CustomerQuickFilter:
      enum:
        - all
        - supplied
        - unsupplied
        - requireattention
      type: string
    CustomerScenarioType:
      enum:
        - portalconfirmation
        - portalresetpassword
        - annualstatement
      type: string
    CustomerType:
      enum:
        - person
        - organization
      type: string
    DataExportCommunicationType:
      enum:
        - manualdownload
        - ftp
        - sftp
        - ftps
      type: string
    DataExportInvoiceFormatType:
      enum:
        - lord
        - bdo
        - sapisu
      type: string
    DataFrequency:
      enum:
        - pt1m
        - pt5m
        - pt15m
        - pt30m
        - pt1h
        - p1d
        - na
      type: string
    DataImportCommunicationType:
      enum:
        - sftp
        - ftp
        - ftps
        - inboundemail
        - manualupload
        - configuredplugin
        - inboundapi
      type: string
    DataImportMeteringFormatType:
      enum:
        - elvaco_1104
        - elvaco_1112
        - customcsv
        - kamstrupready_v1
        - izarcenter
        - flamco
        - cadis
        - climaways
        - equinox_sinapsi
        - siemens_synco
        - cadislora
        - ycongouda
        - synergirbisgen3
        - synergirbisgen1_2
        - engelmann
        - inboundapi
        - synergirbisgen4
      type: string
    DataImportMigrationFormatType:
      enum:
        - zf_bulkimport
      type: string
    DataType:
      enum:
        - text
        - number
        - date
        - dateandtime
        - enumeration
      type: string
    DateRange:
      type: object
      properties:
        startDateTime:
          type: string
          format: date-time
        endDateTime:
          type: string
          format: date-time
      additionalProperties: false
    Direction:
      enum:
        - offtake
        - injection
        - na
      type: string
    DnsRecordMeaning:
      enum:
        - mailcname
        - mx
        - spf
        - dkim1
        - dkim2
      type: string
    DnsRecordStatus:
      enum:
        - unverified
        - valid
        - error
      type: string
    DocumentOutputFormat:
      enum:
        - pdf
        - html
        - xml
      type: string
    DomainProblemDataType:
      enum:
        - generalproductissue
        - generalbillingitemissue
        - generalcompanybankaccountissue
        - message
        - generalexportjobissue
        - generaltemplateissue
        - serviceconsumptioncalculationissue
        - billingcalculationissue
        - mandateissue
        - tariffcalculationissue
        - allocationcalculationissue
        - daterangeissue
        - taxperiodissue
      type: string
    DownloadOriginalMeteringImportsRequest:
      type: object
      properties:
        queryParams:
          allOf:
            - $ref: '#/components/schemas/GetMeteringImportsQueryParams'
          description: "Represents query parameters used to filter metering imports when downloading the original files of the metering\r\nimports."
          nullable: true
        quickFilter:
          type: string
          description: "Represents a quick filtering criterion used to refine the selection of metering imports\r\nwhen processing a download request."
          nullable: true
      additionalProperties: false
      description: Represents a request to download the original metering imports.
    EavEstimationRunStatus:
      enum:
        - gatheringdata
        - estimating
      type: string
    EmailConfirmationType:
      enum:
        - advanceamountchanged
        - ibanchanged
        - paymentmethodchanged
      type: string
    EntityAttachmentGroupQuickFilter:
      enum:
        - all
      type: string
    EntityAttachmentOrigin:
      enum:
        - customer
        - contract
        - product
        - entityattachmentgroup
      type: string
    EntityAttachmentQuickFilter:
      enum:
        - all
        - visibletocustomer
      type: string
    EntityAttributeType:
      enum:
        - capacity
        - quota
        - surface
        - occupants
        - propertyquota
      type: string
    EntitySubjectType:
      enum:
        - none
        - customer
        - contract
        - meter
        - servicelocation
        - invoice
        - importjob
        - propertygroup
        - payment
        - communicationentry
        - exportjob
        - dataexport
        - dataimport
        - entityattribute
        - asset
        - bankaccount
        - billingitem
        - billingtariff
        - costcomponent
        - costcomponentvalue
        - model
        - numbersequence
        - billingparameters
        - product
        - taxcode
        - template
        - billingrelation
        - transaction
        - dataimportfileformat
        - dataexportfileformat
        - tenant
        - consumption
        - attachment
        - exportjobline
        - culturetable
        - collectioncase
        - collectionflowstep
        - consumptionunittype
        - incominginvoice
        - moverequest
        - activityentry
        - commententry
        - problem
        - relatedentity
        - customeragingreport
        - billingcompleteness
        - propertygroupbillingconfiguration
        - propertygroupbillingperiod
        - collectionflow
        - configuredplugin
        - organizationscenarios
        - paymentterms
        - paymentdelaysetting
        - paymentparameters
        - domainauthenticationparameters
        - communicationparameters
        - organization
        - incominginvoicecomponent
        - costallocationcomponent
        - scheduledattempt
        - plugintrigger
        - exportentitycontainer
        - externalbankstatement
        - externalbanktransaction
        - externalmeasurement
        - importjobentityissue
        - intermediateexportformat
        - consumptionunit
        - calculatedconsumption
        - propertygroupmeteringconfiguration
        - measurement
        - externalchannel
        - serviceconsumption
        - purgerequest
        - migrationversion
        - formulaconsumption
        - templatedataobject
        - dataupgradebaseline
        - processrequest
        - validationrequest
        - postprocessrequest
        - outgoingbankingtransaction
        - incomingmutation
        - outgoingmutation
        - incomingbankingtransaction
        - customerbankaccount
        - pluginmanualtrigger
        - billingcustomer
        - enumsymboltranslation
        - scenariotranslation
        - syntheticloadprofile
        - consumergroup
        - estimablecontract
        - plugininboundwebhooktrigger
        - pluginmappingentry
        - eavestimationrun
        - customentitypropertytype
        - customentityproperty
        - pluginfeedentry
        - regionalregulationsconfiguration
        - entityattachment
        - entityattachmentgroup
        - propertygroupforecastingconfiguration
        - prepaymenttransaction
        - customeragingheader
        - estimatedbillingcompleteness
        - estimatedinvoice
        - customergroup
        - meteringissue
        - meteringparameters
        - mutingrule
        - reportmappingentry
        - meteringimport
        - prepaymentaccount
        - user
        - role
        - baseimport
        - systemusagerecord
        - portalsettings
        - annualstatement
        - organizationscenario
        - accounting
        - socialtariffexport
        - socialtariffimportheader
        - socialtariffimportline
      type: string
    Enumeration:
      type: string
    EnvelopePosition:
      enum:
        - left
        - right
      type: string
    ErrorCode:
      enum:
        - ASSET_ALREADY_EXISTS
        - ASSET_DOES_NOT_EXIST
        - TRANSLATION_ALREADY_EXISTS
        - TRANSLATION_DOES_NOT_EXIST
        - TRANSLATION_HAS_NO_CHANGES
        - TRANSLATION_HAS_NO_DEFAULT
        - NUMBER_SEQUENCE_DOES_NOT_EXIST
        - BANK_ACCOUNT_NOT_FOUND
        - BANK_ACCOUNT_ALREADY_EXISTS
        - BILLING_ITEM_ALREADY_EXISTS
        - BILLING_RELATION_NOT_BLOCKED
        - BILLING_RELATION_BLOCKED
        - BILLING_RELATION_DOES_NOT_EXIST
        - BILLING_RELATION_NOT_DUE
        - CANNOT_CREATE_ORG_FROM_ORG
        - CHANNEL_NOT_FOUND
        - CONTRACT_HAS_NO_ADVANCE_FREQUENCY
        - CONTACT_ENTRY_NOT_FOUND
        - CONTRACTUAL_ADVANCE_AMOUNT_CANNOT_BE_EMPTY_WHEN_ADVANCE_FREQUENCY_IS_NOT_NONE
        - CONTRACT_HAS_NO_SERVICES
        - CONTRACT_IS_ALREADY_SIGNED
        - CONTRACT_IS_NOT_SIGNED
        - CONTRACT_NOT_FOUND
        - COULD_NOT_APPROVE_INVOICE
        - COULD_NOT_CREATE_BILLED_SERVICE
        - COULD_NOT_CREATE_BILLING_RELATION
        - COULD_NOT_CREATE_CONTRACT
        - COULD_NOT_CREATE_CUSTOMER
        - COULD_NOT_CREATE_INVOICE
        - COULD_NOT_CREATE_METER
        - COULD_NOT_CREATE_SERVICELOCATION
        - COULD_NOT_GENERATE_CONTRACT_NUMBER
        - COULD_NOT_GENERATE_CUSTOMER_NUMBER
        - COULD_NOT_GENERATE_INVOICE_NUMBER
        - COULD_NOT_UPLOAD_FILE
        - CUSTOMER_ALREADY_EXISTS
        - CUSTOMER_DOES_NOT_EXIST
        - CUSTOMER_IS_NOT_AN_ORGANIZATION
        - CUSTOMER_IS_NOT_A_PERSON
        - DATAIMPORT_DOES_NOT_EXIST
        - DATAIMPORT_NAME_ALREADY_EXISTS
        - DOCUMENT_CATEGORY_NOT_SUPPORTED
        - DUPLICATE_CHANNEL
        - DUPLICATE_FORMAT_PROVIDER_NAME
        - DUPLICATE_SERVICE
        - DUPLICATE_SERVICELOCATION
        - END_DATE_NOT_AFTER_GIVEN_DATE
        - END_DATE_NOT_AFTER_OR_EQUAL_TO_GIVEN_DATE
        - FIELD_CANNOT_BE_EMPTY
        - FIELD_CANNOT_BE_LOWER_OR_EQUAL_TO_ZERO
        - FIELD_CANNOT_BE_NULL
        - FIELD_CANNOT_CONTAIN_SPECIAL_CHARACTERS
        - FIELD_NOT_AN_ENUM
        - FIELD_NOT_A_COUNTRY
        - FIELD_NOT_A_GUID
        - FIELD_MUST_BE_HIGHER_THAN_OR_EQUAL_TO_ZERO
        - FIELD_CAN_ONLY_CONTAIN_ALPHANUMERICAL_CHARACTERS
        - FIELDS_MUST_BE_EQUAL
        - FILEFORMATPROVIDER_ALREADY_EXISTS
        - FILEFORMATPROVIDER_DOES_NOT_EXIST
        - FILEFORMATPROVIDER_WITH_THIS_NAME_ALREADY_EXISTS
        - IBAN_EMPTY
        - IBAN_INVALID_COUNTRY
        - IBAN_MODULE_CHECK_FAILED
        - IBAN_TOO_BIG
        - IBAN_TOO_SHORT
        - INSTANCE_NAME_ALREADY_USED
        - INSTANCE_DUPLICATE_IN_LIST
        - INVALID_ENDDATETIME
        - INVALID_ENDDATETIME_OR_FORMAT
        - INVALID_CULTURE_NAME
        - INVALID_INTERVAL
        - INVALID_NUMBERFORMAT
        - INVALID_NUMBERSEQUENCE_REFERENCE_ENTITY
        - INVALID_NUMBERSEQUENCE_SEGMENT_TYPE
        - INVALID_STARTDATETIME
        - INVALID_STARTDATETIME_OR_FORMAT
        - INVALID_TIMEZONE
        - INVALID_VALUE
        - INVOICE_DOES_NOT_EXIST
        - INVOICE_LINE_SPANS_MULTIPLE_TAX_RATE_PERIODS
        - INVOICE_LINE_SPANS_NO_TAX_RATE_PERIODS
        - INVOICE_NOT_APPROVED_STATUS
        - INVOICE_NOT_CREATED_STATUS
        - INVOICE_TEMPLATE_NOT_CONFIGURED
        - INVOICE_TYPE_NOT_SUPPORTED_FOR_GENERATION
        - LIST_CANNOT_BE_EMPTY
        - METER_ALREADY_EXISTS
        - METER_DOES_NOT_EXIST
        - METER_NOT_CONFIRMED
        - METER_NOT_REQUESTED_OR_REMOVED
        - METER_REMOVED
        - MISSING_DATETIMEFORMAT
        - MISSING_DELIMITER
        - MISSING_ENDDATETIME
        - MISSING_METERSN_OR_EXTERNAL_IDENTIFIER
        - MISSING_NAME
        - MISSING_NUMBERDECIMALSEPERATOR
        - MISSING_NUMBERTHOUSANDSSEPERATOR
        - MISSING_TIMEZONE
        - MODEL_ALREADY_EXISTS
        - MODEL_BRANDNAME_EMPTY
        - MODEL_DOES_NOT_EXIST
        - MODEL_NAME_EMPTY
        - NOT_ALL_SEGMENTS_PROVIDED
        - NO_ADVANCE_FREQUENCY_BUT_AMOUNT_PROVIDED
        - NO_CONTRACTUAL_AMOUNT_BUT_ADVANCE_FREQUENCY_PROVIDED
        - NO_DEFAULT_TAXCODE_FOR_ADVANCES_SPECIFIED
        - NO_FILES_PROVIDED
        - ONE_OR_MORE_FILES_NOT_CORRECT_TYPE
        - PAYMENT_METHOD_ALREADY_USED
        - PAYMENT_METHOD_EMPTY
        - PRODUCT_DOES_NOT_EXIST
        - PROVIDER_ALREADY_CONTAINS_INSTANCE_FOR_ORG_AND_DIR
        - PROVIDER_ALREADY_CONTAINS_INSTANCE_WITH_SAME_NAME
        - SDD_REQUIRES_BANK_ACCOUNT
        - SERVICELOCATION_DOES_NOT_EXIST
        - SERVICE_ALREADY_EXISTS
        - TAXCODE_FOR_DEFAULT_ADVANCE_RATE_CANNOT_BE_DELETED
        - TAXCODE_ALREADY_EXISTS
        - TAXCODE_DOES_NOT_EXIST
        - TAX_CODE_NOT_FOUND
        - TEMPLATE_ALREADY_CONTAINS_DOCUMENT_FOR_CATEGORY_AND_TYPE
        - TEMPLATE_ALREADY_EXISTS
        - TEMPLATE_DOES_NOT_EXIST
        - TEMPLATE_HAS_ERRORS
        - VALUE_DIRECTION_MISMATCH
        - VALUE_METERINGTYPE_MISMATCH
        - VALUE_MULTIPLE_CHANNEL_CANDIDATES
        - VALUE_NO_CHANNEL_CANDIDATES
        - VALUE_TIMEOFUSE_MISMATCH
        - VALUE_UNITOFMEASURE_MISMATCH
        - BILLING_RELATION_NOT_FOUND
        - INVALID_BILLING_CALCULATION_TYPE
        - PRODUCT_ALREADY_EXISTS
        - BILLING_ITEM_DOES_NOT_EXIST
        - CANCELLATION_ITEM_DOES_NOT_EXIST
        - BILLING_TARIFF_DOES_NOT_EXIST
        - TARIFF_PERIOD_INCOMPLETE
        - DATE_CANNOT_BE_BEFORE_1900_01_01
        - FIELD_MUST_BE_EMPTY_FEATURE_NOT_YET_AVAILABLE
        - CONSUMPTION_PERIOD_INCOMPLETE
        - DUPLICATE_CONTRACT_NUMBER
        - INVOICE_NOT_GENERATED_STATUS
        - PRODUCT_HAS_NO_BILLING_ITEMS
        - INVOICE_RECALCULATION_NOT_SUPPORTED
        - ARCHIVE_DIRECTORY_CANNOT_BE_EMPTY_WHEN_DELETE_AFTER_UPLOAD
        - FIELD_NOT_AN_EMAILADRESS
        - COST_COMPONENT_DOES_NOT_EXIST
        - COST_COMPONENT_ALREADY_EXISTS
        - COST_COMPONENT_VALUE_DOES_NOT_EXIST
        - BILLING_TARIFF_UNIT_PRICE_NOT_ALLOWED_FOR_FORMULA
        - BILLING_TARIFF_MISSING_EXPRESSION
        - BILLING_TARIFF_INPUT_MISSING_REFERENCE
        - BILLING_TARIFF_INPUT_INVALID_REFERENCE
        - TARIFF_INPUT_UNSUPPORTED_INPUT_TYPE
        - TARIFF_INPUT_VARIABLE_NOT_DEFINED
        - TARIFF_INPUT_EXPRESSION_UNPARSABLE
        - TARIFF_INPUT_CANNOT_PROCESS_EXPRESSION
        - ENTITY_ATTRIBUTE_DOES_NOT_EXIST
        - ENTITY_ATTRIBUTE_ALREADY_EXISTS_FOR_SUBJECT_ID_AND_TYPE_AND_ATTRIBUTE_TYPE
        - ORGANIZATION_CODE_ALREADY_EXISTS
        - ORGANIZATION_DOES_NOT_EXIST
        - ORGANIZATION_NOT_FOUND
        - MISSING_ORGANIZATION_LOGO
        - ASSET_IS_NOT_AN_IMAGE
        - CULTURE_NOT_FOUND
        - DATA_PROVIDER_PARAMETERS_DO_NOT_MATCH_TYPE
        - CANNOT_BILL_UNBILLED_PERIODS
        - INVOICE_IS_ALREADY_CREDITED
        - NEED_DEFAULT_BANK_ACCOUNT
        - NEED_DEFAULT_BANK_ACCOUNT_FOR_SDD
        - PAYMENT_DOES_NOT_EXIST
        - PAYMENT_IS_NOT_CREATED
        - PAYMENT_CANNOT_BE_PROCESSED
        - CONTRACT_NUMBER_CANNOT_BE_EMPTY
        - ACCOUNT_NUMBER_CANNOT_BE_EMPTY
        - COMMUNICATION_TYPES_DO_NOT_MATCH
        - INVOICE_ALREADY_EXISTS
        - APPROVED_INVOICES_CANNOT_BE_DELETED
        - CREATED_INVOICES_CANNOT_BE_CREDITED
        - CATCH_ALL_COMMUNICATION_PREFERENCE_CANNOT_BE_ADDED_WHEN_OTHERS_EXIST
        - TEMPLATE_HAS_WRONG_USECASE
        - ATTACHMENT_FILE_DOES_NOT_EXIST
        - NO_TAXCODE_SPECIFIED
        - TEMPLATE_DATATYPE_NOT_CONFIGURED
        - USER_HAS_NO_EMAIL_ADDRESS
        - USER_HAS_NO_POSTAL_ADDRESS
        - NO_TEMPLATE_FOR_EMAIL_BODY
        - CANNOT_PROVIDE_VALUES_FOR_BUILTIN_FILE_FORMAT
        - CANNOT_PROVIDE_VALUES_FOR_OTHER_IMPORT_THAN_METERING
        - IMPORTJOB_DOES_NOT_EXIST
        - IMPORTJOB_HAS_INCORRECT_STATUS
        - MISSING_CUSTOMER_BANK_ACCOUNT
        - PAYMENTS_ARE_DISABLED
        - ONLY_INBOUND_PAYMENTS_CAN_BE_MATCHED
        - NO_CUSTOMER_FOUND_FOR_PAYMENT
        - CREDITED_INVOICES_FOLLOWED_BY_A_NEWER_INVOICE_CANNONT_BE_DELETED
        - NOT_A_VALID_FORMAT_STRING
        - DATE_IS_NOT_VALID
        - EMAIL_COMMUNICATION_PREFERENCE_REQUIRES_EMAILADDRESS_CONTACT_ENTRY
        - TRANSACTION_REFERENCE_DOES_NOT_EXIST
        - EXPORTJOB_HAS_INCORRECT_STATUS
        - INVALID_DEBIT_CREDIT_INDICATOR
        - INVALID_TRANSACTION_TO_SETTLE
        - COMPANY_BANK_ACCOUNT_NOT_FOUND
        - DATAEXPORT_ALREADY_EXISTS
        - DATAEXPORT_DOES_NOT_EXIST
        - COULD_NOT_CREATE_DOMAIN_WITH_SENDGRID
        - NO_DOMAIN_AUTHENTICATION_PARAMETERS_EXIST_FOR_ORGANISATION
        - COULD_NOT_VALIDATE_DOMAIN_WITH_SENDGRID
        - SENDER_EMAIL_DOMAIN_NOT_AUTHENTICATED
        - PROPERTY_DOES_NOT_EXIST
        - INVOICE_MONTH_MUST_BE_EMPTY_WHEN_INVOICE_FREQUENCY_IS_NOT_YEARLY
        - PROPERTY_WITH_GIVEN_NAME_ALREADY_EXISTS
        - MANAGEMENT_DETAILS_CANNOT_CONTAIN_DOUBLES
        - SANDBOX_MODE_NEEDS_RECIPIENT_EMAIL
        - POSTAL_NOT_SUPPORTED_FOR_NOW
        - SERVICE_LOCATION_RELATION_DOES_NOT_EXIST
        - TEMPLATE_HAS_NO_USECASE
        - PROBLEM_NOT_FOUND
        - PROBLEM_ALREADY_RESOLVED
        - ALREADY_ACTIVE_MANDATE
        - MANDATE_DOES_NOT_EXIST
        - MANDATE_IS_NOT_REQUESTED
        - COULD_NOT_GENERATE_MANDATE_NUMBER
        - PROPERTY_FOR_THIS_ADDRESS_ALREADY_EXISTS
        - SERVICE_LOCATION_IS_ALREADY_PART_OF_A_PROPERTY_AT_THIS_MOMENT
        - UNSUPPORTED_DATA_FORMAT_FOR_PAYMENT_REQUEST_DATA_EXPORT
        - FILE_COULD_NOT_BE_GENERATED
        - MISSING_ACTIVE_MANDATE
        - NO_SERVICE_LOCATION_FOUND
        - NO_PROTOCOL_SPECIFIED
        - SSH_CONNECTION_FAILED
        - FAILED_CONNECTING_TO_SOURCE
        - MISSING_COMMUNICATION_SCENARIO
        - UNKNOWN_TEMPLATE_DATA_TYPE
        - FIELD_NOT_A_VALID_TIMEZONE
        - MISSING_INTERNAL_PAYMENT_REFUND_DATAEXPORT
        - ADVANCE_FREQUENCY_CANNOT_BE_SLOWER_THAN_INVOICE_FREQUENCY
        - CANNOT_ADD_MULTIPLE_VALUES_FOR_CONSTANT_SEGMENT_TYPE
        - CREDITED_INVOICE_NOT_FOUND
        - NOT_IMPLEMENTED_YET
        - AT_LEAST_ONE_ENTITY_MUST_EXIST_FOR_REQUIRE_ATTENTION
        - MISSING_INTERNAL_PAYMENT_REQUEST_DATAEXPORT
        - EXPORTJOB_DOES_NOT_EXIST
        - NO_PROBLEMS_FOUND
        - FIELD_MUST_BE_EMPTY
        - FILE_TOO_BIG
        - DATAEXPORT_FILEFORMAT_DOES_NOT_EXISTS
        - DATAEXPORT_FILEFORMAT_SETTINGS_CATEGORY_DOES_NOT_MATCH
        - DATAEXPORT_FILEFORMAT_ALREADY_EXISTS
        - NO_PAYMENT_PARAMETERS_FOUND
        - NO_EXTERNAL_BANK_TRANSACTION_FOUND
        - PROCESSED_TRANSACTIONS_CANNOT_BE_IGNORED
        - RESUBMISSION_LIMIT_REACHED
        - TRANSACTION_NOT_A_SDD_REVERSAL
        - DATE_IS_IN_THE_PAST
        - TRANSACTION_DOES_NOT_EXIST
        - DATE_FORMAT_NOT_VALID
        - TENANT_NOT_FOUND
        - TENANT_NAME_TAKEN
        - EXPORTJOBLINE_DOES_NOT_EXIST
        - DATAIMPORT_FILEFORMAT_DOES_NOT_EXISTS
        - DATAIMPORT_FILEFORMAT_SETTINGS_CATEGORY_DOES_NOT_MATCH
        - DATAIMPORT_FILEFORMAT_ALREADY_EXISTS
        - DUPLICATE_ENTITY_ATTRIBUTE_VALUES
        - ENTITY_ATTRIBUTE_NOT_COMPATIBLE_WITH_SUBJECT_TYPE
        - METER_NOT_INSTALLED
        - PROPERTY_SERVICE_LOCATIONS_INCORRECT
        - PROPERTY_MANAGEMENT_DETAILS_INCORRECT
        - FTP_FILE_UPLOAD_FAILED
        - EXPORTJOB_HAS_NO_DATA
        - BILLING_ITEM_CALCULATION_CAN_NOT_BE_CHANGED
        - PORT_OUT_OF_RANGE
        - EXTERNAL_BANK_TRANSACTION_ALREADY_PROCESSED
        - PAYMENT_IGNORED
        - TRANSACTIONS_ALREADY_LINKED
        - DOMAIN_NAME_ALREADY_TAKEN
        - MEASUREMENT_CONTEXT_INVALID
        - MEASUREMENTS_UNLINKED
        - MEASUREMENT_NOT_FOUND
        - BANK_TRANSACTIONS_FAILED_PROCESSING
        - ACCOUNT_HOLDER_EMPTY
        - CUSTOMER_ID_MISSING
        - COULD_NOT_REVERSE_TRANSACTION
        - PAYMENT_TERMS_DO_NOT_EXIST
        - PAYMENT_TERMS_USED_BY_ORGANISATION_CANNOT_BE_DELETED
        - PAYMENT_TERMS_ALREADY_EXIST
        - SIGNED_MANDATES_NEED_AN_IBAN
        - UNITOFMEASURE_NOT_SUPPORTED_FOR_SUBSCRIPTION
        - UNITOFMEASURE_NOT_SUPPORTED_FOR_CONSUMPTION
        - UNITOFMEASURE_NOT_SUPPORTED
        - UNITOFMEASURE_NOT_SUPPORTED_FOR_ATTRIBUTE
        - UNITOFMEASURE_NOT_SUPPORTED_FOR_CONSUMPTIONUNIT
        - UNITOFMEASURE_NOT_SUPPORTED_FOR_CUSTOMENTITYPROPERTY
        - CONTRACT_NOT_SUPPORTED_FOR_NOW
        - UTILITY_TYPE_NOT_SUPPORTED_FOR_SUBSCRIPTION
        - METERING_TYPE_NOT_SUPPORTED_FOR_SUBSCRIPTION
        - LIST_CONTAINS_DUPLICATES
        - PROPERTY_HAS_NO_QUOTA
        - SERVICELOCATION_HAS_NO_QUOTA
        - PROPERTY_HAS_NO_MATCHING_AGGREGATING_METERS
        - PROPERTY_HAS_NO_MATCHING_COMMUNAL_METERS
        - FIELD_CANNOT_BE_LOWER_THAN_ZERO
        - CREDIT_NOTE_IN_UNSUPPLIED_PERIOD_CANNOT_BE_REMOVED
        - INVOICED_ADVANCES_CANNOT_BE_CREDITED
        - CREDIT_NOTE_CANNOT_BE_CREDITED
        - ONLY_CORE_SUPPORTED_FOR_NOW
        - CHANNEL_NOT_ACTIVE
        - ENTITY_TRANSLATION_ALREADY_EXISTS
        - NO_CULTURE_TABLE_FOUND_FOR_THIS_TENANT
        - ENTITY_TRANSLATION_DOES_NOT_EXIST
        - LIST_DOES_NOT_CONTAIN_GIVEN_CULTURE
        - CULTURE_NOT_SUPPORTED_BY_TENANT
        - TRANSLATED_FIELDS_CANNOT_BE_EMPTY
        - UNSUPPORTED_FILE_EXTENSION
        - INVOICE_NOT_SETTLED
        - BILLING_COMPLETENESS_ALREADY_CALCULATING
        - BILLING_COMPLETENESS_NOT_FOUND
        - BILLING_COMPLETENESS_WRONG_STATUS
        - SERVICELOCATION_EXTERNALID_ALREADY_USED
        - MANDATE_ALREADY_EXISTS
        - MISSING_RECEIVER
        - CONTRACT_TERMINATION_NOT_ON_OR_AFTER_SUPPLYSTARTDATE
        - NO_LOCK_CREATED
        - PAYMENT_DELAY_DOES_NOT_EXIST
        - PAYMENT_DELAY_ALREADY_EXISTS_FOR_TYPE
        - PAYMENT_RETRY_PARAMETERS_HAS_DUPLICATE_RETRY_ATTEMPT
        - PAYMENT_RETRY_PARAMETERS_HAS_MISSING_RETRY_ATTEMPT
        - DUPLICATE_INVOICE_NUMBER
        - INVOICE_NOT_FOUND
        - INVOICE_DOCUMENT_NOT_INCLUDED_IN_IMPORTJOB
        - IMPORTED_CONTRACTS_HAVE_NO_BILLING_RELATION
        - DUPLICATE_METER_NUMBER
        - METER_CANNOT_BE_INSTALLED_IN_MULTIPLE_LOCATIONS
        - PREVIOUS_COMPLETENESS_PERIOD_NOT_CLOSED
        - UNSUPPORTED_ENTITY_SUBJECT_TYPE
        - PRODUCT_MISSES_GIVEN_SERVICE
        - COLLECTION_CASE_DOES_NOT_EXIST
        - COLLECTION_CASE_ALREADY_CLOSED
        - INVOICE_ALREADY_IN_COLLECTION
        - COLLECTION_CASE_WORKLOW_NOT_FOUND
        - COLLECTION_CASE_MANUAL_INTERVENTION_NOT_ALLOWED
        - COLLECTION_STEP_NOT_FOUND
        - RANGE_UPPER_LIMIT_MUST_BE_HIGHER_THAN_LOWER_LIMIT
        - COLLECTION_STEP_PARAMETERS_DO_NOT_MATCH_CHARGE_TYPE
        - COLLECTION_STEP_TIER_FROMT_TO_RANGE_OVERLAPS
        - COULD_NOT_GENERATE_COLLECTION_CASE_NUMBER
        - TEMPLATE_HAS_WRONG_TARGET_TYPE
        - TEMPLATE_HAS_NO_TARGET_TYPE
        - COLLECTION_TEMPLATE_NOT_CONFIGURED
        - COLLECTION_NOT_ENABLED
        - INVOICE_CREATION_DATE_BEFORE_COLLECTION_BORDER_DATE
        - INVALID_WRITE_OFF
        - COLLECTION_STEP_ALREADY_CLOSED
        - COLLECTION_STEP_HAS_WRONG_STATUS
        - COLLECTION_FLOW_NOT_FOUND
        - COLLECTION_CASE_ALREADY_EXISTS
        - FIELD_MUST_BE_NULL_WHEN_NO_COMMUNICATION
        - FIELD_MUST_BE_NULL_WHEN_NO_CHARGE
        - NO_DATA_EXPORT_EXISTS_FOR_TYPE
        - DEBIT_SCT_PAYMENT_ALREADY_EXISTS
        - BILLING_TARIFF_EXPRESSION_NOT_ALLOWED_FOR_FORMULA
        - BILLING_TARIFF_MISSING_UNIT_PRICE
        - TRANSACTION_HAS_NO_OPEN_AMOUNT
        - PREVIOUS_COLLECTION_STEP_NOT_EXECUTED
        - NEXT_COLLECTION_STEP_ALREADY_EXECUTED
        - STEP_HAS_NO_DOCUMENT
        - CONSUMPTION_UNIT_TYPE_ALREADY_EXISTS
        - CONSUMPTION_UNIT_TYPE_DOES_NOT_EXIST
        - CONSUMPTION_UNIT_DOES_NOT_EXIST
        - CONSUMPTION_UNIT_UNIQUE_CONSTRAINT
        - INVALID_TARIFF_CALCULATION_TYPE
        - FILE_NOT_FOUND
        - TEMPLATE_IS_BUILTIN
        - CANNOT_BE_LARGER_THAN_140_CHARACTERS
        - MANDATE_WITH_IBAN_ALREADY_EXISTS
        - IBAN_ALREADY_EXISTS_FOR_CUSTOMER
        - ENDNOTE_ENDDATE_MUST_MATCH_CONTRACT_ENDDATE
        - UTILITY_TYPE_NOT_SUPPORTED_FOR_SUBSCRIPTION_ON_CONTRACT
        - COST_ALLOCATION_COMPONENT_ALREADY_EXISTS
        - COST_ALLOCATION_COMPONENT_DOES_NOT_EXIST
        - CONTRACT_CAN_ONLY_HAVE_SERVICES_OF_ONE_PROPERTY_GROUP
        - PRODUCT_NOT_PROVIDED
        - BILLING_COMPLETENESS_CAN_ONLY_BE_BILLED_VIA_PROPERTY_GROUP
        - PROP_GROUP_CALC_CONFIGURATION_ALREADY_EXISTS
        - PROP_GROUP_CALC_CONFIGURATION_CONTAINS_NO_BILLING_ITEMS
        - NO_CUSTOMER_BANK_ACCOUNT_EXISTS_WITH_GIVEN_IBAN
        - UTILITY_TYPE_REQUIRED_FOR_SUBSCRIPTION_ON_SERVICE
        - INTERMEDIATE_INVOICING_DATE_CANNOT_BE_OUTSIDE_COMPLETENESS_PERIOD
        - INTERMEDIATE_INVOICING_NOT_ALLOWED_BEFORE_CLOSED_BILLINGCOMPLETENESS_PERIODS
        - PROPERTY_METERING_CONFIGURATION_NOT_FOUND
        - DUPLICATE_OUTPUT_CHANNEL
        - PROPERTY_METERING_CONFIGURATION_NOT_VALIDATED
        - OUTPUT_CHANNEL_NOT_FOUND
        - NO_MATCHING_METERS_FOUND
        - NO_SERVICECONSUMPTIONS_FOUND
        - MISSING_SERVICECONSUMPTIONS
        - MISSING_SERVICECONSUMPTIONS_FOR_COMPLETE_PERIOD
        - NO_METERCONSUMPTIONS_FOUND
        - MISSING_METERCONSUMPTIONS_FOR_COMPLETE_PERIOD
        - BILLING_CONFIGURATION_FOR_PROPERTY_DOES_NOT_EXIST
        - PROP_GROUP_CALC_CONFIGURATION_NAMES_MUST_BE_UNIQUE
        - PROPERTY_GROUP_BILLING_CONFIGURATION_REQUIRED_INCOMING_INVOICE_COMPONENTS_MUST_BE_UNIQUE
        - INCOMING_INVOICE_ALREADY_EXISTS
        - INCOMING_INVOICE_COMPONENT_DOES_NOT_EXIST
        - SERVICE_LOCATION_ALREADY_USED_IN_OTHER_PROPERTY_GROUP_BILLING_CONFIGURATION
        - PROPERTY_GROUP_BILLING_CONFIGURATION_ALREADY_EXISTS
        - UNITOFMEASURE_ISNOT_PERIODBASED
        - INVOICE_FREQUENCY_MUST_BE_NULL_OR_EQUAL_TO_PROPERTY_GROUP_CONFIG_FOR_COST_ALLOCATION
        - ADVANCE_FREQUENCY_MUST_BE_NULL_OR_EQUAL_TO_PROPERTY_GROUP_CONFIG_FOR_COST_ALLOCATION
        - INCOMING_INVOICE_DOES_NOT_EXIST
        - PROPERTY_GROUP_BILLING_CONFIGURATION_COST_ALLOCATION_NOT_ENABLED
        - PROPERTY_GROUP_BILLING_PERIOD_DOES_NOT_EXIST
        - INCOMING_INVOICE_COMPONENT_NOT_LINKED_IN_PERIOD
        - NO_CHANNELS_FOUND
        - MISSING_CONSUMPTIONS
        - PROPERTY_GROUP_BILLING_CONFIGURATION_COST_ALLOCATION_NOT_VALIDATED
        - PROPERTY_GROUP_BILLING_PERIOD_LOCKED
        - PROPERTY_GROUP_BILLING_PERIOD_OVERLAP
        - PROPERTY_GROUP_BILLING_PERIOD_GAP
        - PROPERTY_GROUP_BILLING_PERIOD_MISSING_TARIFFS
        - PROPERTY_GROUP_BILLING_PERIOD_MISSING_CONFIGURATIONS
        - PROPERTY_GROUP_BILLING_PERIOD_NOT_LOCKED
        - PROPERTY_GROUP_BILLING_PERIOD_HAS_NO_SEQUENTIAL_PERIODS
        - NO_MATCHING_CHANNELS_FOUND
        - NEXT_INVOICE_DATE_NOT_ALLOWED_FOR_COST_ALLOCATION
        - CONTRACT_WRONG_STATUS
        - PROPERTY_GROUP_HAS_NO_LOCKED_BILLING_PERIOD
        - BILLING_RELATION_NOT_PART_OF_PROPERTY
        - CANNOT_INVOICE_UPFRONT_WITH_CONSUMPTION
        - CANNOT_HAVE_ADVANCE_FREQUENCY_AND_INVOICING_UPFRONT
        - PRODUCT_MUST_HAVE_ONE_REGULAR_BILLING_ITEM
        - CUSTOMER_DETAILS_MISSING
        - SERVICELOCATION_DETAILS_MISSING
        - MOVEREQUEST_NOT_FOUND
        - MOVEREQUEST_WRONG_STATUS
        - CUSTOMER_ALREADY_CREATED_OR_LINKED
        - MISSING_CUSTOMER_ID
        - MISSING_SERVICELOCATION_ID
        - MULTIPLE_CONTRACTS_FOUND
        - MISSING_METER
        - MOVEREQUEST_FAILED_PROCESSING
        - COULD_NOT_TERMINATE_CONTRACT
        - MOVEREQUEST_CONTRACT_ALREADY_PROCESSED
        - NO_TEMPLATE_FOR_LETTER
        - UNKNOWN_PLUGIN
        - PLUGIN_ALREADY_INSTALLED
        - INSTALLEDPLUGIN_NOT_FOUND
        - INVALID_PLUGIN_CONFIGURATION
        - MOVE_REQUEST_ALREADY_EXISTS
        - INVOICE_LINE_CANNOT_SPAN_MULTIPLE_YEARS
        - TOO_MANY_METERS
        - TOO_MANY_SERVICELOCATIONS
        - NO_MATCHING_STAIR_STEP
        - IBAN_INVALID
        - ADVANCE_AMOUNT_TO_LOW
        - DUPLICATE_MEASUREMENT_ENDDATETIME
        - NO_MATCHING_COMMUNICATION_PREFERENCE
        - COULD_NOT_UPDATE_CUSTOMER_INVOICE_ADDRESS
        - DUPLICATE_MEASUREMENT_FOR_ROUNDED_ENDDATETIME
        - FIELD_MUST_BE_TRUE
        - OUTGOING_BANKING_TRANSACTION_DOES_NOT_EXIST
        - OUTGOING_BANKING_TRANSACTION_INCORRECT_STATUS
        - OUTGOING_BANKING_TRANSACTION_INCORRECT_TYPE
        - OUTGOING_BANKING_TRANSACTION_COLLECTION_DATE_NOT_VALID
        - OUTGOING_BANKING_TRANSACTION_MISSING_INVOICEIDS
        - OUTGOING_BANKING_TRANSACTION_NO_ENTRIES_ADDED
        - OUTGOING_BANKING_TRANSACTION_LOCKED
        - OUTGOING_BANKING_TRANSACTION_CONTAINS_ERRORS
        - OUTGOING_BANKING_TRANSACTION_CONTAINS_INVOICES
        - OUTGOING_MUTATION_DOES_NOT_EXIST
        - OUTGOING_MUTATION_TRANSACTION_INCORRECT_STATUS
        - INVOICE_WRONG_PAYMENT_STATUS
        - AMOUNT_CANNOT_BE_ZERO_OR_NEGATIVE
        - AMOUNT_CANNOT_BE_ZERO_OR_POSITIVE
        - CANNOT_OVERWRITE_COLLECTION_DATE_WHEN_NO_NEW_BATCH
        - COULD_NOT_PARSE_BANK_FILE
        - BANK_FILE_CONTAINS_NO_STATEMENTS
        - PAYMENT_ALREADY_REVERSED
        - TRANSACTION_ALREADY_REVERSED
        - INVALID_BANK_STATEMENT_INCOMING_BANKING_TRANSACTION_FORMAT_TYPE
        - INVALID_PAYMENT_OUTGOING_BANKING_TRANSACTION_FORMAT_TYPE
        - UNSUPPORTED_OUTGOING_BANKING_TRANSACTION_FORMAT_TYPE
        - BIC_EMPTY
        - SEPA_CREDITOR_EMPTY
        - COMPANY_BANK_ACCOUNT_INVALID
        - INCOMING_BANKING_TRANSACTION_DOES_NOT_EXIST
        - INCOMING_BANKING_TRANSACTION_ALREADY_EXISTS
        - INCOMING_BANKING_TRANSACTION_INCORRECT_STATUS
        - INCOMING_MUTATION_NO_MATCH_FOUND
        - OUTGOING_BANKING_TRANSACTION_ALREADY_CONFIRMED
        - OUTGOING_MUTATION_ALREADY_CONFIRMED
        - INCOMING_MUTATION_IBAN_DOES_NOT_MATCH_OUTGOING_MUTATION_IBAN
        - NO_MATCHING_OUTGOING_PAYMENT_REQUEST_BANKING_TRANSACTION_FOUND
        - NO_MATCHING_OUTGOING_PAYMENT_REQUEST_MUTATION_FOUND
        - NO_MATCHING_OUTGOING_REFUND_BANKING_TRANSACTION_FOUND
        - NO_MATCHING_OUTGOING_REFUND_MUTATION_FOUND
        - NO_MATCHING_INCOMING_MUTATIONS_FOUND_FOR_IBAN
        - INCOMING_MUTATION_DOES_NOT_EXIST
        - INCOMING_MUTATION_INCORRECT_STATUS
        - PAYMENT_FOR_MUTATION_ALREADY_EXISTS
        - INVOICE_CHANGE_PAYMENT_METHOD_NOT_ALLOWED
        - INCOMING_MUTATION_INVALID_TYPE
        - OUTGOING_MUTATION_INVALID_TYPE
        - INVOICE_WRONG_STATUS
        - ACTION_NOT_SUPPORTED_FOR_MIGRATED_DATA
        - IMPORTJOB_DOES_NOT_SUPPORT_DOWNLOAD
        - NO_FUNCTIONS_IN_FORMULA
        - FUNCTION_NOT_FOUND
        - NO_MATCHING_INPUTPARAMETER_DEFINED
        - RUNTIMEPARAMETER_NOT_FOUND
        - RUNTIMEPARAMETER_TYPE_MISMATCH
        - FIXEDPARAMETER_TYPE_MISMATCH
        - OUTPUTPARAMETER_NOT_FOUND
        - MULTIPLE_OUTPUTPARAMETERS_FOUND
        - FUNCTION_REFERENCED_IS_AFTER_THIS_FUNCTION
        - FUNCTION_REFERENCED_OUTPUT_TYPE_MISMATCH
        - LAST_FUNCTION_OUTPUT_TYPE_INCORRECT
        - CREDIT_NOTE_NOT_APPROVED
        - PROCESSING_FAILED
        - PROCESSING_FINAL_UPDATE_FAILED
        - COULD_NOT_SIGN_MANDATE
        - COULD_NOT_UPDATE_PROPERTYYGROUPBILLINGCONFIGURATION
        - COULD_NOT_CREATE_ENTITY_ATTRIBUTE
        - COULD_NOT_CREATE_PROPERTYGROUP
        - PLUGINTRIGGER_NOT_FOUND
        - PLUGINTRIGGER_NOT_RUN_YET
        - INSTALLEDPLUGIN_NOT_ENABLED
        - INSTALLEDPLUGIN_DOES_NOT_SUPPORT_MANUAL_TRIGGER
        - INSTALLEDPLUGIN_DOES_NOT_SUPPORT_CONFIG_TRIGGER
        - MIGRATION_MODE_CANNOT_BE_REENABLED
        - ENUM_NOT_TRANSLATABLE
        - FIELD_MUST_BE_NULL
        - INVALID_TELEPHONE_NUMBER
        - INSTALLEDPLUGIN_DOES_NOT_SUPPORT_QUERY_TRIGGER
        - UNSUPPORTED_QUERY_TYPE
        - INCOMING_MUTATION_DUPLICATE
        - BILLING_ITEMS_HAS_DUPLICATE_ORDER
        - LIST_TOO_LARGE
        - DATAFREQUENCY_NOT_SUPPORTED
        - INSTALLEDPLUGIN_DOES_NOT_SUPPORT_INBOUND_WEBHOOK_TRIGGER
        - DOCUMENT_CANNOT_BE_EXTERNALLY_PRINTED
        - COLLECTION_CASE_COMMUNICATION_NOT_ALLOWED
        - CUSTOM_ENTITY_PROPERTY_TYPE_ALREADY_EXISTS
        - CUSTOM_ENTITY_PROPERTY_TYPE_DOES_NOT_EXIST
        - CUSTOM_ENTITY_PROPERTY_ALREADY_EXISTS_FOR_SUBJECT_ID_AND_TYPE_AND_PROPERTY_TYPE
        - CUSTOM_ENTITY_PROPERTY_DOES_NOT_EXIST
        - CONSUMER_GROUP_NOT_FOUND
        - LOAD_PROFILE_NOT_FOUND
        - LOAD_PROFILE_HAS_NO_DATA_FOR_THIS_YEAR
        - CANNOT_CONVERT_UNITOFMEASURE
        - CONTRACT_TERMINATED_BEFORE_YEAR
        - CONTRACT_HAS_NO_CONSUMPTION_SERVICES
        - ESTIMATION_RUN_IN_PROGRESS
        - ESTIMATION_RUN_NOT_FOUND
        - SERVICE_MISSING_ESTIMATION
        - ESTIMATION_NOT_POSSIBLE_BEFORE_FIRST_YEAR
        - SERVICE_MISSING_ESTIMATION_IN_UNIT_OF_MEASURE
        - UNSUPPORTED_AGGREGATION_FREQUENCY
        - NO_INVOICE_LINES
        - CUSTOM_ENTITY_PROPERTY_TYPE_NOT_SUPPORTED
        - SSIN_CANNOT_BE_PROVIDED_FOR_ORGANIZATIONS
        - SSIN_REQUIRED_WHEN_SSIN_COUNTRY_PROVIDED
        - SSIN_INVALID
        - SSIN_COUNTRY_REQUIRED_WHEN_SSIN_PROVIDED
        - COUNTRY_NOT_SUPPORTED_FOR_SSIN
        - EDIT_PRODUCT_NOT_ALLOWED_FOR_COST_ALLOCATION
        - NOT_CONFIGURED
        - SOCIAL_TARIFF_EXPORT_NOT_FOUND
        - SOCIAL_TARIFF_EXPORT_NOT_GENERATED
        - SOCIAL_TARIFF_EXPORT_ALREADY_EXISTS
        - ADVANCE_AMOUNT_NOT_IN_RANGE
        - INTERNAL_ATTACHMENTS_NOT_SUPPORTED
        - MOVE_IN_ATTACHMENTS_NOT_SUPPORTED
        - COULD_NOT_UPDATE_ATTACHMENT_FROM_OTHER_ENTITY
        - COULD_NOT_DELETE_ATTACHMENT_FROM_OTHER_ENTITY
        - APPROVAL_ONLY_AVAILABLE_ON_MOVE_IN
        - INVALID_FILE_SIZE
        - CUSTOMER_ALREADY_IN_COLLECTION
        - COULD_NOT_SIGN_ATTACHMENT
        - DUPLICATE_FORM_KEY
        - ATTACHMENT_FILE_ALREADY_EXISTS
        - ENTIY_ATTACHMENT_GROUP_DOES_NOT_EXISTS
        - ENTIY_ATTACHMENT_ALREADY_EXISTS
        - INVALID_INVOICE_TYPE
        - UNSUPPORTED_ORIGIN
        - FILEFORMAT_CONTAINS_ERRORS
        - COULD_NOT_DOWNLOAD_FILE
        - NO_MATCHING_CONTRACTS_FOR_ESTIMATION_FOUND
        - UNSUPPORTED_YEAR
        - INVALID_REGIONAL_REGULATIONS_CONFIG
        - CONSUMER_GROUP_NOT_MANUAL
        - AMOUNT_CANNOT_BE_NEGATIVE
        - CONSUMER_GROUP_CODE_IN_USE
        - PREPAYMENT_NOT_SUPPORTED
        - PREPAYMENT_ACTION_NOT_SUPPORTED
        - PREPAYMENT_METER_CANNOT_BE_PARENT_OF_PREPAYMENT_METER
        - METER_INVALID_TYPE
        - PERCENTAGE_NOT_IN_RANGE
        - BILLING_TARIFF_GAP_DETAILS
        - TAX_RATE_GAP_DETAILS
        - TAX_CODE_TAX_RATE_GAP_DETAILS
        - TARIFF_INPUT_GAP_DETAILS
        - TARIFF_INPUT_GAP_DETAILS_NAMED
        - COULD_NOT_ESTIMATE_INVOICE
        - MISSING_ESTIMABLE_BILLING_ITEMS
        - MISSING_RECEIVING_PERIOD
        - MISSING_RECEIVING_PERIOD_FOR_ESTIMATION
        - INVALID_COMMUNICATION_TYPE
        - FAILED_SENDING_EMAIL
        - FAILED_SENDING_SMS
        - MESSAGE_UNDELIVERABLE
        - INVALID_DELIVERY_ADDRESS
        - EMAIL_DROPPED
        - EMAIL_BLOCKED
        - EMAIL_INVALID
        - DATE_CANNOT_BE_OUTSIDE_COMPLETENESS_PERIOD
        - DATE_MUST_MATCH_ADVANCE_PERIOD
        - PERIOD_CANNOT_OVERLAP_WITH_ANOTHER_ADVANCE
        - CONTRACT_TERMINATION_NOT_AFTER_SUPPLYENDDATE
        - ACTIVE_PRODUCT_NOT_FOUND_FOR_CONTRACT
        - CONTRACT_ALREADY_TERMINATED_ON_ANOTHER_DATE
        - PERIOD_CANNOT_OVERLAP_PERIOD_WITH_OTHER_PRODUCT
        - ADVANCE_CANNOT_BE_APPROVED_WHEN_ENDNOTE_IS_ALREADY_MADE
        - TARIFFPERIOD_CAN_NOT_HAVE_TIERED_STAIRSTEP_VOLUME_TARIFF_WITH_OPEN_START_OR_END_DATES
        - TARIFFPERIOD_TIERED_STAIRSTEP_VOLUME_TARIFF_WITH_OPEN_START_OR_END_DATES_EXISTS
        - CUSTOMERGROUP_ALREADY_EXISTS
        - CUSTOMERGROUP_DOES_NOT_EXIST
        - COLLECTION_FLOW_ALREADY_EXISTS
        - MISSING_PROPERTY_GROUP_ON_SERVICE_LOCATION
        - MISSING_COMPANY_ON_PROPERTY_GROUP
        - MISSING_COMPANY_IBAN_ON_PROPERTY_GROUP
        - TRANSACTION_COULD_NOT_BE_MAPPED_TO_COMPANY
        - UNSUPPORTED_CONTRACTS_WITH_MULTIPLE_COMPANIES
        - UNSUPPORTED_COMPANY_BANK_ACCOUNTS_WITH_MULTIPLE_COMPANIES
        - MISSING_CONTRACT_ON_CUSTOMER
        - CONTRACTSERVICELOCATION_HAS_NO_SERVICES
        - CONTRACT_HAS_NO_SERVICELOCATIONS
        - BILLING_SCOPE_INVALID
        - BILLING_SCOPE_CONTRACT_NOT_SUPPORTED
        - UTILITY_TYPE_NOT_SUPPORTED_FOR_SCOPE_CONTRACT
        - BILLING_ITEM_CALCULATION_TYPE_NOT_SUPPORTED
        - DATE_NOT_IN_CONTRACT_SUPPLY_RANGE
        - NO_MATCHING_SERVICE_FOUND
        - METERINGISSUE_NOT_FOUND
        - METERINGISSUE_NOT_UNRESOLVED
        - CONTRACT_MAXIMUM_LOCATION_LIMIT_REACHED
        - INVOICE_ESTIMATION_NOT_ENABLED
        - ADVANCE_LIMIT_TYPE_NOT_SUPPORTED
        - VALIDATIONRULES_SHOULD_BE_UNIQUE
        - BULK_RESOLUTION_NOT_ALLOWED
        - INCORRECT_METERING_ISSUE_RESOLUTION
        - FIELD_MUST_BE_CHANGED
        - AWAITING_BANK_CONFIRMATION
        - CREATED_INVOICE_CANT_BE_PAID
        - CONSUMPTION_MEASUREMENT_MISMATCH
        - TRANSACTION_SETTLEMENT_NOT_FOUND
        - SERVICELOCATION_SERVICES_MISSING
        - POSTALCODE_IS_NOT_THE_CORRECT_LENGHT
        - UBL_COUNTRY_NOT_SUPPORTED
        - UBL_VATNUMBER_INVALID_FORMAT
        - UBL_VATNUMBER_INVALID_FORMAT_CUSTOMER
        - UBL_VATNUMBER_REQUIRED
        - UBL_VATNUMBER_REQUIRED_CUSTOMER
        - UBL_REGISTRATION_NAME_REQUIRED
        - UBL_VATNUMBER_EMPTY
        - UBL_EXPORT_CONTAINS_VALIDATION_ERRORS
        - UBL_EXPORT_NOT_GENERATED
        - UBL_INVOICE_NOT_GENERATED
        - UBL_INVOICES_NOT_GENERATED
        - UBL_INVOICE_IN_PROGRESS
        - UBL_INVOICES_IN_PROGRESS
        - UBL_INVOICE_INVALID_CUSTOMERTYPE
        - UBL_INVOICES_INVALID_CUSTOMERTYPE
        - UBL_INVOICE_AMOUNTS_INVALID
        - QR_GENERATION_FAILED
        - TOO_MANY_DECIMALS
        - CANNOT_CREATE_ADVANCE_TEMPLATE_DATAOBJECT_WITH_AMOUNT_NEGATIVE
        - INVALID_URL
        - TEMPLATE_DATA_CONTAINER_NOT_FOUND
        - INVALID_TEMPLATE_DATA_OBJECT_TYPE
        - PAYMENTLINK_GENERATION_FAILED
        - CANNOT_DISABLE_INVOICE_COLLECTION_ANYMORE
        - INVOICE_LINE_TYPE_NOT_SUPPORTED
        - VALUE_TOO_OLD
        - CANNOT_CHANGE_TIMEZONE_ANYMORE
        - PAYMENT_REFERENCE_INVALID
        - COULD_NOT_CALCULATE_DUE_DATE
        - BILLING_TARIFFS_INCOHERENT_CONDITIONS
        - PREPAYMENT_ACCOUNT_COULD_NOT_BE_SET
        - PREPAYMENT_SHARED_BALANCE_METER_CANNOT_BE_INSTALLED_ON_MULTI_CONTRACT_SERVICELOCATION
        - PREPAYMENT_MULTIPLE_CONTRACTS_FOR_SAME_UTILILTY_TYPE
        - TIER_CALCULATION_METHOD_CAN_NOT_BE_TARIFF_PERIOD_FOR_NON_CONSUMPTION_BILLING_ITEM
        - MEASUREMENT_READINGDATE_TOO_OLD
        - PREPAYMENT_ACCOUNT_DOES_NOT_EXIST
        - METERING_TYPE_NOT_SUPPORTED
        - UTILITY_TYPE_NOT_SUPPORTED
        - DIRECTION_VALUE_NOT_SUPPORTED
        - INVALID_CUSTOM_ENTITY_PROPERTY_ENTITY_SUBJECT_TYPE
        - INVALID_CUSTOM_ENTITY_PROPERTY_VALUE_TYPE
        - DEVICE_ID_NOT_FOUND
        - MISSING_METER_SERIAL_NUMBER
        - BILLING_METHODS_NOT_MATCHING
        - ADMIN_USER_NOT_FOUND
        - USER_ALREADY_EXISTS
        - USER_NOT_FOUND
        - ROLE_NOT_FOUND
        - ROLE_NOT_IN_SCOPE
        - ROLE_ALREADY_EXISTS
        - PERMISSION_INVALID
        - IMPORT_COLUMN_MISMATCH
        - IMPORT_INVALID_UNITPRICE
        - IMPORT_INVALID_ORIGIN
        - IMPORT_INVALID_TARIFFTYPE
        - IMPORT_BILLINGTARIFF_ALREADYEXISTS
        - IMPORT_PREVIOUS_BILLINGTARIFF_NOTFOUND
        - IMPORT_CALCULATIONTYPE_DOES_NOT_MATCH
        - IMPORT_NUMBER_IS_NOT_A_DECIMAL
        - IMPORT_TIER_KEY_IS_NOT_THE_SAME_AS_PREVIOUS_TARIFF
        - IMPORT_CEP_COLUMN_NOT_FOUND_IN_FILE
        - IMPORT_CEP_DOES_NOT_MATCH_PREVIOUS_TARIFF
        - IMPORT_NEED_BOTH_SDD_AND_SCT
        - IMPORT_MISSING_TARIFF_FOR_CEP
        - IMPORT_AMOUNT_OF_CEP_VALUES_DOES_NOT_MATCH
        - IMPORT_ALREADY_LOCKED
        - IMPORT_NOT_LOCKED
        - SERVICE_LOCATION_HAS_INSTALLED_METERS
        - SERVICE_LOCATION_IS_PART_OF_PROPERTY_GROUP
        - SERVICE_LOCATION_HAS_CONTRACTS
        - IMPORT_CANT_HAVE_ORIGIN_BILLINGITEM_WITH_PRODUCT
        - END_CANT_BE_BEFORE_START
        - CONSTANT_SEGMENT_TYPE_SINGLE_VALUE
        - SERVICELOCATIONS_DO_NOT_HAVE_PREPAYMENT_METERS_FOR_CONTRACT_DATE_RANGE
        - DIFFERENT_DECIMAL_SEPARATOR_CONFIGURED
        - DIFFERENT_THOUSANDS_SEPARATOR_CONFIGURED
        - DIFFERENT_THOUSANDS_OR_DECIMAL_SEPARATOR_CONFIGURED
        - DIFFERENT_DATE_FORMAT_CONFIGURED
        - DUPLICATE_TIER_IN_LIST
        - SERVICELOCATION_ALREADY_HAS_SHAREDBALANCEMETER_AND_SERVICE_SUPPLIED_FOR_CONTRACT_DATE_RANGE
        - UNINSTALL_METER_SERVICELOCATIONS_DO_NOT_HAVE_PREPAYMENT_METERS_FOR_CONTRACT_DATE_RANGE
        - INSTALL_SHARED_BALANCE_METER_SERVICELOCATION_HAS_MORE_THEN_ONE_CONTRACT
        - USER_HAS_NO_MOBILE_PHONENUMBER
        - INVOICE_NOT_APPROVALINPROGRESS_STATUS
        - INVALID_CONTRACT_BILLING_METHOD
        - FEATURE_NOT_YET_AVAILABLE
        - INVALID_NUMBER_SEPARATOR
        - INVALID_DATE_FORMAT
        - INVALID_TIMEZONE_CONFIGURED
        - INVALID_METERING_TYPE
        - METERING_IMPORT_UNITOFMEASURE_NOT_SUPPORTED
        - METERING_IMPORT_UNITOFMEASURE_NOT_SUPPORTED_INFO
        - INVALID_UTILITY_TYPE
        - INVALID_DIRECTION_VALUE
        - COLLECTION_STEP_EXECUTION_DATE_ALREADY_REACHED
        - COLLECTION_STEP_HAS_WRONG_TYPE
        - COLLECTION_STEP_HAS_WRONG_COMMUNICATION_TYPE
        - SANDBOX_MODE_NEEDS_RECIPIENT_PHONE
        - ANNUAL_STATEMENT_ALREADY_GENERATED
        - ANNUAL_STATEMENT_GENERATION_IN_PROGRESS
        - ANNUAL_STATEMENTS_FEATURE_NOT_ENABLED
        - TEMPLATE_NOT_FOUND
        - CONFIRMATION_TOKEN_MISSING
        - RESET_PASSWORD_TOKEN_MISSING
        - EMAIL_CANNOT_BE_CHANGED
        - USER_CANNOT_BE_CHANGED
        - ANNUAL_STATEMENT_WRONG_STATUS
        - ANNUAL_STATEMENT_DOES_NOT_EXIST
        - WRONG_STATUS
        - INVALID_FILE
        - COULD_NOT_PARSE_MEASUREMENT_FILE
        - DATE_IS_IN_FUTURE
        - CONFIRM_PASSWORD_DOES_NOT_MATCH
        - PASSWORD_MINIMUM_LENGTH_12
        - INCOMING_MUTATION_INVALID_AMOUNTS_TO_SETTLE
        - LIMIT_TOO_BIG
        - CUSTOMER_HAS_NO_DATA_FOR_ANNUAL_STATEMENT
        - FIELD_SHOULD_CONTAIN_AT_LEAST_ONE_CHARACTER
        - IMPORT_BILLINGTARIFF_ALREADYEXISTS_IN_THE_SAME_FILE
        - PINGEN_NOT_ENABLED
        - GENERAL_LEDGER_CATEGORY_NOT_FOUND
        - METERING_IMPORT_VALUE_WAS_EMPTY
        - PORTAL_PAGE_NOTIFICATION_ALREADY_EXISTS_FOR_PAGE_IDENTIFIER
        - METER_CANNOT_HAVE_ITSELF_AS_PARENT
        - REQUESTED_FILE_NOT_FOUND
        - BUILT_IN_FILE_FORMAT_MISSING
        - METERING_IMPORT_NO_ADDITIONAL_INFO
        - UNKNOWN
      type: string
    ErrorCodeCount:
      type: object
      properties:
        errorCode:
          type: string
          nullable: true
        count:
          type: integer
          format: int32
      additionalProperties: false
    EstimatedAnnualVolumeOrigin:
      enum:
        - manual
        - frompreviousyear
        - fromconsumergroup
        - forecast
      type: string
    ExecutionStatus:
      enum:
        - unknown
        - uploaded
        - ignored
        - processed
        - failed
        - processedwitherrors
        - readallcontents
        - processing
      type: string
    ExportConsumptionsForMetersRequest:
      type: object
      properties:
        queryParams:
          allOf:
            - $ref: '#/components/schemas/GetMetersQueryParams'
          nullable: true
        quickFilter:
          type: string
          nullable: true
        meterIds:
          type: array
          items:
            type: string
          nullable: true
        startDateTime:
          type: string
          format: date-time
        endDateTime:
          type: string
          format: date-time
        onlyValidate:
          type: boolean
      additionalProperties: false
    ExportJobLineStatus:
      enum:
        - created
        - gatheringdata
        - ready
      type: string
    ExportJobStatus:
      enum:
        - created
        - generating
        - generated
        - transferred
        - failed
        - gatheringdata
        - ready
        - gathereddata
        - transferring
      type: string
    ExportJobsQuickFilter:
      enum:
        - all
        - created
        - failed
        - generated
        - exported
        - requireattention
      type: string
    ExportMeasurementDTO:
      type: object
      properties:
        id:
          type: string
          nullable: true
        externalChannelIdentifier:
          type: string
          nullable: true
        meterSerialNumber:
          type: string
          nullable: true
        meterTag:
          type: string
          nullable: true
        operationId:
          type: string
          nullable: true
        value:
          type: number
          format: double
        endDateTime:
          type: string
          format: date-time
        deleted:
          type: boolean
        dataFrequency:
          allOf:
            - $ref: '#/components/schemas/DataFrequency'
          nullable: true
        incrementationType:
          allOf:
            - $ref: '#/components/schemas/IncrementationType'
          nullable: true
        meteringType:
          allOf:
            - $ref: '#/components/schemas/MeteringType'
          nullable: true
        utilityType:
          allOf:
            - $ref: '#/components/schemas/UtilityType'
          nullable: true
        direction:
          allOf:
            - $ref: '#/components/schemas/Direction'
          nullable: true
        unitOfMeasure:
          allOf:
            - $ref: '#/components/schemas/UnitOfMeasure'
          nullable: true
        timeOfUse:
          type: string
          nullable: true
        propertyGroupName:
          type: string
          nullable: true
        propertyGroupId:
          type: string
          nullable: true
      additionalProperties: false
    ExportMeasurementDTOListApiResponseDTO:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/LocalisedErrorDTO'
          nullable: true
        success:
          type: boolean
        applicableEntitiesCount:
          type: integer
          format: int32
        requestedEntitiesCount:
          type: integer
          format: int32
        succeededEntitiesCount:
          type: integer
          format: int32
          readOnly: true
        isSynchronous:
          type: boolean
        data:
          type: array
          items:
            $ref: '#/components/schemas/ExportMeasurementDTO'
          description: The updated entity in case of modifications or creation
          nullable: true
      additionalProperties: false
    ExportMeasurementsRequest:
      type: object
      properties:
        meterIds:
          type: array
          items:
            type: string
          nullable: true
        startDateTime:
          type: string
          format: date-time
        endDateTime:
          type: string
          format: date-time
        orderBy:
          type: string
          nullable: true
      additionalProperties: false
    ExportOutgoingBankingTransactionPaymentRefundFormatType:
      enum:
        - pain_001001003
      type: string
    ExportOutgoingBankingTransactionPaymentRequestFormatType:
      enum:
        - pain_008001002
      type: string
    ExportSettingsCategoryType:
      enum:
        - invoice
      type: string
    ExportStatus:
      enum:
        - notexported
        - exported
      type: string
    ExternalMeasurementsQuickFilter:
      enum:
        - all
        - contextinvalid
        - linked
        - unlinked
        - unprocessed
      type: string
    FileSizeType:
      enum:
        - b
        - kb
        - mb
        - gb
      type: string
    FilterPrepaymentTransactionRequest:
      type: object
      properties:
        meterId:
          type: string
          nullable: true
        channelIdentifiers:
          type: array
          items:
            type: string
          nullable: true
        startDateTime:
          type: string
          format: date-time
          nullable: true
        endDateTime:
          type: string
          format: date-time
          nullable: true
        origin:
          allOf:
            - $ref: '#/components/schemas/PrepaymentTransactionOrigin'
          nullable: true
        type:
          allOf:
            - $ref: '#/components/schemas/PrepaymentTransactionType'
          nullable: true
        limit:
          type: integer
          format: int32
          nullable: true
        orderBy:
          type: string
          nullable: true
      additionalProperties: false
    FlatConsumptionAggregates:
      enum:
        - min
        - max
        - avg
        - total
        - mindate
        - maxdate
      type: string
    FlatConsumptionDTO:
      type: object
      properties:
        externalChannelIdentifier:
          type: string
          nullable: true
        startDateTime:
          type: string
          format: date-time
        endDateTime:
          type: string
          format: date-time
        value:
          type: number
          format: double
      additionalProperties: false
    FlatConsumptionDTOPagedResponseModelDTO:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/FlatConsumptionDTO'
          nullable: true
        hasNextPage:
          type: boolean
        nextPageToken:
          type: string
          nullable: true
        totalRecords:
          type: integer
          format: int32
        sortableFields:
          type: array
          items:
            type: string
          nullable: true
        aggregateDetails:
          type: array
          items:
            $ref: '#/components/schemas/AggregateDetailsDTO'
          nullable: true
      additionalProperties: false
    FlatConsumptionDTOPagedResponseModelDTOApiResponseDTO:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/LocalisedErrorDTO'
          nullable: true
        success:
          type: boolean
        applicableEntitiesCount:
          type: integer
          format: int32
        requestedEntitiesCount:
          type: integer
          format: int32
        succeededEntitiesCount:
          type: integer
          format: int32
          readOnly: true
        isSynchronous:
          type: boolean
        data:
          allOf:
            - $ref: '#/components/schemas/FlatConsumptionDTOPagedResponseModelDTO'
          description: The updated entity in case of modifications or creation
          nullable: true
      additionalProperties: false
    FlatMeasurementDTO:
      type: object
      properties:
        externalChannelIdentifier:
          type: string
          nullable: true
        endDateTime:
          type: string
          format: date-time
        value:
          type: number
          format: double
      additionalProperties: false
    FlatMeasurementDTOListApiResponseDTO:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/LocalisedErrorDTO'
          nullable: true
        success:
          type: boolean
        applicableEntitiesCount:
          type: integer
          format: int32
        requestedEntitiesCount:
          type: integer
          format: int32
        succeededEntitiesCount:
          type: integer
          format: int32
          readOnly: true
        isSynchronous:
          type: boolean
        data:
          type: array
          items:
            $ref: '#/components/schemas/FlatMeasurementDTO'
          description: The updated entity in case of modifications or creation
          nullable: true
      additionalProperties: false
    FlatPagedConsumptionDTO:
      type: object
      properties:
        externalChannelIdentifier:
          type: string
          nullable: true
        complete:
          type: boolean
        userId:
          type: string
          nullable: true
        productionDay:
          type: integer
          format: int32
        productionDayStartUtc:
          type: string
          format: date-time
        productionDayEndUtc:
          type: string
          format: date-time
        startDateTime:
          type: string
          format: date-time
        endDateTime:
          type: string
          format: date-time
        value:
          type: number
          format: double
      additionalProperties: false
    FlatPagedConsumptionDTOPagedResponseModelDTO:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/FlatPagedConsumptionDTO'
          nullable: true
        hasNextPage:
          type: boolean
        nextPageToken:
          type: string
          nullable: true
        totalRecords:
          type: integer
          format: int32
        sortableFields:
          type: array
          items:
            type: string
          nullable: true
        aggregateDetails:
          type: array
          items:
            $ref: '#/components/schemas/AggregateDetailsDTO'
          nullable: true
      additionalProperties: false
    FlatPagedConsumptionDTOPagedResponseModelDTOApiResponseDTO:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/LocalisedErrorDTO'
          nullable: true
        success:
          type: boolean
        applicableEntitiesCount:
          type: integer
          format: int32
        requestedEntitiesCount:
          type: integer
          format: int32
        succeededEntitiesCount:
          type: integer
          format: int32
          readOnly: true
        isSynchronous:
          type: boolean
        data:
          allOf:
            - $ref: '#/components/schemas/FlatPagedConsumptionDTOPagedResponseModelDTO'
          description: The updated entity in case of modifications or creation
          nullable: true
      additionalProperties: false
    FlatPagedServiceConsumptionDTO:
      type: object
      properties:
        serviceLocationId:
          type: string
          nullable: true
        externalChannelIdentifier:
          type: string
          nullable: true
        utilityType:
          type: string
          nullable: true
        unitOfMeasure:
          type: string
          nullable: true
        direction:
          type: string
          nullable: true
        productionDay:
          type: integer
          format: int32
        timeZone:
          type: string
          nullable: true
        productionDayStartUtc:
          type: string
          format: date-time
        productionDayEndUtc:
          type: string
          format: date-time
        startDateTime:
          type: string
          format: date-time
        endDateTime:
          type: string
          format: date-time
        value:
          type: number
          format: double
      additionalProperties: false
    FlatPagedServiceConsumptionDTOPagedResponseModelDTO:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/FlatPagedServiceConsumptionDTO'
          nullable: true
        hasNextPage:
          type: boolean
        nextPageToken:
          type: string
          nullable: true
        totalRecords:
          type: integer
          format: int32
        sortableFields:
          type: array
          items:
            type: string
          nullable: true
        aggregateDetails:
          type: array
          items:
            $ref: '#/components/schemas/AggregateDetailsDTO'
          nullable: true
      additionalProperties: false
    FlatPagedServiceConsumptionDTOPagedResponseModelDTOApiResponseDTO:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/LocalisedErrorDTO'
          nullable: true
        success:
          type: boolean
        applicableEntitiesCount:
          type: integer
          format: int32
        requestedEntitiesCount:
          type: integer
          format: int32
        succeededEntitiesCount:
          type: integer
          format: int32
          readOnly: true
        isSynchronous:
          type: boolean
        data:
          allOf:
            - $ref: '#/components/schemas/FlatPagedServiceConsumptionDTOPagedResponseModelDTO'
          description: The updated entity in case of modifications or creation
          nullable: true
      additionalProperties: false
    FlatServiceConsumptionDTO:
      type: object
      properties:
        startDateTime:
          type: string
          format: date-time
        endDateTime:
          type: string
          format: date-time
        consumptionStartDateTime:
          type: string
          format: date-time
        consumptionEndDateTime:
          type: string
          format: date-time
        value:
          type: number
          format: double
      additionalProperties: false
    FlatServiceConsumptionDTOListApiResponseDTO:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/LocalisedErrorDTO'
          nullable: true
        success:
          type: boolean
        applicableEntitiesCount:
          type: integer
          format: int32
        requestedEntitiesCount:
          type: integer
          format: int32
        succeededEntitiesCount:
          type: integer
          format: int32
          readOnly: true
        isSynchronous:
          type: boolean
        data:
          type: array
          items:
            $ref: '#/components/schemas/FlatServiceConsumptionDTO'
          description: The updated entity in case of modifications or creation
          nullable: true
      additionalProperties: false
    FormulaConsumptionDTO:
      type: object
      properties:
        outputChannelId:
          type: string
          description: Unique identifier of the output channel
          nullable: true
        productionDay:
          type: integer
          description: Day number for which the consumption is calculated
          format: int32
        timeZone:
          type: string
          description: Time zone identifier for the consumption data
          nullable: true
        productionDayStartUtc:
          type: string
          description: Start of the production day in UTC
          format: date-time
        productionDayEndUtc:
          type: string
          description: End of the production day in UTC
          format: date-time
        values:
          type: array
          items:
            $ref: '#/components/schemas/FormulaConsumptionValueDTO'
          description: List of consumption values with their time periods
          nullable: true
        meteringType:
          allOf:
            - $ref: '#/components/schemas/MeteringType'
          description: Type of metering used for the consumption data
          nullable: true
        utilityType:
          allOf:
            - $ref: '#/components/schemas/UtilityType'
          description: Type of utility being measured
          nullable: true
        direction:
          allOf:
            - $ref: '#/components/schemas/Direction'
          description: Direction of the consumption flow
          nullable: true
        unitOfMeasure:
          allOf:
            - $ref: '#/components/schemas/UnitOfMeasure'
          description: Unit of measure for the consumption values
          nullable: true
        dataFrequency:
          allOf:
            - $ref: '#/components/schemas/DataFrequency'
          description: Frequency of the consumption data points
          nullable: true
        propertyGroup:
          allOf:
            - $ref: '#/components/schemas/PropertyGroupReferenceDTO'
          description: Reference to the property group associated with this consumption
          nullable: true
        timeOfUse:
          type: string
          description: Time of use classification for the consumption
          nullable: true
        externalChannelIdentifier:
          type: string
          description: External identifier for the channel
          nullable: true
        serviceLocationId:
          type: string
          description: Unique identifier of the service location
          nullable: true
        formulaStreamName:
          type: string
          description: Name of the formula stream that generated this consumption
          nullable: true
      additionalProperties: false
      description: Represents consumption data calculated by a formula for a specific output channel
    FormulaConsumptionValueDTO:
      type: object
      properties:
        value:
          type: number
          description: The consumption value
          format: double
        startDateTime:
          type: string
          description: Start date and time of the consumption period
          format: date-time
        endDateTime:
          type: string
          description: End date and time of the consumption period
          format: date-time
      additionalProperties: false
      description: Represents a single consumption value with its time period
    FormulaExecutionResultDTO:
      type: object
      properties:
        hasErrors:
          type: boolean
          description: Indicates whether any errors occurred during formula execution
        errors:
          type: array
          items:
            $ref: '#/components/schemas/FormulaFunctionExceptionDTO'
          description: List of errors that occurred during formula execution
          nullable: true
        output:
          type: array
          items:
            $ref: '#/components/schemas/FormulaConsumptionDTO'
          description: List of consumption data produced by the formula execution
          nullable: true
      additionalProperties: false
      description: 'Represents the result of executing a formula, including any errors and output'
    FormulaExecutionResultDTOApiResponseDTO:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/LocalisedErrorDTO'
          nullable: true
        success:
          type: boolean
        applicableEntitiesCount:
          type: integer
          format: int32
        requestedEntitiesCount:
          type: integer
          format: int32
        succeededEntitiesCount:
          type: integer
          format: int32
          readOnly: true
        isSynchronous:
          type: boolean
        data:
          allOf:
            - $ref: '#/components/schemas/FormulaExecutionResultDTO'
          description: The updated entity in case of modifications or creation
          nullable: true
      additionalProperties: false
    FormulaFunctionCategory:
      enum:
        - billing
        - consumptions
        - contracts
        - math
        - meterconfig
        - meters
      type: string
    FormulaFunctionExceptionDTO:
      type: object
      properties:
        functionPosition:
          type: integer
          description: Position of the function in the formula where the error occurred
          format: int32
        error:
          allOf:
            - $ref: '#/components/schemas/LocalisedErrorDTO'
          description: Localized error information
          nullable: true
        message:
          type: string
          description: Human-readable error message
          nullable: true
        parameters:
          type: array
          items:
            type: string
          description: Parameters that were passed to the function when the error occurred
          nullable: true
      additionalProperties: false
      description: Represents an error that occurred during formula function execution
    FormulaFunctionInputParameterDTO:
      type: object
      properties:
        name:
          type: string
          description: Name of the input parameter
          nullable: true
        referenceType:
          allOf:
            - $ref: '#/components/schemas/FormulaFunctionInputParameterReferenceType'
          description: Type of reference for the parameter value
          nullable: true
        referenceTypeParameters:
          allOf:
            - $ref: '#/components/schemas/FormulaFunctionInputReferenceTypeParametersDTO'
          description: Parameters specific to the reference type
          nullable: true
      additionalProperties: false
      description: Represents an input parameter for a formula function
    FormulaFunctionInputParameterReferenceType:
      enum:
        - fixed
        - runtimeparameter
        - formulafunctionoutput
      type: string
    FormulaFunctionInputReferenceTypeParametersDTO:
      type: object
      additionalProperties: false
      description: Base class for formula function input reference type parameters
    FormulaFunctionInstanceDTO:
      type: object
      properties:
        functionType:
          allOf:
            - $ref: '#/components/schemas/FormulaFunctionType'
          description: Type of formula function being instantiated
          nullable: true
        inputParameters:
          type: array
          items:
            $ref: '#/components/schemas/FormulaFunctionInputParameterDTO'
          description: List of input parameters required by the function
          nullable: true
        outputParameterName:
          type: string
          description: Name of the output parameter that will store the function's result
          nullable: true
      additionalProperties: false
      description: Represents an instance of a formula function with its input parameters and output configuration
    FormulaFunctionType:
      enum:
        - getmeterslinkedtopropertygroup
        - getmatchingchannelsformeters
        - getserviceconsumptionsforexternalchannels
        - aggregateconsumptions
        - subtractconsumptions
        - getmeterconsumptionsforexternalchannels
        - gettotaloutputchannelconsumption
        - gettotalmonthssuppliedforproperty
        - dividevalues
        - multiplyvalues
        - gettotalincominginvoicecomponentvalue
        - aggregatetotalconsumptions
        - applycorrectionfactortoconsumptions
        - addvalues
        - subtractvalues
      type: string
    FormulaType:
      enum:
        - calculatedconsumption
        - calculatedtariff
      type: string
    FormulaValidationResultDTO:
      type: object
      properties:
        valid:
          type: boolean
          description: Indicates whether the formula is valid
        generalValidationErrors:
          type: array
          items:
            $ref: '#/components/schemas/LocalisedErrorDTO'
          description: List of general validation errors that apply to the entire formula
          nullable: true
        functionValidationErrors:
          type: array
          items:
            $ref: '#/components/schemas/FormulaValidationResultFunctionValidationErrorDTO'
          description: List of validation errors specific to individual functions in the formula
          nullable: true
      additionalProperties: false
      description: 'Represents the result of validating a formula, including any validation errors'
    FormulaValidationResultFunctionValidationErrorDTO:
      type: object
      properties:
        functionPosition:
          type: integer
          description: Position of the function in the formula where the validation error occurred
          format: int32
        error:
          allOf:
            - $ref: '#/components/schemas/LocalisedErrorDTO'
          description: Localized error information
          nullable: true
        value:
          type: string
          description: The value that caused the validation error
          nullable: true
      additionalProperties: false
      description: Represents a validation error for a specific function in the formula
    FractionFrequency:
      enum:
        - daily
        - hourly
      type: string
    FtpProtocol:
      enum:
        - none
        - ssl2
        - ssl3
        - tls
        - default
        - tls11
        - tls12
      type: string
    FunctionDescription:
      type: object
      properties:
        functionCategory:
          allOf:
            - $ref: '#/components/schemas/FormulaFunctionCategory'
          nullable: true
        functionType:
          allOf:
            - $ref: '#/components/schemas/FormulaFunctionType'
          nullable: true
        outputType:
          type: string
          nullable: true
        inputParameters:
          type: object
          additionalProperties:
            type: string
            nullable: true
          nullable: true
      additionalProperties: false
    FunctionDescriptionListApiResponseDTO:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/LocalisedErrorDTO'
          nullable: true
        success:
          type: boolean
        applicableEntitiesCount:
          type: integer
          format: int32
        requestedEntitiesCount:
          type: integer
          format: int32
        succeededEntitiesCount:
          type: integer
          format: int32
          readOnly: true
        isSynchronous:
          type: boolean
        data:
          type: array
          items:
            $ref: '#/components/schemas/FunctionDescription'
          description: The updated entity in case of modifications or creation
          nullable: true
      additionalProperties: false
    GeneralLedgerCategory:
      enum:
        - product
        - billingitem
        - taxcode
        - collectionflow
        - bankaccount
        - waitingaccount
      type: string
    GeneralLedgerMappingStatus:
      enum:
        - unlinked
        - linked
      type: string
    GetMeasurementsQueryParams:
      type: object
      properties:
        flexSearch:
          type: string
          nullable: true
        includeOnlyIds:
          type: array
          items:
            type: string
          nullable: true
        excludeIds:
          type: array
          items:
            type: string
          nullable: true
        externalChannelIdentifier:
          type: string
          nullable: true
        startDateTime:
          type: string
          format: date-time
        endDateTime:
          type: string
          format: date-time
        showInvalid:
          type: boolean
        dataFrequency:
          allOf:
            - $ref: '#/components/schemas/DataFrequency'
          nullable: true
      additionalProperties: false
    GetMeteringImportsQueryParams:
      type: object
      properties:
        flexSearch:
          type: string
          nullable: true
        includeOnlyIds:
          type: array
          items:
            type: string
          nullable: true
        excludeIds:
          type: array
          items:
            type: string
          nullable: true
        status:
          type: array
          items:
            type: string
          nullable: true
        communicationType:
          type: string
          nullable: true
        meteringFormat:
          type: string
          nullable: true
        createdStartDateTime:
          type: string
          format: date-time
          nullable: true
        createdEndDateTime:
          type: string
          format: date-time
          nullable: true
      additionalProperties: false
    GetMeteringIssuesQueryParams:
      type: object
      properties:
        flexSearch:
          type: string
          nullable: true
        includeOnlyIds:
          type: array
          items:
            type: string
          nullable: true
        excludeIds:
          type: array
          items:
            type: string
          nullable: true
        meterIds:
          type: array
          items:
            type: string
          nullable: true
        noticedStartDateTime:
          type: string
          format: date-time
          nullable: true
        noticedEndDateTime:
          type: string
          format: date-time
          nullable: true
        statuses:
          type: array
          items:
            type: string
          nullable: true
        propertyGroupIds:
          type: array
          items:
            type: string
          nullable: true
        meterModelIds:
          type: array
          items:
            type: string
          nullable: true
        errors:
          type: array
          items:
            $ref: '#/components/schemas/MeteringIssueError'
          nullable: true
      additionalProperties: false
    GetMetersQueryParams:
      type: object
      properties:
        flexSearch:
          type: string
          nullable: true
        includeOnlyIds:
          type: array
          items:
            type: string
          nullable: true
        excludeIds:
          type: array
          items:
            type: string
          nullable: true
        servicelocationIds:
          type: array
          items:
            type: string
          nullable: true
        propertyGroupIds:
          type: array
          items:
            type: string
          nullable: true
        meterType:
          allOf:
            - $ref: '#/components/schemas/MeterType'
          nullable: true
        receivedMeteringDataStart:
          type: string
          format: date-time
          nullable: true
        receivedMeteringDataEnd:
          type: string
          format: date-time
          nullable: true
        nextExpectedReadingDateStart:
          type: string
          format: date-time
          nullable: true
        nextExpectedReadingDateEnd:
          type: string
          format: date-time
          nullable: true
        parentSerialNumber:
          type: string
          nullable: true
        filterByReadingFrequency:
          type: boolean
        readingFrequency:
          allOf:
            - $ref: '#/components/schemas/MeterReadingFrequency'
          nullable: true
        customerId:
          type: string
          nullable: true
        meterTypeGroup:
          type: string
          nullable: true
        meterSerialNumber:
          type: string
          nullable: true
      additionalProperties: false
    GroupedMeteringIssuesDTO:
      type: object
      properties:
        id:
          type: string
          description: Gets or sets the unique identifier.
          nullable: true
        entityType:
          allOf:
            - $ref: '#/components/schemas/EntitySubjectType'
          description: Gets or sets the type of the entity.
          nullable: true
        createdDateTime:
          type: string
          description: Gets or sets the date and time when the entity was created.
          format: date-time
        discriminator:
          type: string
          description: Gets or sets the discriminator value.
          nullable: true
        _etag:
          type: string
          description: Gets or sets the ETag value.
          nullable: true
        requireAttention:
          type: boolean
          description: Gets a value indicating whether the entity requires attention.
          readOnly: true
        hasErrors:
          type: boolean
          description: Gets or sets a value indicating whether the entity has errors.
        hasWarnings:
          type: boolean
          description: Gets or sets a value indicating whether the entity has warnings.
        isReadOnly:
          type: boolean
          description: Gets or sets a value indicating whether the entity is read-only.
        meter:
          allOf:
            - $ref: '#/components/schemas/MeterReference'
          nullable: true
        issueCount:
          type: integer
          format: int32
        firstIssueDate:
          type: string
          format: date-time
        lastIssueDate:
          type: string
          format: date-time
      additionalProperties: false
    GroupedMeteringIssuesDTOPagedResponseModelDTO:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/GroupedMeteringIssuesDTO'
          nullable: true
        hasNextPage:
          type: boolean
        nextPageToken:
          type: string
          nullable: true
        totalRecords:
          type: integer
          format: int32
        sortableFields:
          type: array
          items:
            type: string
          nullable: true
        aggregateDetails:
          type: array
          items:
            $ref: '#/components/schemas/AggregateDetailsDTO'
          nullable: true
      additionalProperties: false
    GroupedMeteringIssuesDTOPagedResponseModelDTOApiResponseDTO:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/LocalisedErrorDTO'
          nullable: true
        success:
          type: boolean
        applicableEntitiesCount:
          type: integer
          format: int32
        requestedEntitiesCount:
          type: integer
          format: int32
        succeededEntitiesCount:
          type: integer
          format: int32
          readOnly: true
        isSynchronous:
          type: boolean
        data:
          allOf:
            - $ref: '#/components/schemas/GroupedMeteringIssuesDTOPagedResponseModelDTO'
          description: The updated entity in case of modifications or creation
          nullable: true
      additionalProperties: false
    GroupedServiceConsumptionDTO:
      type: object
      properties:
        externalIdentifier:
          type: string
          description: This is NOT the externalchannel identifier!
          nullable: true
        serviceLocationId:
          type: string
          nullable: true
        timeOfUse:
          type: string
          nullable: true
        utilityType:
          allOf:
            - $ref: '#/components/schemas/UtilityType'
          nullable: true
        unitOfMeasure:
          allOf:
            - $ref: '#/components/schemas/UnitOfMeasure'
          nullable: true
        minProductionDayStartUtc:
          type: string
          format: date-time
        maxProductionDayEndUtc:
          type: string
          format: date-time
        values:
          type: array
          items:
            $ref: '#/components/schemas/FlatServiceConsumptionDTO'
          nullable: true
      additionalProperties: false
    GroupedServiceConsumptionDTOListApiResponseDTO:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/LocalisedErrorDTO'
          nullable: true
        success:
          type: boolean
        applicableEntitiesCount:
          type: integer
          format: int32
        requestedEntitiesCount:
          type: integer
          format: int32
        succeededEntitiesCount:
          type: integer
          format: int32
          readOnly: true
        isSynchronous:
          type: boolean
        data:
          type: array
          items:
            $ref: '#/components/schemas/GroupedServiceConsumptionDTO'
          description: The updated entity in case of modifications or creation
          nullable: true
      additionalProperties: false
    IbanConfirmationStatus:
      enum:
        - unspecified
        - known
        - unknownfirst
        - unknownsecond
      type: string
    IgnoreMeteringIssueRequest:
      type: object
      properties:
        message:
          type: string
          nullable: true
      additionalProperties: false
    ImportCategoryType:
      enum:
        - metering
        - bankstatement
        - migration
      type: string
    ImportContractInvoiceDateHandling:
      enum:
        - donothing
        - recalculateinvoicedates
        - nextinvoicedateminusfrequency
      type: string
    ImportJobEntityIssueStage:
      enum:
        - validation
        - processing
      type: string
    ImportJobEntityType:
      enum:
        - externalmeasurement
        - banktransaction
        - property
        - servicelocation
        - meter
        - calculationgroup
        - customer
        - customermandate
        - contract
        - payment
        - invoice
        - attachment
        - entityattribute
        - contractedservice
        - invoiceline
        - billingcompleteness
        - meterchannel
        - service
        - communicationpreferences
        - consumptionunit
        - intermediateinvoicing
        - propertygroupbillingconfiguration
        - prepaymentaccount
      type: string
    ImportJobStatus:
      enum:
        - created
        - reading
        - storing
        - stored
        - processing
        - processed
        - failed
        - validating
        - validated
        - invalid
        - postprocessing
        - finished
      type: string
    ImportJobsQuickFilter:
      enum:
        - all
        - stored
        - ongoing
        - requireattention
        - completed
      type: string
    ImportStatus:
      enum:
        - created
        - validating
        - processing
        - finished
        - failed
        - undone
      type: string
    ImportType:
      enum:
        - billingtariff
      type: string
    ImportedMeasurementProcessingResultDTO:
      type: object
      properties:
        meterSerialNumber:
          type: string
          nullable: true
        externalChannelIdentifier:
          type: string
          nullable: true
        externalReference:
          type: string
          nullable: true
        meteringType:
          allOf:
            - $ref: '#/components/schemas/MeteringType'
          nullable: true
        utilityType:
          allOf:
            - $ref: '#/components/schemas/UtilityType'
          nullable: true
        direction:
          allOf:
            - $ref: '#/components/schemas/Direction'
          nullable: true
        unitOfMeasure:
          allOf:
            - $ref: '#/components/schemas/UnitOfMeasure'
          nullable: true
        readingDateTime:
          type: string
          format: date-time
        timeOfUse:
          type: string
          nullable: true
        readingValue:
          type: number
          format: double
          nullable: true
        errorCode:
          type: string
          nullable: true
        lineNumber:
          type: integer
          format: int32
          nullable: true
        processedOn:
          type: string
          format: date-time
          nullable: true
        wasIgnored:
          type: boolean
          nullable: true
      additionalProperties: false
    ImportedMeasurementProcessingResultDTOPagedResponseModelDTO:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/ImportedMeasurementProcessingResultDTO'
          nullable: true
        hasNextPage:
          type: boolean
        nextPageToken:
          type: string
          nullable: true
        totalRecords:
          type: integer
          format: int32
        sortableFields:
          type: array
          items:
            type: string
          nullable: true
        aggregateDetails:
          type: array
          items:
            $ref: '#/components/schemas/AggregateDetailsDTO'
          nullable: true
      additionalProperties: false
    ImportedMeasurementsOverviewDTO:
      type: object
      properties:
        measurements:
          allOf:
            - $ref: '#/components/schemas/ImportedMeasurementProcessingResultDTOPagedResponseModelDTO'
          nullable: true
        totalInvalidMeasurements:
          type: integer
          format: int64
        totalValidMeasurements:
          type: integer
          format: int64
        totalMeasurementsNotProcessed:
          type: integer
          format: int64
        totalMeasurementsProcessed:
          type: integer
          format: int64
        totalLinesWithFormatIssues:
          type: integer
          format: int64
      additionalProperties: false
    ImportedMeasurementsOverviewDTOApiResponseDTO:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/LocalisedErrorDTO'
          nullable: true
        success:
          type: boolean
        applicableEntitiesCount:
          type: integer
          format: int32
        requestedEntitiesCount:
          type: integer
          format: int32
        succeededEntitiesCount:
          type: integer
          format: int32
          readOnly: true
        isSynchronous:
          type: boolean
        data:
          allOf:
            - $ref: '#/components/schemas/ImportedMeasurementsOverviewDTO'
          description: The updated entity in case of modifications or creation
          nullable: true
      additionalProperties: false
    IncomingBankingTransactionFormatType:
      enum:
        - camt053_001_02
      type: string
    IncomingBankingTransactionQuickFilter:
      enum:
        - all
        - ready
        - closed
        - attention
        - resolveissues
        - requireattention
      type: string
    IncomingBankingTransactionStatus:
      enum:
        - created
        - processing
        - matching
        - resolveissues
        - readytoprocess
        - closed
      type: string
    IncomingMutationPaymentMethod:
      enum:
        - sddconfirmations
        - reversals
        - sct
        - unknown
      type: string
    IncomingMutationQuickFilter:
      enum:
        - all
        - banktransfers
        - bankconfirmations
        - reversals
        - resolveissues
      type: string
    IncomingMutationStatus:
      enum:
        - created
        - ignored
        - resolveissues
        - readytoprocess
        - processing
        - processed
        - failed
        - matched
      type: string
    IncomingMutationType:
      enum:
        - incomingtransfer
        - outgoingtransfer
        - paymentrequestreversal
        - refundreversal
        - unknown
        - paymentrequesttransactionconfirmation
        - paymentrequestmutationconfirmation
        - refundtransactionconfirmation
        - refundmutationconfirmation
        - requestconfirmation
        - refundconfirmation
      type: string
    IncrementationType:
      enum:
        - delta
        - cumul
        - na
      type: string
    InputMissingReason:
      enum:
        - unknown
        - missingadvances
        - missingreceivingperiods
        - missingtariffs
        - invoicecreationfailed
        - invoicelinecalculationfailed
        - missingreceivingperiodsfortieredtariffcalculation
        - missingbillingitems
        - missingcustomentityproperty
        - missingaskingperiods
        - askingperiodscontainsgap
        - missingtaxrate
        - missingpropertygrouponlocation
        - propertygroupnotfound
        - servicelocationnotfound
        - missingcep
        - missingmeter
        - firstmeasurementonwrongdate
        - nomeasurementonstart
        - nomeasurementonend
        - nomeasurementsfound
        - lastmeasurementonwrongdate
        - measurementnotwithindeviationwindow
        - noproductfound
      type: string
    Int32ApiResponseDTO:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/LocalisedErrorDTO'
          nullable: true
        success:
          type: boolean
        applicableEntitiesCount:
          type: integer
          format: int32
        requestedEntitiesCount:
          type: integer
          format: int32
        succeededEntitiesCount:
          type: integer
          format: int32
          readOnly: true
        isSynchronous:
          type: boolean
        data:
          type: integer
          description: The updated entity in case of modifications or creation
          format: int32
      additionalProperties: false
    InvoiceAmount:
      enum:
        - positive
        - negative
      type: string
    InvoiceExportType:
      enum:
        - invoicetoexcel
        - invoicelinestoexcel
        - createexportjob
        - invoicetoxml
        - integration
      type: string
    InvoiceFrequency:
      enum:
        - monthly
        - quarterly
        - halfyearly
        - yearly
      type: string
    InvoiceLineType:
      enum:
        - advance
        - previouslyadvanced
        - charge
        - vatpennydifference
      type: string
    InvoiceQuickFilter:
      enum:
        - all
        - toapprove
        - tosend
        - readyforpaymentcollection
        - toexport
        - unpaid
        - overdue
        - requireattention
      type: string
    InvoiceScenarioType:
      enum:
        - advance
        - correctionnote
        - creditnote
        - endnote
        - incidentalnote
        - invoice
      type: string
    InvoiceStatus:
      enum:
        - created
        - approvalinprogress
        - approved
        - settled
        - generated
        - generationfailed
      type: string
    InvoiceType:
      enum:
        - advance
        - invoice
        - endnote
        - creditnote
        - incidentalnote
        - correctionnote
      type: string
    Level:
      enum:
        - low
        - moderate
        - high
      type: string
    LocalisationLevel:
      enum:
        - none
        - partial
        - all
      type: string
    LocalisedErrorDTO:
      type: object
      properties:
        key:
          allOf:
            - $ref: '#/components/schemas/ErrorCode'
        correlationId:
          type: string
          nullable: true
        message:
          type: string
          nullable: true
        messageValues:
          type: array
          items:
            $ref: '#/components/schemas/LocalisedErrorDTOMessageValue'
          nullable: true
      additionalProperties: false
    LocalisedErrorDTOMessageValue:
      type: object
      properties:
        dataType:
          allOf:
            - $ref: '#/components/schemas/DataType'
          nullable: true
        value:
          type: string
          nullable: true
        capitalize:
          type: boolean
      additionalProperties: false
    ManagementRelationType:
      enum:
        - owner
        - propertymanager
      type: string
    MandateStatus:
      enum:
        - requested
        - cancelled
        - signed
      type: string
    MandateType:
      enum:
        - core
        - b2b
      type: string
    MeasurementDTO:
      type: object
      properties:
        id:
          type: string
          description: Gets or sets the unique identifier.
          nullable: true
        entityType:
          allOf:
            - $ref: '#/components/schemas/EntitySubjectType'
          description: Gets or sets the type of the entity.
          nullable: true
        createdDateTime:
          type: string
          description: Gets or sets the date and time when the entity was created.
          format: date-time
        discriminator:
          type: string
          description: Gets or sets the discriminator value.
          nullable: true
        _etag:
          type: string
          description: Gets or sets the ETag value.
          nullable: true
        requireAttention:
          type: boolean
          description: Gets a value indicating whether the entity requires attention.
          readOnly: true
        hasErrors:
          type: boolean
          description: Gets or sets a value indicating whether the entity has errors.
        hasWarnings:
          type: boolean
          description: Gets or sets a value indicating whether the entity has warnings.
        isReadOnly:
          type: boolean
          description: Gets or sets a value indicating whether the entity is read-only.
        organisationId:
          type: string
          description: Gets or sets the organization identifier.
          nullable: true
        externalChannelIdentifier:
          type: string
          description: External identifier for the channel
          nullable: true
        meterSerialNumber:
          type: string
          description: Serial number of the meter that took the measurement
          nullable: true
        operationId:
          type: string
          description: Unique identifier of the operation that generated this measurement
          nullable: true
        value:
          type: number
          description: The measured value
          format: double
        endDateTime:
          type: string
          description: Date and time when the measurement was taken
          format: date-time
        deleted:
          type: boolean
          description: Indicates whether this measurement has been deleted
        dataFrequency:
          allOf:
            - $ref: '#/components/schemas/DataFrequency'
          description: Frequency of the measurement data points
          nullable: true
        incrementationType:
          allOf:
            - $ref: '#/components/schemas/IncrementationType'
          description: Type of increment used for the measurement
          nullable: true
        meteringType:
          allOf:
            - $ref: '#/components/schemas/MeteringType'
          description: Type of metering used for the measurement
          nullable: true
        utilityType:
          allOf:
            - $ref: '#/components/schemas/UtilityType'
          description: Type of utility being measured
          nullable: true
        direction:
          allOf:
            - $ref: '#/components/schemas/Direction'
          description: Direction of the measurement flow
          nullable: true
        unitOfMeasure:
          allOf:
            - $ref: '#/components/schemas/UnitOfMeasure'
          description: Unit of measure for the measurement value
          nullable: true
        timeOfUse:
          type: string
          description: Time of use classification for the measurement
          nullable: true
        issue:
          allOf:
            - $ref: '#/components/schemas/MeteringIssueReference'
          description: Reference to any metering issue associated with this measurement
          nullable: true
        hasIssue:
          type: boolean
          description: Indicates whether this measurement has an associated issue
          readOnly: true
      additionalProperties: false
      description: Represents a measurement reading from a meter with associated metadata
    MeasurementDTOApiResponseDTO:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/LocalisedErrorDTO'
          nullable: true
        success:
          type: boolean
        applicableEntitiesCount:
          type: integer
          format: int32
        requestedEntitiesCount:
          type: integer
          format: int32
        succeededEntitiesCount:
          type: integer
          format: int32
          readOnly: true
        isSynchronous:
          type: boolean
        data:
          allOf:
            - $ref: '#/components/schemas/MeasurementDTO'
          description: The updated entity in case of modifications or creation
          nullable: true
      additionalProperties: false
    MeasurementDTOPagedResponseModelDTO:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/MeasurementDTO'
          nullable: true
        hasNextPage:
          type: boolean
        nextPageToken:
          type: string
          nullable: true
        totalRecords:
          type: integer
          format: int32
        sortableFields:
          type: array
          items:
            type: string
          nullable: true
        aggregateDetails:
          type: array
          items:
            $ref: '#/components/schemas/AggregateDetailsDTO'
          nullable: true
      additionalProperties: false
    MeasurementDTOPagedResponseModelDTOApiResponseDTO:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/LocalisedErrorDTO'
          nullable: true
        success:
          type: boolean
        applicableEntitiesCount:
          type: integer
          format: int32
        requestedEntitiesCount:
          type: integer
          format: int32
        succeededEntitiesCount:
          type: integer
          format: int32
          readOnly: true
        isSynchronous:
          type: boolean
        data:
          allOf:
            - $ref: '#/components/schemas/MeasurementDTOPagedResponseModelDTO'
          description: The updated entity in case of modifications or creation
          nullable: true
      additionalProperties: false
    MeasurementPairDTO:
      type: object
      properties:
        externalChannelId:
          type: string
          nullable: true
        startDateTime:
          type: string
          format: date-time
        endDateTime:
          type: string
          format: date-time
        previousMeasurements:
          type: array
          items:
            $ref: '#/components/schemas/MeasurementDTO'
          nullable: true
        nextMeasurements:
          type: array
          items:
            $ref: '#/components/schemas/MeasurementDTO'
          nullable: true
        previousMeasurement:
          allOf:
            - $ref: '#/components/schemas/MeasurementDTO'
          description: Represents a measurement reading from a meter with associated metadata
          nullable: true
        nextMeasurement:
          allOf:
            - $ref: '#/components/schemas/MeasurementDTO'
          description: Represents a measurement reading from a meter with associated metadata
          nullable: true
      additionalProperties: false
    MeasurementRequest:
      type: object
      properties:
        readingDateTime:
          type: string
          description: "Date and time when the value of the measurement was read.\r\nIf it differs from UTC, the value should include the offset how much it differs from UTC."
          format: date-time
        value:
          type: number
          description: "The measurement value.\r\n\r\nWhen the Enumerations.UnitOfMeasure isn't specified, the unit of measure of the channel is used which\r\nis set by the ExternalChannelIdentifier on the channel measurement."
          format: double
      additionalProperties: false
      description: Contains the value of the actual measurement and when that measurement was read.
    MeasurementSource:
      enum:
        - importjob
        - moverequest
        - measurementimport
      type: string
    MessageType:
      enum:
        - informational
        - warning
        - error
      type: string
    MeterQuickFilter:
      enum:
        - all
        - installed
        - inactive
        - requireattention
      type: string
    MeterReadingFrequency:
      enum:
        - hourly
        - daily
        - weekly
        - monthly
        - bimonthly
        - quarterly
        - halfyearly
        - yearly
      type: string
    MeterReference:
      type: object
      properties:
        meterId:
          type: string
          nullable: true
        serialNumber:
          type: string
          nullable: true
      additionalProperties: false
    MeterReferencePagedResponseModelDTO:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/MeterReference'
          nullable: true
        hasNextPage:
          type: boolean
        nextPageToken:
          type: string
          nullable: true
        totalRecords:
          type: integer
          format: int32
        sortableFields:
          type: array
          items:
            type: string
          nullable: true
        aggregateDetails:
          type: array
          items:
            $ref: '#/components/schemas/AggregateDetailsDTO'
          nullable: true
      additionalProperties: false
    MeterReferencePagedResponseModelDTOApiResponseDTO:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/LocalisedErrorDTO'
          nullable: true
        success:
          type: boolean
        applicableEntitiesCount:
          type: integer
          format: int32
        requestedEntitiesCount:
          type: integer
          format: int32
        succeededEntitiesCount:
          type: integer
          format: int32
          readOnly: true
        isSynchronous:
          type: boolean
        data:
          allOf:
            - $ref: '#/components/schemas/MeterReferencePagedResponseModelDTO'
          description: The updated entity in case of modifications or creation
          nullable: true
      additionalProperties: false
    MeterStatus:
      enum:
        - requested
        - installed
        - removed
      type: string
    MeterType:
      enum:
        - individual
        - aggregating
        - communal
        - root
        - prepayment
      type: string
    MeteringFormulaDTO:
      type: object
      properties:
        functions:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/FormulaFunctionInstanceDTO'
          nullable: true
      additionalProperties: false
    MeteringImportDTO:
      type: object
      properties:
        id:
          type: string
          description: Gets or sets the unique identifier.
          nullable: true
        entityType:
          allOf:
            - $ref: '#/components/schemas/EntitySubjectType'
          description: Gets or sets the type of the entity.
          nullable: true
        createdDateTime:
          type: string
          description: Gets or sets the date and time when the entity was created.
          format: date-time
        discriminator:
          type: string
          description: Gets or sets the discriminator value.
          nullable: true
        _etag:
          type: string
          description: Gets or sets the ETag value.
          nullable: true
        requireAttention:
          type: boolean
          description: Gets a value indicating whether the entity requires attention.
          readOnly: true
        hasErrors:
          type: boolean
          description: Gets or sets a value indicating whether the entity has errors.
        hasWarnings:
          type: boolean
          description: Gets or sets a value indicating whether the entity has warnings.
        isReadOnly:
          type: boolean
          description: Gets or sets a value indicating whether the entity is read-only.
        organisationId:
          type: string
          description: Gets or sets the organization identifier.
          nullable: true
        type:
          allOf:
            - $ref: '#/components/schemas/MeteringImportType'
          description: What kind of data do we want to process in this metering import?
          nullable: true
        customFileFormatId:
          type: string
          description: The ID of a configured custom file format if you want to process a file in a specific format.
          nullable: true
        dataImport:
          allOf:
            - $ref: '#/components/schemas/MeteringImportDataImportDto'
          description: "If the metering import was created via a data provider (mail, FTP, ...), it will contain the data\r\nof that data provider."
          nullable: true
        dataFileFormatSettings:
          allOf:
            - $ref: '#/components/schemas/MeteringImportDataFileFormatDto'
          description: "Stores the configuration values of the custom file format that was applied during processing.\r\nThis snapshot ensures that historical format settings are preserved, even if the format configuration changes later.\r\n            \r\nThis is particularly useful for audit trails."
          nullable: true
        meteringFormat:
          allOf:
            - $ref: '#/components/schemas/DataImportMeteringFormatType'
          description: The type of metering import file that you want to process.
          nullable: true
        communicationType:
          allOf:
            - $ref: '#/components/schemas/DataImportCommunicationType'
          description: "How did we receive the data for the metering import?\r\nMainly used for auditing purposes."
          nullable: true
        automaticallyProcess:
          type: boolean
          description: "Should the metering import start processing automatically (even if there are failed values) or should\r\nit be started manually?"
        status:
          allOf:
            - $ref: '#/components/schemas/MeteringImportStatus'
          description: The status or different phases of the metering import.
          nullable: true
        fileName:
          type: string
          description: "The filename of the file to process.\r\nIs set to 'source.json' by default if you create a metering import with values based on JSON input."
          nullable: true
        source:
          type: string
          description: "Set the source of the metering import.\r\nMainly used for auditing purposes."
          nullable: true
        interpretationResult:
          allOf:
            - $ref: '#/components/schemas/MeteringImportStatisticDTO'
          description: Statistics about how many values we could interpreted successfully.
          nullable: true
        validationResult:
          allOf:
            - $ref: '#/components/schemas/MeteringImportStatisticDTO'
          description: Statistics about how many values we could validate successfully.
          nullable: true
        processingResult:
          allOf:
            - $ref: '#/components/schemas/MeteringImportStatisticDTO'
          description: Statistics about how many values we could process successfully.
          nullable: true
      additionalProperties: false
      description: "Contains the details of the metering import to determine the status and how many measurements we could process,\r\nas well as the information how the metering import was originally created."
    MeteringImportDTOApiResponseDTO:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/LocalisedErrorDTO'
          nullable: true
        success:
          type: boolean
        applicableEntitiesCount:
          type: integer
          format: int32
        requestedEntitiesCount:
          type: integer
          format: int32
        succeededEntitiesCount:
          type: integer
          format: int32
          readOnly: true
        isSynchronous:
          type: boolean
        data:
          allOf:
            - $ref: '#/components/schemas/MeteringImportDTO'
          description: The updated entity in case of modifications or creation
          nullable: true
      additionalProperties: false
    MeteringImportDTOPagedResponseModelDTO:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/MeteringImportDTO'
          nullable: true
        hasNextPage:
          type: boolean
        nextPageToken:
          type: string
          nullable: true
        totalRecords:
          type: integer
          format: int32
        sortableFields:
          type: array
          items:
            type: string
          nullable: true
        aggregateDetails:
          type: array
          items:
            $ref: '#/components/schemas/AggregateDetailsDTO'
          nullable: true
      additionalProperties: false
    MeteringImportDTOPagedResponseModelDTOApiResponseDTO:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/LocalisedErrorDTO'
          nullable: true
        success:
          type: boolean
        applicableEntitiesCount:
          type: integer
          format: int32
        requestedEntitiesCount:
          type: integer
          format: int32
        succeededEntitiesCount:
          type: integer
          format: int32
          readOnly: true
        isSynchronous:
          type: boolean
        data:
          allOf:
            - $ref: '#/components/schemas/MeteringImportDTOPagedResponseModelDTO'
          description: The updated entity in case of modifications or creation
          nullable: true
      additionalProperties: false
    MeteringImportDataFileFormatDto:
      type: object
      properties:
        name:
          type: string
          description: The name of the custom file format.
          nullable: true
        delimiter:
          type: string
          description: The delimiter to parse the measurements file.
          nullable: true
        dateTimeFormat:
          type: string
          description: The date time format used during processing.
          nullable: true
        timeZone:
          type: string
          description: The timezone used during processing.
          nullable: true
        decimalSeparator:
          type: string
          description: The decimal separator used during processing.
          nullable: true
        thousandsSeparator:
          type: string
          description: The thousands separator used during processing.
          nullable: true
        culture:
          type: string
          description: The culture used during processing for number formatting.
          nullable: true
        firstLineIsHeader:
          type: boolean
          description: Used for custom CSV formats which indicates if the first line was a header or not.
          nullable: true
      additionalProperties: false
      description: "Stores the configuration values of the custom file format that was applied during processing.\r\nThis snapshot ensures that historical format settings are preserved, even if the format configuration changes later.\r\n            \r\nThis is particularly useful for audit trails."
    MeteringImportDataImportDto:
      type: object
      properties:
        id:
          type: string
          description: The ID of the data provider.
          nullable: true
        name:
          type: string
          description: The name of the data provider.
          nullable: true
      additionalProperties: false
      description: "If the metering import was created via a data provider (mail, FTP, ...), it will contain the data\r\nof that data provider."
    MeteringImportInterpretationIssueDTO:
      type: object
      properties:
        errorCode:
          allOf:
            - $ref: '#/components/schemas/LocalisedErrorDTO'
          description: The error that occured.
          nullable: true
        errorCodeInfo:
          allOf:
            - $ref: '#/components/schemas/LocalisedErrorDTO'
          description: A more descriptive message about the error that occured.
          nullable: true
        lineNumber:
          type: integer
          description: The LineNumber where the error occured in the original file.
          format: int32
          nullable: true
        message:
          type: string
          description: 'The raw, untranslateable error message.'
          nullable: true
      additionalProperties: false
      description: Contains the information about the interpretation issue that was discovered during importing.
    MeteringImportInterpretationResultDTO:
      type: object
      properties:
        issues:
          type: array
          items:
            $ref: '#/components/schemas/MeteringImportInterpretationIssueDTO'
          description: List of all the found interpretation issues.
          nullable: true
      additionalProperties: false
      description: Used to give an overview of the issues that were discovered during the metering import interpretation phase.
    MeteringImportInterpretationResultDTOApiResponseDTO:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/LocalisedErrorDTO'
          nullable: true
        success:
          type: boolean
        applicableEntitiesCount:
          type: integer
          format: int32
        requestedEntitiesCount:
          type: integer
          format: int32
        succeededEntitiesCount:
          type: integer
          format: int32
          readOnly: true
        isSynchronous:
          type: boolean
        data:
          allOf:
            - $ref: '#/components/schemas/MeteringImportInterpretationResultDTO'
          description: The updated entity in case of modifications or creation
          nullable: true
      additionalProperties: false
    MeteringImportIssuesCountDTO:
      type: object
      properties:
        invalidFormatErrors:
          type: array
          items:
            $ref: '#/components/schemas/ErrorCodeCount'
          nullable: true
        invalidDataErrors:
          type: array
          items:
            $ref: '#/components/schemas/ErrorCodeCount'
          nullable: true
      additionalProperties: false
    MeteringImportIssuesCountDTOApiResponseDTO:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/LocalisedErrorDTO'
          nullable: true
        success:
          type: boolean
        applicableEntitiesCount:
          type: integer
          format: int32
        requestedEntitiesCount:
          type: integer
          format: int32
        succeededEntitiesCount:
          type: integer
          format: int32
          readOnly: true
        isSynchronous:
          type: boolean
        data:
          allOf:
            - $ref: '#/components/schemas/MeteringImportIssuesCountDTO'
          description: The updated entity in case of modifications or creation
          nullable: true
      additionalProperties: false
    MeteringImportMeasurementsQuickFilter:
      enum:
        - invalid
        - valid
        - notprocessed
        - processed
      type: string
    MeteringImportOverviewCountDTO:
      type: object
      properties:
        all:
          type: integer
          description: Total amount of metering imports.
          format: int32
        toProcess:
          type: integer
          description: The total count of metering imports that still need processing.
          format: int32
        processed:
          type: integer
          description: 'The total count of processed metering imports, without any issue.'
          format: int32
        formatIssues:
          type: integer
          description: Total count of metering imports that have issues related to formatting
          format: int32
        issues:
          type: integer
          description: Total count of metering imports that have critical issues
          format: int32
        invalid:
          type: integer
          description: Total count of metering imports that have one or more invalid measurements.
          format: int32
      additionalProperties: false
      description: "Represents an overview of metering import counts, providing information about the\r\ntotal records and their respective processing statuses.\r\nCounts take the current filter into account"
    MeteringImportOverviewCountDTOApiResponseDTO:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/LocalisedErrorDTO'
          nullable: true
        success:
          type: boolean
        applicableEntitiesCount:
          type: integer
          format: int32
        requestedEntitiesCount:
          type: integer
          format: int32
        succeededEntitiesCount:
          type: integer
          format: int32
          readOnly: true
        isSynchronous:
          type: boolean
        data:
          allOf:
            - $ref: '#/components/schemas/MeteringImportOverviewCountDTO'
          description: The updated entity in case of modifications or creation
          nullable: true
      additionalProperties: false
    MeteringImportQuickFilter:
      enum:
        - all
        - toprocess
        - processed
        - formatissues
        - invalid
        - issues
      type: string
    MeteringImportStatisticDTO:
      type: object
      properties:
        amountSuccess:
          type: integer
          description: How many values were successfully processed in the metering import phase?
          format: int64
        amountFailed:
          type: integer
          description: How many values could not be processed in the metering import phase?
          format: int64
        amountIgnored:
          type: integer
          description: "How many values did we ignore in the metering import phase?\r\nThis can happen if a measurement was already processed with the same date and value on a channel."
          format: int64
      additionalProperties: false
      description: Contains the statistics of a metering import phase to know how many values were processed.
    MeteringImportStatus:
      enum:
        - uploading
        - uploadfailed
        - invalidformat
        - validating
        - valid
        - validationfailed
        - toprocess
        - processing
        - processed
        - processedwithissues
      type: string
    MeteringImportType:
      enum:
        - measurements
      type: string
    MeteringIssueDTO:
      type: object
      properties:
        id:
          type: string
          description: Gets or sets the unique identifier.
          nullable: true
        entityType:
          allOf:
            - $ref: '#/components/schemas/EntitySubjectType'
          description: Gets or sets the type of the entity.
          nullable: true
        createdDateTime:
          type: string
          description: Gets or sets the date and time when the entity was created.
          format: date-time
        discriminator:
          type: string
          description: Gets or sets the discriminator value.
          nullable: true
        _etag:
          type: string
          description: Gets or sets the ETag value.
          nullable: true
        requireAttention:
          type: boolean
          description: Gets a value indicating whether the entity requires attention.
          readOnly: true
        hasErrors:
          type: boolean
          description: Gets or sets a value indicating whether the entity has errors.
        hasWarnings:
          type: boolean
          description: Gets or sets a value indicating whether the entity has warnings.
        isReadOnly:
          type: boolean
          description: Gets or sets a value indicating whether the entity is read-only.
        meter:
          allOf:
            - $ref: '#/components/schemas/MeterReference'
          nullable: true
        propertyGroup:
          allOf:
            - $ref: '#/components/schemas/PropertyGroupReferenceDTO'
          nullable: true
        meterModelId:
          type: string
          nullable: true
        noticedDateTime:
          type: string
          format: date-time
        error:
          allOf:
            - $ref: '#/components/schemas/MeteringIssueError'
          nullable: true
        status:
          allOf:
            - $ref: '#/components/schemas/MeteringIssueStatus'
          nullable: true
        details:
          allOf:
            - $ref: '#/components/schemas/BaseMeteringIssueDetailsDTO'
          nullable: true
        resolution:
          allOf:
            - $ref: '#/components/schemas/MeteringIssueResolutionDTO'
          nullable: true
      additionalProperties: false
    MeteringIssueDTOApiResponseDTO:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/LocalisedErrorDTO'
          nullable: true
        success:
          type: boolean
        applicableEntitiesCount:
          type: integer
          format: int32
        requestedEntitiesCount:
          type: integer
          format: int32
        succeededEntitiesCount:
          type: integer
          format: int32
          readOnly: true
        isSynchronous:
          type: boolean
        data:
          allOf:
            - $ref: '#/components/schemas/MeteringIssueDTO'
          description: The updated entity in case of modifications or creation
          nullable: true
      additionalProperties: false
    MeteringIssueDTOPagedResponseModelDTO:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/MeteringIssueDTO'
          nullable: true
        hasNextPage:
          type: boolean
        nextPageToken:
          type: string
          nullable: true
        totalRecords:
          type: integer
          format: int32
        sortableFields:
          type: array
          items:
            type: string
          nullable: true
        aggregateDetails:
          type: array
          items:
            $ref: '#/components/schemas/AggregateDetailsDTO'
          nullable: true
      additionalProperties: false
    MeteringIssueDTOPagedResponseModelDTOApiResponseDTO:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/LocalisedErrorDTO'
          nullable: true
        success:
          type: boolean
        applicableEntitiesCount:
          type: integer
          format: int32
        requestedEntitiesCount:
          type: integer
          format: int32
        succeededEntitiesCount:
          type: integer
          format: int32
          readOnly: true
        isSynchronous:
          type: boolean
        data:
          allOf:
            - $ref: '#/components/schemas/MeteringIssueDTOPagedResponseModelDTO'
          description: The updated entity in case of modifications or creation
          nullable: true
      additionalProperties: false
    MeteringIssueError:
      enum:
        - consumptionnegative
        - measurementfrequencytoolow
      type: string
    MeteringIssueErrorGroup:
      enum:
        - measurement
        - meterreadingfrequency
      type: string
    MeteringIssueOverviewCountDTO:
      type: object
      properties:
        all:
          type: integer
          format: int32
        unresolved:
          type: integer
          format: int32
      additionalProperties: false
    MeteringIssueOverviewCountDTOApiResponseDTO:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/LocalisedErrorDTO'
          nullable: true
        success:
          type: boolean
        applicableEntitiesCount:
          type: integer
          format: int32
        requestedEntitiesCount:
          type: integer
          format: int32
        succeededEntitiesCount:
          type: integer
          format: int32
          readOnly: true
        isSynchronous:
          type: boolean
        data:
          allOf:
            - $ref: '#/components/schemas/MeteringIssueOverviewCountDTO'
          description: The updated entity in case of modifications or creation
          nullable: true
      additionalProperties: false
    MeteringIssueQuickFilter:
      enum:
        - all
        - unresolved
        - requireattention
      type: string
    MeteringIssueReference:
      type: object
      properties:
        meteringIssueId:
          type: string
          nullable: true
        error:
          allOf:
            - $ref: '#/components/schemas/MeteringIssueError'
          nullable: true
        status:
          allOf:
            - $ref: '#/components/schemas/MeteringIssueStatus'
          nullable: true
        noticedDateTime:
          type: string
          format: date-time
      additionalProperties: false
    MeteringIssueResolutionDTO:
      type: object
      properties:
        resolvedDateTime:
          type: string
          format: date-time
        type:
          allOf:
            - $ref: '#/components/schemas/MeteringIssueResolutionType'
          nullable: true
        details:
          allOf:
            - $ref: '#/components/schemas/BaseMeteringIssueResolutionDetailsDTO'
          nullable: true
      additionalProperties: false
    MeteringIssueResolutionReason:
      enum:
        - newmeasurementimportjob
        - measurementdeleted
        - newmeasurementmanuallyadded
        - newmeasurementmoverequest
        - measurementvalidated
      type: string
    MeteringIssueResolutionType:
      enum:
        - manual
        - automatic
      type: string
    MeteringIssueStatus:
      enum:
        - unresolved
        - ignored
        - resolved
        - muted
      type: string
    MeteringIssuesGroupBy:
      enum:
        - none
        - meter
      type: string
    MeteringType:
      enum:
        - none
        - energy
        - volume
        - volumeflow
        - flowtemp
        - returntemp
        - difftemp
        - balance
      type: string
    Month:
      enum:
        - january
        - february
        - march
        - april
        - may
        - june
        - july
        - august
        - september
        - october
        - november
        - december
      type: string
    MoveRequestQuickFilter:
      enum:
        - all
        - tobeprocessed
        - processed
        - rejected
      type: string
    MoveRequestScenarioType:
      enum:
        - acknowledgemovein
        - rejectmovein
        - acknowledgemoveout
        - rejectmoveout
      type: string
    MoveRequestStatus:
      enum:
        - new
        - pendingatcustomer
        - pendingatsupplier
        - processed
        - rejected
        - gatheringdata
      type: string
    MoveRequestType:
      enum:
        - movein
        - moveout
      type: string
    MutingRuleAggregatorDTO:
      type: object
      properties:
        id:
          type: string
          description: Gets or sets the unique identifier.
          nullable: true
        entityType:
          allOf:
            - $ref: '#/components/schemas/EntitySubjectType'
          description: Gets or sets the type of the entity.
          nullable: true
        createdDateTime:
          type: string
          description: Gets or sets the date and time when the entity was created.
          format: date-time
        discriminator:
          type: string
          description: Gets or sets the discriminator value.
          nullable: true
        _etag:
          type: string
          description: Gets or sets the ETag value.
          nullable: true
        requireAttention:
          type: boolean
          description: Gets a value indicating whether the entity requires attention.
          readOnly: true
        hasErrors:
          type: boolean
          description: Gets or sets a value indicating whether the entity has errors.
        hasWarnings:
          type: boolean
          description: Gets or sets a value indicating whether the entity has warnings.
        isReadOnly:
          type: boolean
          description: Gets or sets a value indicating whether the entity is read-only.
        organisationId:
          type: string
          description: Gets or sets the organization identifier.
          nullable: true
        errorType:
          allOf:
            - $ref: '#/components/schemas/MeteringIssueError'
          nullable: true
        message:
          type: string
          nullable: true
        timePeriod:
          allOf:
            - $ref: '#/components/schemas/MutingRuleTimePeriod'
          nullable: true
        muteFrom:
          type: string
          format: date-time
        muteUntil:
          type: string
          format: date-time
        meterId:
          type: string
          nullable: true
        muteFromWithNumericValue:
          type: integer
          format: int32
        muteUntilWithNumericValue:
          type: integer
          format: int32
        userId:
          type: string
          nullable: true
        meterCount:
          type: integer
          format: int32
        meterSerialNumber:
          type: string
          nullable: true
      additionalProperties: false
    MutingRuleAggregatorDTOPagedResponseModelDTO:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/MutingRuleAggregatorDTO'
          nullable: true
        hasNextPage:
          type: boolean
        nextPageToken:
          type: string
          nullable: true
        totalRecords:
          type: integer
          format: int32
        sortableFields:
          type: array
          items:
            type: string
          nullable: true
        aggregateDetails:
          type: array
          items:
            $ref: '#/components/schemas/AggregateDetailsDTO'
          nullable: true
      additionalProperties: false
    MutingRuleAggregatorDTOPagedResponseModelDTOApiResponseDTO:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/LocalisedErrorDTO'
          nullable: true
        success:
          type: boolean
        applicableEntitiesCount:
          type: integer
          format: int32
        requestedEntitiesCount:
          type: integer
          format: int32
        succeededEntitiesCount:
          type: integer
          format: int32
          readOnly: true
        isSynchronous:
          type: boolean
        data:
          allOf:
            - $ref: '#/components/schemas/MutingRuleAggregatorDTOPagedResponseModelDTO'
          description: The updated entity in case of modifications or creation
          nullable: true
      additionalProperties: false
    MutingRuleDTO:
      type: object
      properties:
        id:
          type: string
          description: Gets or sets the unique identifier.
          nullable: true
        entityType:
          allOf:
            - $ref: '#/components/schemas/EntitySubjectType'
          description: Gets or sets the type of the entity.
          nullable: true
        createdDateTime:
          type: string
          description: Gets or sets the date and time when the entity was created.
          format: date-time
        discriminator:
          type: string
          description: Gets or sets the discriminator value.
          nullable: true
        _etag:
          type: string
          description: Gets or sets the ETag value.
          nullable: true
        requireAttention:
          type: boolean
          description: Gets a value indicating whether the entity requires attention.
          readOnly: true
        hasErrors:
          type: boolean
          description: Gets or sets a value indicating whether the entity has errors.
        hasWarnings:
          type: boolean
          description: Gets or sets a value indicating whether the entity has warnings.
        isReadOnly:
          type: boolean
          description: Gets or sets a value indicating whether the entity is read-only.
        organisationId:
          type: string
          description: Gets or sets the organization identifier.
          nullable: true
        errorType:
          allOf:
            - $ref: '#/components/schemas/MeteringIssueError'
          nullable: true
        message:
          type: string
          nullable: true
        timePeriod:
          allOf:
            - $ref: '#/components/schemas/MutingRuleTimePeriod'
          nullable: true
        muteFrom:
          type: string
          format: date-time
        muteUntil:
          type: string
          format: date-time
        meterId:
          type: string
          nullable: true
        muteFromWithNumericValue:
          type: integer
          format: int32
        muteUntilWithNumericValue:
          type: integer
          format: int32
        userId:
          type: string
          nullable: true
      additionalProperties: false
    MutingRuleDTOApiResponseDTO:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/LocalisedErrorDTO'
          nullable: true
        success:
          type: boolean
        applicableEntitiesCount:
          type: integer
          format: int32
        requestedEntitiesCount:
          type: integer
          format: int32
        succeededEntitiesCount:
          type: integer
          format: int32
          readOnly: true
        isSynchronous:
          type: boolean
        data:
          allOf:
            - $ref: '#/components/schemas/MutingRuleDTO'
          description: The updated entity in case of modifications or creation
          nullable: true
      additionalProperties: false
    MutingRuleDTOListApiResponseDTO:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/LocalisedErrorDTO'
          nullable: true
        success:
          type: boolean
        applicableEntitiesCount:
          type: integer
          format: int32
        requestedEntitiesCount:
          type: integer
          format: int32
        succeededEntitiesCount:
          type: integer
          format: int32
          readOnly: true
        isSynchronous:
          type: boolean
        data:
          type: array
          items:
            $ref: '#/components/schemas/MutingRuleDTO'
          description: The updated entity in case of modifications or creation
          nullable: true
      additionalProperties: false
    MutingRuleDTOPagedResponseModelDTO:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/MutingRuleDTO'
          nullable: true
        hasNextPage:
          type: boolean
        nextPageToken:
          type: string
          nullable: true
        totalRecords:
          type: integer
          format: int32
        sortableFields:
          type: array
          items:
            type: string
          nullable: true
        aggregateDetails:
          type: array
          items:
            $ref: '#/components/schemas/AggregateDetailsDTO'
          nullable: true
      additionalProperties: false
    MutingRuleDTOPagedResponseModelDTOApiResponseDTO:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/LocalisedErrorDTO'
          nullable: true
        success:
          type: boolean
        applicableEntitiesCount:
          type: integer
          format: int32
        requestedEntitiesCount:
          type: integer
          format: int32
        succeededEntitiesCount:
          type: integer
          format: int32
          readOnly: true
        isSynchronous:
          type: boolean
        data:
          allOf:
            - $ref: '#/components/schemas/MutingRuleDTOPagedResponseModelDTO'
          description: The updated entity in case of modifications or creation
          nullable: true
      additionalProperties: false
    MutingRuleOverviewCountDTO:
      type: object
      properties:
        active:
          type: integer
          format: int32
        expired:
          type: integer
          format: int32
      additionalProperties: false
    MutingRuleOverviewCountDTOApiResponseDTO:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/LocalisedErrorDTO'
          nullable: true
        success:
          type: boolean
        applicableEntitiesCount:
          type: integer
          format: int32
        requestedEntitiesCount:
          type: integer
          format: int32
        succeededEntitiesCount:
          type: integer
          format: int32
          readOnly: true
        isSynchronous:
          type: boolean
        data:
          allOf:
            - $ref: '#/components/schemas/MutingRuleOverviewCountDTO'
          description: The updated entity in case of modifications or creation
          nullable: true
      additionalProperties: false
    MutingRuleQuickFilter:
      enum:
        - all
        - expired
        - active
      type: string
    MutingRuleTimePeriod:
      enum:
        - day
        - week
        - month
      type: string
    NullQuickFilter:
      enum:
        - default
      type: string
    NumberOfAddresses:
      enum:
        - one
        - multiple
      type: string
    NumberSequenceReferenceEntity:
      enum:
        - customer
        - contract
        - invoice
        - mandate
        - exportjob
        - collectioncase
        - bankingtransaction
      type: string
    NumberSequenceSegmentType:
      enum:
        - constant
        - year
        - invoicetype
        - date
      type: string
    NumberSign:
      enum:
        - negative
        - positive
      type: string
    OutgoingBankingTransactionQuickFilter:
      enum:
        - all
        - readytosend
        - toconfirm
        - closed
        - dateexpired
        - resolveissues
        - open
      type: string
    OutgoingBankingTransactionStatus:
      enum:
        - created
        - closed
        - toconfirmbybank
        - cancelled
        - readytosend
        - resolveissues
        - dateexpired
        - partiallyclosed
      type: string
    OutgoingBankingTransactionType:
      enum:
        - paymentrequests
        - paymentrefunds
      type: string
    OutgoingMutationQuickFilter:
      enum:
        - all
        - invoices
        - manualentries
        - resolveissues
      type: string
    OutgoingMutationStatus:
      enum:
        - created
        - readytosend
        - resolveissues
        - toconfirmbybank
        - closed
        - reversed
        - failedtoclose
        - failedtoreverse
        - cancelled
      type: string
    OutgoingMutationType:
      enum:
        - invoice
        - customer
      type: string
    OutputChannelDTO:
      type: object
      properties:
        id:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        formula:
          allOf:
            - $ref: '#/components/schemas/MeteringFormulaDTO'
          nullable: true
        unitOfMeasure:
          allOf:
            - $ref: '#/components/schemas/UnitOfMeasure'
          nullable: true
        meteringType:
          allOf:
            - $ref: '#/components/schemas/MeteringType'
          nullable: true
        utilityType:
          allOf:
            - $ref: '#/components/schemas/UtilityType'
          nullable: true
        validationResult:
          allOf:
            - $ref: '#/components/schemas/FormulaValidationResultDTO'
          description: 'Represents the result of validating a formula, including any validation errors'
          nullable: true
      additionalProperties: false
    PaymentDelay:
      enum:
        - delayuntilfixeddayofmonth
        - delaynumberofdays
      type: string
    PaymentMethod:
      enum:
        - sct
        - sdd
      type: string
    PaymentProcessStatus:
      enum:
        - readyforpaymentcollection
        - pendingpaymentexport
        - pendingpaymentcollectionconfirmation
        - paid
        - paymentrejected
        - waitingforpayment
      type: string
    PaymentQuickFilter:
      enum:
        - all
        - reversed
      type: string
    PaymentRetryAction:
      enum:
        - retryonfixedday
        - daysafterreversal
      type: string
    PaymentReversalReason:
      enum:
        - manualreverse
        - unpaiddirectdebit
        - reversalsepadirectdebit
        - rejectdomesticdirectdebit
        - unknownbankaccount
        - terminatedbankaccount
        - blockedbankaccount
        - unsupportedbankaccount
        - invalidsequencetype
        - insufficientfunds
        - invalidmandate
        - debtordeceased
        - refusalbydebtor
        - refusalotherreason
        - maximumamountperiodreached
      type: string
    PaymentReversalReasonCode:
      enum:
        - ac01
        - ac04
        - ac06
        - ag02
        - am04
        - md01
        - md06
        - md07
        - ms02
        - ms03
        - sl01
        - ag01
        - am02
      type: string
    PaymentTermsFrequency:
      enum:
        - day
        - week
        - month
      type: string
    PaymentType:
      enum:
        - incomingtransfer
        - outgoingtransfer
        - directdebit
      type: string
    PingenCulture:
      enum:
        - en
        - de
        - nl
        - fr
      type: string
    PluginFeedActivityType:
      enum:
        - movein
        - moveout
        - emailconfirmed
        - advanceamountchanged
        - attachmentviewed
        - attachmentsigned
        - invoicegenerated
      type: string
    PluginFeedStatus:
      enum:
        - new
        - pendingatcustomer
        - pendingatsupplier
        - processed
        - rejected
        - deleted
      type: string
    PluginFeedTopic:
      enum:
        - movein
        - moveout
        - communication
        - useraction
        - invoice
      type: string
    PluginTriggerDataType:
      enum:
        - cultureupdated
        - productcreated
        - productupdated
        - featureflagsupdated
        - customercreated
        - customerdetailschanged
        - servicelocationcreated
        - servicelocationupdated
        - servicelocationdeleted
        - contractremoved
        - contractsigned
        - contractservicesupdated
        - contractterminated
        - mailsent
        - generatepaymentlink
        - advanceamountupdated
        - invoiceavailable
        - invoicepaymentdetailschanged
        - meterinstalled
        - meterreconfigured
        - meteruninstalled
        - invoiceassignedtocollectioncase
        - collectioncaseclosed
        - documentprinted
        - documentprintingfailed
        - contractupdated
        - entityattachmentgroupcreated
        - entityattachmentgroupupdated
        - entityattachmentgroupdeleted
        - externaldocumentdeliveryfailed
        - invoiceregenerated
        - invoiceexportrequested
        - transactioncreated
        - measurementsstored
        - consumptionprocessed
        - consumptiondeleted
        - documentapprovedforprinting
        - productentityattachmentsforcustomerchanged
        - entityattachmentcreated
        - entityattachmentupdated
        - entityattachmentdeleted
      type: string
    PluginTriggerPriority:
      enum:
        - a
        - b
        - c
        - d
        - e
      type: string
    PluginType:
      enum:
        - enduserportal
        - httprequestwithpreviousresponse
        - brunatawms
        - zendeskcrm
        - freshdeskcrm
        - fortesmetering
        - pingendocumentprinting
        - zerofrictiondemometering
        - twikey
        - paytbillingplugin
        - sendgridemailsending
        - tkbtrustit
        - fortesmeteringv3
        - bergerlevrault
        - webhooksubscription
        - accounting
      type: string
    PortalEmailType:
      enum:
        - confirmemail
        - resetpassword
      type: string
    PortalNotificationType:
      enum:
        - neutral
        - warning
        - important
      type: string
    PortalPageIdentifier:
      enum:
        - startpage
        - login
        - register
        - movein
        - moveout
        - consumptions
        - invoices
        - mydetails
        - overview
        - forgotpassword
      type: string
    PrepaymentAccountStatus:
      enum:
        - draft
        - signed
      type: string
    PrepaymentTransactionDTO:
      type: object
      properties:
        id:
          type: string
          description: Gets or sets the unique identifier.
          nullable: true
        entityType:
          allOf:
            - $ref: '#/components/schemas/EntitySubjectType'
          description: Gets or sets the type of the entity.
          nullable: true
        createdDateTime:
          type: string
          description: Gets or sets the date and time when the entity was created.
          format: date-time
        discriminator:
          type: string
          description: Gets or sets the discriminator value.
          nullable: true
        _etag:
          type: string
          description: Gets or sets the ETag value.
          nullable: true
        requireAttention:
          type: boolean
          description: Gets a value indicating whether the entity requires attention.
          readOnly: true
        hasErrors:
          type: boolean
          description: Gets or sets a value indicating whether the entity has errors.
        hasWarnings:
          type: boolean
          description: Gets or sets a value indicating whether the entity has warnings.
        isReadOnly:
          type: boolean
          description: Gets or sets a value indicating whether the entity is read-only.
        organisationId:
          type: string
          description: Gets or sets the organization identifier.
          nullable: true
        meter:
          allOf:
            - $ref: '#/components/schemas/MeterReference'
          nullable: true
        channelIdentfier:
          type: string
          nullable: true
        customerId:
          type: string
          nullable: true
        contractId:
          type: string
          nullable: true
        processedDateTime:
          type: string
          format: date-time
        amount:
          type: number
          format: double
        type:
          allOf:
            - $ref: '#/components/schemas/PrepaymentTransactionType'
          nullable: true
        origin:
          allOf:
            - $ref: '#/components/schemas/PrepaymentTransactionOrigin'
          nullable: true
        status:
          allOf:
            - $ref: '#/components/schemas/PrepaymentTransactionStatus'
          nullable: true
        externalReference:
          type: string
          nullable: true
        operationId:
          type: string
          nullable: true
        deleted:
          type: boolean
      additionalProperties: false
    PrepaymentTransactionDTOApiResponseDTO:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/LocalisedErrorDTO'
          nullable: true
        success:
          type: boolean
        applicableEntitiesCount:
          type: integer
          format: int32
        requestedEntitiesCount:
          type: integer
          format: int32
        succeededEntitiesCount:
          type: integer
          format: int32
          readOnly: true
        isSynchronous:
          type: boolean
        data:
          allOf:
            - $ref: '#/components/schemas/PrepaymentTransactionDTO'
          description: The updated entity in case of modifications or creation
          nullable: true
      additionalProperties: false
    PrepaymentTransactionDTOPagedResponseModelDTO:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/PrepaymentTransactionDTO'
          nullable: true
        hasNextPage:
          type: boolean
        nextPageToken:
          type: string
          nullable: true
        totalRecords:
          type: integer
          format: int32
        sortableFields:
          type: array
          items:
            type: string
          nullable: true
        aggregateDetails:
          type: array
          items:
            $ref: '#/components/schemas/AggregateDetailsDTO'
          nullable: true
      additionalProperties: false
    PrepaymentTransactionDTOPagedResponseModelDTOApiResponseDTO:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/LocalisedErrorDTO'
          nullable: true
        success:
          type: boolean
        applicableEntitiesCount:
          type: integer
          format: int32
        requestedEntitiesCount:
          type: integer
          format: int32
        succeededEntitiesCount:
          type: integer
          format: int32
          readOnly: true
        isSynchronous:
          type: boolean
        data:
          allOf:
            - $ref: '#/components/schemas/PrepaymentTransactionDTOPagedResponseModelDTO'
          description: The updated entity in case of modifications or creation
          nullable: true
      additionalProperties: false
    PrepaymentTransactionOrigin:
      enum:
        - paypoint
        - wiretransfer
        - stripe
      type: string
    PrepaymentTransactionStatus:
      enum:
        - pending
        - successful
        - failed
        - cancelled
      type: string
    PrepaymentTransactionType:
      enum:
        - creditreset
        - creditincrementaladjustment
        - credittopup
        - debitreset
        - debitincrementaladjustment
      type: string
    ProblemDetails:
      type: object
      properties:
        type:
          type: string
          nullable: true
        title:
          type: string
          nullable: true
        status:
          type: integer
          format: int32
          nullable: true
        detail:
          type: string
          nullable: true
        instance:
          type: string
          nullable: true
      additionalProperties: { }
    ProblemLevel:
      enum:
        - error
        - warning
      type: string
    ProblemResolutionStatus:
      enum:
        - unresolved
        - manualresolution
        - automaticresolution
      type: string
    ProductExportStatus:
      enum:
        - new
        - current
      type: string
    ProductItemPeriodicityType:
      enum:
        - regular
        - onmovein
        - onmoveout
        - fixedamount
        - fixedduration
      type: string
    PropertyGroupBillingPeriodTariffStatus:
      enum:
        - nocalculatedtariffsrequired
        - calculatedtariffsmissing
        - calculatedtariffsavailable
      type: string
    PropertyGroupMeteringConfigurationDTO:
      type: object
      properties:
        id:
          type: string
          description: Gets or sets the unique identifier.
          nullable: true
        entityType:
          allOf:
            - $ref: '#/components/schemas/EntitySubjectType'
          description: Gets or sets the type of the entity.
          nullable: true
        createdDateTime:
          type: string
          description: Gets or sets the date and time when the entity was created.
          format: date-time
        discriminator:
          type: string
          description: Gets or sets the discriminator value.
          nullable: true
        _etag:
          type: string
          description: Gets or sets the ETag value.
          nullable: true
        requireAttention:
          type: boolean
          description: Gets a value indicating whether the entity requires attention.
          readOnly: true
        hasErrors:
          type: boolean
          description: Gets or sets a value indicating whether the entity has errors.
        hasWarnings:
          type: boolean
          description: Gets or sets a value indicating whether the entity has warnings.
        isReadOnly:
          type: boolean
          description: Gets or sets a value indicating whether the entity is read-only.
        organisationId:
          type: string
          description: Gets or sets the organization identifier.
          nullable: true
        propertyGroup:
          allOf:
            - $ref: '#/components/schemas/PropertyGroupReferenceDTO'
          nullable: true
        outputChannels:
          type: array
          items:
            $ref: '#/components/schemas/OutputChannelDTO'
          nullable: true
        validated:
          type: boolean
      additionalProperties: false
    PropertyGroupMeteringConfigurationDTOApiResponseDTO:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/LocalisedErrorDTO'
          nullable: true
        success:
          type: boolean
        applicableEntitiesCount:
          type: integer
          format: int32
        requestedEntitiesCount:
          type: integer
          format: int32
        succeededEntitiesCount:
          type: integer
          format: int32
          readOnly: true
        isSynchronous:
          type: boolean
        data:
          allOf:
            - $ref: '#/components/schemas/PropertyGroupMeteringConfigurationDTO'
          description: The updated entity in case of modifications or creation
          nullable: true
      additionalProperties: false
    PropertyGroupMeteringConfigurationOutputChannelRequest:
      type: object
      properties:
        id:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        unitOfMeasure:
          allOf:
            - $ref: '#/components/schemas/UnitOfMeasure'
          nullable: true
        meteringType:
          allOf:
            - $ref: '#/components/schemas/MeteringType'
          nullable: true
        formula:
          allOf:
            - $ref: '#/components/schemas/MeteringFormulaDTO'
          nullable: true
        utilityType:
          allOf:
            - $ref: '#/components/schemas/UtilityType'
          nullable: true
      additionalProperties: false
    PropertyGroupQuickFilter:
      enum:
        - all
        - requireattention
      type: string
    PropertyGroupReference:
      type: object
      properties:
        id:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
      additionalProperties: false
    PropertyGroupReferenceDTO:
      type: object
      properties:
        id:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
      additionalProperties: false
    PropertyGroupReferencePagedResponseModelDTO:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/PropertyGroupReference'
          nullable: true
        hasNextPage:
          type: boolean
        nextPageToken:
          type: string
          nullable: true
        totalRecords:
          type: integer
          format: int32
        sortableFields:
          type: array
          items:
            type: string
          nullable: true
        aggregateDetails:
          type: array
          items:
            $ref: '#/components/schemas/AggregateDetailsDTO'
          nullable: true
      additionalProperties: false
    PropertyGroupReferencePagedResponseModelDTOApiResponseDTO:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/LocalisedErrorDTO'
          nullable: true
        success:
          type: boolean
        applicableEntitiesCount:
          type: integer
          format: int32
        requestedEntitiesCount:
          type: integer
          format: int32
        succeededEntitiesCount:
          type: integer
          format: int32
          readOnly: true
        isSynchronous:
          type: boolean
        data:
          allOf:
            - $ref: '#/components/schemas/PropertyGroupReferencePagedResponseModelDTO'
          description: The updated entity in case of modifications or creation
          nullable: true
      additionalProperties: false
    PropertyGroupType:
      enum:
        - building
        - project
      type: string
    PropertyType:
      enum:
        - value
        - array
        - object
        - xmlattribute
      type: string
    ResolveMeteringIssueRequest:
      type: object
      properties:
        message:
          type: string
          nullable: true
        resolutionValue:
          allOf:
            - $ref: '#/components/schemas/BaseMeteringIssueResolutionValueDTO'
          nullable: true
      additionalProperties: false
    ScenarioGroupingType:
      enum:
        - invoice
        - collectioncase
        - contract
        - moverequest
        - personalinformation
      type: string
    ScheduledJobRecurrence:
      enum:
        - none
        - pt5m
        - pt1h
        - pt1d
      type: string
    ScheduledJobType:
      enum:
        - billingadvancerun
        - meterdataimport
      type: string
    SentStatus:
      enum:
        - notsent
        - sending
        - printing
        - skipped
        - sent
        - failed
      type: string
    ServiceConsumptionBucketDTO:
      type: object
      properties:
        value:
          type: number
          format: double
        startDateTime:
          type: string
          format: date-time
        endDateTime:
          type: string
          format: date-time
      additionalProperties: false
    ServiceConsumptionBucketDTOListApiResponseDTO:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/LocalisedErrorDTO'
          nullable: true
        success:
          type: boolean
        applicableEntitiesCount:
          type: integer
          format: int32
        requestedEntitiesCount:
          type: integer
          format: int32
        succeededEntitiesCount:
          type: integer
          format: int32
          readOnly: true
        isSynchronous:
          type: boolean
        data:
          type: array
          items:
            $ref: '#/components/schemas/ServiceConsumptionBucketDTO'
          description: The updated entity in case of modifications or creation
          nullable: true
      additionalProperties: false
    ServiceConsumptionDTO:
      type: object
      properties:
        externalChannelIdentifier:
          type: string
          description: External identifier for the channel
          nullable: true
        serviceLocationId:
          type: string
          description: Unique identifier of the service location
          nullable: true
        formulaStreamName:
          type: string
          description: Name of the formula stream that generated this consumption
          nullable: true
        productionDay:
          type: integer
          description: Day number for which the consumption is calculated
          format: int32
        timeZone:
          type: string
          description: Time zone identifier for the consumption data
          nullable: true
        productionDayStartUtc:
          type: string
          description: Start of the production day in UTC
          format: date-time
        productionDayEndUtc:
          type: string
          description: End of the production day in UTC
          format: date-time
        values:
          type: array
          items:
            $ref: '#/components/schemas/ServiceConsumptionValueDTO'
          description: List of consumption values with their time periods
          nullable: true
        dataFrequency:
          allOf:
            - $ref: '#/components/schemas/DataFrequency'
          description: Frequency of the consumption data points
          nullable: true
        meteringType:
          allOf:
            - $ref: '#/components/schemas/MeteringType'
          description: Type of metering used for the consumption data
          nullable: true
        utilityType:
          allOf:
            - $ref: '#/components/schemas/UtilityType'
          description: Type of utility being measured
          nullable: true
        direction:
          allOf:
            - $ref: '#/components/schemas/Direction'
          description: Direction of the consumption flow
          nullable: true
        unitOfMeasure:
          allOf:
            - $ref: '#/components/schemas/UnitOfMeasure'
          description: Unit of measure for the consumption values
          nullable: true
        timeOfUse:
          type: string
          description: Time of use classification for the consumption
          nullable: true
        total:
          type: number
          description: Total consumption value for the period
          format: double
      additionalProperties: false
      description: Represents consumption data for a service location over a specific time period
    ServiceConsumptionDTOPagedResponseModelDTO:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/ServiceConsumptionDTO'
          nullable: true
        hasNextPage:
          type: boolean
        nextPageToken:
          type: string
          nullable: true
        totalRecords:
          type: integer
          format: int32
        sortableFields:
          type: array
          items:
            type: string
          nullable: true
        aggregateDetails:
          type: array
          items:
            $ref: '#/components/schemas/AggregateDetailsDTO'
          nullable: true
      additionalProperties: false
    ServiceConsumptionDTOPagedResponseModelDTOApiResponseDTO:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/LocalisedErrorDTO'
          nullable: true
        success:
          type: boolean
        applicableEntitiesCount:
          type: integer
          format: int32
        requestedEntitiesCount:
          type: integer
          format: int32
        succeededEntitiesCount:
          type: integer
          format: int32
          readOnly: true
        isSynchronous:
          type: boolean
        data:
          allOf:
            - $ref: '#/components/schemas/ServiceConsumptionDTOPagedResponseModelDTO'
          description: The updated entity in case of modifications or creation
          nullable: true
      additionalProperties: false
    ServiceConsumptionGetDateRangeDTO:
      type: object
      properties:
        minProductionDayStartUtc:
          type: string
          format: date-time
        maxProductionDayEndUtc:
          type: string
          format: date-time
      additionalProperties: false
    ServiceConsumptionGetDateRangeDTOApiResponseDTO:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/LocalisedErrorDTO'
          nullable: true
        success:
          type: boolean
        applicableEntitiesCount:
          type: integer
          format: int32
        requestedEntitiesCount:
          type: integer
          format: int32
        succeededEntitiesCount:
          type: integer
          format: int32
          readOnly: true
        isSynchronous:
          type: boolean
        data:
          allOf:
            - $ref: '#/components/schemas/ServiceConsumptionGetDateRangeDTO'
          description: The updated entity in case of modifications or creation
          nullable: true
      additionalProperties: false
    ServiceConsumptionSumRequest:
      type: object
      properties:
        locationIds:
          type: array
          items:
            type: string
          nullable: true
        quickFilter:
          type: string
          nullable: true
        startDateTime:
          type: string
          format: date-time
          nullable: true
        endDateTime:
          type: string
          format: date-time
          nullable: true
        sumByUtilityType:
          type: boolean
      additionalProperties: false
    ServiceConsumptionValueDTO:
      type: object
      properties:
        value:
          type: number
          description: The consumption value
          format: double
        startDateTime:
          type: string
          description: Start date and time of the consumption period
          format: date-time
        endDateTime:
          type: string
          description: End date and time of the consumption period
          format: date-time
      additionalProperties: false
      description: Represents a single consumption value with its time period
    ServiceLocationQuickFilter:
      enum:
        - all
        - supplied
        - unsupplied
        - requireattention
      type: string
    ServiceStatus:
      enum:
        - supplied
        - unsupplied
        - requested
        - removed
      type: string
    SocialTariffExportType:
      enum:
        - customerportfolio
        - claimsprotectedcustomers
      type: string
    SshAuthenticationMethod:
      enum:
        - password
        - privatekey
      type: string
    StatusCode:
      enum:
        - active
        - inactive
        - failed
      type: string
    StringListApiResponseDTO:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/LocalisedErrorDTO'
          nullable: true
        success:
          type: boolean
        applicableEntitiesCount:
          type: integer
          format: int32
        requestedEntitiesCount:
          type: integer
          format: int32
        succeededEntitiesCount:
          type: integer
          format: int32
          readOnly: true
        isSynchronous:
          type: boolean
        data:
          type: array
          items:
            type: string
          description: The updated entity in case of modifications or creation
          nullable: true
      additionalProperties: false
    SyntheticLoadProfileOrigin:
      enum:
        - manual
        - systemgenerated
      type: string
    SystemUsageRecordType:
      enum:
        - servicelocationsactivewithoutservicesonly
        - servicelocationsactivewithservicesonly
        - servicelocationsinactivewithoutservicesonly
        - servicelocationsinactivewithservicesonly
        - servicelocationswithmorethanallowedmeters
        - metersreceivingmeteringwithoutlinkedaddress
        - measurementscreated
        - invoicescreated
        - documentssentviapostal
        - documentssentviaemail
        - contracthistoricalmoveins
        - contractmoveins
        - contracthistoricalmoveouts
        - contractmoveouts
        - users
        - activeintegration
        - servicelocationsactive
        - servicelocationsinactive
        - databasesize
        - filesize
        - smssent
      type: string
    TariffOrigin:
      enum:
        - product
        - billingitem
      type: string
    TemplateAssetType:
      enum:
        - css
        - headertemplate
        - footertemplate
        - image
        - constant
      type: string
    TemplateObjectType:
      enum:
        - invoice
        - collectioncase
        - moverequest
        - contract
        - billingrelation
        - invoiceubl
        - portalcustomer
        - annualstatement
      type: string
    TemplateUsecase:
      enum:
        - pdf
        - email
      type: string
    TierCalculationMethod:
      enum:
        - invoiceperiod
        - tariffperiod
      type: string
    TransactionQuickFilter:
      enum:
        - all
        - topay
        - torefund
        - onlyopen
        - onlyclosed
      type: string
    TransactionReferenceType:
      enum:
        - payment
        - invoice
        - collectionstep
      type: string
    TransactionStatus:
      enum:
        - notsettled
        - partiallysettled
        - settled
        - reversed
      type: string
    TransactionSubType:
      enum:
        - adjustbalance
        - incomingpayment
        - outgoingpayment
      type: string
    TransactionType:
      enum:
        - invoice
        - payment
        - reversal
        - collectionfee
        - writeoff
      type: string
    TranslationStatus:
      enum:
        - defaulttranslation
        - missingtranslation
        - translated
      type: string
    UblTranslations:
      enum:
        - invoices
        - vatnumber
        - invoice
        - vatnumberorganisationnumber
      type: string
    UnitOfMeasure:
      enum:
        - none
        - wh
        - kwh
        - mwh
        - gwh
        - j
        - kj
        - mj
        - gj
        - day
        - month
        - year
        - litre
        - m3
        - units
        - m3_h
        - celcius
        - k
        - kw
      type: string
    UpdateContractProductParameter:
      enum:
        - fromcontractstartdate
        - fromfirstopenperiod
        - fromsupplieddate
        - fromdatebasedonspecificperiod
      type: string
    UpdatePropertyGroupMeteringConfigurationRequest:
      type: object
      properties:
        outputChannels:
          type: array
          items:
            $ref: '#/components/schemas/PropertyGroupMeteringConfigurationOutputChannelRequest'
          nullable: true
      additionalProperties: false
    UploadMeasurementsRequest:
      type: object
      properties:
        automaticProcessing:
          type: boolean
          description: "Indicates if we should process the measurement automatically after validation has succeeded.\r\nBy default, this value is set to <value>true</value>."
        source:
          type: string
          description: Free text field to mark the source of the measurements.
          nullable: true
        uploadIdentifier:
          type: string
          description: Optional field which allows you to configure an identifier for the upload of measurements.
          nullable: true
        channelMeasurements:
          type: array
          items:
            $ref: '#/components/schemas/ChannelMeasurementRequest'
          description: Should contain the list of measurements for a specific channel.
          nullable: true
      additionalProperties: false
      description: Request data to upload measurements for specific meters.
    UserQuickFilter:
      enum:
        - all
        - users
        - admins
        - customroles
      type: string
    UtilityType:
      enum:
        - none
        - heat
        - cooling
        - hottapwater
        - water
        - electricity
        - gas
        - rainwater
        - services
      type: string
    ValidateMeasurementDTO:
      type: object
      properties:
        error:
          allOf:
            - $ref: '#/components/schemas/MeteringIssueError'
          nullable: true
        isValid:
          type: boolean
          readOnly: true
        isErrorMuted:
          type: boolean
      additionalProperties: false
    ValidateMeasurementDTOApiResponseDTO:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/LocalisedErrorDTO'
          nullable: true
        success:
          type: boolean
        applicableEntitiesCount:
          type: integer
          format: int32
        requestedEntitiesCount:
          type: integer
          format: int32
        succeededEntitiesCount:
          type: integer
          format: int32
          readOnly: true
        isSynchronous:
          type: boolean
        data:
          allOf:
            - $ref: '#/components/schemas/ValidateMeasurementDTO'
          description: The updated entity in case of modifications or creation
          nullable: true
      additionalProperties: false
    ValidateMeasurementRequest:
      type: object
      properties:
        endDateTime:
          type: string
          format: date-time
        value:
          type: number
          format: double
        meterId:
          type: string
          nullable: true
        externalChannelId:
          type: string
          nullable: true
      additionalProperties: false
    ValueProviderType:
      enum:
        - servicelocationidfrominvoicelines
        - attachmentidfrominvoice
        - contractidfrominvoice
        - servicelocationidfrominvoicelinesfallbacktocontractservicelocationid
        - customeridfrominvoice
      type: string
    WriteOffHandlingType:
      enum:
        - nowriteoff
        - openamount
        - chargeamount
      type: string
  securitySchemes:
    apiKeyHeader:
      type: apiKey
      name: apim-sub
      in: header
    apiKeyQuery:
      type: apiKey
      name: subscription-key
      in: query
security:
  - apiKeyHeader: [ ]
  - apiKeyQuery: [ ]
tags:
  - name: Integrations
    description: "API controller that handles metering integrations, including importing, validating, and processing measurement data.\r\nProvides endpoints for managing metering imports, viewing import status, and handling measurement data validation."
  - name: Consumptions
    description: "Controller for managing metering consumption data.\r\nProvides endpoints for retrieving, exporting, and recalculating consumption values."
  - name: Measurements
    description: "API controller for managing measurement data operations.\r\nProvides endpoints for retrieving, validating, creating, and deleting measurements for meters and channels."
  - name: MeteringIssues
    description: 'Controller for managing metering issues, providing endpoints for retrieving, resolving, and ignoring issues related to meters.'
  - name: MutingRules
    description: Controller for managing muting rules for metering issues
  - name: PropertyGroupMeteringConfiguration
    description: Controller for managing metering configurations for property groups
  - name: ServiceConsumptions
    description: Controller for managing service consumptions data
  - name: PrepaymentTransactions
    description: 'Controller for managing prepayment transactions, providing endpoints for creating and retrieving transactions.'