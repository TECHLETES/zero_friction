openapi: 3.0.1
info:
  title: Masterdata
  description: MasterData API
  version: '1.0'
servers:
  - url: https://api.zerofriction.co/api/md
paths:
  /Contracts:
    post:
      tags:
        - Contracts
      summary: Create new contract.
      description: Create new contract.
      operationId: post-contracts
      parameters:
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: The request containing contract details.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/CreateContractRequest'
            example:
              contractorId: string
              contractNumber: string
              supplyStartDate: string
              supplyEndDate: string
              contractedServiceLocations:
                - serviceLocationId: string
                  utilityType: { }
                  externalIdentifier: string
                  estimatedConsumptions:
                    - consumerGroupId: string
                      value: 0
                      unitOfMeasure: { }
                      meteringType: { }
                      isManualEntry: true
              attachmentSignatures:
                - culture: { }
                  attachmentFileName: string
                  errorCode: { }
                  origin: { }
                  productAttachmentId: string
                  attachmentFileId: string
                  entityAttachmentGroupId: string
                  signDate: string
                  viewedDate: string
              productId: string
              usePropertyGroupProduct: true
              invoiceAddress:
                streetName: string
                streetNumber: string
                streetNumberAddition: string
                postalCode: string
                buildingName: string
                locality: string
                city: string
                country: { }
                localizedDisplay: string
                lineOne: string
                lineTwo: string
              externalContractReference: string
              billingProperties: { }
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/CreateContractRequest'
            example:
              contractorId: string
              contractNumber: string
              supplyStartDate: string
              supplyEndDate: string
              contractedServiceLocations:
                - serviceLocationId: string
                  utilityType: { }
                  externalIdentifier: string
                  estimatedConsumptions:
                    - consumerGroupId: string
                      value: 0
                      unitOfMeasure: { }
                      meteringType: { }
                      isManualEntry: true
              attachmentSignatures:
                - culture: { }
                  attachmentFileName: string
                  errorCode: { }
                  origin: { }
                  productAttachmentId: string
                  attachmentFileId: string
                  entityAttachmentGroupId: string
                  signDate: string
                  viewedDate: string
              productId: string
              usePropertyGroupProduct: true
              invoiceAddress:
                streetName: string
                streetNumber: string
                streetNumberAddition: string
                postalCode: string
                buildingName: string
                locality: string
                city: string
                country: { }
                localizedDisplay: string
                lineOne: string
                lineTwo: string
              externalContractReference: string
              billingProperties: { }
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/CreateContractRequest'
            example:
              contractorId: string
              contractNumber: string
              supplyStartDate: string
              supplyEndDate: string
              contractedServiceLocations:
                - serviceLocationId: string
                  utilityType: { }
                  externalIdentifier: string
                  estimatedConsumptions:
                    - consumerGroupId: string
                      value: 0
                      unitOfMeasure: { }
                      meteringType: { }
                      isManualEntry: true
              attachmentSignatures:
                - culture: { }
                  attachmentFileName: string
                  errorCode: { }
                  origin: { }
                  productAttachmentId: string
                  attachmentFileId: string
                  entityAttachmentGroupId: string
                  signDate: string
                  viewedDate: string
              productId: string
              usePropertyGroupProduct: true
              invoiceAddress:
                streetName: string
                streetNumber: string
                streetNumberAddition: string
                postalCode: string
                buildingName: string
                locality: string
                city: string
                country: { }
                localizedDisplay: string
                lineOne: string
                lineTwo: string
              externalContractReference: string
              billingProperties: { }
      responses:
        '201':
          description: Created
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ContractDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ContractDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  contractNumber: string
                  contractor:
                    customerId: string
                    accountNumber: string
                    shortDisplayName: string
                    paymentMethod: { }
                    customerType: { }
                    customerGroup:
                      id: string
                      name: string
                  supplyStartDate: string
                  supplyEndDate: string
                  serviceLocations:
                    - id: string
                      address:
                        streetName: string
                        streetNumber: string
                        streetNumberAddition: string
                        postalCode: string
                        buildingName: string
                        locality: string
                        city: string
                        country: { }
                        localizedDisplay: string
                        lineOne: string
                        lineTwo: string
                      propertyGroupId: string
                      services:
                        - startDateTime: string
                          endDateTime: string
                          utilityType: { }
                          externalIdentifier: string
                          isConsumptionBased: true
                          estimatedConsumptions:
                            - consumerGroupId: string
                              value: 0
                              unitOfMeasure: { }
                              meteringType: { }
                              isManualEntry: true
                  statusHistory:
                    - contractStatus: { }
                      mutationDateTime: string
                  currentContractStatus: { }
                  billingDetails:
                    billingMethod: { }
                    invoiceFrequency: { }
                    advanceFrequency: { }
                    contractualAdvanceAmount: 0
                    products:
                      - productId: string
                        productName: string
                        startDateTime: string
                        endDateTime: string
                    invoiceAddress:
                      streetName: string
                      streetNumber: string
                      streetNumberAddition: string
                      postalCode: string
                      buildingName: string
                      locality: string
                      city: string
                      country: { }
                      localizedDisplay: string
                      lineOne: string
                      lineTwo: string
                    firstInvoiceStartDateTime: string
                    firstInvoiceEndDateTime: string
                    blocked: true
                  externalContractReference: string
                  paymentTermsId: string
                  blockedForDeletion: true
                  expectAdvancesToBeImportedPeriodically: true
                  usePropertyGroupProduct: true
                  propertyGroups:
                    - id: string
                      name: string
                  attachmentSignatures:
                    - culture: { }
                      attachmentFileName: string
                      errorCode: { }
                      origin: { }
                      productAttachmentId: string
                      attachmentFileId: string
                      entityAttachmentGroupId: string
                      signDate: string
                      viewedDate: string
                  customProperties:
                    - customEntityPropertyTypeId: string
                      values:
                        - valueDecimal: 0
                          valueString: string
                          valueBoolean: true
                          valueNumber: 0
                          valueDateTime: string
                          valueDropdown:
                            - string
                          startDateTime: string
                          endDateTime: string
            text/json:
              schema:
                $ref: '#/components/schemas/ContractDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  contractNumber: string
                  contractor:
                    customerId: string
                    accountNumber: string
                    shortDisplayName: string
                    paymentMethod: { }
                    customerType: { }
                    customerGroup:
                      id: string
                      name: string
                  supplyStartDate: string
                  supplyEndDate: string
                  serviceLocations:
                    - id: string
                      address:
                        streetName: string
                        streetNumber: string
                        streetNumberAddition: string
                        postalCode: string
                        buildingName: string
                        locality: string
                        city: string
                        country: { }
                        localizedDisplay: string
                        lineOne: string
                        lineTwo: string
                      propertyGroupId: string
                      services:
                        - startDateTime: string
                          endDateTime: string
                          utilityType: { }
                          externalIdentifier: string
                          isConsumptionBased: true
                          estimatedConsumptions:
                            - consumerGroupId: string
                              value: 0
                              unitOfMeasure: { }
                              meteringType: { }
                              isManualEntry: true
                  statusHistory:
                    - contractStatus: { }
                      mutationDateTime: string
                  currentContractStatus: { }
                  billingDetails:
                    billingMethod: { }
                    invoiceFrequency: { }
                    advanceFrequency: { }
                    contractualAdvanceAmount: 0
                    products:
                      - productId: string
                        productName: string
                        startDateTime: string
                        endDateTime: string
                    invoiceAddress:
                      streetName: string
                      streetNumber: string
                      streetNumberAddition: string
                      postalCode: string
                      buildingName: string
                      locality: string
                      city: string
                      country: { }
                      localizedDisplay: string
                      lineOne: string
                      lineTwo: string
                    firstInvoiceStartDateTime: string
                    firstInvoiceEndDateTime: string
                    blocked: true
                  externalContractReference: string
                  paymentTermsId: string
                  blockedForDeletion: true
                  expectAdvancesToBeImportedPeriodically: true
                  usePropertyGroupProduct: true
                  propertyGroups:
                    - id: string
                      name: string
                  attachmentSignatures:
                    - culture: { }
                      attachmentFileName: string
                      errorCode: { }
                      origin: { }
                      productAttachmentId: string
                      attachmentFileId: string
                      entityAttachmentGroupId: string
                      signDate: string
                      viewedDate: string
                  customProperties:
                    - customEntityPropertyTypeId: string
                      values:
                        - valueDecimal: 0
                          valueString: string
                          valueBoolean: true
                          valueNumber: 0
                          valueDateTime: string
                          valueDropdown:
                            - string
                          startDateTime: string
                          endDateTime: string
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
  /Contracts/filter:
    post:
      tags:
        - Contracts
      summary: Retrieve contracts based on the provided query parameters.
      description: Retrieve contracts based on the provided query parameters.
      operationId: post-contracts-filter
      parameters:
        - name: Name
          in: query
          schema:
            type: string
        - name: Id
          in: query
          description: Format - int32.
          schema:
            type: integer
            format: int32
        - name: orderBy
          in: query
          description: Allows to order the contracts.
          schema:
            type: string
        - name: continuationToken
          in: header
          description: Token which allows you to fetch the next records. The continuation token is returned in the response and can be reused in the next request to fetch additional data.
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: Allows to search on fields within the contracts.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/GetContractsQueryParams'
            example:
              flexSearch: string
              includeOnlyIds:
                - string
              excludeIds:
                - string
              serviceLocationId: string
              propertyGroupIds:
                - string
              customerGroupId: string
              customerId: string
              customerType: string
              productId: string
              excludeTerminatedContracts: true
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/GetContractsQueryParams'
            example:
              flexSearch: string
              includeOnlyIds:
                - string
              excludeIds:
                - string
              serviceLocationId: string
              propertyGroupIds:
                - string
              customerGroupId: string
              customerId: string
              customerType: string
              productId: string
              excludeTerminatedContracts: true
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/GetContractsQueryParams'
            example:
              flexSearch: string
              includeOnlyIds:
                - string
              excludeIds:
                - string
              serviceLocationId: string
              propertyGroupIds:
                - string
              customerGroupId: string
              customerId: string
              customerType: string
              productId: string
              excludeTerminatedContracts: true
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ContractDTOPagedResponseModelDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ContractDTOPagedResponseModelDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  results:
                    - id: string
                      entityType: { }
                      createdDateTime: string
                      discriminator: string
                      _etag: string
                      requireAttention: true
                      hasErrors: true
                      hasWarnings: true
                      isReadOnly: true
                      organisationId: string
                      contractNumber: string
                      contractor:
                        customerId: string
                        accountNumber: string
                        shortDisplayName: string
                        paymentMethod: { }
                        customerType: { }
                        customerGroup:
                          id: string
                          name: string
                      supplyStartDate: string
                      supplyEndDate: string
                      serviceLocations:
                        - id: string
                          address:
                            streetName: string
                            streetNumber: string
                            streetNumberAddition: string
                            postalCode: string
                            buildingName: string
                            locality: string
                            city: string
                            country: { }
                            localizedDisplay: string
                            lineOne: string
                            lineTwo: string
                          propertyGroupId: string
                          services:
                            - startDateTime: string
                              endDateTime: string
                              utilityType: { }
                              externalIdentifier: string
                              isConsumptionBased: true
                              estimatedConsumptions:
                                - consumerGroupId: string
                                  value: 0
                                  unitOfMeasure: { }
                                  meteringType: { }
                                  isManualEntry: true
                      statusHistory:
                        - contractStatus: { }
                          mutationDateTime: string
                      currentContractStatus: { }
                      billingDetails:
                        billingMethod: { }
                        invoiceFrequency: { }
                        advanceFrequency: { }
                        contractualAdvanceAmount: 0
                        products:
                          - productId: string
                            productName: string
                            startDateTime: string
                            endDateTime: string
                        invoiceAddress:
                          streetName: string
                          streetNumber: string
                          streetNumberAddition: string
                          postalCode: string
                          buildingName: string
                          locality: string
                          city: string
                          country: { }
                          localizedDisplay: string
                          lineOne: string
                          lineTwo: string
                        firstInvoiceStartDateTime: string
                        firstInvoiceEndDateTime: string
                        blocked: true
                      externalContractReference: string
                      paymentTermsId: string
                      blockedForDeletion: true
                      expectAdvancesToBeImportedPeriodically: true
                      usePropertyGroupProduct: true
                      propertyGroups:
                        - id: string
                          name: string
                      attachmentSignatures:
                        - culture: { }
                          attachmentFileName: string
                          errorCode: { }
                          origin: { }
                          productAttachmentId: string
                          attachmentFileId: string
                          entityAttachmentGroupId: string
                          signDate: string
                          viewedDate: string
                      customProperties:
                        - customEntityPropertyTypeId: string
                          values:
                            - valueDecimal: 0
                              valueString: string
                              valueBoolean: true
                              valueNumber: 0
                              valueDateTime: string
                              valueDropdown:
                                - string
                              startDateTime: string
                              endDateTime: string
                  hasNextPage: true
                  nextPageToken: string
                  totalRecords: 0
                  sortableFields:
                    - string
                  aggregateDetails:
                    - code: string
                      translation: string
                      value: 0
                      valueDate: string
            text/json:
              schema:
                $ref: '#/components/schemas/ContractDTOPagedResponseModelDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  results:
                    - id: string
                      entityType: { }
                      createdDateTime: string
                      discriminator: string
                      _etag: string
                      requireAttention: true
                      hasErrors: true
                      hasWarnings: true
                      isReadOnly: true
                      organisationId: string
                      contractNumber: string
                      contractor:
                        customerId: string
                        accountNumber: string
                        shortDisplayName: string
                        paymentMethod: { }
                        customerType: { }
                        customerGroup:
                          id: string
                          name: string
                      supplyStartDate: string
                      supplyEndDate: string
                      serviceLocations:
                        - id: string
                          address:
                            streetName: string
                            streetNumber: string
                            streetNumberAddition: string
                            postalCode: string
                            buildingName: string
                            locality: string
                            city: string
                            country: { }
                            localizedDisplay: string
                            lineOne: string
                            lineTwo: string
                          propertyGroupId: string
                          services:
                            - startDateTime: string
                              endDateTime: string
                              utilityType: { }
                              externalIdentifier: string
                              isConsumptionBased: true
                              estimatedConsumptions:
                                - consumerGroupId: string
                                  value: 0
                                  unitOfMeasure: { }
                                  meteringType: { }
                                  isManualEntry: true
                      statusHistory:
                        - contractStatus: { }
                          mutationDateTime: string
                      currentContractStatus: { }
                      billingDetails:
                        billingMethod: { }
                        invoiceFrequency: { }
                        advanceFrequency: { }
                        contractualAdvanceAmount: 0
                        products:
                          - productId: string
                            productName: string
                            startDateTime: string
                            endDateTime: string
                        invoiceAddress:
                          streetName: string
                          streetNumber: string
                          streetNumberAddition: string
                          postalCode: string
                          buildingName: string
                          locality: string
                          city: string
                          country: { }
                          localizedDisplay: string
                          lineOne: string
                          lineTwo: string
                        firstInvoiceStartDateTime: string
                        firstInvoiceEndDateTime: string
                        blocked: true
                      externalContractReference: string
                      paymentTermsId: string
                      blockedForDeletion: true
                      expectAdvancesToBeImportedPeriodically: true
                      usePropertyGroupProduct: true
                      propertyGroups:
                        - id: string
                          name: string
                      attachmentSignatures:
                        - culture: { }
                          attachmentFileName: string
                          errorCode: { }
                          origin: { }
                          productAttachmentId: string
                          attachmentFileId: string
                          entityAttachmentGroupId: string
                          signDate: string
                          viewedDate: string
                      customProperties:
                        - customEntityPropertyTypeId: string
                          values:
                            - valueDecimal: 0
                              valueString: string
                              valueBoolean: true
                              valueNumber: 0
                              valueDateTime: string
                              valueDropdown:
                                - string
                              startDateTime: string
                              endDateTime: string
                  hasNextPage: true
                  nextPageToken: string
                  totalRecords: 0
                  sortableFields:
                    - string
                  aggregateDetails:
                    - code: string
                      translation: string
                      value: 0
                      valueDate: string
  /Contracts/filter/overviewcount:
    post:
      tags:
        - Contracts
      summary: Retrieve the overview count of contracts based on the provided query parameters.
      description: Retrieve the overview count of contracts based on the provided query parameters.
      operationId: post-contracts-filter-overviewcount
      parameters:
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: Allows to search on fields within the contracts.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/GetContractsQueryParams'
            example:
              flexSearch: string
              includeOnlyIds:
                - string
              excludeIds:
                - string
              serviceLocationId: string
              propertyGroupIds:
                - string
              customerGroupId: string
              customerId: string
              customerType: string
              productId: string
              excludeTerminatedContracts: true
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/GetContractsQueryParams'
            example:
              flexSearch: string
              includeOnlyIds:
                - string
              excludeIds:
                - string
              serviceLocationId: string
              propertyGroupIds:
                - string
              customerGroupId: string
              customerId: string
              customerType: string
              productId: string
              excludeTerminatedContracts: true
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/GetContractsQueryParams'
            example:
              flexSearch: string
              includeOnlyIds:
                - string
              excludeIds:
                - string
              serviceLocationId: string
              propertyGroupIds:
                - string
              customerGroupId: string
              customerId: string
              customerType: string
              productId: string
              excludeTerminatedContracts: true
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ContractOverviewCountDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ContractOverviewCountDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  all: 0
                  draft: 0
                  ongoing: 0
                  blocked: 0
            text/json:
              schema:
                $ref: '#/components/schemas/ContractOverviewCountDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  all: 0
                  draft: 0
                  ongoing: 0
                  blocked: 0
  '/Contracts/{contractuuid}':
    get:
      tags:
        - Contracts
      summary: Retrieve a contract by its ID.
      description: Retrieve a contract by its ID.
      operationId: get-contracts-contractuuid
      parameters:
        - name: contractuuid
          in: path
          description: The ID of the contract.
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: string
                title: string
                status: 0
                detail: string
                instance: string
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: string
                title: string
                status: 0
                detail: string
                instance: string
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ContractDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ContractDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  contractNumber: string
                  contractor:
                    customerId: string
                    accountNumber: string
                    shortDisplayName: string
                    paymentMethod: { }
                    customerType: { }
                    customerGroup:
                      id: string
                      name: string
                  supplyStartDate: string
                  supplyEndDate: string
                  serviceLocations:
                    - id: string
                      address:
                        streetName: string
                        streetNumber: string
                        streetNumberAddition: string
                        postalCode: string
                        buildingName: string
                        locality: string
                        city: string
                        country: { }
                        localizedDisplay: string
                        lineOne: string
                        lineTwo: string
                      propertyGroupId: string
                      services:
                        - startDateTime: string
                          endDateTime: string
                          utilityType: { }
                          externalIdentifier: string
                          isConsumptionBased: true
                          estimatedConsumptions:
                            - consumerGroupId: string
                              value: 0
                              unitOfMeasure: { }
                              meteringType: { }
                              isManualEntry: true
                  statusHistory:
                    - contractStatus: { }
                      mutationDateTime: string
                  currentContractStatus: { }
                  billingDetails:
                    billingMethod: { }
                    invoiceFrequency: { }
                    advanceFrequency: { }
                    contractualAdvanceAmount: 0
                    products:
                      - productId: string
                        productName: string
                        startDateTime: string
                        endDateTime: string
                    invoiceAddress:
                      streetName: string
                      streetNumber: string
                      streetNumberAddition: string
                      postalCode: string
                      buildingName: string
                      locality: string
                      city: string
                      country: { }
                      localizedDisplay: string
                      lineOne: string
                      lineTwo: string
                    firstInvoiceStartDateTime: string
                    firstInvoiceEndDateTime: string
                    blocked: true
                  externalContractReference: string
                  paymentTermsId: string
                  blockedForDeletion: true
                  expectAdvancesToBeImportedPeriodically: true
                  usePropertyGroupProduct: true
                  propertyGroups:
                    - id: string
                      name: string
                  attachmentSignatures:
                    - culture: { }
                      attachmentFileName: string
                      errorCode: { }
                      origin: { }
                      productAttachmentId: string
                      attachmentFileId: string
                      entityAttachmentGroupId: string
                      signDate: string
                      viewedDate: string
                  customProperties:
                    - customEntityPropertyTypeId: string
                      values:
                        - valueDecimal: 0
                          valueString: string
                          valueBoolean: true
                          valueNumber: 0
                          valueDateTime: string
                          valueDropdown:
                            - string
                          startDateTime: string
                          endDateTime: string
            text/json:
              schema:
                $ref: '#/components/schemas/ContractDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  contractNumber: string
                  contractor:
                    customerId: string
                    accountNumber: string
                    shortDisplayName: string
                    paymentMethod: { }
                    customerType: { }
                    customerGroup:
                      id: string
                      name: string
                  supplyStartDate: string
                  supplyEndDate: string
                  serviceLocations:
                    - id: string
                      address:
                        streetName: string
                        streetNumber: string
                        streetNumberAddition: string
                        postalCode: string
                        buildingName: string
                        locality: string
                        city: string
                        country: { }
                        localizedDisplay: string
                        lineOne: string
                        lineTwo: string
                      propertyGroupId: string
                      services:
                        - startDateTime: string
                          endDateTime: string
                          utilityType: { }
                          externalIdentifier: string
                          isConsumptionBased: true
                          estimatedConsumptions:
                            - consumerGroupId: string
                              value: 0
                              unitOfMeasure: { }
                              meteringType: { }
                              isManualEntry: true
                  statusHistory:
                    - contractStatus: { }
                      mutationDateTime: string
                  currentContractStatus: { }
                  billingDetails:
                    billingMethod: { }
                    invoiceFrequency: { }
                    advanceFrequency: { }
                    contractualAdvanceAmount: 0
                    products:
                      - productId: string
                        productName: string
                        startDateTime: string
                        endDateTime: string
                    invoiceAddress:
                      streetName: string
                      streetNumber: string
                      streetNumberAddition: string
                      postalCode: string
                      buildingName: string
                      locality: string
                      city: string
                      country: { }
                      localizedDisplay: string
                      lineOne: string
                      lineTwo: string
                    firstInvoiceStartDateTime: string
                    firstInvoiceEndDateTime: string
                    blocked: true
                  externalContractReference: string
                  paymentTermsId: string
                  blockedForDeletion: true
                  expectAdvancesToBeImportedPeriodically: true
                  usePropertyGroupProduct: true
                  propertyGroups:
                    - id: string
                      name: string
                  attachmentSignatures:
                    - culture: { }
                      attachmentFileName: string
                      errorCode: { }
                      origin: { }
                      productAttachmentId: string
                      attachmentFileId: string
                      entityAttachmentGroupId: string
                      signDate: string
                      viewedDate: string
                  customProperties:
                    - customEntityPropertyTypeId: string
                      values:
                        - valueDecimal: 0
                          valueString: string
                          valueBoolean: true
                          valueNumber: 0
                          valueDateTime: string
                          valueDropdown:
                            - string
                          startDateTime: string
                          endDateTime: string
    delete:
      tags:
        - Contracts
      summary: Delete a draft contract.
      description: Delete a draft contract.
      operationId: delete-contracts-contractuuid
      parameters:
        - name: contractuuid
          in: path
          description: The ID of the contract.
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: The request containing delete details.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/RemoveContractRequest'
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/RemoveContractRequest'
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/RemoveContractRequest'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/BooleanApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/BooleanApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data: true
            text/json:
              schema:
                $ref: '#/components/schemas/BooleanApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data: true
  '/Contracts/{contractuuid}/sign':
    post:
      tags:
        - Contracts
      summary: Sign a contract.
      description: Sign a contract.
      operationId: post-contracts-contractuuid-sign
      parameters:
        - name: contractuuid
          in: path
          description: The ID of the contract.
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: The request containing sign details.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/SignContractRequest'
            example:
              mutationDateTime: string
              keepExistingInvoiceOnEndDate: true
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/SignContractRequest'
            example:
              mutationDateTime: string
              keepExistingInvoiceOnEndDate: true
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/SignContractRequest'
            example:
              mutationDateTime: string
              keepExistingInvoiceOnEndDate: true
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ContractDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ContractDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  contractNumber: string
                  contractor:
                    customerId: string
                    accountNumber: string
                    shortDisplayName: string
                    paymentMethod: { }
                    customerType: { }
                    customerGroup:
                      id: string
                      name: string
                  supplyStartDate: string
                  supplyEndDate: string
                  serviceLocations:
                    - id: string
                      address:
                        streetName: string
                        streetNumber: string
                        streetNumberAddition: string
                        postalCode: string
                        buildingName: string
                        locality: string
                        city: string
                        country: { }
                        localizedDisplay: string
                        lineOne: string
                        lineTwo: string
                      propertyGroupId: string
                      services:
                        - startDateTime: string
                          endDateTime: string
                          utilityType: { }
                          externalIdentifier: string
                          isConsumptionBased: true
                          estimatedConsumptions:
                            - consumerGroupId: string
                              value: 0
                              unitOfMeasure: { }
                              meteringType: { }
                              isManualEntry: true
                  statusHistory:
                    - contractStatus: { }
                      mutationDateTime: string
                  currentContractStatus: { }
                  billingDetails:
                    billingMethod: { }
                    invoiceFrequency: { }
                    advanceFrequency: { }
                    contractualAdvanceAmount: 0
                    products:
                      - productId: string
                        productName: string
                        startDateTime: string
                        endDateTime: string
                    invoiceAddress:
                      streetName: string
                      streetNumber: string
                      streetNumberAddition: string
                      postalCode: string
                      buildingName: string
                      locality: string
                      city: string
                      country: { }
                      localizedDisplay: string
                      lineOne: string
                      lineTwo: string
                    firstInvoiceStartDateTime: string
                    firstInvoiceEndDateTime: string
                    blocked: true
                  externalContractReference: string
                  paymentTermsId: string
                  blockedForDeletion: true
                  expectAdvancesToBeImportedPeriodically: true
                  usePropertyGroupProduct: true
                  propertyGroups:
                    - id: string
                      name: string
                  attachmentSignatures:
                    - culture: { }
                      attachmentFileName: string
                      errorCode: { }
                      origin: { }
                      productAttachmentId: string
                      attachmentFileId: string
                      entityAttachmentGroupId: string
                      signDate: string
                      viewedDate: string
                  customProperties:
                    - customEntityPropertyTypeId: string
                      values:
                        - valueDecimal: 0
                          valueString: string
                          valueBoolean: true
                          valueNumber: 0
                          valueDateTime: string
                          valueDropdown:
                            - string
                          startDateTime: string
                          endDateTime: string
            text/json:
              schema:
                $ref: '#/components/schemas/ContractDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  contractNumber: string
                  contractor:
                    customerId: string
                    accountNumber: string
                    shortDisplayName: string
                    paymentMethod: { }
                    customerType: { }
                    customerGroup:
                      id: string
                      name: string
                  supplyStartDate: string
                  supplyEndDate: string
                  serviceLocations:
                    - id: string
                      address:
                        streetName: string
                        streetNumber: string
                        streetNumberAddition: string
                        postalCode: string
                        buildingName: string
                        locality: string
                        city: string
                        country: { }
                        localizedDisplay: string
                        lineOne: string
                        lineTwo: string
                      propertyGroupId: string
                      services:
                        - startDateTime: string
                          endDateTime: string
                          utilityType: { }
                          externalIdentifier: string
                          isConsumptionBased: true
                          estimatedConsumptions:
                            - consumerGroupId: string
                              value: 0
                              unitOfMeasure: { }
                              meteringType: { }
                              isManualEntry: true
                  statusHistory:
                    - contractStatus: { }
                      mutationDateTime: string
                  currentContractStatus: { }
                  billingDetails:
                    billingMethod: { }
                    invoiceFrequency: { }
                    advanceFrequency: { }
                    contractualAdvanceAmount: 0
                    products:
                      - productId: string
                        productName: string
                        startDateTime: string
                        endDateTime: string
                    invoiceAddress:
                      streetName: string
                      streetNumber: string
                      streetNumberAddition: string
                      postalCode: string
                      buildingName: string
                      locality: string
                      city: string
                      country: { }
                      localizedDisplay: string
                      lineOne: string
                      lineTwo: string
                    firstInvoiceStartDateTime: string
                    firstInvoiceEndDateTime: string
                    blocked: true
                  externalContractReference: string
                  paymentTermsId: string
                  blockedForDeletion: true
                  expectAdvancesToBeImportedPeriodically: true
                  usePropertyGroupProduct: true
                  propertyGroups:
                    - id: string
                      name: string
                  attachmentSignatures:
                    - culture: { }
                      attachmentFileName: string
                      errorCode: { }
                      origin: { }
                      productAttachmentId: string
                      attachmentFileId: string
                      entityAttachmentGroupId: string
                      signDate: string
                      viewedDate: string
                  customProperties:
                    - customEntityPropertyTypeId: string
                      values:
                        - valueDecimal: 0
                          valueString: string
                          valueBoolean: true
                          valueNumber: 0
                          valueDateTime: string
                          valueDropdown:
                            - string
                          startDateTime: string
                          endDateTime: string
  /Contracts/bulk/sign:
    post:
      tags:
        - Contracts
      summary: Sign multiple contracts in bulk.
      description: Sign multiple contracts in bulk.
      operationId: post-contracts-bulk-sign
      parameters:
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: The request containing bulk sign details and query parameters to filter the contracts to be signed.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BulkSignContractRequest'
            example:
              mutationDateTime: string
              keepExistingInvoiceOnEndDate: true
              onlyValidate: true
              queryParams:
                flexSearch: string
                includeOnlyIds:
                  - string
                excludeIds:
                  - string
                serviceLocationId: string
                propertyGroupIds:
                  - string
                customerGroupId: string
                customerId: string
                customerType: string
                productId: string
                excludeTerminatedContracts: true
              quickFilter: string
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BulkSignContractRequest'
            example:
              mutationDateTime: string
              keepExistingInvoiceOnEndDate: true
              onlyValidate: true
              queryParams:
                flexSearch: string
                includeOnlyIds:
                  - string
                excludeIds:
                  - string
                serviceLocationId: string
                propertyGroupIds:
                  - string
                customerGroupId: string
                customerId: string
                customerType: string
                productId: string
                excludeTerminatedContracts: true
              quickFilter: string
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BulkSignContractRequest'
            example:
              mutationDateTime: string
              keepExistingInvoiceOnEndDate: true
              onlyValidate: true
              queryParams:
                flexSearch: string
                includeOnlyIds:
                  - string
                excludeIds:
                  - string
                serviceLocationId: string
                propertyGroupIds:
                  - string
                customerGroupId: string
                customerId: string
                customerType: string
                productId: string
                excludeTerminatedContracts: true
              quickFilter: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ContractDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ContractDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  contractNumber: string
                  contractor:
                    customerId: string
                    accountNumber: string
                    shortDisplayName: string
                    paymentMethod: { }
                    customerType: { }
                    customerGroup:
                      id: string
                      name: string
                  supplyStartDate: string
                  supplyEndDate: string
                  serviceLocations:
                    - id: string
                      address:
                        streetName: string
                        streetNumber: string
                        streetNumberAddition: string
                        postalCode: string
                        buildingName: string
                        locality: string
                        city: string
                        country: { }
                        localizedDisplay: string
                        lineOne: string
                        lineTwo: string
                      propertyGroupId: string
                      services:
                        - startDateTime: string
                          endDateTime: string
                          utilityType: { }
                          externalIdentifier: string
                          isConsumptionBased: true
                          estimatedConsumptions:
                            - consumerGroupId: string
                              value: 0
                              unitOfMeasure: { }
                              meteringType: { }
                              isManualEntry: true
                  statusHistory:
                    - contractStatus: { }
                      mutationDateTime: string
                  currentContractStatus: { }
                  billingDetails:
                    billingMethod: { }
                    invoiceFrequency: { }
                    advanceFrequency: { }
                    contractualAdvanceAmount: 0
                    products:
                      - productId: string
                        productName: string
                        startDateTime: string
                        endDateTime: string
                    invoiceAddress:
                      streetName: string
                      streetNumber: string
                      streetNumberAddition: string
                      postalCode: string
                      buildingName: string
                      locality: string
                      city: string
                      country: { }
                      localizedDisplay: string
                      lineOne: string
                      lineTwo: string
                    firstInvoiceStartDateTime: string
                    firstInvoiceEndDateTime: string
                    blocked: true
                  externalContractReference: string
                  paymentTermsId: string
                  blockedForDeletion: true
                  expectAdvancesToBeImportedPeriodically: true
                  usePropertyGroupProduct: true
                  propertyGroups:
                    - id: string
                      name: string
                  attachmentSignatures:
                    - culture: { }
                      attachmentFileName: string
                      errorCode: { }
                      origin: { }
                      productAttachmentId: string
                      attachmentFileId: string
                      entityAttachmentGroupId: string
                      signDate: string
                      viewedDate: string
                  customProperties:
                    - customEntityPropertyTypeId: string
                      values:
                        - valueDecimal: 0
                          valueString: string
                          valueBoolean: true
                          valueNumber: 0
                          valueDateTime: string
                          valueDropdown:
                            - string
                          startDateTime: string
                          endDateTime: string
            text/json:
              schema:
                $ref: '#/components/schemas/ContractDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  contractNumber: string
                  contractor:
                    customerId: string
                    accountNumber: string
                    shortDisplayName: string
                    paymentMethod: { }
                    customerType: { }
                    customerGroup:
                      id: string
                      name: string
                  supplyStartDate: string
                  supplyEndDate: string
                  serviceLocations:
                    - id: string
                      address:
                        streetName: string
                        streetNumber: string
                        streetNumberAddition: string
                        postalCode: string
                        buildingName: string
                        locality: string
                        city: string
                        country: { }
                        localizedDisplay: string
                        lineOne: string
                        lineTwo: string
                      propertyGroupId: string
                      services:
                        - startDateTime: string
                          endDateTime: string
                          utilityType: { }
                          externalIdentifier: string
                          isConsumptionBased: true
                          estimatedConsumptions:
                            - consumerGroupId: string
                              value: 0
                              unitOfMeasure: { }
                              meteringType: { }
                              isManualEntry: true
                  statusHistory:
                    - contractStatus: { }
                      mutationDateTime: string
                  currentContractStatus: { }
                  billingDetails:
                    billingMethod: { }
                    invoiceFrequency: { }
                    advanceFrequency: { }
                    contractualAdvanceAmount: 0
                    products:
                      - productId: string
                        productName: string
                        startDateTime: string
                        endDateTime: string
                    invoiceAddress:
                      streetName: string
                      streetNumber: string
                      streetNumberAddition: string
                      postalCode: string
                      buildingName: string
                      locality: string
                      city: string
                      country: { }
                      localizedDisplay: string
                      lineOne: string
                      lineTwo: string
                    firstInvoiceStartDateTime: string
                    firstInvoiceEndDateTime: string
                    blocked: true
                  externalContractReference: string
                  paymentTermsId: string
                  blockedForDeletion: true
                  expectAdvancesToBeImportedPeriodically: true
                  usePropertyGroupProduct: true
                  propertyGroups:
                    - id: string
                      name: string
                  attachmentSignatures:
                    - culture: { }
                      attachmentFileName: string
                      errorCode: { }
                      origin: { }
                      productAttachmentId: string
                      attachmentFileId: string
                      entityAttachmentGroupId: string
                      signDate: string
                      viewedDate: string
                  customProperties:
                    - customEntityPropertyTypeId: string
                      values:
                        - valueDecimal: 0
                          valueString: string
                          valueBoolean: true
                          valueNumber: 0
                          valueDateTime: string
                          valueDropdown:
                            - string
                          startDateTime: string
                          endDateTime: string
  '/Contracts/{contractuuid}/terminate':
    post:
      tags:
        - Contracts
      summary: Terminate a signed contract.
      description: Terminate a signed contract.
      operationId: post-contracts-contractuuid-terminate
      parameters:
        - name: contractuuid
          in: path
          description: The ID of the contract.
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: The request containing termination details.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/TerminateContractRequest'
            example:
              mutationDateTime: string
              keepExistingInvoiceOnEndDate: true
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/TerminateContractRequest'
            example:
              mutationDateTime: string
              keepExistingInvoiceOnEndDate: true
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/TerminateContractRequest'
            example:
              mutationDateTime: string
              keepExistingInvoiceOnEndDate: true
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ContractDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ContractDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  contractNumber: string
                  contractor:
                    customerId: string
                    accountNumber: string
                    shortDisplayName: string
                    paymentMethod: { }
                    customerType: { }
                    customerGroup:
                      id: string
                      name: string
                  supplyStartDate: string
                  supplyEndDate: string
                  serviceLocations:
                    - id: string
                      address:
                        streetName: string
                        streetNumber: string
                        streetNumberAddition: string
                        postalCode: string
                        buildingName: string
                        locality: string
                        city: string
                        country: { }
                        localizedDisplay: string
                        lineOne: string
                        lineTwo: string
                      propertyGroupId: string
                      services:
                        - startDateTime: string
                          endDateTime: string
                          utilityType: { }
                          externalIdentifier: string
                          isConsumptionBased: true
                          estimatedConsumptions:
                            - consumerGroupId: string
                              value: 0
                              unitOfMeasure: { }
                              meteringType: { }
                              isManualEntry: true
                  statusHistory:
                    - contractStatus: { }
                      mutationDateTime: string
                  currentContractStatus: { }
                  billingDetails:
                    billingMethod: { }
                    invoiceFrequency: { }
                    advanceFrequency: { }
                    contractualAdvanceAmount: 0
                    products:
                      - productId: string
                        productName: string
                        startDateTime: string
                        endDateTime: string
                    invoiceAddress:
                      streetName: string
                      streetNumber: string
                      streetNumberAddition: string
                      postalCode: string
                      buildingName: string
                      locality: string
                      city: string
                      country: { }
                      localizedDisplay: string
                      lineOne: string
                      lineTwo: string
                    firstInvoiceStartDateTime: string
                    firstInvoiceEndDateTime: string
                    blocked: true
                  externalContractReference: string
                  paymentTermsId: string
                  blockedForDeletion: true
                  expectAdvancesToBeImportedPeriodically: true
                  usePropertyGroupProduct: true
                  propertyGroups:
                    - id: string
                      name: string
                  attachmentSignatures:
                    - culture: { }
                      attachmentFileName: string
                      errorCode: { }
                      origin: { }
                      productAttachmentId: string
                      attachmentFileId: string
                      entityAttachmentGroupId: string
                      signDate: string
                      viewedDate: string
                  customProperties:
                    - customEntityPropertyTypeId: string
                      values:
                        - valueDecimal: 0
                          valueString: string
                          valueBoolean: true
                          valueNumber: 0
                          valueDateTime: string
                          valueDropdown:
                            - string
                          startDateTime: string
                          endDateTime: string
            text/json:
              schema:
                $ref: '#/components/schemas/ContractDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  contractNumber: string
                  contractor:
                    customerId: string
                    accountNumber: string
                    shortDisplayName: string
                    paymentMethod: { }
                    customerType: { }
                    customerGroup:
                      id: string
                      name: string
                  supplyStartDate: string
                  supplyEndDate: string
                  serviceLocations:
                    - id: string
                      address:
                        streetName: string
                        streetNumber: string
                        streetNumberAddition: string
                        postalCode: string
                        buildingName: string
                        locality: string
                        city: string
                        country: { }
                        localizedDisplay: string
                        lineOne: string
                        lineTwo: string
                      propertyGroupId: string
                      services:
                        - startDateTime: string
                          endDateTime: string
                          utilityType: { }
                          externalIdentifier: string
                          isConsumptionBased: true
                          estimatedConsumptions:
                            - consumerGroupId: string
                              value: 0
                              unitOfMeasure: { }
                              meteringType: { }
                              isManualEntry: true
                  statusHistory:
                    - contractStatus: { }
                      mutationDateTime: string
                  currentContractStatus: { }
                  billingDetails:
                    billingMethod: { }
                    invoiceFrequency: { }
                    advanceFrequency: { }
                    contractualAdvanceAmount: 0
                    products:
                      - productId: string
                        productName: string
                        startDateTime: string
                        endDateTime: string
                    invoiceAddress:
                      streetName: string
                      streetNumber: string
                      streetNumberAddition: string
                      postalCode: string
                      buildingName: string
                      locality: string
                      city: string
                      country: { }
                      localizedDisplay: string
                      lineOne: string
                      lineTwo: string
                    firstInvoiceStartDateTime: string
                    firstInvoiceEndDateTime: string
                    blocked: true
                  externalContractReference: string
                  paymentTermsId: string
                  blockedForDeletion: true
                  expectAdvancesToBeImportedPeriodically: true
                  usePropertyGroupProduct: true
                  propertyGroups:
                    - id: string
                      name: string
                  attachmentSignatures:
                    - culture: { }
                      attachmentFileName: string
                      errorCode: { }
                      origin: { }
                      productAttachmentId: string
                      attachmentFileId: string
                      entityAttachmentGroupId: string
                      signDate: string
                      viewedDate: string
                  customProperties:
                    - customEntityPropertyTypeId: string
                      values:
                        - valueDecimal: 0
                          valueString: string
                          valueBoolean: true
                          valueNumber: 0
                          valueDateTime: string
                          valueDropdown:
                            - string
                          startDateTime: string
                          endDateTime: string
  /Contracts/bulk/terminate:
    post:
      tags:
        - Contracts
      summary: Terminate multiple signed contracts in bulk.
      description: Terminate multiple signed contracts in bulk.
      operationId: post-contracts-bulk-terminate
      parameters:
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: The request containing bulk termination details and query parameters to filter the contracts to be terminated.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BulkTerminateContractRequest'
            example:
              mutationDateTime: string
              keepExistingInvoiceOnEndDate: true
              onlyValidate: true
              queryParams:
                flexSearch: string
                includeOnlyIds:
                  - string
                excludeIds:
                  - string
                serviceLocationId: string
                propertyGroupIds:
                  - string
                customerGroupId: string
                customerId: string
                customerType: string
                productId: string
                excludeTerminatedContracts: true
              quickFilter: string
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BulkTerminateContractRequest'
            example:
              mutationDateTime: string
              keepExistingInvoiceOnEndDate: true
              onlyValidate: true
              queryParams:
                flexSearch: string
                includeOnlyIds:
                  - string
                excludeIds:
                  - string
                serviceLocationId: string
                propertyGroupIds:
                  - string
                customerGroupId: string
                customerId: string
                customerType: string
                productId: string
                excludeTerminatedContracts: true
              quickFilter: string
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BulkTerminateContractRequest'
            example:
              mutationDateTime: string
              keepExistingInvoiceOnEndDate: true
              onlyValidate: true
              queryParams:
                flexSearch: string
                includeOnlyIds:
                  - string
                excludeIds:
                  - string
                serviceLocationId: string
                propertyGroupIds:
                  - string
                customerGroupId: string
                customerId: string
                customerType: string
                productId: string
                excludeTerminatedContracts: true
              quickFilter: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
  '/Contracts/{contractuuid}/changeadvanceamount':
    post:
      tags:
        - Contracts
      summary: Update the advance amount for a draft contract.
      description: Update the advance amount for a draft contract.
      operationId: post-contracts-contractuuid-changeadvanceamount
      parameters:
        - name: contractuuid
          in: path
          description: The ID of the contract.
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: The request containing new advance amount details.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ChangeDraftContractAdvanceAmountRequest'
            example:
              newAdvanceAmount: 0
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ChangeDraftContractAdvanceAmountRequest'
            example:
              newAdvanceAmount: 0
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ChangeDraftContractAdvanceAmountRequest'
            example:
              newAdvanceAmount: 0
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ContractDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ContractDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  contractNumber: string
                  contractor:
                    customerId: string
                    accountNumber: string
                    shortDisplayName: string
                    paymentMethod: { }
                    customerType: { }
                    customerGroup:
                      id: string
                      name: string
                  supplyStartDate: string
                  supplyEndDate: string
                  serviceLocations:
                    - id: string
                      address:
                        streetName: string
                        streetNumber: string
                        streetNumberAddition: string
                        postalCode: string
                        buildingName: string
                        locality: string
                        city: string
                        country: { }
                        localizedDisplay: string
                        lineOne: string
                        lineTwo: string
                      propertyGroupId: string
                      services:
                        - startDateTime: string
                          endDateTime: string
                          utilityType: { }
                          externalIdentifier: string
                          isConsumptionBased: true
                          estimatedConsumptions:
                            - consumerGroupId: string
                              value: 0
                              unitOfMeasure: { }
                              meteringType: { }
                              isManualEntry: true
                  statusHistory:
                    - contractStatus: { }
                      mutationDateTime: string
                  currentContractStatus: { }
                  billingDetails:
                    billingMethod: { }
                    invoiceFrequency: { }
                    advanceFrequency: { }
                    contractualAdvanceAmount: 0
                    products:
                      - productId: string
                        productName: string
                        startDateTime: string
                        endDateTime: string
                    invoiceAddress:
                      streetName: string
                      streetNumber: string
                      streetNumberAddition: string
                      postalCode: string
                      buildingName: string
                      locality: string
                      city: string
                      country: { }
                      localizedDisplay: string
                      lineOne: string
                      lineTwo: string
                    firstInvoiceStartDateTime: string
                    firstInvoiceEndDateTime: string
                    blocked: true
                  externalContractReference: string
                  paymentTermsId: string
                  blockedForDeletion: true
                  expectAdvancesToBeImportedPeriodically: true
                  usePropertyGroupProduct: true
                  propertyGroups:
                    - id: string
                      name: string
                  attachmentSignatures:
                    - culture: { }
                      attachmentFileName: string
                      errorCode: { }
                      origin: { }
                      productAttachmentId: string
                      attachmentFileId: string
                      entityAttachmentGroupId: string
                      signDate: string
                      viewedDate: string
                  customProperties:
                    - customEntityPropertyTypeId: string
                      values:
                        - valueDecimal: 0
                          valueString: string
                          valueBoolean: true
                          valueNumber: 0
                          valueDateTime: string
                          valueDropdown:
                            - string
                          startDateTime: string
                          endDateTime: string
            text/json:
              schema:
                $ref: '#/components/schemas/ContractDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  contractNumber: string
                  contractor:
                    customerId: string
                    accountNumber: string
                    shortDisplayName: string
                    paymentMethod: { }
                    customerType: { }
                    customerGroup:
                      id: string
                      name: string
                  supplyStartDate: string
                  supplyEndDate: string
                  serviceLocations:
                    - id: string
                      address:
                        streetName: string
                        streetNumber: string
                        streetNumberAddition: string
                        postalCode: string
                        buildingName: string
                        locality: string
                        city: string
                        country: { }
                        localizedDisplay: string
                        lineOne: string
                        lineTwo: string
                      propertyGroupId: string
                      services:
                        - startDateTime: string
                          endDateTime: string
                          utilityType: { }
                          externalIdentifier: string
                          isConsumptionBased: true
                          estimatedConsumptions:
                            - consumerGroupId: string
                              value: 0
                              unitOfMeasure: { }
                              meteringType: { }
                              isManualEntry: true
                  statusHistory:
                    - contractStatus: { }
                      mutationDateTime: string
                  currentContractStatus: { }
                  billingDetails:
                    billingMethod: { }
                    invoiceFrequency: { }
                    advanceFrequency: { }
                    contractualAdvanceAmount: 0
                    products:
                      - productId: string
                        productName: string
                        startDateTime: string
                        endDateTime: string
                    invoiceAddress:
                      streetName: string
                      streetNumber: string
                      streetNumberAddition: string
                      postalCode: string
                      buildingName: string
                      locality: string
                      city: string
                      country: { }
                      localizedDisplay: string
                      lineOne: string
                      lineTwo: string
                    firstInvoiceStartDateTime: string
                    firstInvoiceEndDateTime: string
                    blocked: true
                  externalContractReference: string
                  paymentTermsId: string
                  blockedForDeletion: true
                  expectAdvancesToBeImportedPeriodically: true
                  usePropertyGroupProduct: true
                  propertyGroups:
                    - id: string
                      name: string
                  attachmentSignatures:
                    - culture: { }
                      attachmentFileName: string
                      errorCode: { }
                      origin: { }
                      productAttachmentId: string
                      attachmentFileId: string
                      entityAttachmentGroupId: string
                      signDate: string
                      viewedDate: string
                  customProperties:
                    - customEntityPropertyTypeId: string
                      values:
                        - valueDecimal: 0
                          valueString: string
                          valueBoolean: true
                          valueNumber: 0
                          valueDateTime: string
                          valueDropdown:
                            - string
                          startDateTime: string
                          endDateTime: string
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
  '/Contracts/{contractuuid}/updateexternalcontractreference':
    post:
      tags:
        - Contracts
      summary: Update the external contract reference.
      description: Update the external contract reference.
      operationId: post-contracts-contractuuid-updateexternalcontractreference
      parameters:
        - name: contractuuid
          in: path
          description: The ID of the contract.
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: The request containing external contract reference details.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/UpdateExternalContractReferenceRequest'
            example:
              externalContractReference: string
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/UpdateExternalContractReferenceRequest'
            example:
              externalContractReference: string
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/UpdateExternalContractReferenceRequest'
            example:
              externalContractReference: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ContractDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ContractDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  contractNumber: string
                  contractor:
                    customerId: string
                    accountNumber: string
                    shortDisplayName: string
                    paymentMethod: { }
                    customerType: { }
                    customerGroup:
                      id: string
                      name: string
                  supplyStartDate: string
                  supplyEndDate: string
                  serviceLocations:
                    - id: string
                      address:
                        streetName: string
                        streetNumber: string
                        streetNumberAddition: string
                        postalCode: string
                        buildingName: string
                        locality: string
                        city: string
                        country: { }
                        localizedDisplay: string
                        lineOne: string
                        lineTwo: string
                      propertyGroupId: string
                      services:
                        - startDateTime: string
                          endDateTime: string
                          utilityType: { }
                          externalIdentifier: string
                          isConsumptionBased: true
                          estimatedConsumptions:
                            - consumerGroupId: string
                              value: 0
                              unitOfMeasure: { }
                              meteringType: { }
                              isManualEntry: true
                  statusHistory:
                    - contractStatus: { }
                      mutationDateTime: string
                  currentContractStatus: { }
                  billingDetails:
                    billingMethod: { }
                    invoiceFrequency: { }
                    advanceFrequency: { }
                    contractualAdvanceAmount: 0
                    products:
                      - productId: string
                        productName: string
                        startDateTime: string
                        endDateTime: string
                    invoiceAddress:
                      streetName: string
                      streetNumber: string
                      streetNumberAddition: string
                      postalCode: string
                      buildingName: string
                      locality: string
                      city: string
                      country: { }
                      localizedDisplay: string
                      lineOne: string
                      lineTwo: string
                    firstInvoiceStartDateTime: string
                    firstInvoiceEndDateTime: string
                    blocked: true
                  externalContractReference: string
                  paymentTermsId: string
                  blockedForDeletion: true
                  expectAdvancesToBeImportedPeriodically: true
                  usePropertyGroupProduct: true
                  propertyGroups:
                    - id: string
                      name: string
                  attachmentSignatures:
                    - culture: { }
                      attachmentFileName: string
                      errorCode: { }
                      origin: { }
                      productAttachmentId: string
                      attachmentFileId: string
                      entityAttachmentGroupId: string
                      signDate: string
                      viewedDate: string
                  customProperties:
                    - customEntityPropertyTypeId: string
                      values:
                        - valueDecimal: 0
                          valueString: string
                          valueBoolean: true
                          valueNumber: 0
                          valueDateTime: string
                          valueDropdown:
                            - string
                          startDateTime: string
                          endDateTime: string
            text/json:
              schema:
                $ref: '#/components/schemas/ContractDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  contractNumber: string
                  contractor:
                    customerId: string
                    accountNumber: string
                    shortDisplayName: string
                    paymentMethod: { }
                    customerType: { }
                    customerGroup:
                      id: string
                      name: string
                  supplyStartDate: string
                  supplyEndDate: string
                  serviceLocations:
                    - id: string
                      address:
                        streetName: string
                        streetNumber: string
                        streetNumberAddition: string
                        postalCode: string
                        buildingName: string
                        locality: string
                        city: string
                        country: { }
                        localizedDisplay: string
                        lineOne: string
                        lineTwo: string
                      propertyGroupId: string
                      services:
                        - startDateTime: string
                          endDateTime: string
                          utilityType: { }
                          externalIdentifier: string
                          isConsumptionBased: true
                          estimatedConsumptions:
                            - consumerGroupId: string
                              value: 0
                              unitOfMeasure: { }
                              meteringType: { }
                              isManualEntry: true
                  statusHistory:
                    - contractStatus: { }
                      mutationDateTime: string
                  currentContractStatus: { }
                  billingDetails:
                    billingMethod: { }
                    invoiceFrequency: { }
                    advanceFrequency: { }
                    contractualAdvanceAmount: 0
                    products:
                      - productId: string
                        productName: string
                        startDateTime: string
                        endDateTime: string
                    invoiceAddress:
                      streetName: string
                      streetNumber: string
                      streetNumberAddition: string
                      postalCode: string
                      buildingName: string
                      locality: string
                      city: string
                      country: { }
                      localizedDisplay: string
                      lineOne: string
                      lineTwo: string
                    firstInvoiceStartDateTime: string
                    firstInvoiceEndDateTime: string
                    blocked: true
                  externalContractReference: string
                  paymentTermsId: string
                  blockedForDeletion: true
                  expectAdvancesToBeImportedPeriodically: true
                  usePropertyGroupProduct: true
                  propertyGroups:
                    - id: string
                      name: string
                  attachmentSignatures:
                    - culture: { }
                      attachmentFileName: string
                      errorCode: { }
                      origin: { }
                      productAttachmentId: string
                      attachmentFileId: string
                      entityAttachmentGroupId: string
                      signDate: string
                      viewedDate: string
                  customProperties:
                    - customEntityPropertyTypeId: string
                      values:
                        - valueDecimal: 0
                          valueString: string
                          valueBoolean: true
                          valueNumber: 0
                          valueDateTime: string
                          valueDropdown:
                            - string
                          startDateTime: string
                          endDateTime: string
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
  '/Contracts/{contractuuid}/changeservices':
    post:
      tags:
        - Contracts
      summary: Update the locations and services supplied on a contract.
      description: This action may affect supply period and status of other contracts supplied on the referenced locations.
      operationId: post-contracts-contractuuid-changeservices
      parameters:
        - name: contractuuid
          in: path
          description: The unique identifier of the contract.
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: 'The request containing all requested locations, services and their details.'
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ChangeContractedServicesRequest'
            example:
              services:
                - serviceLocationId: string
                  utilityType: { }
                  externalIdentifier: string
                  estimatedConsumptions:
                    - consumerGroupId: string
                      value: 0
                      unitOfMeasure: { }
                      meteringType: { }
                      isManualEntry: true
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ChangeContractedServicesRequest'
            example:
              services:
                - serviceLocationId: string
                  utilityType: { }
                  externalIdentifier: string
                  estimatedConsumptions:
                    - consumerGroupId: string
                      value: 0
                      unitOfMeasure: { }
                      meteringType: { }
                      isManualEntry: true
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ChangeContractedServicesRequest'
            example:
              services:
                - serviceLocationId: string
                  utilityType: { }
                  externalIdentifier: string
                  estimatedConsumptions:
                    - consumerGroupId: string
                      value: 0
                      unitOfMeasure: { }
                      meteringType: { }
                      isManualEntry: true
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ContractDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ContractDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  contractNumber: string
                  contractor:
                    customerId: string
                    accountNumber: string
                    shortDisplayName: string
                    paymentMethod: { }
                    customerType: { }
                    customerGroup:
                      id: string
                      name: string
                  supplyStartDate: string
                  supplyEndDate: string
                  serviceLocations:
                    - id: string
                      address:
                        streetName: string
                        streetNumber: string
                        streetNumberAddition: string
                        postalCode: string
                        buildingName: string
                        locality: string
                        city: string
                        country: { }
                        localizedDisplay: string
                        lineOne: string
                        lineTwo: string
                      propertyGroupId: string
                      services:
                        - startDateTime: string
                          endDateTime: string
                          utilityType: { }
                          externalIdentifier: string
                          isConsumptionBased: true
                          estimatedConsumptions:
                            - consumerGroupId: string
                              value: 0
                              unitOfMeasure: { }
                              meteringType: { }
                              isManualEntry: true
                  statusHistory:
                    - contractStatus: { }
                      mutationDateTime: string
                  currentContractStatus: { }
                  billingDetails:
                    billingMethod: { }
                    invoiceFrequency: { }
                    advanceFrequency: { }
                    contractualAdvanceAmount: 0
                    products:
                      - productId: string
                        productName: string
                        startDateTime: string
                        endDateTime: string
                    invoiceAddress:
                      streetName: string
                      streetNumber: string
                      streetNumberAddition: string
                      postalCode: string
                      buildingName: string
                      locality: string
                      city: string
                      country: { }
                      localizedDisplay: string
                      lineOne: string
                      lineTwo: string
                    firstInvoiceStartDateTime: string
                    firstInvoiceEndDateTime: string
                    blocked: true
                  externalContractReference: string
                  paymentTermsId: string
                  blockedForDeletion: true
                  expectAdvancesToBeImportedPeriodically: true
                  usePropertyGroupProduct: true
                  propertyGroups:
                    - id: string
                      name: string
                  attachmentSignatures:
                    - culture: { }
                      attachmentFileName: string
                      errorCode: { }
                      origin: { }
                      productAttachmentId: string
                      attachmentFileId: string
                      entityAttachmentGroupId: string
                      signDate: string
                      viewedDate: string
                  customProperties:
                    - customEntityPropertyTypeId: string
                      values:
                        - valueDecimal: 0
                          valueString: string
                          valueBoolean: true
                          valueNumber: 0
                          valueDateTime: string
                          valueDropdown:
                            - string
                          startDateTime: string
                          endDateTime: string
            text/json:
              schema:
                $ref: '#/components/schemas/ContractDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  contractNumber: string
                  contractor:
                    customerId: string
                    accountNumber: string
                    shortDisplayName: string
                    paymentMethod: { }
                    customerType: { }
                    customerGroup:
                      id: string
                      name: string
                  supplyStartDate: string
                  supplyEndDate: string
                  serviceLocations:
                    - id: string
                      address:
                        streetName: string
                        streetNumber: string
                        streetNumberAddition: string
                        postalCode: string
                        buildingName: string
                        locality: string
                        city: string
                        country: { }
                        localizedDisplay: string
                        lineOne: string
                        lineTwo: string
                      propertyGroupId: string
                      services:
                        - startDateTime: string
                          endDateTime: string
                          utilityType: { }
                          externalIdentifier: string
                          isConsumptionBased: true
                          estimatedConsumptions:
                            - consumerGroupId: string
                              value: 0
                              unitOfMeasure: { }
                              meteringType: { }
                              isManualEntry: true
                  statusHistory:
                    - contractStatus: { }
                      mutationDateTime: string
                  currentContractStatus: { }
                  billingDetails:
                    billingMethod: { }
                    invoiceFrequency: { }
                    advanceFrequency: { }
                    contractualAdvanceAmount: 0
                    products:
                      - productId: string
                        productName: string
                        startDateTime: string
                        endDateTime: string
                    invoiceAddress:
                      streetName: string
                      streetNumber: string
                      streetNumberAddition: string
                      postalCode: string
                      buildingName: string
                      locality: string
                      city: string
                      country: { }
                      localizedDisplay: string
                      lineOne: string
                      lineTwo: string
                    firstInvoiceStartDateTime: string
                    firstInvoiceEndDateTime: string
                    blocked: true
                  externalContractReference: string
                  paymentTermsId: string
                  blockedForDeletion: true
                  expectAdvancesToBeImportedPeriodically: true
                  usePropertyGroupProduct: true
                  propertyGroups:
                    - id: string
                      name: string
                  attachmentSignatures:
                    - culture: { }
                      attachmentFileName: string
                      errorCode: { }
                      origin: { }
                      productAttachmentId: string
                      attachmentFileId: string
                      entityAttachmentGroupId: string
                      signDate: string
                      viewedDate: string
                  customProperties:
                    - customEntityPropertyTypeId: string
                      values:
                        - valueDecimal: 0
                          valueString: string
                          valueBoolean: true
                          valueNumber: 0
                          valueDateTime: string
                          valueDropdown:
                            - string
                          startDateTime: string
                          endDateTime: string
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
  '/Contracts/{contractuuid}/updatebillingdetails':
    post:
      tags:
        - Contracts
      summary: Update billing details of a contract.
      description: Update billing details of a contract.
      operationId: post-contracts-contractuuid-updatebillingdetails
      parameters:
        - name: contractuuid
          in: path
          description: The ID of the contract.
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: The request containing billing details.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/UpdateContractBillingDetailsRequest'
            example:
              paymentTermsId: string
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/UpdateContractBillingDetailsRequest'
            example:
              paymentTermsId: string
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/UpdateContractBillingDetailsRequest'
            example:
              paymentTermsId: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ContractDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ContractDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  contractNumber: string
                  contractor:
                    customerId: string
                    accountNumber: string
                    shortDisplayName: string
                    paymentMethod: { }
                    customerType: { }
                    customerGroup:
                      id: string
                      name: string
                  supplyStartDate: string
                  supplyEndDate: string
                  serviceLocations:
                    - id: string
                      address:
                        streetName: string
                        streetNumber: string
                        streetNumberAddition: string
                        postalCode: string
                        buildingName: string
                        locality: string
                        city: string
                        country: { }
                        localizedDisplay: string
                        lineOne: string
                        lineTwo: string
                      propertyGroupId: string
                      services:
                        - startDateTime: string
                          endDateTime: string
                          utilityType: { }
                          externalIdentifier: string
                          isConsumptionBased: true
                          estimatedConsumptions:
                            - consumerGroupId: string
                              value: 0
                              unitOfMeasure: { }
                              meteringType: { }
                              isManualEntry: true
                  statusHistory:
                    - contractStatus: { }
                      mutationDateTime: string
                  currentContractStatus: { }
                  billingDetails:
                    billingMethod: { }
                    invoiceFrequency: { }
                    advanceFrequency: { }
                    contractualAdvanceAmount: 0
                    products:
                      - productId: string
                        productName: string
                        startDateTime: string
                        endDateTime: string
                    invoiceAddress:
                      streetName: string
                      streetNumber: string
                      streetNumberAddition: string
                      postalCode: string
                      buildingName: string
                      locality: string
                      city: string
                      country: { }
                      localizedDisplay: string
                      lineOne: string
                      lineTwo: string
                    firstInvoiceStartDateTime: string
                    firstInvoiceEndDateTime: string
                    blocked: true
                  externalContractReference: string
                  paymentTermsId: string
                  blockedForDeletion: true
                  expectAdvancesToBeImportedPeriodically: true
                  usePropertyGroupProduct: true
                  propertyGroups:
                    - id: string
                      name: string
                  attachmentSignatures:
                    - culture: { }
                      attachmentFileName: string
                      errorCode: { }
                      origin: { }
                      productAttachmentId: string
                      attachmentFileId: string
                      entityAttachmentGroupId: string
                      signDate: string
                      viewedDate: string
                  customProperties:
                    - customEntityPropertyTypeId: string
                      values:
                        - valueDecimal: 0
                          valueString: string
                          valueBoolean: true
                          valueNumber: 0
                          valueDateTime: string
                          valueDropdown:
                            - string
                          startDateTime: string
                          endDateTime: string
            text/json:
              schema:
                $ref: '#/components/schemas/ContractDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  contractNumber: string
                  contractor:
                    customerId: string
                    accountNumber: string
                    shortDisplayName: string
                    paymentMethod: { }
                    customerType: { }
                    customerGroup:
                      id: string
                      name: string
                  supplyStartDate: string
                  supplyEndDate: string
                  serviceLocations:
                    - id: string
                      address:
                        streetName: string
                        streetNumber: string
                        streetNumberAddition: string
                        postalCode: string
                        buildingName: string
                        locality: string
                        city: string
                        country: { }
                        localizedDisplay: string
                        lineOne: string
                        lineTwo: string
                      propertyGroupId: string
                      services:
                        - startDateTime: string
                          endDateTime: string
                          utilityType: { }
                          externalIdentifier: string
                          isConsumptionBased: true
                          estimatedConsumptions:
                            - consumerGroupId: string
                              value: 0
                              unitOfMeasure: { }
                              meteringType: { }
                              isManualEntry: true
                  statusHistory:
                    - contractStatus: { }
                      mutationDateTime: string
                  currentContractStatus: { }
                  billingDetails:
                    billingMethod: { }
                    invoiceFrequency: { }
                    advanceFrequency: { }
                    contractualAdvanceAmount: 0
                    products:
                      - productId: string
                        productName: string
                        startDateTime: string
                        endDateTime: string
                    invoiceAddress:
                      streetName: string
                      streetNumber: string
                      streetNumberAddition: string
                      postalCode: string
                      buildingName: string
                      locality: string
                      city: string
                      country: { }
                      localizedDisplay: string
                      lineOne: string
                      lineTwo: string
                    firstInvoiceStartDateTime: string
                    firstInvoiceEndDateTime: string
                    blocked: true
                  externalContractReference: string
                  paymentTermsId: string
                  blockedForDeletion: true
                  expectAdvancesToBeImportedPeriodically: true
                  usePropertyGroupProduct: true
                  propertyGroups:
                    - id: string
                      name: string
                  attachmentSignatures:
                    - culture: { }
                      attachmentFileName: string
                      errorCode: { }
                      origin: { }
                      productAttachmentId: string
                      attachmentFileId: string
                      entityAttachmentGroupId: string
                      signDate: string
                      viewedDate: string
                  customProperties:
                    - customEntityPropertyTypeId: string
                      values:
                        - valueDecimal: 0
                          valueString: string
                          valueBoolean: true
                          valueNumber: 0
                          valueDateTime: string
                          valueDropdown:
                            - string
                          startDateTime: string
                          endDateTime: string
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
  /Contracts/updatecostallocation:
    post:
      tags:
        - Contracts
      summary: Update contracts to use cost allocation for billing.
      description: This action is irreversible.
      operationId: post-contracts-updatecostallocation
      parameters:
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: The request containing contracts that should start using cost allocation.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/UpdateContractsForCostAllocationRequest'
            example:
              contractIds:
                - string
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/UpdateContractsForCostAllocationRequest'
            example:
              contractIds:
                - string
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/UpdateContractsForCostAllocationRequest'
            example:
              contractIds:
                - string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/BooleanApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/BooleanApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data: true
            text/json:
              schema:
                $ref: '#/components/schemas/BooleanApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data: true
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
  '/Contracts/{contractuuid}/updateproduct':
    post:
      tags:
        - Contracts
      summary: Update product of a contract.
      description: Update product of a contract.
      operationId: post-contracts-contractuuid-updateproduct
      parameters:
        - name: contractuuid
          in: path
          description: The ID of the contract.
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: The request containing product change details.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/UpdateContractProductRequest'
            example:
              startDate: string
              productId: string
              parameter: { }
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/UpdateContractProductRequest'
            example:
              startDate: string
              productId: string
              parameter: { }
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/UpdateContractProductRequest'
            example:
              startDate: string
              productId: string
              parameter: { }
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ContractDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ContractDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  contractNumber: string
                  contractor:
                    customerId: string
                    accountNumber: string
                    shortDisplayName: string
                    paymentMethod: { }
                    customerType: { }
                    customerGroup:
                      id: string
                      name: string
                  supplyStartDate: string
                  supplyEndDate: string
                  serviceLocations:
                    - id: string
                      address:
                        streetName: string
                        streetNumber: string
                        streetNumberAddition: string
                        postalCode: string
                        buildingName: string
                        locality: string
                        city: string
                        country: { }
                        localizedDisplay: string
                        lineOne: string
                        lineTwo: string
                      propertyGroupId: string
                      services:
                        - startDateTime: string
                          endDateTime: string
                          utilityType: { }
                          externalIdentifier: string
                          isConsumptionBased: true
                          estimatedConsumptions:
                            - consumerGroupId: string
                              value: 0
                              unitOfMeasure: { }
                              meteringType: { }
                              isManualEntry: true
                  statusHistory:
                    - contractStatus: { }
                      mutationDateTime: string
                  currentContractStatus: { }
                  billingDetails:
                    billingMethod: { }
                    invoiceFrequency: { }
                    advanceFrequency: { }
                    contractualAdvanceAmount: 0
                    products:
                      - productId: string
                        productName: string
                        startDateTime: string
                        endDateTime: string
                    invoiceAddress:
                      streetName: string
                      streetNumber: string
                      streetNumberAddition: string
                      postalCode: string
                      buildingName: string
                      locality: string
                      city: string
                      country: { }
                      localizedDisplay: string
                      lineOne: string
                      lineTwo: string
                    firstInvoiceStartDateTime: string
                    firstInvoiceEndDateTime: string
                    blocked: true
                  externalContractReference: string
                  paymentTermsId: string
                  blockedForDeletion: true
                  expectAdvancesToBeImportedPeriodically: true
                  usePropertyGroupProduct: true
                  propertyGroups:
                    - id: string
                      name: string
                  attachmentSignatures:
                    - culture: { }
                      attachmentFileName: string
                      errorCode: { }
                      origin: { }
                      productAttachmentId: string
                      attachmentFileId: string
                      entityAttachmentGroupId: string
                      signDate: string
                      viewedDate: string
                  customProperties:
                    - customEntityPropertyTypeId: string
                      values:
                        - valueDecimal: 0
                          valueString: string
                          valueBoolean: true
                          valueNumber: 0
                          valueDateTime: string
                          valueDropdown:
                            - string
                          startDateTime: string
                          endDateTime: string
            text/json:
              schema:
                $ref: '#/components/schemas/ContractDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  contractNumber: string
                  contractor:
                    customerId: string
                    accountNumber: string
                    shortDisplayName: string
                    paymentMethod: { }
                    customerType: { }
                    customerGroup:
                      id: string
                      name: string
                  supplyStartDate: string
                  supplyEndDate: string
                  serviceLocations:
                    - id: string
                      address:
                        streetName: string
                        streetNumber: string
                        streetNumberAddition: string
                        postalCode: string
                        buildingName: string
                        locality: string
                        city: string
                        country: { }
                        localizedDisplay: string
                        lineOne: string
                        lineTwo: string
                      propertyGroupId: string
                      services:
                        - startDateTime: string
                          endDateTime: string
                          utilityType: { }
                          externalIdentifier: string
                          isConsumptionBased: true
                          estimatedConsumptions:
                            - consumerGroupId: string
                              value: 0
                              unitOfMeasure: { }
                              meteringType: { }
                              isManualEntry: true
                  statusHistory:
                    - contractStatus: { }
                      mutationDateTime: string
                  currentContractStatus: { }
                  billingDetails:
                    billingMethod: { }
                    invoiceFrequency: { }
                    advanceFrequency: { }
                    contractualAdvanceAmount: 0
                    products:
                      - productId: string
                        productName: string
                        startDateTime: string
                        endDateTime: string
                    invoiceAddress:
                      streetName: string
                      streetNumber: string
                      streetNumberAddition: string
                      postalCode: string
                      buildingName: string
                      locality: string
                      city: string
                      country: { }
                      localizedDisplay: string
                      lineOne: string
                      lineTwo: string
                    firstInvoiceStartDateTime: string
                    firstInvoiceEndDateTime: string
                    blocked: true
                  externalContractReference: string
                  paymentTermsId: string
                  blockedForDeletion: true
                  expectAdvancesToBeImportedPeriodically: true
                  usePropertyGroupProduct: true
                  propertyGroups:
                    - id: string
                      name: string
                  attachmentSignatures:
                    - culture: { }
                      attachmentFileName: string
                      errorCode: { }
                      origin: { }
                      productAttachmentId: string
                      attachmentFileId: string
                      entityAttachmentGroupId: string
                      signDate: string
                      viewedDate: string
                  customProperties:
                    - customEntityPropertyTypeId: string
                      values:
                        - valueDecimal: 0
                          valueString: string
                          valueBoolean: true
                          valueNumber: 0
                          valueDateTime: string
                          valueDropdown:
                            - string
                          startDateTime: string
                          endDateTime: string
  '/Contracts/{contractuuid}/services/add':
    put:
      tags:
        - Contracts
      summary: Add locations and/or services to be supplied on a contract.
      description: Add locations and/or services to be supplied on a contract.
      operationId: AddContractedServices
      parameters:
        - name: contractuuid
          in: path
          description: The ID of the contract.
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: 'The request containing new locations and services details, inluding their supply period.'
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/AddContractedServicesRequest'
            example:
              supplyStartDate: string
              supplyEndDate: string
              services:
                - serviceLocationId: string
                  utilityType: { }
                  externalIdentifier: string
                  estimatedConsumptions:
                    - consumerGroupId: string
                      value: 0
                      unitOfMeasure: { }
                      meteringType: { }
                      isManualEntry: true
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/AddContractedServicesRequest'
            example:
              supplyStartDate: string
              supplyEndDate: string
              services:
                - serviceLocationId: string
                  utilityType: { }
                  externalIdentifier: string
                  estimatedConsumptions:
                    - consumerGroupId: string
                      value: 0
                      unitOfMeasure: { }
                      meteringType: { }
                      isManualEntry: true
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/AddContractedServicesRequest'
            example:
              supplyStartDate: string
              supplyEndDate: string
              services:
                - serviceLocationId: string
                  utilityType: { }
                  externalIdentifier: string
                  estimatedConsumptions:
                    - consumerGroupId: string
                      value: 0
                      unitOfMeasure: { }
                      meteringType: { }
                      isManualEntry: true
      responses:
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: string
                title: string
                status: 0
                detail: string
                instance: string
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: string
                title: string
                status: 0
                detail: string
                instance: string
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ContractDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ContractDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  contractNumber: string
                  contractor:
                    customerId: string
                    accountNumber: string
                    shortDisplayName: string
                    paymentMethod: { }
                    customerType: { }
                    customerGroup:
                      id: string
                      name: string
                  supplyStartDate: string
                  supplyEndDate: string
                  serviceLocations:
                    - id: string
                      address:
                        streetName: string
                        streetNumber: string
                        streetNumberAddition: string
                        postalCode: string
                        buildingName: string
                        locality: string
                        city: string
                        country: { }
                        localizedDisplay: string
                        lineOne: string
                        lineTwo: string
                      propertyGroupId: string
                      services:
                        - startDateTime: string
                          endDateTime: string
                          utilityType: { }
                          externalIdentifier: string
                          isConsumptionBased: true
                          estimatedConsumptions:
                            - consumerGroupId: string
                              value: 0
                              unitOfMeasure: { }
                              meteringType: { }
                              isManualEntry: true
                  statusHistory:
                    - contractStatus: { }
                      mutationDateTime: string
                  currentContractStatus: { }
                  billingDetails:
                    billingMethod: { }
                    invoiceFrequency: { }
                    advanceFrequency: { }
                    contractualAdvanceAmount: 0
                    products:
                      - productId: string
                        productName: string
                        startDateTime: string
                        endDateTime: string
                    invoiceAddress:
                      streetName: string
                      streetNumber: string
                      streetNumberAddition: string
                      postalCode: string
                      buildingName: string
                      locality: string
                      city: string
                      country: { }
                      localizedDisplay: string
                      lineOne: string
                      lineTwo: string
                    firstInvoiceStartDateTime: string
                    firstInvoiceEndDateTime: string
                    blocked: true
                  externalContractReference: string
                  paymentTermsId: string
                  blockedForDeletion: true
                  expectAdvancesToBeImportedPeriodically: true
                  usePropertyGroupProduct: true
                  propertyGroups:
                    - id: string
                      name: string
                  attachmentSignatures:
                    - culture: { }
                      attachmentFileName: string
                      errorCode: { }
                      origin: { }
                      productAttachmentId: string
                      attachmentFileId: string
                      entityAttachmentGroupId: string
                      signDate: string
                      viewedDate: string
                  customProperties:
                    - customEntityPropertyTypeId: string
                      values:
                        - valueDecimal: 0
                          valueString: string
                          valueBoolean: true
                          valueNumber: 0
                          valueDateTime: string
                          valueDropdown:
                            - string
                          startDateTime: string
                          endDateTime: string
            text/json:
              schema:
                $ref: '#/components/schemas/ContractDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  contractNumber: string
                  contractor:
                    customerId: string
                    accountNumber: string
                    shortDisplayName: string
                    paymentMethod: { }
                    customerType: { }
                    customerGroup:
                      id: string
                      name: string
                  supplyStartDate: string
                  supplyEndDate: string
                  serviceLocations:
                    - id: string
                      address:
                        streetName: string
                        streetNumber: string
                        streetNumberAddition: string
                        postalCode: string
                        buildingName: string
                        locality: string
                        city: string
                        country: { }
                        localizedDisplay: string
                        lineOne: string
                        lineTwo: string
                      propertyGroupId: string
                      services:
                        - startDateTime: string
                          endDateTime: string
                          utilityType: { }
                          externalIdentifier: string
                          isConsumptionBased: true
                          estimatedConsumptions:
                            - consumerGroupId: string
                              value: 0
                              unitOfMeasure: { }
                              meteringType: { }
                              isManualEntry: true
                  statusHistory:
                    - contractStatus: { }
                      mutationDateTime: string
                  currentContractStatus: { }
                  billingDetails:
                    billingMethod: { }
                    invoiceFrequency: { }
                    advanceFrequency: { }
                    contractualAdvanceAmount: 0
                    products:
                      - productId: string
                        productName: string
                        startDateTime: string
                        endDateTime: string
                    invoiceAddress:
                      streetName: string
                      streetNumber: string
                      streetNumberAddition: string
                      postalCode: string
                      buildingName: string
                      locality: string
                      city: string
                      country: { }
                      localizedDisplay: string
                      lineOne: string
                      lineTwo: string
                    firstInvoiceStartDateTime: string
                    firstInvoiceEndDateTime: string
                    blocked: true
                  externalContractReference: string
                  paymentTermsId: string
                  blockedForDeletion: true
                  expectAdvancesToBeImportedPeriodically: true
                  usePropertyGroupProduct: true
                  propertyGroups:
                    - id: string
                      name: string
                  attachmentSignatures:
                    - culture: { }
                      attachmentFileName: string
                      errorCode: { }
                      origin: { }
                      productAttachmentId: string
                      attachmentFileId: string
                      entityAttachmentGroupId: string
                      signDate: string
                      viewedDate: string
                  customProperties:
                    - customEntityPropertyTypeId: string
                      values:
                        - valueDecimal: 0
                          valueString: string
                          valueBoolean: true
                          valueNumber: 0
                          valueDateTime: string
                          valueDropdown:
                            - string
                          startDateTime: string
                          endDateTime: string
  '/Contracts/{contractuuid}/services/remove':
    put:
      tags:
        - Contracts
      summary: Remove locations and/or services from being supplied on a contract.
      description: Remove locations and/or services from being supplied on a contract.
      operationId: RemoveContractedServices
      parameters:
        - name: contractuuid
          in: path
          description: The ID of the contract.
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: 'The request containing locations and services to be removed, including their supply end date.'
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/RemoveContractedServicesRequest'
            example:
              supplyEndDate: string
              services:
                - serviceLocationId: string
                  utilityType: { }
                  externalIdentifier: string
                  estimatedConsumptions:
                    - consumerGroupId: string
                      value: 0
                      unitOfMeasure: { }
                      meteringType: { }
                      isManualEntry: true
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/RemoveContractedServicesRequest'
            example:
              supplyEndDate: string
              services:
                - serviceLocationId: string
                  utilityType: { }
                  externalIdentifier: string
                  estimatedConsumptions:
                    - consumerGroupId: string
                      value: 0
                      unitOfMeasure: { }
                      meteringType: { }
                      isManualEntry: true
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/RemoveContractedServicesRequest'
            example:
              supplyEndDate: string
              services:
                - serviceLocationId: string
                  utilityType: { }
                  externalIdentifier: string
                  estimatedConsumptions:
                    - consumerGroupId: string
                      value: 0
                      unitOfMeasure: { }
                      meteringType: { }
                      isManualEntry: true
      responses:
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: string
                title: string
                status: 0
                detail: string
                instance: string
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: string
                title: string
                status: 0
                detail: string
                instance: string
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ContractDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ContractDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  contractNumber: string
                  contractor:
                    customerId: string
                    accountNumber: string
                    shortDisplayName: string
                    paymentMethod: { }
                    customerType: { }
                    customerGroup:
                      id: string
                      name: string
                  supplyStartDate: string
                  supplyEndDate: string
                  serviceLocations:
                    - id: string
                      address:
                        streetName: string
                        streetNumber: string
                        streetNumberAddition: string
                        postalCode: string
                        buildingName: string
                        locality: string
                        city: string
                        country: { }
                        localizedDisplay: string
                        lineOne: string
                        lineTwo: string
                      propertyGroupId: string
                      services:
                        - startDateTime: string
                          endDateTime: string
                          utilityType: { }
                          externalIdentifier: string
                          isConsumptionBased: true
                          estimatedConsumptions:
                            - consumerGroupId: string
                              value: 0
                              unitOfMeasure: { }
                              meteringType: { }
                              isManualEntry: true
                  statusHistory:
                    - contractStatus: { }
                      mutationDateTime: string
                  currentContractStatus: { }
                  billingDetails:
                    billingMethod: { }
                    invoiceFrequency: { }
                    advanceFrequency: { }
                    contractualAdvanceAmount: 0
                    products:
                      - productId: string
                        productName: string
                        startDateTime: string
                        endDateTime: string
                    invoiceAddress:
                      streetName: string
                      streetNumber: string
                      streetNumberAddition: string
                      postalCode: string
                      buildingName: string
                      locality: string
                      city: string
                      country: { }
                      localizedDisplay: string
                      lineOne: string
                      lineTwo: string
                    firstInvoiceStartDateTime: string
                    firstInvoiceEndDateTime: string
                    blocked: true
                  externalContractReference: string
                  paymentTermsId: string
                  blockedForDeletion: true
                  expectAdvancesToBeImportedPeriodically: true
                  usePropertyGroupProduct: true
                  propertyGroups:
                    - id: string
                      name: string
                  attachmentSignatures:
                    - culture: { }
                      attachmentFileName: string
                      errorCode: { }
                      origin: { }
                      productAttachmentId: string
                      attachmentFileId: string
                      entityAttachmentGroupId: string
                      signDate: string
                      viewedDate: string
                  customProperties:
                    - customEntityPropertyTypeId: string
                      values:
                        - valueDecimal: 0
                          valueString: string
                          valueBoolean: true
                          valueNumber: 0
                          valueDateTime: string
                          valueDropdown:
                            - string
                          startDateTime: string
                          endDateTime: string
            text/json:
              schema:
                $ref: '#/components/schemas/ContractDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  contractNumber: string
                  contractor:
                    customerId: string
                    accountNumber: string
                    shortDisplayName: string
                    paymentMethod: { }
                    customerType: { }
                    customerGroup:
                      id: string
                      name: string
                  supplyStartDate: string
                  supplyEndDate: string
                  serviceLocations:
                    - id: string
                      address:
                        streetName: string
                        streetNumber: string
                        streetNumberAddition: string
                        postalCode: string
                        buildingName: string
                        locality: string
                        city: string
                        country: { }
                        localizedDisplay: string
                        lineOne: string
                        lineTwo: string
                      propertyGroupId: string
                      services:
                        - startDateTime: string
                          endDateTime: string
                          utilityType: { }
                          externalIdentifier: string
                          isConsumptionBased: true
                          estimatedConsumptions:
                            - consumerGroupId: string
                              value: 0
                              unitOfMeasure: { }
                              meteringType: { }
                              isManualEntry: true
                  statusHistory:
                    - contractStatus: { }
                      mutationDateTime: string
                  currentContractStatus: { }
                  billingDetails:
                    billingMethod: { }
                    invoiceFrequency: { }
                    advanceFrequency: { }
                    contractualAdvanceAmount: 0
                    products:
                      - productId: string
                        productName: string
                        startDateTime: string
                        endDateTime: string
                    invoiceAddress:
                      streetName: string
                      streetNumber: string
                      streetNumberAddition: string
                      postalCode: string
                      buildingName: string
                      locality: string
                      city: string
                      country: { }
                      localizedDisplay: string
                      lineOne: string
                      lineTwo: string
                    firstInvoiceStartDateTime: string
                    firstInvoiceEndDateTime: string
                    blocked: true
                  externalContractReference: string
                  paymentTermsId: string
                  blockedForDeletion: true
                  expectAdvancesToBeImportedPeriodically: true
                  usePropertyGroupProduct: true
                  propertyGroups:
                    - id: string
                      name: string
                  attachmentSignatures:
                    - culture: { }
                      attachmentFileName: string
                      errorCode: { }
                      origin: { }
                      productAttachmentId: string
                      attachmentFileId: string
                      entityAttachmentGroupId: string
                      signDate: string
                      viewedDate: string
                  customProperties:
                    - customEntityPropertyTypeId: string
                      values:
                        - valueDecimal: 0
                          valueString: string
                          valueBoolean: true
                          valueNumber: 0
                          valueDateTime: string
                          valueDropdown:
                            - string
                          startDateTime: string
                          endDateTime: string
  '/Contracts/{contractuuid}/block':
    post:
      tags:
        - Contracts
      summary: Mark a contract as blocked for billing.
      description: Mark a contract as blocked for billing.
      operationId: post-contracts-contractuuid-block
      parameters:
        - name: contractuuid
          in: path
          description: The ID of the contract.
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: The request containing block details.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BlockContractRequest'
            example:
              comment: string
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BlockContractRequest'
            example:
              comment: string
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BlockContractRequest'
            example:
              comment: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ContractDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ContractDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  contractNumber: string
                  contractor:
                    customerId: string
                    accountNumber: string
                    shortDisplayName: string
                    paymentMethod: { }
                    customerType: { }
                    customerGroup:
                      id: string
                      name: string
                  supplyStartDate: string
                  supplyEndDate: string
                  serviceLocations:
                    - id: string
                      address:
                        streetName: string
                        streetNumber: string
                        streetNumberAddition: string
                        postalCode: string
                        buildingName: string
                        locality: string
                        city: string
                        country: { }
                        localizedDisplay: string
                        lineOne: string
                        lineTwo: string
                      propertyGroupId: string
                      services:
                        - startDateTime: string
                          endDateTime: string
                          utilityType: { }
                          externalIdentifier: string
                          isConsumptionBased: true
                          estimatedConsumptions:
                            - consumerGroupId: string
                              value: 0
                              unitOfMeasure: { }
                              meteringType: { }
                              isManualEntry: true
                  statusHistory:
                    - contractStatus: { }
                      mutationDateTime: string
                  currentContractStatus: { }
                  billingDetails:
                    billingMethod: { }
                    invoiceFrequency: { }
                    advanceFrequency: { }
                    contractualAdvanceAmount: 0
                    products:
                      - productId: string
                        productName: string
                        startDateTime: string
                        endDateTime: string
                    invoiceAddress:
                      streetName: string
                      streetNumber: string
                      streetNumberAddition: string
                      postalCode: string
                      buildingName: string
                      locality: string
                      city: string
                      country: { }
                      localizedDisplay: string
                      lineOne: string
                      lineTwo: string
                    firstInvoiceStartDateTime: string
                    firstInvoiceEndDateTime: string
                    blocked: true
                  externalContractReference: string
                  paymentTermsId: string
                  blockedForDeletion: true
                  expectAdvancesToBeImportedPeriodically: true
                  usePropertyGroupProduct: true
                  propertyGroups:
                    - id: string
                      name: string
                  attachmentSignatures:
                    - culture: { }
                      attachmentFileName: string
                      errorCode: { }
                      origin: { }
                      productAttachmentId: string
                      attachmentFileId: string
                      entityAttachmentGroupId: string
                      signDate: string
                      viewedDate: string
                  customProperties:
                    - customEntityPropertyTypeId: string
                      values:
                        - valueDecimal: 0
                          valueString: string
                          valueBoolean: true
                          valueNumber: 0
                          valueDateTime: string
                          valueDropdown:
                            - string
                          startDateTime: string
                          endDateTime: string
            text/json:
              schema:
                $ref: '#/components/schemas/ContractDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  contractNumber: string
                  contractor:
                    customerId: string
                    accountNumber: string
                    shortDisplayName: string
                    paymentMethod: { }
                    customerType: { }
                    customerGroup:
                      id: string
                      name: string
                  supplyStartDate: string
                  supplyEndDate: string
                  serviceLocations:
                    - id: string
                      address:
                        streetName: string
                        streetNumber: string
                        streetNumberAddition: string
                        postalCode: string
                        buildingName: string
                        locality: string
                        city: string
                        country: { }
                        localizedDisplay: string
                        lineOne: string
                        lineTwo: string
                      propertyGroupId: string
                      services:
                        - startDateTime: string
                          endDateTime: string
                          utilityType: { }
                          externalIdentifier: string
                          isConsumptionBased: true
                          estimatedConsumptions:
                            - consumerGroupId: string
                              value: 0
                              unitOfMeasure: { }
                              meteringType: { }
                              isManualEntry: true
                  statusHistory:
                    - contractStatus: { }
                      mutationDateTime: string
                  currentContractStatus: { }
                  billingDetails:
                    billingMethod: { }
                    invoiceFrequency: { }
                    advanceFrequency: { }
                    contractualAdvanceAmount: 0
                    products:
                      - productId: string
                        productName: string
                        startDateTime: string
                        endDateTime: string
                    invoiceAddress:
                      streetName: string
                      streetNumber: string
                      streetNumberAddition: string
                      postalCode: string
                      buildingName: string
                      locality: string
                      city: string
                      country: { }
                      localizedDisplay: string
                      lineOne: string
                      lineTwo: string
                    firstInvoiceStartDateTime: string
                    firstInvoiceEndDateTime: string
                    blocked: true
                  externalContractReference: string
                  paymentTermsId: string
                  blockedForDeletion: true
                  expectAdvancesToBeImportedPeriodically: true
                  usePropertyGroupProduct: true
                  propertyGroups:
                    - id: string
                      name: string
                  attachmentSignatures:
                    - culture: { }
                      attachmentFileName: string
                      errorCode: { }
                      origin: { }
                      productAttachmentId: string
                      attachmentFileId: string
                      entityAttachmentGroupId: string
                      signDate: string
                      viewedDate: string
                  customProperties:
                    - customEntityPropertyTypeId: string
                      values:
                        - valueDecimal: 0
                          valueString: string
                          valueBoolean: true
                          valueNumber: 0
                          valueDateTime: string
                          valueDropdown:
                            - string
                          startDateTime: string
                          endDateTime: string
  '/Contracts/{contractuuid}/unblock':
    post:
      tags:
        - Contracts
      summary: Mark a contract as unblocked for billing.
      description: Mark a contract as unblocked for billing.
      operationId: post-contracts-contractuuid-unblock
      parameters:
        - name: contractuuid
          in: path
          description: The ID of the contract.
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: The request containing unblock details.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/UnblockContractRequest'
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/UnblockContractRequest'
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/UnblockContractRequest'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ContractDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ContractDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  contractNumber: string
                  contractor:
                    customerId: string
                    accountNumber: string
                    shortDisplayName: string
                    paymentMethod: { }
                    customerType: { }
                    customerGroup:
                      id: string
                      name: string
                  supplyStartDate: string
                  supplyEndDate: string
                  serviceLocations:
                    - id: string
                      address:
                        streetName: string
                        streetNumber: string
                        streetNumberAddition: string
                        postalCode: string
                        buildingName: string
                        locality: string
                        city: string
                        country: { }
                        localizedDisplay: string
                        lineOne: string
                        lineTwo: string
                      propertyGroupId: string
                      services:
                        - startDateTime: string
                          endDateTime: string
                          utilityType: { }
                          externalIdentifier: string
                          isConsumptionBased: true
                          estimatedConsumptions:
                            - consumerGroupId: string
                              value: 0
                              unitOfMeasure: { }
                              meteringType: { }
                              isManualEntry: true
                  statusHistory:
                    - contractStatus: { }
                      mutationDateTime: string
                  currentContractStatus: { }
                  billingDetails:
                    billingMethod: { }
                    invoiceFrequency: { }
                    advanceFrequency: { }
                    contractualAdvanceAmount: 0
                    products:
                      - productId: string
                        productName: string
                        startDateTime: string
                        endDateTime: string
                    invoiceAddress:
                      streetName: string
                      streetNumber: string
                      streetNumberAddition: string
                      postalCode: string
                      buildingName: string
                      locality: string
                      city: string
                      country: { }
                      localizedDisplay: string
                      lineOne: string
                      lineTwo: string
                    firstInvoiceStartDateTime: string
                    firstInvoiceEndDateTime: string
                    blocked: true
                  externalContractReference: string
                  paymentTermsId: string
                  blockedForDeletion: true
                  expectAdvancesToBeImportedPeriodically: true
                  usePropertyGroupProduct: true
                  propertyGroups:
                    - id: string
                      name: string
                  attachmentSignatures:
                    - culture: { }
                      attachmentFileName: string
                      errorCode: { }
                      origin: { }
                      productAttachmentId: string
                      attachmentFileId: string
                      entityAttachmentGroupId: string
                      signDate: string
                      viewedDate: string
                  customProperties:
                    - customEntityPropertyTypeId: string
                      values:
                        - valueDecimal: 0
                          valueString: string
                          valueBoolean: true
                          valueNumber: 0
                          valueDateTime: string
                          valueDropdown:
                            - string
                          startDateTime: string
                          endDateTime: string
            text/json:
              schema:
                $ref: '#/components/schemas/ContractDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  contractNumber: string
                  contractor:
                    customerId: string
                    accountNumber: string
                    shortDisplayName: string
                    paymentMethod: { }
                    customerType: { }
                    customerGroup:
                      id: string
                      name: string
                  supplyStartDate: string
                  supplyEndDate: string
                  serviceLocations:
                    - id: string
                      address:
                        streetName: string
                        streetNumber: string
                        streetNumberAddition: string
                        postalCode: string
                        buildingName: string
                        locality: string
                        city: string
                        country: { }
                        localizedDisplay: string
                        lineOne: string
                        lineTwo: string
                      propertyGroupId: string
                      services:
                        - startDateTime: string
                          endDateTime: string
                          utilityType: { }
                          externalIdentifier: string
                          isConsumptionBased: true
                          estimatedConsumptions:
                            - consumerGroupId: string
                              value: 0
                              unitOfMeasure: { }
                              meteringType: { }
                              isManualEntry: true
                  statusHistory:
                    - contractStatus: { }
                      mutationDateTime: string
                  currentContractStatus: { }
                  billingDetails:
                    billingMethod: { }
                    invoiceFrequency: { }
                    advanceFrequency: { }
                    contractualAdvanceAmount: 0
                    products:
                      - productId: string
                        productName: string
                        startDateTime: string
                        endDateTime: string
                    invoiceAddress:
                      streetName: string
                      streetNumber: string
                      streetNumberAddition: string
                      postalCode: string
                      buildingName: string
                      locality: string
                      city: string
                      country: { }
                      localizedDisplay: string
                      lineOne: string
                      lineTwo: string
                    firstInvoiceStartDateTime: string
                    firstInvoiceEndDateTime: string
                    blocked: true
                  externalContractReference: string
                  paymentTermsId: string
                  blockedForDeletion: true
                  expectAdvancesToBeImportedPeriodically: true
                  usePropertyGroupProduct: true
                  propertyGroups:
                    - id: string
                      name: string
                  attachmentSignatures:
                    - culture: { }
                      attachmentFileName: string
                      errorCode: { }
                      origin: { }
                      productAttachmentId: string
                      attachmentFileId: string
                      entityAttachmentGroupId: string
                      signDate: string
                      viewedDate: string
                  customProperties:
                    - customEntityPropertyTypeId: string
                      values:
                        - valueDecimal: 0
                          valueString: string
                          valueBoolean: true
                          valueNumber: 0
                          valueDateTime: string
                          valueDropdown:
                            - string
                          startDateTime: string
                          endDateTime: string
  /Contracts/bulk:
    delete:
      tags:
        - Contracts
      summary: Delete multiple draft contracts in bulk.
      description: Delete multiple draft contracts in bulk.
      operationId: delete-contracts-bulk
      parameters:
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: The request containing bulk deletion details and query parameters to filter the contracts to be deleted.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BulkRemoveContractRequest'
            example:
              onlyValidate: true
              queryParams:
                flexSearch: string
                includeOnlyIds:
                  - string
                excludeIds:
                  - string
                serviceLocationId: string
                propertyGroupIds:
                  - string
                customerGroupId: string
                customerId: string
                customerType: string
                productId: string
                excludeTerminatedContracts: true
              quickFilter: string
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BulkRemoveContractRequest'
            example:
              onlyValidate: true
              queryParams:
                flexSearch: string
                includeOnlyIds:
                  - string
                excludeIds:
                  - string
                serviceLocationId: string
                propertyGroupIds:
                  - string
                customerGroupId: string
                customerId: string
                customerType: string
                productId: string
                excludeTerminatedContracts: true
              quickFilter: string
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BulkRemoveContractRequest'
            example:
              onlyValidate: true
              queryParams:
                flexSearch: string
                includeOnlyIds:
                  - string
                excludeIds:
                  - string
                serviceLocationId: string
                propertyGroupIds:
                  - string
                customerGroupId: string
                customerId: string
                customerType: string
                productId: string
                excludeTerminatedContracts: true
              quickFilter: string
      responses:
        '204':
          description: No Content
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/BooleanApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/BooleanApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data: true
            text/json:
              schema:
                $ref: '#/components/schemas/BooleanApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data: true
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
  /Contracts/bulk/updateproduct:
    post:
      tags:
        - Contracts
      summary: Update product on multiple contracts in bulk.
      description: Update product on multiple contracts in bulk.
      operationId: post-contracts-bulk-updateproduct
      parameters:
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: The request containing bulk product update details and query parameters to filter the contracts to be updated.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BulkUpdateContractProductRequest'
            example:
              startDate: string
              productId: string
              parameter: { }
              onlyValidate: true
              queryParams:
                flexSearch: string
                includeOnlyIds:
                  - string
                excludeIds:
                  - string
                serviceLocationId: string
                propertyGroupIds:
                  - string
                customerGroupId: string
                customerId: string
                customerType: string
                productId: string
                excludeTerminatedContracts: true
              quickFilter: string
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BulkUpdateContractProductRequest'
            example:
              startDate: string
              productId: string
              parameter: { }
              onlyValidate: true
              queryParams:
                flexSearch: string
                includeOnlyIds:
                  - string
                excludeIds:
                  - string
                serviceLocationId: string
                propertyGroupIds:
                  - string
                customerGroupId: string
                customerId: string
                customerType: string
                productId: string
                excludeTerminatedContracts: true
              quickFilter: string
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BulkUpdateContractProductRequest'
            example:
              startDate: string
              productId: string
              parameter: { }
              onlyValidate: true
              queryParams:
                flexSearch: string
                includeOnlyIds:
                  - string
                excludeIds:
                  - string
                serviceLocationId: string
                propertyGroupIds:
                  - string
                customerGroupId: string
                customerId: string
                customerType: string
                productId: string
                excludeTerminatedContracts: true
              quickFilter: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ContractDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ContractDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  contractNumber: string
                  contractor:
                    customerId: string
                    accountNumber: string
                    shortDisplayName: string
                    paymentMethod: { }
                    customerType: { }
                    customerGroup:
                      id: string
                      name: string
                  supplyStartDate: string
                  supplyEndDate: string
                  serviceLocations:
                    - id: string
                      address:
                        streetName: string
                        streetNumber: string
                        streetNumberAddition: string
                        postalCode: string
                        buildingName: string
                        locality: string
                        city: string
                        country: { }
                        localizedDisplay: string
                        lineOne: string
                        lineTwo: string
                      propertyGroupId: string
                      services:
                        - startDateTime: string
                          endDateTime: string
                          utilityType: { }
                          externalIdentifier: string
                          isConsumptionBased: true
                          estimatedConsumptions:
                            - consumerGroupId: string
                              value: 0
                              unitOfMeasure: { }
                              meteringType: { }
                              isManualEntry: true
                  statusHistory:
                    - contractStatus: { }
                      mutationDateTime: string
                  currentContractStatus: { }
                  billingDetails:
                    billingMethod: { }
                    invoiceFrequency: { }
                    advanceFrequency: { }
                    contractualAdvanceAmount: 0
                    products:
                      - productId: string
                        productName: string
                        startDateTime: string
                        endDateTime: string
                    invoiceAddress:
                      streetName: string
                      streetNumber: string
                      streetNumberAddition: string
                      postalCode: string
                      buildingName: string
                      locality: string
                      city: string
                      country: { }
                      localizedDisplay: string
                      lineOne: string
                      lineTwo: string
                    firstInvoiceStartDateTime: string
                    firstInvoiceEndDateTime: string
                    blocked: true
                  externalContractReference: string
                  paymentTermsId: string
                  blockedForDeletion: true
                  expectAdvancesToBeImportedPeriodically: true
                  usePropertyGroupProduct: true
                  propertyGroups:
                    - id: string
                      name: string
                  attachmentSignatures:
                    - culture: { }
                      attachmentFileName: string
                      errorCode: { }
                      origin: { }
                      productAttachmentId: string
                      attachmentFileId: string
                      entityAttachmentGroupId: string
                      signDate: string
                      viewedDate: string
                  customProperties:
                    - customEntityPropertyTypeId: string
                      values:
                        - valueDecimal: 0
                          valueString: string
                          valueBoolean: true
                          valueNumber: 0
                          valueDateTime: string
                          valueDropdown:
                            - string
                          startDateTime: string
                          endDateTime: string
            text/json:
              schema:
                $ref: '#/components/schemas/ContractDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  contractNumber: string
                  contractor:
                    customerId: string
                    accountNumber: string
                    shortDisplayName: string
                    paymentMethod: { }
                    customerType: { }
                    customerGroup:
                      id: string
                      name: string
                  supplyStartDate: string
                  supplyEndDate: string
                  serviceLocations:
                    - id: string
                      address:
                        streetName: string
                        streetNumber: string
                        streetNumberAddition: string
                        postalCode: string
                        buildingName: string
                        locality: string
                        city: string
                        country: { }
                        localizedDisplay: string
                        lineOne: string
                        lineTwo: string
                      propertyGroupId: string
                      services:
                        - startDateTime: string
                          endDateTime: string
                          utilityType: { }
                          externalIdentifier: string
                          isConsumptionBased: true
                          estimatedConsumptions:
                            - consumerGroupId: string
                              value: 0
                              unitOfMeasure: { }
                              meteringType: { }
                              isManualEntry: true
                  statusHistory:
                    - contractStatus: { }
                      mutationDateTime: string
                  currentContractStatus: { }
                  billingDetails:
                    billingMethod: { }
                    invoiceFrequency: { }
                    advanceFrequency: { }
                    contractualAdvanceAmount: 0
                    products:
                      - productId: string
                        productName: string
                        startDateTime: string
                        endDateTime: string
                    invoiceAddress:
                      streetName: string
                      streetNumber: string
                      streetNumberAddition: string
                      postalCode: string
                      buildingName: string
                      locality: string
                      city: string
                      country: { }
                      localizedDisplay: string
                      lineOne: string
                      lineTwo: string
                    firstInvoiceStartDateTime: string
                    firstInvoiceEndDateTime: string
                    blocked: true
                  externalContractReference: string
                  paymentTermsId: string
                  blockedForDeletion: true
                  expectAdvancesToBeImportedPeriodically: true
                  usePropertyGroupProduct: true
                  propertyGroups:
                    - id: string
                      name: string
                  attachmentSignatures:
                    - culture: { }
                      attachmentFileName: string
                      errorCode: { }
                      origin: { }
                      productAttachmentId: string
                      attachmentFileId: string
                      entityAttachmentGroupId: string
                      signDate: string
                      viewedDate: string
                  customProperties:
                    - customEntityPropertyTypeId: string
                      values:
                        - valueDecimal: 0
                          valueString: string
                          valueBoolean: true
                          valueNumber: 0
                          valueDateTime: string
                          valueDropdown:
                            - string
                          startDateTime: string
                          endDateTime: string
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
  /Contracts/bulk/block:
    post:
      tags:
        - Contracts
      summary: Mark multiple contracts as blocked in bulk.
      description: Mark multiple contracts as blocked in bulk.
      operationId: post-contracts-bulk-block
      parameters:
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: The request containing bulk blocking details and query parameters to filter the contracts to be blocked.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BulkBlockContractRequest'
            example:
              comment: string
              onlyValidate: true
              queryParams:
                flexSearch: string
                includeOnlyIds:
                  - string
                excludeIds:
                  - string
                serviceLocationId: string
                propertyGroupIds:
                  - string
                customerGroupId: string
                customerId: string
                customerType: string
                productId: string
                excludeTerminatedContracts: true
              quickFilter: string
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BulkBlockContractRequest'
            example:
              comment: string
              onlyValidate: true
              queryParams:
                flexSearch: string
                includeOnlyIds:
                  - string
                excludeIds:
                  - string
                serviceLocationId: string
                propertyGroupIds:
                  - string
                customerGroupId: string
                customerId: string
                customerType: string
                productId: string
                excludeTerminatedContracts: true
              quickFilter: string
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BulkBlockContractRequest'
            example:
              comment: string
              onlyValidate: true
              queryParams:
                flexSearch: string
                includeOnlyIds:
                  - string
                excludeIds:
                  - string
                serviceLocationId: string
                propertyGroupIds:
                  - string
                customerGroupId: string
                customerId: string
                customerType: string
                productId: string
                excludeTerminatedContracts: true
              quickFilter: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
  /Contracts/bulk/unblock:
    post:
      tags:
        - Contracts
      summary: Mark multiple contracts as unblocked in bulk.
      description: Mark multiple contracts as unblocked in bulk.
      operationId: post-contracts-bulk-unblock
      parameters:
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: The request containing bulk unblocking details and query parameters to filter the contracts to be unblocked.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BulkUnblockContractRequest'
            example:
              onlyValidate: true
              queryParams:
                flexSearch: string
                includeOnlyIds:
                  - string
                excludeIds:
                  - string
                serviceLocationId: string
                propertyGroupIds:
                  - string
                customerGroupId: string
                customerId: string
                customerType: string
                productId: string
                excludeTerminatedContracts: true
              quickFilter: string
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BulkUnblockContractRequest'
            example:
              onlyValidate: true
              queryParams:
                flexSearch: string
                includeOnlyIds:
                  - string
                excludeIds:
                  - string
                serviceLocationId: string
                propertyGroupIds:
                  - string
                customerGroupId: string
                customerId: string
                customerType: string
                productId: string
                excludeTerminatedContracts: true
              quickFilter: string
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BulkUnblockContractRequest'
            example:
              onlyValidate: true
              queryParams:
                flexSearch: string
                includeOnlyIds:
                  - string
                excludeIds:
                  - string
                serviceLocationId: string
                propertyGroupIds:
                  - string
                customerGroupId: string
                customerId: string
                customerType: string
                productId: string
                excludeTerminatedContracts: true
              quickFilter: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
  /Contracts/bulk/estimate:
    post:
      tags:
        - Contracts
      summary: Trigger recalculation of EAV for multiple contracts in bulk.
      description: Trigger recalculation of EAV for multiple contracts in bulk.
      operationId: post-contracts-bulk-estimate
      parameters:
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: 'The request containing bulk EAV recalculation details and query parameters to filter the contracts, which are supposed to have EAV recalculated.'
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BulkRecalculateEavContractRequest'
            example:
              onlyValidate: true
              queryParams:
                flexSearch: string
                includeOnlyIds:
                  - string
                excludeIds:
                  - string
                serviceLocationId: string
                propertyGroupIds:
                  - string
                customerGroupId: string
                customerId: string
                customerType: string
                productId: string
                excludeTerminatedContracts: true
              quickFilter: string
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BulkRecalculateEavContractRequest'
            example:
              onlyValidate: true
              queryParams:
                flexSearch: string
                includeOnlyIds:
                  - string
                excludeIds:
                  - string
                serviceLocationId: string
                propertyGroupIds:
                  - string
                customerGroupId: string
                customerId: string
                customerType: string
                productId: string
                excludeTerminatedContracts: true
              quickFilter: string
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BulkRecalculateEavContractRequest'
            example:
              onlyValidate: true
              queryParams:
                flexSearch: string
                includeOnlyIds:
                  - string
                excludeIds:
                  - string
                serviceLocationId: string
                propertyGroupIds:
                  - string
                customerGroupId: string
                customerId: string
                customerType: string
                productId: string
                excludeTerminatedContracts: true
              quickFilter: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
  '/Contracts/{entityId}/customproperties':
    post:
      tags:
        - Contracts
      summary: '/Contracts/{entityId}/customproperties - POST'
      operationId: post-contracts-entityid-customproperties
      parameters:
        - name: entityId
          in: path
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/UpdateCustomEntityPropertiesRequest'
            example:
              properties:
                - customEntityPropertyTypeId: string
                  values:
                    - startDateTime: string
                      endDateTime: string
                      valueDecimal: 0
                      valueString: string
                      valueBoolean: true
                      valueNumber: 0
                      valueDateTime: string
                      valueDropdown:
                        - string
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/UpdateCustomEntityPropertiesRequest'
            example:
              properties:
                - customEntityPropertyTypeId: string
                  values:
                    - startDateTime: string
                      endDateTime: string
                      valueDecimal: 0
                      valueString: string
                      valueBoolean: true
                      valueNumber: 0
                      valueDateTime: string
                      valueDropdown:
                        - string
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/UpdateCustomEntityPropertiesRequest'
            example:
              properties:
                - customEntityPropertyTypeId: string
                  values:
                    - startDateTime: string
                      endDateTime: string
                      valueDecimal: 0
                      valueString: string
                      valueBoolean: true
                      valueNumber: 0
                      valueDateTime: string
                      valueDropdown:
                        - string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ContractDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ContractDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  contractNumber: string
                  contractor:
                    customerId: string
                    accountNumber: string
                    shortDisplayName: string
                    paymentMethod: { }
                    customerType: { }
                    customerGroup:
                      id: string
                      name: string
                  supplyStartDate: string
                  supplyEndDate: string
                  serviceLocations:
                    - id: string
                      address:
                        streetName: string
                        streetNumber: string
                        streetNumberAddition: string
                        postalCode: string
                        buildingName: string
                        locality: string
                        city: string
                        country: { }
                        localizedDisplay: string
                        lineOne: string
                        lineTwo: string
                      propertyGroupId: string
                      services:
                        - startDateTime: string
                          endDateTime: string
                          utilityType: { }
                          externalIdentifier: string
                          isConsumptionBased: true
                          estimatedConsumptions:
                            - consumerGroupId: string
                              value: 0
                              unitOfMeasure: { }
                              meteringType: { }
                              isManualEntry: true
                  statusHistory:
                    - contractStatus: { }
                      mutationDateTime: string
                  currentContractStatus: { }
                  billingDetails:
                    billingMethod: { }
                    invoiceFrequency: { }
                    advanceFrequency: { }
                    contractualAdvanceAmount: 0
                    products:
                      - productId: string
                        productName: string
                        startDateTime: string
                        endDateTime: string
                    invoiceAddress:
                      streetName: string
                      streetNumber: string
                      streetNumberAddition: string
                      postalCode: string
                      buildingName: string
                      locality: string
                      city: string
                      country: { }
                      localizedDisplay: string
                      lineOne: string
                      lineTwo: string
                    firstInvoiceStartDateTime: string
                    firstInvoiceEndDateTime: string
                    blocked: true
                  externalContractReference: string
                  paymentTermsId: string
                  blockedForDeletion: true
                  expectAdvancesToBeImportedPeriodically: true
                  usePropertyGroupProduct: true
                  propertyGroups:
                    - id: string
                      name: string
                  attachmentSignatures:
                    - culture: { }
                      attachmentFileName: string
                      errorCode: { }
                      origin: { }
                      productAttachmentId: string
                      attachmentFileId: string
                      entityAttachmentGroupId: string
                      signDate: string
                      viewedDate: string
                  customProperties:
                    - customEntityPropertyTypeId: string
                      values:
                        - valueDecimal: 0
                          valueString: string
                          valueBoolean: true
                          valueNumber: 0
                          valueDateTime: string
                          valueDropdown:
                            - string
                          startDateTime: string
                          endDateTime: string
            text/json:
              schema:
                $ref: '#/components/schemas/ContractDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  contractNumber: string
                  contractor:
                    customerId: string
                    accountNumber: string
                    shortDisplayName: string
                    paymentMethod: { }
                    customerType: { }
                    customerGroup:
                      id: string
                      name: string
                  supplyStartDate: string
                  supplyEndDate: string
                  serviceLocations:
                    - id: string
                      address:
                        streetName: string
                        streetNumber: string
                        streetNumberAddition: string
                        postalCode: string
                        buildingName: string
                        locality: string
                        city: string
                        country: { }
                        localizedDisplay: string
                        lineOne: string
                        lineTwo: string
                      propertyGroupId: string
                      services:
                        - startDateTime: string
                          endDateTime: string
                          utilityType: { }
                          externalIdentifier: string
                          isConsumptionBased: true
                          estimatedConsumptions:
                            - consumerGroupId: string
                              value: 0
                              unitOfMeasure: { }
                              meteringType: { }
                              isManualEntry: true
                  statusHistory:
                    - contractStatus: { }
                      mutationDateTime: string
                  currentContractStatus: { }
                  billingDetails:
                    billingMethod: { }
                    invoiceFrequency: { }
                    advanceFrequency: { }
                    contractualAdvanceAmount: 0
                    products:
                      - productId: string
                        productName: string
                        startDateTime: string
                        endDateTime: string
                    invoiceAddress:
                      streetName: string
                      streetNumber: string
                      streetNumberAddition: string
                      postalCode: string
                      buildingName: string
                      locality: string
                      city: string
                      country: { }
                      localizedDisplay: string
                      lineOne: string
                      lineTwo: string
                    firstInvoiceStartDateTime: string
                    firstInvoiceEndDateTime: string
                    blocked: true
                  externalContractReference: string
                  paymentTermsId: string
                  blockedForDeletion: true
                  expectAdvancesToBeImportedPeriodically: true
                  usePropertyGroupProduct: true
                  propertyGroups:
                    - id: string
                      name: string
                  attachmentSignatures:
                    - culture: { }
                      attachmentFileName: string
                      errorCode: { }
                      origin: { }
                      productAttachmentId: string
                      attachmentFileId: string
                      entityAttachmentGroupId: string
                      signDate: string
                      viewedDate: string
                  customProperties:
                    - customEntityPropertyTypeId: string
                      values:
                        - valueDecimal: 0
                          valueString: string
                          valueBoolean: true
                          valueNumber: 0
                          valueDateTime: string
                          valueDropdown:
                            - string
                          startDateTime: string
                          endDateTime: string
  /CustomerGroups:
    get:
      tags:
        - CustomerGroups
      summary: Retrieve customer groups based on the provided query parameters.
      description: Retrieve customer groups based on the provided query parameters.
      operationId: get-customergroups
      parameters:
        - name: FlexSearch
          in: query
          schema:
            type: string
        - name: IncludeOnlyIds
          in: query
          schema:
            type: array
            items:
              type: string
        - name: ExcludeIds
          in: query
          schema:
            type: array
            items:
              type: string
        - name: orderBy
          in: query
          description: Allows to order the customer groups.
          schema:
            type: string
        - name: continuationToken
          in: header
          description: Token which allows you to fetch the next records. The continuation token is returned in the response and can be reused in the next request to fetch additional data.
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CustomerGroupDTOPagedResponseModelDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerGroupDTOPagedResponseModelDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  results:
                    - id: string
                      entityType: { }
                      createdDateTime: string
                      discriminator: string
                      _etag: string
                      requireAttention: true
                      hasErrors: true
                      hasWarnings: true
                      isReadOnly: true
                      organisationId: string
                      name: string
                      amountOfCustomers: 0
                      settings:
                        automaticSettlement: true
                  hasNextPage: true
                  nextPageToken: string
                  totalRecords: 0
                  sortableFields:
                    - string
                  aggregateDetails:
                    - code: string
                      translation: string
                      value: 0
                      valueDate: string
            text/json:
              schema:
                $ref: '#/components/schemas/CustomerGroupDTOPagedResponseModelDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  results:
                    - id: string
                      entityType: { }
                      createdDateTime: string
                      discriminator: string
                      _etag: string
                      requireAttention: true
                      hasErrors: true
                      hasWarnings: true
                      isReadOnly: true
                      organisationId: string
                      name: string
                      amountOfCustomers: 0
                      settings:
                        automaticSettlement: true
                  hasNextPage: true
                  nextPageToken: string
                  totalRecords: 0
                  sortableFields:
                    - string
                  aggregateDetails:
                    - code: string
                      translation: string
                      value: 0
                      valueDate: string
    post:
      tags:
        - CustomerGroups
      summary: 'Create new customer group, which gives the possibility to group customers togather and apply the same settings to them.'
      description: 'Create new customer group, which gives the possibility to group customers togather and apply the same settings to them.'
      operationId: post-customergroups
      parameters:
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: The request containing customer group details.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/CreateCustomerGroupRequest'
            example:
              name: string
              settings:
                automaticSettlement: true
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/CreateCustomerGroupRequest'
            example:
              name: string
              settings:
                automaticSettlement: true
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/CreateCustomerGroupRequest'
            example:
              name: string
              settings:
                automaticSettlement: true
      responses:
        '201':
          description: Created
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CustomerGroupDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerGroupDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  name: string
                  amountOfCustomers: 0
                  settings:
                    automaticSettlement: true
            text/json:
              schema:
                $ref: '#/components/schemas/CustomerGroupDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  name: string
                  amountOfCustomers: 0
                  settings:
                    automaticSettlement: true
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
  /CustomerGroups/overviewcount:
    get:
      tags:
        - CustomerGroups
      summary: Retrieve the overview count of customer groups based on the provided query parameters.
      description: Retrieve the overview count of customer groups based on the provided query parameters.
      operationId: GetOverviewCountCustomerGroups
      parameters:
        - name: FlexSearch
          in: query
          schema:
            type: string
        - name: IncludeOnlyIds
          in: query
          schema:
            type: array
            items:
              type: string
        - name: ExcludeIds
          in: query
          schema:
            type: array
            items:
              type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CustomerGroupOverviewCountDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerGroupOverviewCountDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  all: 0
            text/json:
              schema:
                $ref: '#/components/schemas/CustomerGroupOverviewCountDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  all: 0
  '/CustomerGroups/{customerGroupuuId}':
    get:
      tags:
        - CustomerGroups
      summary: Retrieve customer group by its ID.
      description: Retrieve customer group by its ID.
      operationId: get-customergroups-customergroupuuid
      parameters:
        - name: customerGroupuuId
          in: path
          description: The ID of the customer group.
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: string
                title: string
                status: 0
                detail: string
                instance: string
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: string
                title: string
                status: 0
                detail: string
                instance: string
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CustomerGroupDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerGroupDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  name: string
                  amountOfCustomers: 0
                  settings:
                    automaticSettlement: true
            text/json:
              schema:
                $ref: '#/components/schemas/CustomerGroupDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  name: string
                  amountOfCustomers: 0
                  settings:
                    automaticSettlement: true
  /CustomerGroups/search:
    post:
      tags:
        - CustomerGroups
      summary: Retrieve customer group by name.
      description: Retrieve customer group by name.
      operationId: post-customergroups-search
      parameters:
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: The search request containing the full name of the customer group.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/SearchCustomerRequest'
            example:
              name: string
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/SearchCustomerRequest'
            example:
              name: string
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/SearchCustomerRequest'
            example:
              name: string
      responses:
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: string
                title: string
                status: 0
                detail: string
                instance: string
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: string
                title: string
                status: 0
                detail: string
                instance: string
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CustomerGroupDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerGroupDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  name: string
                  amountOfCustomers: 0
                  settings:
                    automaticSettlement: true
            text/json:
              schema:
                $ref: '#/components/schemas/CustomerGroupDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  name: string
                  amountOfCustomers: 0
                  settings:
                    automaticSettlement: true
  '/CustomerGroups/{uuid}/updatename':
    post:
      tags:
        - CustomerGroups
      summary: Update name of customer group.
      description: Update name of customer group.
      operationId: post-customergroups-uuid-updatename
      parameters:
        - name: uuid
          in: path
          description: The ID of the customer group.
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: The request containing new name of customer group.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/UpdateCustomerGroupNameRequest'
            example:
              name: string
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/UpdateCustomerGroupNameRequest'
            example:
              name: string
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/UpdateCustomerGroupNameRequest'
            example:
              name: string
      responses:
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: string
                title: string
                status: 0
                detail: string
                instance: string
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: string
                title: string
                status: 0
                detail: string
                instance: string
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CustomerGroupDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerGroupDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  name: string
                  amountOfCustomers: 0
                  settings:
                    automaticSettlement: true
            text/json:
              schema:
                $ref: '#/components/schemas/CustomerGroupDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  name: string
                  amountOfCustomers: 0
                  settings:
                    automaticSettlement: true
  '/CustomerGroups/{uuid}/settings/automaticsettlement':
    post:
      tags:
        - CustomerGroups
      summary: Update auto-settlement settings of customer group.
      description: Update auto-settlement settings of customer group.
      operationId: post-customergroups-uuid-settings-automaticsettlement
      parameters:
        - name: uuid
          in: path
          description: The ID of the customer group.
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: The request containing auto-settlement settings of customer group.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/UpdateCustomerGroupSettingsAutomaticSettlementRequest'
            example:
              automaticSettlement: true
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/UpdateCustomerGroupSettingsAutomaticSettlementRequest'
            example:
              automaticSettlement: true
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/UpdateCustomerGroupSettingsAutomaticSettlementRequest'
            example:
              automaticSettlement: true
      responses:
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: string
                title: string
                status: 0
                detail: string
                instance: string
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: string
                title: string
                status: 0
                detail: string
                instance: string
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CustomerGroupDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerGroupDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  name: string
                  amountOfCustomers: 0
                  settings:
                    automaticSettlement: true
            text/json:
              schema:
                $ref: '#/components/schemas/CustomerGroupDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  name: string
                  amountOfCustomers: 0
                  settings:
                    automaticSettlement: true
  '/CustomerGroups/{uuid}':
    delete:
      tags:
        - CustomerGroups
      summary: Delete customer group.
      description: Delete customer group.
      operationId: delete-customergroups-uuid
      parameters:
        - name: uuid
          in: path
          description: The ID of the customer group.
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '204':
          description: No Content
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/BooleanApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/BooleanApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data: true
            text/json:
              schema:
                $ref: '#/components/schemas/BooleanApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data: true
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
  /Customers:
    post:
      tags:
        - Customers
      summary: Create new customer.
      description: Create new customer.
      operationId: CreateCustomer
      parameters:
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: The request containing customer details.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/CreateCustomerRequest'
            example:
              accountNum: string
              salutation: string
              initials: string
              firstName: string
              lastName: string
              birthDate: string
              ssin: string
              ssinCountry: { }
              customerType: { }
              companyName: string
              vatNumber: string
              organizationNumber: string
              paymentTermsId: string
              defaultPaymentMethod: { }
              customerGroupId: string
              invoiceAddress:
                streetName: string
                streetNumber: string
                streetNumberAddition: string
                postalCode: string
                buildingName: string
                locality: string
                city: string
                country: { }
                localizedDisplay: string
                lineOne: string
                lineTwo: string
              bankAccounts:
                - iban: string
                  signDate: string
              contactDetails:
                - value: string
                  description: string
                  primaryForType: true
                  contactType: { }
              communicationPreferences:
                culture: { }
                invoiceCommunicationPreferences:
                  - invoiceType: { }
                    communicationType: { }
                annualStatementCommunicationPreference: { }
                collectionFlowId: string
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/CreateCustomerRequest'
            example:
              accountNum: string
              salutation: string
              initials: string
              firstName: string
              lastName: string
              birthDate: string
              ssin: string
              ssinCountry: { }
              customerType: { }
              companyName: string
              vatNumber: string
              organizationNumber: string
              paymentTermsId: string
              defaultPaymentMethod: { }
              customerGroupId: string
              invoiceAddress:
                streetName: string
                streetNumber: string
                streetNumberAddition: string
                postalCode: string
                buildingName: string
                locality: string
                city: string
                country: { }
                localizedDisplay: string
                lineOne: string
                lineTwo: string
              bankAccounts:
                - iban: string
                  signDate: string
              contactDetails:
                - value: string
                  description: string
                  primaryForType: true
                  contactType: { }
              communicationPreferences:
                culture: { }
                invoiceCommunicationPreferences:
                  - invoiceType: { }
                    communicationType: { }
                annualStatementCommunicationPreference: { }
                collectionFlowId: string
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/CreateCustomerRequest'
            example:
              accountNum: string
              salutation: string
              initials: string
              firstName: string
              lastName: string
              birthDate: string
              ssin: string
              ssinCountry: { }
              customerType: { }
              companyName: string
              vatNumber: string
              organizationNumber: string
              paymentTermsId: string
              defaultPaymentMethod: { }
              customerGroupId: string
              invoiceAddress:
                streetName: string
                streetNumber: string
                streetNumberAddition: string
                postalCode: string
                buildingName: string
                locality: string
                city: string
                country: { }
                localizedDisplay: string
                lineOne: string
                lineTwo: string
              bankAccounts:
                - iban: string
                  signDate: string
              contactDetails:
                - value: string
                  description: string
                  primaryForType: true
                  contactType: { }
              communicationPreferences:
                culture: { }
                invoiceCommunicationPreferences:
                  - invoiceType: { }
                    communicationType: { }
                annualStatementCommunicationPreference: { }
                collectionFlowId: string
      responses:
        '201':
          description: Created
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CustomerDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  accountNumber: string
                  salutation: string
                  initials: string
                  firstName: string
                  lastName: string
                  birthDate: string
                  ssin: string
                  ssinCountry: { }
                  shortDisplayName: string
                  customerType: { }
                  companyName: string
                  organizationNumber: string
                  vatNumber: string
                  paymentTermsId: string
                  defaultPaymentMethod: { }
                  invoiceAddress:
                    streetName: string
                    streetNumber: string
                    streetNumberAddition: string
                    postalCode: string
                    buildingName: string
                    locality: string
                    city: string
                    country: { }
                    localizedDisplay: string
                    lineOne: string
                    lineTwo: string
                  bankAccountIbans:
                    - iban: string
                      isDefault: true
                  contactDetails:
                    - contactType: { }
                      value: string
                      description: string
                      primaryForType: true
                  contracts:
                    - contractId: string
                      contractNumber: string
                      supplyStartDateTime: string
                      supplyEndDateTime: string
                      currentContractStatus: { }
                      contractBillingMethod: { }
                  communicationPreferences:
                    culture: { }
                    invoiceCommunicationPreferences:
                      - invoiceType: { }
                        communicationType: { }
                    annualStatementCommunicationPreference: { }
                    collectionFlowId: string
                  propertyGroups:
                    - id: string
                      name: string
                  customerGroup:
                    id: string
                    name: string
                  billingSettings:
                    automaticSettlementSetting:
                      automaticSettlement: true
                      originatorType: { }
                      originatorId: string
                  customProperties:
                    - customEntityPropertyTypeId: string
                      values:
                        - valueDecimal: 0
                          valueString: string
                          valueBoolean: true
                          valueNumber: 0
                          valueDateTime: string
                          valueDropdown:
                            - string
                          startDateTime: string
                          endDateTime: string
                  activationCode: string
                  portalProperties:
                    applicationUserId: string
                    confirmAccountToken: string
                    resetPasswordToken: string
                    email: string
                  generatedAnnualStatements:
                    - annualStatementId: string
                      annualStatementNumber: string
                      year: 0
                      version: 0
                      status: { }
            text/json:
              schema:
                $ref: '#/components/schemas/CustomerDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  accountNumber: string
                  salutation: string
                  initials: string
                  firstName: string
                  lastName: string
                  birthDate: string
                  ssin: string
                  ssinCountry: { }
                  shortDisplayName: string
                  customerType: { }
                  companyName: string
                  organizationNumber: string
                  vatNumber: string
                  paymentTermsId: string
                  defaultPaymentMethod: { }
                  invoiceAddress:
                    streetName: string
                    streetNumber: string
                    streetNumberAddition: string
                    postalCode: string
                    buildingName: string
                    locality: string
                    city: string
                    country: { }
                    localizedDisplay: string
                    lineOne: string
                    lineTwo: string
                  bankAccountIbans:
                    - iban: string
                      isDefault: true
                  contactDetails:
                    - contactType: { }
                      value: string
                      description: string
                      primaryForType: true
                  contracts:
                    - contractId: string
                      contractNumber: string
                      supplyStartDateTime: string
                      supplyEndDateTime: string
                      currentContractStatus: { }
                      contractBillingMethod: { }
                  communicationPreferences:
                    culture: { }
                    invoiceCommunicationPreferences:
                      - invoiceType: { }
                        communicationType: { }
                    annualStatementCommunicationPreference: { }
                    collectionFlowId: string
                  propertyGroups:
                    - id: string
                      name: string
                  customerGroup:
                    id: string
                    name: string
                  billingSettings:
                    automaticSettlementSetting:
                      automaticSettlement: true
                      originatorType: { }
                      originatorId: string
                  customProperties:
                    - customEntityPropertyTypeId: string
                      values:
                        - valueDecimal: 0
                          valueString: string
                          valueBoolean: true
                          valueNumber: 0
                          valueDateTime: string
                          valueDropdown:
                            - string
                          startDateTime: string
                          endDateTime: string
                  activationCode: string
                  portalProperties:
                    applicationUserId: string
                    confirmAccountToken: string
                    resetPasswordToken: string
                    email: string
                  generatedAnnualStatements:
                    - annualStatementId: string
                      annualStatementNumber: string
                      year: 0
                      version: 0
                      status: { }
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
  /Customers/filter:
    post:
      tags:
        - Customers
      summary: Retrieve customers based on the provided query parameters.
      description: Retrieve customers based on the provided query parameters.
      operationId: FilterAllCustomers
      parameters:
        - name: Name
          in: query
          schema:
            type: string
        - name: Id
          in: query
          description: Format - int32.
          schema:
            type: integer
            format: int32
        - name: orderBy
          in: query
          description: Allows to order the customers.
          schema:
            type: string
        - name: continuationToken
          in: header
          description: Token which allows you to fetch the next records. The continuation token is returned in the response and can be reused in the next request to fetch additional data.
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: Allows to search on fields within the customers.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/GetCustomersQueryParams'
            example:
              flexSearch: string
              includeOnlyIds:
                - string
              excludeIds:
                - string
              customerType: string
              defaultPaymentMethod: string
              propertyGroupIds:
                - string
              excludePropertyGroupId: string
              customerGroupId: string
              excludeCustomerGroupId: string
              customerGroupName: string
              nameContains: string
              activationCode: string
              priorityServiceRegisterPropertyTypeId: string
              vulnerabilityRegisterPropertyTypeId: string
              priorityServiceRegisterIds:
                - string
              vulnerabilityRegisterIds:
                - string
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/GetCustomersQueryParams'
            example:
              flexSearch: string
              includeOnlyIds:
                - string
              excludeIds:
                - string
              customerType: string
              defaultPaymentMethod: string
              propertyGroupIds:
                - string
              excludePropertyGroupId: string
              customerGroupId: string
              excludeCustomerGroupId: string
              customerGroupName: string
              nameContains: string
              activationCode: string
              priorityServiceRegisterPropertyTypeId: string
              vulnerabilityRegisterPropertyTypeId: string
              priorityServiceRegisterIds:
                - string
              vulnerabilityRegisterIds:
                - string
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/GetCustomersQueryParams'
            example:
              flexSearch: string
              includeOnlyIds:
                - string
              excludeIds:
                - string
              customerType: string
              defaultPaymentMethod: string
              propertyGroupIds:
                - string
              excludePropertyGroupId: string
              customerGroupId: string
              excludeCustomerGroupId: string
              customerGroupName: string
              nameContains: string
              activationCode: string
              priorityServiceRegisterPropertyTypeId: string
              vulnerabilityRegisterPropertyTypeId: string
              priorityServiceRegisterIds:
                - string
              vulnerabilityRegisterIds:
                - string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CustomerDTOPagedResponseModelDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerDTOPagedResponseModelDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  results:
                    - id: string
                      entityType: { }
                      createdDateTime: string
                      discriminator: string
                      _etag: string
                      requireAttention: true
                      hasErrors: true
                      hasWarnings: true
                      isReadOnly: true
                      organisationId: string
                      accountNumber: string
                      salutation: string
                      initials: string
                      firstName: string
                      lastName: string
                      birthDate: string
                      ssin: string
                      ssinCountry: { }
                      shortDisplayName: string
                      customerType: { }
                      companyName: string
                      organizationNumber: string
                      vatNumber: string
                      paymentTermsId: string
                      defaultPaymentMethod: { }
                      invoiceAddress:
                        streetName: string
                        streetNumber: string
                        streetNumberAddition: string
                        postalCode: string
                        buildingName: string
                        locality: string
                        city: string
                        country: { }
                        localizedDisplay: string
                        lineOne: string
                        lineTwo: string
                      bankAccountIbans:
                        - iban: string
                          isDefault: true
                      contactDetails:
                        - contactType: { }
                          value: string
                          description: string
                          primaryForType: true
                      contracts:
                        - contractId: string
                          contractNumber: string
                          supplyStartDateTime: string
                          supplyEndDateTime: string
                          currentContractStatus: { }
                          contractBillingMethod: { }
                      communicationPreferences:
                        culture: { }
                        invoiceCommunicationPreferences:
                          - invoiceType: { }
                            communicationType: { }
                        annualStatementCommunicationPreference: { }
                        collectionFlowId: string
                      propertyGroups:
                        - id: string
                          name: string
                      customerGroup:
                        id: string
                        name: string
                      billingSettings:
                        automaticSettlementSetting:
                          automaticSettlement: true
                          originatorType: { }
                          originatorId: string
                      customProperties:
                        - customEntityPropertyTypeId: string
                          values:
                            - valueDecimal: 0
                              valueString: string
                              valueBoolean: true
                              valueNumber: 0
                              valueDateTime: string
                              valueDropdown:
                                - string
                              startDateTime: string
                              endDateTime: string
                      activationCode: string
                      portalProperties:
                        applicationUserId: string
                        confirmAccountToken: string
                        resetPasswordToken: string
                        email: string
                      generatedAnnualStatements:
                        - annualStatementId: string
                          annualStatementNumber: string
                          year: 0
                          version: 0
                          status: { }
                  hasNextPage: true
                  nextPageToken: string
                  totalRecords: 0
                  sortableFields:
                    - string
                  aggregateDetails:
                    - code: string
                      translation: string
                      value: 0
                      valueDate: string
            text/json:
              schema:
                $ref: '#/components/schemas/CustomerDTOPagedResponseModelDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  results:
                    - id: string
                      entityType: { }
                      createdDateTime: string
                      discriminator: string
                      _etag: string
                      requireAttention: true
                      hasErrors: true
                      hasWarnings: true
                      isReadOnly: true
                      organisationId: string
                      accountNumber: string
                      salutation: string
                      initials: string
                      firstName: string
                      lastName: string
                      birthDate: string
                      ssin: string
                      ssinCountry: { }
                      shortDisplayName: string
                      customerType: { }
                      companyName: string
                      organizationNumber: string
                      vatNumber: string
                      paymentTermsId: string
                      defaultPaymentMethod: { }
                      invoiceAddress:
                        streetName: string
                        streetNumber: string
                        streetNumberAddition: string
                        postalCode: string
                        buildingName: string
                        locality: string
                        city: string
                        country: { }
                        localizedDisplay: string
                        lineOne: string
                        lineTwo: string
                      bankAccountIbans:
                        - iban: string
                          isDefault: true
                      contactDetails:
                        - contactType: { }
                          value: string
                          description: string
                          primaryForType: true
                      contracts:
                        - contractId: string
                          contractNumber: string
                          supplyStartDateTime: string
                          supplyEndDateTime: string
                          currentContractStatus: { }
                          contractBillingMethod: { }
                      communicationPreferences:
                        culture: { }
                        invoiceCommunicationPreferences:
                          - invoiceType: { }
                            communicationType: { }
                        annualStatementCommunicationPreference: { }
                        collectionFlowId: string
                      propertyGroups:
                        - id: string
                          name: string
                      customerGroup:
                        id: string
                        name: string
                      billingSettings:
                        automaticSettlementSetting:
                          automaticSettlement: true
                          originatorType: { }
                          originatorId: string
                      customProperties:
                        - customEntityPropertyTypeId: string
                          values:
                            - valueDecimal: 0
                              valueString: string
                              valueBoolean: true
                              valueNumber: 0
                              valueDateTime: string
                              valueDropdown:
                                - string
                              startDateTime: string
                              endDateTime: string
                      activationCode: string
                      portalProperties:
                        applicationUserId: string
                        confirmAccountToken: string
                        resetPasswordToken: string
                        email: string
                      generatedAnnualStatements:
                        - annualStatementId: string
                          annualStatementNumber: string
                          year: 0
                          version: 0
                          status: { }
                  hasNextPage: true
                  nextPageToken: string
                  totalRecords: 0
                  sortableFields:
                    - string
                  aggregateDetails:
                    - code: string
                      translation: string
                      value: 0
                      valueDate: string
  /Customers/filter/overviewcount:
    post:
      tags:
        - Customers
      summary: Retrieve the overview count of customers based on the provided query parameters.
      description: Retrieve the overview count of customers based on the provided query parameters.
      operationId: FilterOverviewCountCustomers
      parameters:
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: Allows to search on fields within the customers.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/GetCustomersQueryParams'
            example:
              flexSearch: string
              includeOnlyIds:
                - string
              excludeIds:
                - string
              customerType: string
              defaultPaymentMethod: string
              propertyGroupIds:
                - string
              excludePropertyGroupId: string
              customerGroupId: string
              excludeCustomerGroupId: string
              customerGroupName: string
              nameContains: string
              activationCode: string
              priorityServiceRegisterPropertyTypeId: string
              vulnerabilityRegisterPropertyTypeId: string
              priorityServiceRegisterIds:
                - string
              vulnerabilityRegisterIds:
                - string
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/GetCustomersQueryParams'
            example:
              flexSearch: string
              includeOnlyIds:
                - string
              excludeIds:
                - string
              customerType: string
              defaultPaymentMethod: string
              propertyGroupIds:
                - string
              excludePropertyGroupId: string
              customerGroupId: string
              excludeCustomerGroupId: string
              customerGroupName: string
              nameContains: string
              activationCode: string
              priorityServiceRegisterPropertyTypeId: string
              vulnerabilityRegisterPropertyTypeId: string
              priorityServiceRegisterIds:
                - string
              vulnerabilityRegisterIds:
                - string
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/GetCustomersQueryParams'
            example:
              flexSearch: string
              includeOnlyIds:
                - string
              excludeIds:
                - string
              customerType: string
              defaultPaymentMethod: string
              propertyGroupIds:
                - string
              excludePropertyGroupId: string
              customerGroupId: string
              excludeCustomerGroupId: string
              customerGroupName: string
              nameContains: string
              activationCode: string
              priorityServiceRegisterPropertyTypeId: string
              vulnerabilityRegisterPropertyTypeId: string
              priorityServiceRegisterIds:
                - string
              vulnerabilityRegisterIds:
                - string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CustomerOverviewCountDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerOverviewCountDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  all: 0
                  supplied: 0
                  unsupplied: 0
            text/json:
              schema:
                $ref: '#/components/schemas/CustomerOverviewCountDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  all: 0
                  supplied: 0
                  unsupplied: 0
  '/Customers/{customeruuid}':
    get:
      tags:
        - Customers
      summary: Retrieve a customer by its ID.
      description: Retrieve a customer by its ID.
      operationId: GetCustomer
      parameters:
        - name: customeruuid
          in: path
          description: The ID of the customer.
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: string
                title: string
                status: 0
                detail: string
                instance: string
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: string
                title: string
                status: 0
                detail: string
                instance: string
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CustomerDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  accountNumber: string
                  salutation: string
                  initials: string
                  firstName: string
                  lastName: string
                  birthDate: string
                  ssin: string
                  ssinCountry: { }
                  shortDisplayName: string
                  customerType: { }
                  companyName: string
                  organizationNumber: string
                  vatNumber: string
                  paymentTermsId: string
                  defaultPaymentMethod: { }
                  invoiceAddress:
                    streetName: string
                    streetNumber: string
                    streetNumberAddition: string
                    postalCode: string
                    buildingName: string
                    locality: string
                    city: string
                    country: { }
                    localizedDisplay: string
                    lineOne: string
                    lineTwo: string
                  bankAccountIbans:
                    - iban: string
                      isDefault: true
                  contactDetails:
                    - contactType: { }
                      value: string
                      description: string
                      primaryForType: true
                  contracts:
                    - contractId: string
                      contractNumber: string
                      supplyStartDateTime: string
                      supplyEndDateTime: string
                      currentContractStatus: { }
                      contractBillingMethod: { }
                  communicationPreferences:
                    culture: { }
                    invoiceCommunicationPreferences:
                      - invoiceType: { }
                        communicationType: { }
                    annualStatementCommunicationPreference: { }
                    collectionFlowId: string
                  propertyGroups:
                    - id: string
                      name: string
                  customerGroup:
                    id: string
                    name: string
                  billingSettings:
                    automaticSettlementSetting:
                      automaticSettlement: true
                      originatorType: { }
                      originatorId: string
                  customProperties:
                    - customEntityPropertyTypeId: string
                      values:
                        - valueDecimal: 0
                          valueString: string
                          valueBoolean: true
                          valueNumber: 0
                          valueDateTime: string
                          valueDropdown:
                            - string
                          startDateTime: string
                          endDateTime: string
                  activationCode: string
                  portalProperties:
                    applicationUserId: string
                    confirmAccountToken: string
                    resetPasswordToken: string
                    email: string
                  generatedAnnualStatements:
                    - annualStatementId: string
                      annualStatementNumber: string
                      year: 0
                      version: 0
                      status: { }
            text/json:
              schema:
                $ref: '#/components/schemas/CustomerDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  accountNumber: string
                  salutation: string
                  initials: string
                  firstName: string
                  lastName: string
                  birthDate: string
                  ssin: string
                  ssinCountry: { }
                  shortDisplayName: string
                  customerType: { }
                  companyName: string
                  organizationNumber: string
                  vatNumber: string
                  paymentTermsId: string
                  defaultPaymentMethod: { }
                  invoiceAddress:
                    streetName: string
                    streetNumber: string
                    streetNumberAddition: string
                    postalCode: string
                    buildingName: string
                    locality: string
                    city: string
                    country: { }
                    localizedDisplay: string
                    lineOne: string
                    lineTwo: string
                  bankAccountIbans:
                    - iban: string
                      isDefault: true
                  contactDetails:
                    - contactType: { }
                      value: string
                      description: string
                      primaryForType: true
                  contracts:
                    - contractId: string
                      contractNumber: string
                      supplyStartDateTime: string
                      supplyEndDateTime: string
                      currentContractStatus: { }
                      contractBillingMethod: { }
                  communicationPreferences:
                    culture: { }
                    invoiceCommunicationPreferences:
                      - invoiceType: { }
                        communicationType: { }
                    annualStatementCommunicationPreference: { }
                    collectionFlowId: string
                  propertyGroups:
                    - id: string
                      name: string
                  customerGroup:
                    id: string
                    name: string
                  billingSettings:
                    automaticSettlementSetting:
                      automaticSettlement: true
                      originatorType: { }
                      originatorId: string
                  customProperties:
                    - customEntityPropertyTypeId: string
                      values:
                        - valueDecimal: 0
                          valueString: string
                          valueBoolean: true
                          valueNumber: 0
                          valueDateTime: string
                          valueDropdown:
                            - string
                          startDateTime: string
                          endDateTime: string
                  activationCode: string
                  portalProperties:
                    applicationUserId: string
                    confirmAccountToken: string
                    resetPasswordToken: string
                    email: string
                  generatedAnnualStatements:
                    - annualStatementId: string
                      annualStatementNumber: string
                      year: 0
                      version: 0
                      status: { }
  '/Customers/ByAccountNumber/{customerAccountNumber}':
    get:
      tags:
        - Customers
      summary: Retrieve a customer by its account number.
      description: Retrieve a customer by its account number.
      operationId: GetCustomerByAccountNumber
      parameters:
        - name: customerAccountNumber
          in: path
          description: The account number of the customer.
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: string
                title: string
                status: 0
                detail: string
                instance: string
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: string
                title: string
                status: 0
                detail: string
                instance: string
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CustomerDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  accountNumber: string
                  salutation: string
                  initials: string
                  firstName: string
                  lastName: string
                  birthDate: string
                  ssin: string
                  ssinCountry: { }
                  shortDisplayName: string
                  customerType: { }
                  companyName: string
                  organizationNumber: string
                  vatNumber: string
                  paymentTermsId: string
                  defaultPaymentMethod: { }
                  invoiceAddress:
                    streetName: string
                    streetNumber: string
                    streetNumberAddition: string
                    postalCode: string
                    buildingName: string
                    locality: string
                    city: string
                    country: { }
                    localizedDisplay: string
                    lineOne: string
                    lineTwo: string
                  bankAccountIbans:
                    - iban: string
                      isDefault: true
                  contactDetails:
                    - contactType: { }
                      value: string
                      description: string
                      primaryForType: true
                  contracts:
                    - contractId: string
                      contractNumber: string
                      supplyStartDateTime: string
                      supplyEndDateTime: string
                      currentContractStatus: { }
                      contractBillingMethod: { }
                  communicationPreferences:
                    culture: { }
                    invoiceCommunicationPreferences:
                      - invoiceType: { }
                        communicationType: { }
                    annualStatementCommunicationPreference: { }
                    collectionFlowId: string
                  propertyGroups:
                    - id: string
                      name: string
                  customerGroup:
                    id: string
                    name: string
                  billingSettings:
                    automaticSettlementSetting:
                      automaticSettlement: true
                      originatorType: { }
                      originatorId: string
                  customProperties:
                    - customEntityPropertyTypeId: string
                      values:
                        - valueDecimal: 0
                          valueString: string
                          valueBoolean: true
                          valueNumber: 0
                          valueDateTime: string
                          valueDropdown:
                            - string
                          startDateTime: string
                          endDateTime: string
                  activationCode: string
                  portalProperties:
                    applicationUserId: string
                    confirmAccountToken: string
                    resetPasswordToken: string
                    email: string
                  generatedAnnualStatements:
                    - annualStatementId: string
                      annualStatementNumber: string
                      year: 0
                      version: 0
                      status: { }
            text/json:
              schema:
                $ref: '#/components/schemas/CustomerDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  accountNumber: string
                  salutation: string
                  initials: string
                  firstName: string
                  lastName: string
                  birthDate: string
                  ssin: string
                  ssinCountry: { }
                  shortDisplayName: string
                  customerType: { }
                  companyName: string
                  organizationNumber: string
                  vatNumber: string
                  paymentTermsId: string
                  defaultPaymentMethod: { }
                  invoiceAddress:
                    streetName: string
                    streetNumber: string
                    streetNumberAddition: string
                    postalCode: string
                    buildingName: string
                    locality: string
                    city: string
                    country: { }
                    localizedDisplay: string
                    lineOne: string
                    lineTwo: string
                  bankAccountIbans:
                    - iban: string
                      isDefault: true
                  contactDetails:
                    - contactType: { }
                      value: string
                      description: string
                      primaryForType: true
                  contracts:
                    - contractId: string
                      contractNumber: string
                      supplyStartDateTime: string
                      supplyEndDateTime: string
                      currentContractStatus: { }
                      contractBillingMethod: { }
                  communicationPreferences:
                    culture: { }
                    invoiceCommunicationPreferences:
                      - invoiceType: { }
                        communicationType: { }
                    annualStatementCommunicationPreference: { }
                    collectionFlowId: string
                  propertyGroups:
                    - id: string
                      name: string
                  customerGroup:
                    id: string
                    name: string
                  billingSettings:
                    automaticSettlementSetting:
                      automaticSettlement: true
                      originatorType: { }
                      originatorId: string
                  customProperties:
                    - customEntityPropertyTypeId: string
                      values:
                        - valueDecimal: 0
                          valueString: string
                          valueBoolean: true
                          valueNumber: 0
                          valueDateTime: string
                          valueDropdown:
                            - string
                          startDateTime: string
                          endDateTime: string
                  activationCode: string
                  portalProperties:
                    applicationUserId: string
                    confirmAccountToken: string
                    resetPasswordToken: string
                    email: string
                  generatedAnnualStatements:
                    - annualStatementId: string
                      annualStatementNumber: string
                      year: 0
                      version: 0
                      status: { }
  '/Customers/{customeruuid}/invoiceaddress':
    post:
      tags:
        - Customers
      summary: Update invoice address of a customer.
      description: Update invoice address of a customer.
      operationId: ChangeCustomerInvoiceAddress
      parameters:
        - name: customeruuid
          in: path
          description: The ID of the customer.
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: The request containing invoice address.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/UpdateInvoiceAddressRequest'
            example:
              invoiceAddress:
                streetName: string
                streetNumber: string
                streetNumberAddition: string
                postalCode: string
                buildingName: string
                locality: string
                city: string
                country: { }
                localizedDisplay: string
                lineOne: string
                lineTwo: string
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/UpdateInvoiceAddressRequest'
            example:
              invoiceAddress:
                streetName: string
                streetNumber: string
                streetNumberAddition: string
                postalCode: string
                buildingName: string
                locality: string
                city: string
                country: { }
                localizedDisplay: string
                lineOne: string
                lineTwo: string
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/UpdateInvoiceAddressRequest'
            example:
              invoiceAddress:
                streetName: string
                streetNumber: string
                streetNumberAddition: string
                postalCode: string
                buildingName: string
                locality: string
                city: string
                country: { }
                localizedDisplay: string
                lineOne: string
                lineTwo: string
      responses:
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CustomerDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  accountNumber: string
                  salutation: string
                  initials: string
                  firstName: string
                  lastName: string
                  birthDate: string
                  ssin: string
                  ssinCountry: { }
                  shortDisplayName: string
                  customerType: { }
                  companyName: string
                  organizationNumber: string
                  vatNumber: string
                  paymentTermsId: string
                  defaultPaymentMethod: { }
                  invoiceAddress:
                    streetName: string
                    streetNumber: string
                    streetNumberAddition: string
                    postalCode: string
                    buildingName: string
                    locality: string
                    city: string
                    country: { }
                    localizedDisplay: string
                    lineOne: string
                    lineTwo: string
                  bankAccountIbans:
                    - iban: string
                      isDefault: true
                  contactDetails:
                    - contactType: { }
                      value: string
                      description: string
                      primaryForType: true
                  contracts:
                    - contractId: string
                      contractNumber: string
                      supplyStartDateTime: string
                      supplyEndDateTime: string
                      currentContractStatus: { }
                      contractBillingMethod: { }
                  communicationPreferences:
                    culture: { }
                    invoiceCommunicationPreferences:
                      - invoiceType: { }
                        communicationType: { }
                    annualStatementCommunicationPreference: { }
                    collectionFlowId: string
                  propertyGroups:
                    - id: string
                      name: string
                  customerGroup:
                    id: string
                    name: string
                  billingSettings:
                    automaticSettlementSetting:
                      automaticSettlement: true
                      originatorType: { }
                      originatorId: string
                  customProperties:
                    - customEntityPropertyTypeId: string
                      values:
                        - valueDecimal: 0
                          valueString: string
                          valueBoolean: true
                          valueNumber: 0
                          valueDateTime: string
                          valueDropdown:
                            - string
                          startDateTime: string
                          endDateTime: string
                  activationCode: string
                  portalProperties:
                    applicationUserId: string
                    confirmAccountToken: string
                    resetPasswordToken: string
                    email: string
                  generatedAnnualStatements:
                    - annualStatementId: string
                      annualStatementNumber: string
                      year: 0
                      version: 0
                      status: { }
            text/json:
              schema:
                $ref: '#/components/schemas/CustomerDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  accountNumber: string
                  salutation: string
                  initials: string
                  firstName: string
                  lastName: string
                  birthDate: string
                  ssin: string
                  ssinCountry: { }
                  shortDisplayName: string
                  customerType: { }
                  companyName: string
                  organizationNumber: string
                  vatNumber: string
                  paymentTermsId: string
                  defaultPaymentMethod: { }
                  invoiceAddress:
                    streetName: string
                    streetNumber: string
                    streetNumberAddition: string
                    postalCode: string
                    buildingName: string
                    locality: string
                    city: string
                    country: { }
                    localizedDisplay: string
                    lineOne: string
                    lineTwo: string
                  bankAccountIbans:
                    - iban: string
                      isDefault: true
                  contactDetails:
                    - contactType: { }
                      value: string
                      description: string
                      primaryForType: true
                  contracts:
                    - contractId: string
                      contractNumber: string
                      supplyStartDateTime: string
                      supplyEndDateTime: string
                      currentContractStatus: { }
                      contractBillingMethod: { }
                  communicationPreferences:
                    culture: { }
                    invoiceCommunicationPreferences:
                      - invoiceType: { }
                        communicationType: { }
                    annualStatementCommunicationPreference: { }
                    collectionFlowId: string
                  propertyGroups:
                    - id: string
                      name: string
                  customerGroup:
                    id: string
                    name: string
                  billingSettings:
                    automaticSettlementSetting:
                      automaticSettlement: true
                      originatorType: { }
                      originatorId: string
                  customProperties:
                    - customEntityPropertyTypeId: string
                      values:
                        - valueDecimal: 0
                          valueString: string
                          valueBoolean: true
                          valueNumber: 0
                          valueDateTime: string
                          valueDropdown:
                            - string
                          startDateTime: string
                          endDateTime: string
                  activationCode: string
                  portalProperties:
                    applicationUserId: string
                    confirmAccountToken: string
                    resetPasswordToken: string
                    email: string
                  generatedAnnualStatements:
                    - annualStatementId: string
                      annualStatementNumber: string
                      year: 0
                      version: 0
                      status: { }
  '/Customers/{customeruuid}/contactdetails':
    post:
      tags:
        - Customers
      summary: Update contact details of a customer.
      description: Update contact details of a customer.
      operationId: ChangeCustomerContactDetails
      parameters:
        - name: customeruuid
          in: path
          description: The ID of the customer.
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: The request containing contact details.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ChangeCustomerContactDetailsRequest'
            example:
              contactEntries:
                - value: string
                  description: string
                  primaryForType: true
                  contactType: { }
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ChangeCustomerContactDetailsRequest'
            example:
              contactEntries:
                - value: string
                  description: string
                  primaryForType: true
                  contactType: { }
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ChangeCustomerContactDetailsRequest'
            example:
              contactEntries:
                - value: string
                  description: string
                  primaryForType: true
                  contactType: { }
      responses:
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CustomerDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  accountNumber: string
                  salutation: string
                  initials: string
                  firstName: string
                  lastName: string
                  birthDate: string
                  ssin: string
                  ssinCountry: { }
                  shortDisplayName: string
                  customerType: { }
                  companyName: string
                  organizationNumber: string
                  vatNumber: string
                  paymentTermsId: string
                  defaultPaymentMethod: { }
                  invoiceAddress:
                    streetName: string
                    streetNumber: string
                    streetNumberAddition: string
                    postalCode: string
                    buildingName: string
                    locality: string
                    city: string
                    country: { }
                    localizedDisplay: string
                    lineOne: string
                    lineTwo: string
                  bankAccountIbans:
                    - iban: string
                      isDefault: true
                  contactDetails:
                    - contactType: { }
                      value: string
                      description: string
                      primaryForType: true
                  contracts:
                    - contractId: string
                      contractNumber: string
                      supplyStartDateTime: string
                      supplyEndDateTime: string
                      currentContractStatus: { }
                      contractBillingMethod: { }
                  communicationPreferences:
                    culture: { }
                    invoiceCommunicationPreferences:
                      - invoiceType: { }
                        communicationType: { }
                    annualStatementCommunicationPreference: { }
                    collectionFlowId: string
                  propertyGroups:
                    - id: string
                      name: string
                  customerGroup:
                    id: string
                    name: string
                  billingSettings:
                    automaticSettlementSetting:
                      automaticSettlement: true
                      originatorType: { }
                      originatorId: string
                  customProperties:
                    - customEntityPropertyTypeId: string
                      values:
                        - valueDecimal: 0
                          valueString: string
                          valueBoolean: true
                          valueNumber: 0
                          valueDateTime: string
                          valueDropdown:
                            - string
                          startDateTime: string
                          endDateTime: string
                  activationCode: string
                  portalProperties:
                    applicationUserId: string
                    confirmAccountToken: string
                    resetPasswordToken: string
                    email: string
                  generatedAnnualStatements:
                    - annualStatementId: string
                      annualStatementNumber: string
                      year: 0
                      version: 0
                      status: { }
            text/json:
              schema:
                $ref: '#/components/schemas/CustomerDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  accountNumber: string
                  salutation: string
                  initials: string
                  firstName: string
                  lastName: string
                  birthDate: string
                  ssin: string
                  ssinCountry: { }
                  shortDisplayName: string
                  customerType: { }
                  companyName: string
                  organizationNumber: string
                  vatNumber: string
                  paymentTermsId: string
                  defaultPaymentMethod: { }
                  invoiceAddress:
                    streetName: string
                    streetNumber: string
                    streetNumberAddition: string
                    postalCode: string
                    buildingName: string
                    locality: string
                    city: string
                    country: { }
                    localizedDisplay: string
                    lineOne: string
                    lineTwo: string
                  bankAccountIbans:
                    - iban: string
                      isDefault: true
                  contactDetails:
                    - contactType: { }
                      value: string
                      description: string
                      primaryForType: true
                  contracts:
                    - contractId: string
                      contractNumber: string
                      supplyStartDateTime: string
                      supplyEndDateTime: string
                      currentContractStatus: { }
                      contractBillingMethod: { }
                  communicationPreferences:
                    culture: { }
                    invoiceCommunicationPreferences:
                      - invoiceType: { }
                        communicationType: { }
                    annualStatementCommunicationPreference: { }
                    collectionFlowId: string
                  propertyGroups:
                    - id: string
                      name: string
                  customerGroup:
                    id: string
                    name: string
                  billingSettings:
                    automaticSettlementSetting:
                      automaticSettlement: true
                      originatorType: { }
                      originatorId: string
                  customProperties:
                    - customEntityPropertyTypeId: string
                      values:
                        - valueDecimal: 0
                          valueString: string
                          valueBoolean: true
                          valueNumber: 0
                          valueDateTime: string
                          valueDropdown:
                            - string
                          startDateTime: string
                          endDateTime: string
                  activationCode: string
                  portalProperties:
                    applicationUserId: string
                    confirmAccountToken: string
                    resetPasswordToken: string
                    email: string
                  generatedAnnualStatements:
                    - annualStatementId: string
                      annualStatementNumber: string
                      year: 0
                      version: 0
                      status: { }
  '/Customers/{customeruuid}/details':
    post:
      tags:
        - Customers
      summary: Update details of a customer.
      description: Update details of a customer.
      operationId: ChangeCustomerDetails
      parameters:
        - name: customeruuid
          in: path
          description: The ID of the customer.
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: The request containing customer details.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ChangeCustomerDetailsRequest'
            example:
              accountNumber: string
              salutation: string
              initials: string
              firstName: string
              lastName: string
              birthDate: string
              ssin: string
              ssinCountry: { }
              companyName: string
              organizationNumber: string
              vatNumber: string
              customerType: { }
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ChangeCustomerDetailsRequest'
            example:
              accountNumber: string
              salutation: string
              initials: string
              firstName: string
              lastName: string
              birthDate: string
              ssin: string
              ssinCountry: { }
              companyName: string
              organizationNumber: string
              vatNumber: string
              customerType: { }
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ChangeCustomerDetailsRequest'
            example:
              accountNumber: string
              salutation: string
              initials: string
              firstName: string
              lastName: string
              birthDate: string
              ssin: string
              ssinCountry: { }
              companyName: string
              organizationNumber: string
              vatNumber: string
              customerType: { }
      responses:
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CustomerDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  accountNumber: string
                  salutation: string
                  initials: string
                  firstName: string
                  lastName: string
                  birthDate: string
                  ssin: string
                  ssinCountry: { }
                  shortDisplayName: string
                  customerType: { }
                  companyName: string
                  organizationNumber: string
                  vatNumber: string
                  paymentTermsId: string
                  defaultPaymentMethod: { }
                  invoiceAddress:
                    streetName: string
                    streetNumber: string
                    streetNumberAddition: string
                    postalCode: string
                    buildingName: string
                    locality: string
                    city: string
                    country: { }
                    localizedDisplay: string
                    lineOne: string
                    lineTwo: string
                  bankAccountIbans:
                    - iban: string
                      isDefault: true
                  contactDetails:
                    - contactType: { }
                      value: string
                      description: string
                      primaryForType: true
                  contracts:
                    - contractId: string
                      contractNumber: string
                      supplyStartDateTime: string
                      supplyEndDateTime: string
                      currentContractStatus: { }
                      contractBillingMethod: { }
                  communicationPreferences:
                    culture: { }
                    invoiceCommunicationPreferences:
                      - invoiceType: { }
                        communicationType: { }
                    annualStatementCommunicationPreference: { }
                    collectionFlowId: string
                  propertyGroups:
                    - id: string
                      name: string
                  customerGroup:
                    id: string
                    name: string
                  billingSettings:
                    automaticSettlementSetting:
                      automaticSettlement: true
                      originatorType: { }
                      originatorId: string
                  customProperties:
                    - customEntityPropertyTypeId: string
                      values:
                        - valueDecimal: 0
                          valueString: string
                          valueBoolean: true
                          valueNumber: 0
                          valueDateTime: string
                          valueDropdown:
                            - string
                          startDateTime: string
                          endDateTime: string
                  activationCode: string
                  portalProperties:
                    applicationUserId: string
                    confirmAccountToken: string
                    resetPasswordToken: string
                    email: string
                  generatedAnnualStatements:
                    - annualStatementId: string
                      annualStatementNumber: string
                      year: 0
                      version: 0
                      status: { }
            text/json:
              schema:
                $ref: '#/components/schemas/CustomerDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  accountNumber: string
                  salutation: string
                  initials: string
                  firstName: string
                  lastName: string
                  birthDate: string
                  ssin: string
                  ssinCountry: { }
                  shortDisplayName: string
                  customerType: { }
                  companyName: string
                  organizationNumber: string
                  vatNumber: string
                  paymentTermsId: string
                  defaultPaymentMethod: { }
                  invoiceAddress:
                    streetName: string
                    streetNumber: string
                    streetNumberAddition: string
                    postalCode: string
                    buildingName: string
                    locality: string
                    city: string
                    country: { }
                    localizedDisplay: string
                    lineOne: string
                    lineTwo: string
                  bankAccountIbans:
                    - iban: string
                      isDefault: true
                  contactDetails:
                    - contactType: { }
                      value: string
                      description: string
                      primaryForType: true
                  contracts:
                    - contractId: string
                      contractNumber: string
                      supplyStartDateTime: string
                      supplyEndDateTime: string
                      currentContractStatus: { }
                      contractBillingMethod: { }
                  communicationPreferences:
                    culture: { }
                    invoiceCommunicationPreferences:
                      - invoiceType: { }
                        communicationType: { }
                    annualStatementCommunicationPreference: { }
                    collectionFlowId: string
                  propertyGroups:
                    - id: string
                      name: string
                  customerGroup:
                    id: string
                    name: string
                  billingSettings:
                    automaticSettlementSetting:
                      automaticSettlement: true
                      originatorType: { }
                      originatorId: string
                  customProperties:
                    - customEntityPropertyTypeId: string
                      values:
                        - valueDecimal: 0
                          valueString: string
                          valueBoolean: true
                          valueNumber: 0
                          valueDateTime: string
                          valueDropdown:
                            - string
                          startDateTime: string
                          endDateTime: string
                  activationCode: string
                  portalProperties:
                    applicationUserId: string
                    confirmAccountToken: string
                    resetPasswordToken: string
                    email: string
                  generatedAnnualStatements:
                    - annualStatementId: string
                      annualStatementNumber: string
                      year: 0
                      version: 0
                      status: { }
  '/Customers/{customeruuid}/communicationpreferences':
    post:
      tags:
        - Customers
      summary: Update communication preferences of a customer.
      description: Update communication preferences of a customer.
      operationId: ChangeCustomerCommunicationPreferences
      parameters:
        - name: customeruuid
          in: path
          description: The ID of the customer.
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: The request containing communication preferences.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ChangeCustomerCommunicationPreferencesRequest'
            example:
              communicationPreferences:
                culture: { }
                invoiceCommunicationPreferences:
                  - invoiceType: { }
                    communicationType: { }
                annualStatementCommunicationPreference: { }
                collectionFlowId: string
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ChangeCustomerCommunicationPreferencesRequest'
            example:
              communicationPreferences:
                culture: { }
                invoiceCommunicationPreferences:
                  - invoiceType: { }
                    communicationType: { }
                annualStatementCommunicationPreference: { }
                collectionFlowId: string
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ChangeCustomerCommunicationPreferencesRequest'
            example:
              communicationPreferences:
                culture: { }
                invoiceCommunicationPreferences:
                  - invoiceType: { }
                    communicationType: { }
                annualStatementCommunicationPreference: { }
                collectionFlowId: string
      responses:
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CustomerDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  accountNumber: string
                  salutation: string
                  initials: string
                  firstName: string
                  lastName: string
                  birthDate: string
                  ssin: string
                  ssinCountry: { }
                  shortDisplayName: string
                  customerType: { }
                  companyName: string
                  organizationNumber: string
                  vatNumber: string
                  paymentTermsId: string
                  defaultPaymentMethod: { }
                  invoiceAddress:
                    streetName: string
                    streetNumber: string
                    streetNumberAddition: string
                    postalCode: string
                    buildingName: string
                    locality: string
                    city: string
                    country: { }
                    localizedDisplay: string
                    lineOne: string
                    lineTwo: string
                  bankAccountIbans:
                    - iban: string
                      isDefault: true
                  contactDetails:
                    - contactType: { }
                      value: string
                      description: string
                      primaryForType: true
                  contracts:
                    - contractId: string
                      contractNumber: string
                      supplyStartDateTime: string
                      supplyEndDateTime: string
                      currentContractStatus: { }
                      contractBillingMethod: { }
                  communicationPreferences:
                    culture: { }
                    invoiceCommunicationPreferences:
                      - invoiceType: { }
                        communicationType: { }
                    annualStatementCommunicationPreference: { }
                    collectionFlowId: string
                  propertyGroups:
                    - id: string
                      name: string
                  customerGroup:
                    id: string
                    name: string
                  billingSettings:
                    automaticSettlementSetting:
                      automaticSettlement: true
                      originatorType: { }
                      originatorId: string
                  customProperties:
                    - customEntityPropertyTypeId: string
                      values:
                        - valueDecimal: 0
                          valueString: string
                          valueBoolean: true
                          valueNumber: 0
                          valueDateTime: string
                          valueDropdown:
                            - string
                          startDateTime: string
                          endDateTime: string
                  activationCode: string
                  portalProperties:
                    applicationUserId: string
                    confirmAccountToken: string
                    resetPasswordToken: string
                    email: string
                  generatedAnnualStatements:
                    - annualStatementId: string
                      annualStatementNumber: string
                      year: 0
                      version: 0
                      status: { }
            text/json:
              schema:
                $ref: '#/components/schemas/CustomerDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  accountNumber: string
                  salutation: string
                  initials: string
                  firstName: string
                  lastName: string
                  birthDate: string
                  ssin: string
                  ssinCountry: { }
                  shortDisplayName: string
                  customerType: { }
                  companyName: string
                  organizationNumber: string
                  vatNumber: string
                  paymentTermsId: string
                  defaultPaymentMethod: { }
                  invoiceAddress:
                    streetName: string
                    streetNumber: string
                    streetNumberAddition: string
                    postalCode: string
                    buildingName: string
                    locality: string
                    city: string
                    country: { }
                    localizedDisplay: string
                    lineOne: string
                    lineTwo: string
                  bankAccountIbans:
                    - iban: string
                      isDefault: true
                  contactDetails:
                    - contactType: { }
                      value: string
                      description: string
                      primaryForType: true
                  contracts:
                    - contractId: string
                      contractNumber: string
                      supplyStartDateTime: string
                      supplyEndDateTime: string
                      currentContractStatus: { }
                      contractBillingMethod: { }
                  communicationPreferences:
                    culture: { }
                    invoiceCommunicationPreferences:
                      - invoiceType: { }
                        communicationType: { }
                    annualStatementCommunicationPreference: { }
                    collectionFlowId: string
                  propertyGroups:
                    - id: string
                      name: string
                  customerGroup:
                    id: string
                    name: string
                  billingSettings:
                    automaticSettlementSetting:
                      automaticSettlement: true
                      originatorType: { }
                      originatorId: string
                  customProperties:
                    - customEntityPropertyTypeId: string
                      values:
                        - valueDecimal: 0
                          valueString: string
                          valueBoolean: true
                          valueNumber: 0
                          valueDateTime: string
                          valueDropdown:
                            - string
                          startDateTime: string
                          endDateTime: string
                  activationCode: string
                  portalProperties:
                    applicationUserId: string
                    confirmAccountToken: string
                    resetPasswordToken: string
                    email: string
                  generatedAnnualStatements:
                    - annualStatementId: string
                      annualStatementNumber: string
                      year: 0
                      version: 0
                      status: { }
  '/Customers/{customeruuid}/billingdetails':
    post:
      tags:
        - Customers
      summary: Update billing details of a customer.
      description: Update billing details of a customer.
      operationId: ChangeCustomerBillingDetails
      parameters:
        - name: customeruuid
          in: path
          description: The ID of the customer.
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: The request containing billing details.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/UpdateCustomerBillingDetailsRequest'
            example:
              paymentTermsId: string
              defaultPaymentMethod: { }
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/UpdateCustomerBillingDetailsRequest'
            example:
              paymentTermsId: string
              defaultPaymentMethod: { }
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/UpdateCustomerBillingDetailsRequest'
            example:
              paymentTermsId: string
              defaultPaymentMethod: { }
      responses:
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CustomerDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  accountNumber: string
                  salutation: string
                  initials: string
                  firstName: string
                  lastName: string
                  birthDate: string
                  ssin: string
                  ssinCountry: { }
                  shortDisplayName: string
                  customerType: { }
                  companyName: string
                  organizationNumber: string
                  vatNumber: string
                  paymentTermsId: string
                  defaultPaymentMethod: { }
                  invoiceAddress:
                    streetName: string
                    streetNumber: string
                    streetNumberAddition: string
                    postalCode: string
                    buildingName: string
                    locality: string
                    city: string
                    country: { }
                    localizedDisplay: string
                    lineOne: string
                    lineTwo: string
                  bankAccountIbans:
                    - iban: string
                      isDefault: true
                  contactDetails:
                    - contactType: { }
                      value: string
                      description: string
                      primaryForType: true
                  contracts:
                    - contractId: string
                      contractNumber: string
                      supplyStartDateTime: string
                      supplyEndDateTime: string
                      currentContractStatus: { }
                      contractBillingMethod: { }
                  communicationPreferences:
                    culture: { }
                    invoiceCommunicationPreferences:
                      - invoiceType: { }
                        communicationType: { }
                    annualStatementCommunicationPreference: { }
                    collectionFlowId: string
                  propertyGroups:
                    - id: string
                      name: string
                  customerGroup:
                    id: string
                    name: string
                  billingSettings:
                    automaticSettlementSetting:
                      automaticSettlement: true
                      originatorType: { }
                      originatorId: string
                  customProperties:
                    - customEntityPropertyTypeId: string
                      values:
                        - valueDecimal: 0
                          valueString: string
                          valueBoolean: true
                          valueNumber: 0
                          valueDateTime: string
                          valueDropdown:
                            - string
                          startDateTime: string
                          endDateTime: string
                  activationCode: string
                  portalProperties:
                    applicationUserId: string
                    confirmAccountToken: string
                    resetPasswordToken: string
                    email: string
                  generatedAnnualStatements:
                    - annualStatementId: string
                      annualStatementNumber: string
                      year: 0
                      version: 0
                      status: { }
            text/json:
              schema:
                $ref: '#/components/schemas/CustomerDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  accountNumber: string
                  salutation: string
                  initials: string
                  firstName: string
                  lastName: string
                  birthDate: string
                  ssin: string
                  ssinCountry: { }
                  shortDisplayName: string
                  customerType: { }
                  companyName: string
                  organizationNumber: string
                  vatNumber: string
                  paymentTermsId: string
                  defaultPaymentMethod: { }
                  invoiceAddress:
                    streetName: string
                    streetNumber: string
                    streetNumberAddition: string
                    postalCode: string
                    buildingName: string
                    locality: string
                    city: string
                    country: { }
                    localizedDisplay: string
                    lineOne: string
                    lineTwo: string
                  bankAccountIbans:
                    - iban: string
                      isDefault: true
                  contactDetails:
                    - contactType: { }
                      value: string
                      description: string
                      primaryForType: true
                  contracts:
                    - contractId: string
                      contractNumber: string
                      supplyStartDateTime: string
                      supplyEndDateTime: string
                      currentContractStatus: { }
                      contractBillingMethod: { }
                  communicationPreferences:
                    culture: { }
                    invoiceCommunicationPreferences:
                      - invoiceType: { }
                        communicationType: { }
                    annualStatementCommunicationPreference: { }
                    collectionFlowId: string
                  propertyGroups:
                    - id: string
                      name: string
                  customerGroup:
                    id: string
                    name: string
                  billingSettings:
                    automaticSettlementSetting:
                      automaticSettlement: true
                      originatorType: { }
                      originatorId: string
                  customProperties:
                    - customEntityPropertyTypeId: string
                      values:
                        - valueDecimal: 0
                          valueString: string
                          valueBoolean: true
                          valueNumber: 0
                          valueDateTime: string
                          valueDropdown:
                            - string
                          startDateTime: string
                          endDateTime: string
                  activationCode: string
                  portalProperties:
                    applicationUserId: string
                    confirmAccountToken: string
                    resetPasswordToken: string
                    email: string
                  generatedAnnualStatements:
                    - annualStatementId: string
                      annualStatementNumber: string
                      year: 0
                      version: 0
                      status: { }
  '/Customers/{customeruuid}/customergroup':
    post:
      tags:
        - Customers
      summary: Move customer to a different customer group.
      description: Move customer to a different customer group.
      operationId: ChangeCustomerGroup
      parameters:
        - name: customeruuid
          in: path
          description: The ID of the customer.
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: 'The request containing ID of customer group, to which the customer should be assigned to.'
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ChangeCustomerCustomerGroupRequest'
            example:
              customerGroupId: string
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ChangeCustomerCustomerGroupRequest'
            example:
              customerGroupId: string
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ChangeCustomerCustomerGroupRequest'
            example:
              customerGroupId: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CustomerDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  accountNumber: string
                  salutation: string
                  initials: string
                  firstName: string
                  lastName: string
                  birthDate: string
                  ssin: string
                  ssinCountry: { }
                  shortDisplayName: string
                  customerType: { }
                  companyName: string
                  organizationNumber: string
                  vatNumber: string
                  paymentTermsId: string
                  defaultPaymentMethod: { }
                  invoiceAddress:
                    streetName: string
                    streetNumber: string
                    streetNumberAddition: string
                    postalCode: string
                    buildingName: string
                    locality: string
                    city: string
                    country: { }
                    localizedDisplay: string
                    lineOne: string
                    lineTwo: string
                  bankAccountIbans:
                    - iban: string
                      isDefault: true
                  contactDetails:
                    - contactType: { }
                      value: string
                      description: string
                      primaryForType: true
                  contracts:
                    - contractId: string
                      contractNumber: string
                      supplyStartDateTime: string
                      supplyEndDateTime: string
                      currentContractStatus: { }
                      contractBillingMethod: { }
                  communicationPreferences:
                    culture: { }
                    invoiceCommunicationPreferences:
                      - invoiceType: { }
                        communicationType: { }
                    annualStatementCommunicationPreference: { }
                    collectionFlowId: string
                  propertyGroups:
                    - id: string
                      name: string
                  customerGroup:
                    id: string
                    name: string
                  billingSettings:
                    automaticSettlementSetting:
                      automaticSettlement: true
                      originatorType: { }
                      originatorId: string
                  customProperties:
                    - customEntityPropertyTypeId: string
                      values:
                        - valueDecimal: 0
                          valueString: string
                          valueBoolean: true
                          valueNumber: 0
                          valueDateTime: string
                          valueDropdown:
                            - string
                          startDateTime: string
                          endDateTime: string
                  activationCode: string
                  portalProperties:
                    applicationUserId: string
                    confirmAccountToken: string
                    resetPasswordToken: string
                    email: string
                  generatedAnnualStatements:
                    - annualStatementId: string
                      annualStatementNumber: string
                      year: 0
                      version: 0
                      status: { }
            text/json:
              schema:
                $ref: '#/components/schemas/CustomerDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  accountNumber: string
                  salutation: string
                  initials: string
                  firstName: string
                  lastName: string
                  birthDate: string
                  ssin: string
                  ssinCountry: { }
                  shortDisplayName: string
                  customerType: { }
                  companyName: string
                  organizationNumber: string
                  vatNumber: string
                  paymentTermsId: string
                  defaultPaymentMethod: { }
                  invoiceAddress:
                    streetName: string
                    streetNumber: string
                    streetNumberAddition: string
                    postalCode: string
                    buildingName: string
                    locality: string
                    city: string
                    country: { }
                    localizedDisplay: string
                    lineOne: string
                    lineTwo: string
                  bankAccountIbans:
                    - iban: string
                      isDefault: true
                  contactDetails:
                    - contactType: { }
                      value: string
                      description: string
                      primaryForType: true
                  contracts:
                    - contractId: string
                      contractNumber: string
                      supplyStartDateTime: string
                      supplyEndDateTime: string
                      currentContractStatus: { }
                      contractBillingMethod: { }
                  communicationPreferences:
                    culture: { }
                    invoiceCommunicationPreferences:
                      - invoiceType: { }
                        communicationType: { }
                    annualStatementCommunicationPreference: { }
                    collectionFlowId: string
                  propertyGroups:
                    - id: string
                      name: string
                  customerGroup:
                    id: string
                    name: string
                  billingSettings:
                    automaticSettlementSetting:
                      automaticSettlement: true
                      originatorType: { }
                      originatorId: string
                  customProperties:
                    - customEntityPropertyTypeId: string
                      values:
                        - valueDecimal: 0
                          valueString: string
                          valueBoolean: true
                          valueNumber: 0
                          valueDateTime: string
                          valueDropdown:
                            - string
                          startDateTime: string
                          endDateTime: string
                  activationCode: string
                  portalProperties:
                    applicationUserId: string
                    confirmAccountToken: string
                    resetPasswordToken: string
                    email: string
                  generatedAnnualStatements:
                    - annualStatementId: string
                      annualStatementNumber: string
                      year: 0
                      version: 0
                      status: { }
  /Customers/bulk/customergroup:
    post:
      tags:
        - Customers
      summary: Move multiple customers to customer group in bulk.
      description: Move multiple customers to customer group in bulk.
      operationId: BulkChangeCustomerGroup
      parameters:
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: 'The request containing ID of customer group, to which the customer should be assigned to, and query parameters to filter the customers to be moved.'
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BulkChangeCustomerCustomerGroupRequest'
            example:
              customerGroupId: string
              onlyValidate: true
              queryParams:
                flexSearch: string
                includeOnlyIds:
                  - string
                excludeIds:
                  - string
                customerType: string
                defaultPaymentMethod: string
                propertyGroupIds:
                  - string
                excludePropertyGroupId: string
                customerGroupId: string
                excludeCustomerGroupId: string
                customerGroupName: string
                nameContains: string
                activationCode: string
                priorityServiceRegisterPropertyTypeId: string
                vulnerabilityRegisterPropertyTypeId: string
                priorityServiceRegisterIds:
                  - string
                vulnerabilityRegisterIds:
                  - string
              quickFilter: string
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BulkChangeCustomerCustomerGroupRequest'
            example:
              customerGroupId: string
              onlyValidate: true
              queryParams:
                flexSearch: string
                includeOnlyIds:
                  - string
                excludeIds:
                  - string
                customerType: string
                defaultPaymentMethod: string
                propertyGroupIds:
                  - string
                excludePropertyGroupId: string
                customerGroupId: string
                excludeCustomerGroupId: string
                customerGroupName: string
                nameContains: string
                activationCode: string
                priorityServiceRegisterPropertyTypeId: string
                vulnerabilityRegisterPropertyTypeId: string
                priorityServiceRegisterIds:
                  - string
                vulnerabilityRegisterIds:
                  - string
              quickFilter: string
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BulkChangeCustomerCustomerGroupRequest'
            example:
              customerGroupId: string
              onlyValidate: true
              queryParams:
                flexSearch: string
                includeOnlyIds:
                  - string
                excludeIds:
                  - string
                customerType: string
                defaultPaymentMethod: string
                propertyGroupIds:
                  - string
                excludePropertyGroupId: string
                customerGroupId: string
                excludeCustomerGroupId: string
                customerGroupName: string
                nameContains: string
                activationCode: string
                priorityServiceRegisterPropertyTypeId: string
                vulnerabilityRegisterPropertyTypeId: string
                priorityServiceRegisterIds:
                  - string
                vulnerabilityRegisterIds:
                  - string
              quickFilter: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
  '/Customers/{customeruuid}/send/{subType}':
    post:
      tags:
        - Customers
      summary: Send email to a customer.
      description: Send email to a customer.
      operationId: SendCustomerCommunicationViaEmail
      parameters:
        - name: customeruuid
          in: path
          description: The ID of the customer.
          required: true
          schema:
            type: string
        - name: subType
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
  '/Customers/{customeruuid}/portaldetails':
    post:
      tags:
        - Customers
      summary: Update customer portal details of a customer.
      description: Update customer portal details of a customer.
      operationId: ChangePortalDetails
      parameters:
        - name: customeruuid
          in: path
          description: The ID of the customer.
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: The request containing customer portal details.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/UpdateCustomerPortalDetailsRequest'
            example:
              applicationUserId: string
              resetPasswordToken: string
              confirmAccountToken: string
              email: string
              sendCommunication: true
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/UpdateCustomerPortalDetailsRequest'
            example:
              applicationUserId: string
              resetPasswordToken: string
              confirmAccountToken: string
              email: string
              sendCommunication: true
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/UpdateCustomerPortalDetailsRequest'
            example:
              applicationUserId: string
              resetPasswordToken: string
              confirmAccountToken: string
              email: string
              sendCommunication: true
      responses:
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CustomerDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  accountNumber: string
                  salutation: string
                  initials: string
                  firstName: string
                  lastName: string
                  birthDate: string
                  ssin: string
                  ssinCountry: { }
                  shortDisplayName: string
                  customerType: { }
                  companyName: string
                  organizationNumber: string
                  vatNumber: string
                  paymentTermsId: string
                  defaultPaymentMethod: { }
                  invoiceAddress:
                    streetName: string
                    streetNumber: string
                    streetNumberAddition: string
                    postalCode: string
                    buildingName: string
                    locality: string
                    city: string
                    country: { }
                    localizedDisplay: string
                    lineOne: string
                    lineTwo: string
                  bankAccountIbans:
                    - iban: string
                      isDefault: true
                  contactDetails:
                    - contactType: { }
                      value: string
                      description: string
                      primaryForType: true
                  contracts:
                    - contractId: string
                      contractNumber: string
                      supplyStartDateTime: string
                      supplyEndDateTime: string
                      currentContractStatus: { }
                      contractBillingMethod: { }
                  communicationPreferences:
                    culture: { }
                    invoiceCommunicationPreferences:
                      - invoiceType: { }
                        communicationType: { }
                    annualStatementCommunicationPreference: { }
                    collectionFlowId: string
                  propertyGroups:
                    - id: string
                      name: string
                  customerGroup:
                    id: string
                    name: string
                  billingSettings:
                    automaticSettlementSetting:
                      automaticSettlement: true
                      originatorType: { }
                      originatorId: string
                  customProperties:
                    - customEntityPropertyTypeId: string
                      values:
                        - valueDecimal: 0
                          valueString: string
                          valueBoolean: true
                          valueNumber: 0
                          valueDateTime: string
                          valueDropdown:
                            - string
                          startDateTime: string
                          endDateTime: string
                  activationCode: string
                  portalProperties:
                    applicationUserId: string
                    confirmAccountToken: string
                    resetPasswordToken: string
                    email: string
                  generatedAnnualStatements:
                    - annualStatementId: string
                      annualStatementNumber: string
                      year: 0
                      version: 0
                      status: { }
            text/json:
              schema:
                $ref: '#/components/schemas/CustomerDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  accountNumber: string
                  salutation: string
                  initials: string
                  firstName: string
                  lastName: string
                  birthDate: string
                  ssin: string
                  ssinCountry: { }
                  shortDisplayName: string
                  customerType: { }
                  companyName: string
                  organizationNumber: string
                  vatNumber: string
                  paymentTermsId: string
                  defaultPaymentMethod: { }
                  invoiceAddress:
                    streetName: string
                    streetNumber: string
                    streetNumberAddition: string
                    postalCode: string
                    buildingName: string
                    locality: string
                    city: string
                    country: { }
                    localizedDisplay: string
                    lineOne: string
                    lineTwo: string
                  bankAccountIbans:
                    - iban: string
                      isDefault: true
                  contactDetails:
                    - contactType: { }
                      value: string
                      description: string
                      primaryForType: true
                  contracts:
                    - contractId: string
                      contractNumber: string
                      supplyStartDateTime: string
                      supplyEndDateTime: string
                      currentContractStatus: { }
                      contractBillingMethod: { }
                  communicationPreferences:
                    culture: { }
                    invoiceCommunicationPreferences:
                      - invoiceType: { }
                        communicationType: { }
                    annualStatementCommunicationPreference: { }
                    collectionFlowId: string
                  propertyGroups:
                    - id: string
                      name: string
                  customerGroup:
                    id: string
                    name: string
                  billingSettings:
                    automaticSettlementSetting:
                      automaticSettlement: true
                      originatorType: { }
                      originatorId: string
                  customProperties:
                    - customEntityPropertyTypeId: string
                      values:
                        - valueDecimal: 0
                          valueString: string
                          valueBoolean: true
                          valueNumber: 0
                          valueDateTime: string
                          valueDropdown:
                            - string
                          startDateTime: string
                          endDateTime: string
                  activationCode: string
                  portalProperties:
                    applicationUserId: string
                    confirmAccountToken: string
                    resetPasswordToken: string
                    email: string
                  generatedAnnualStatements:
                    - annualStatementId: string
                      annualStatementNumber: string
                      year: 0
                      version: 0
                      status: { }
  /Customers/bulk/createannualstatement:
    post:
      tags:
        - Customers
      summary: Create and generate annual statements for multiple customers in bulk.
      description: Create and generate annual statements for multiple customers in bulk.
      operationId: post-customers-bulk-createannualstatement
      parameters:
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: 'The request containing bulk annual statement generation details and query parameters to filter the customers, which are supposed to have annual statement generated.'
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BulkCreateAnnualStatementRequest'
            example:
              year: 0
              onlyValidate: true
              queryParams:
                flexSearch: string
                includeOnlyIds:
                  - string
                excludeIds:
                  - string
                customerType: string
                defaultPaymentMethod: string
                propertyGroupIds:
                  - string
                excludePropertyGroupId: string
                customerGroupId: string
                excludeCustomerGroupId: string
                customerGroupName: string
                nameContains: string
                activationCode: string
                priorityServiceRegisterPropertyTypeId: string
                vulnerabilityRegisterPropertyTypeId: string
                priorityServiceRegisterIds:
                  - string
                vulnerabilityRegisterIds:
                  - string
              quickFilter: string
              onlyWhereLatestNotGenerated: true
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BulkCreateAnnualStatementRequest'
            example:
              year: 0
              onlyValidate: true
              queryParams:
                flexSearch: string
                includeOnlyIds:
                  - string
                excludeIds:
                  - string
                customerType: string
                defaultPaymentMethod: string
                propertyGroupIds:
                  - string
                excludePropertyGroupId: string
                customerGroupId: string
                excludeCustomerGroupId: string
                customerGroupName: string
                nameContains: string
                activationCode: string
                priorityServiceRegisterPropertyTypeId: string
                vulnerabilityRegisterPropertyTypeId: string
                priorityServiceRegisterIds:
                  - string
                vulnerabilityRegisterIds:
                  - string
              quickFilter: string
              onlyWhereLatestNotGenerated: true
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BulkCreateAnnualStatementRequest'
            example:
              year: 0
              onlyValidate: true
              queryParams:
                flexSearch: string
                includeOnlyIds:
                  - string
                excludeIds:
                  - string
                customerType: string
                defaultPaymentMethod: string
                propertyGroupIds:
                  - string
                excludePropertyGroupId: string
                customerGroupId: string
                excludeCustomerGroupId: string
                customerGroupName: string
                nameContains: string
                activationCode: string
                priorityServiceRegisterPropertyTypeId: string
                vulnerabilityRegisterPropertyTypeId: string
                priorityServiceRegisterIds:
                  - string
                vulnerabilityRegisterIds:
                  - string
              quickFilter: string
              onlyWhereLatestNotGenerated: true
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
  '/Customers/annualstatement/{year}/filter/overviewcount':
    post:
      tags:
        - Customers
      summary: Retrieve the overview count of annual statements for filtered customers based on the provided query parameters.
      description: Retrieve the overview count of annual statements for filtered customers based on the provided query parameters.
      operationId: post-customers-annualstatement-year-filter-overviewcount
      parameters:
        - name: year
          in: path
          description: Format - int32. Year for which the annual statements are supposed to be created.
          required: true
          schema:
            type: integer
            format: int32
        - name: Name
          in: query
          schema:
            type: string
        - name: Id
          in: query
          description: Format - int32.
          schema:
            type: integer
            format: int32
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: Allows to search on fields within the customers.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/GetCustomersQueryParams'
            example:
              flexSearch: string
              includeOnlyIds:
                - string
              excludeIds:
                - string
              customerType: string
              defaultPaymentMethod: string
              propertyGroupIds:
                - string
              excludePropertyGroupId: string
              customerGroupId: string
              excludeCustomerGroupId: string
              customerGroupName: string
              nameContains: string
              activationCode: string
              priorityServiceRegisterPropertyTypeId: string
              vulnerabilityRegisterPropertyTypeId: string
              priorityServiceRegisterIds:
                - string
              vulnerabilityRegisterIds:
                - string
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/GetCustomersQueryParams'
            example:
              flexSearch: string
              includeOnlyIds:
                - string
              excludeIds:
                - string
              customerType: string
              defaultPaymentMethod: string
              propertyGroupIds:
                - string
              excludePropertyGroupId: string
              customerGroupId: string
              excludeCustomerGroupId: string
              customerGroupName: string
              nameContains: string
              activationCode: string
              priorityServiceRegisterPropertyTypeId: string
              vulnerabilityRegisterPropertyTypeId: string
              priorityServiceRegisterIds:
                - string
              vulnerabilityRegisterIds:
                - string
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/GetCustomersQueryParams'
            example:
              flexSearch: string
              includeOnlyIds:
                - string
              excludeIds:
                - string
              customerType: string
              defaultPaymentMethod: string
              propertyGroupIds:
                - string
              excludePropertyGroupId: string
              customerGroupId: string
              excludeCustomerGroupId: string
              customerGroupName: string
              nameContains: string
              activationCode: string
              priorityServiceRegisterPropertyTypeId: string
              vulnerabilityRegisterPropertyTypeId: string
              priorityServiceRegisterIds:
                - string
              vulnerabilityRegisterIds:
                - string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CustomerAnnualStatementOverviewCountDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerAnnualStatementOverviewCountDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  all: 0
                  latestAnnualStatementGenerationInProgress: 0
                  latestAnnualStatementGenerated: 0
                  latestAnnualStatementFailed: 0
            text/json:
              schema:
                $ref: '#/components/schemas/CustomerAnnualStatementOverviewCountDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  all: 0
                  latestAnnualStatementGenerationInProgress: 0
                  latestAnnualStatementGenerated: 0
                  latestAnnualStatementFailed: 0
  '/Customers/{entityId}/customproperties':
    post:
      tags:
        - Customers
      summary: '/Customers/{entityId}/customproperties - POST'
      operationId: post-customers-entityid-customproperties
      parameters:
        - name: entityId
          in: path
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/UpdateCustomEntityPropertiesRequest'
            example:
              properties:
                - customEntityPropertyTypeId: string
                  values:
                    - startDateTime: string
                      endDateTime: string
                      valueDecimal: 0
                      valueString: string
                      valueBoolean: true
                      valueNumber: 0
                      valueDateTime: string
                      valueDropdown:
                        - string
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/UpdateCustomEntityPropertiesRequest'
            example:
              properties:
                - customEntityPropertyTypeId: string
                  values:
                    - startDateTime: string
                      endDateTime: string
                      valueDecimal: 0
                      valueString: string
                      valueBoolean: true
                      valueNumber: 0
                      valueDateTime: string
                      valueDropdown:
                        - string
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/UpdateCustomEntityPropertiesRequest'
            example:
              properties:
                - customEntityPropertyTypeId: string
                  values:
                    - startDateTime: string
                      endDateTime: string
                      valueDecimal: 0
                      valueString: string
                      valueBoolean: true
                      valueNumber: 0
                      valueDateTime: string
                      valueDropdown:
                        - string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CustomerDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  accountNumber: string
                  salutation: string
                  initials: string
                  firstName: string
                  lastName: string
                  birthDate: string
                  ssin: string
                  ssinCountry: { }
                  shortDisplayName: string
                  customerType: { }
                  companyName: string
                  organizationNumber: string
                  vatNumber: string
                  paymentTermsId: string
                  defaultPaymentMethod: { }
                  invoiceAddress:
                    streetName: string
                    streetNumber: string
                    streetNumberAddition: string
                    postalCode: string
                    buildingName: string
                    locality: string
                    city: string
                    country: { }
                    localizedDisplay: string
                    lineOne: string
                    lineTwo: string
                  bankAccountIbans:
                    - iban: string
                      isDefault: true
                  contactDetails:
                    - contactType: { }
                      value: string
                      description: string
                      primaryForType: true
                  contracts:
                    - contractId: string
                      contractNumber: string
                      supplyStartDateTime: string
                      supplyEndDateTime: string
                      currentContractStatus: { }
                      contractBillingMethod: { }
                  communicationPreferences:
                    culture: { }
                    invoiceCommunicationPreferences:
                      - invoiceType: { }
                        communicationType: { }
                    annualStatementCommunicationPreference: { }
                    collectionFlowId: string
                  propertyGroups:
                    - id: string
                      name: string
                  customerGroup:
                    id: string
                    name: string
                  billingSettings:
                    automaticSettlementSetting:
                      automaticSettlement: true
                      originatorType: { }
                      originatorId: string
                  customProperties:
                    - customEntityPropertyTypeId: string
                      values:
                        - valueDecimal: 0
                          valueString: string
                          valueBoolean: true
                          valueNumber: 0
                          valueDateTime: string
                          valueDropdown:
                            - string
                          startDateTime: string
                          endDateTime: string
                  activationCode: string
                  portalProperties:
                    applicationUserId: string
                    confirmAccountToken: string
                    resetPasswordToken: string
                    email: string
                  generatedAnnualStatements:
                    - annualStatementId: string
                      annualStatementNumber: string
                      year: 0
                      version: 0
                      status: { }
            text/json:
              schema:
                $ref: '#/components/schemas/CustomerDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  accountNumber: string
                  salutation: string
                  initials: string
                  firstName: string
                  lastName: string
                  birthDate: string
                  ssin: string
                  ssinCountry: { }
                  shortDisplayName: string
                  customerType: { }
                  companyName: string
                  organizationNumber: string
                  vatNumber: string
                  paymentTermsId: string
                  defaultPaymentMethod: { }
                  invoiceAddress:
                    streetName: string
                    streetNumber: string
                    streetNumberAddition: string
                    postalCode: string
                    buildingName: string
                    locality: string
                    city: string
                    country: { }
                    localizedDisplay: string
                    lineOne: string
                    lineTwo: string
                  bankAccountIbans:
                    - iban: string
                      isDefault: true
                  contactDetails:
                    - contactType: { }
                      value: string
                      description: string
                      primaryForType: true
                  contracts:
                    - contractId: string
                      contractNumber: string
                      supplyStartDateTime: string
                      supplyEndDateTime: string
                      currentContractStatus: { }
                      contractBillingMethod: { }
                  communicationPreferences:
                    culture: { }
                    invoiceCommunicationPreferences:
                      - invoiceType: { }
                        communicationType: { }
                    annualStatementCommunicationPreference: { }
                    collectionFlowId: string
                  propertyGroups:
                    - id: string
                      name: string
                  customerGroup:
                    id: string
                    name: string
                  billingSettings:
                    automaticSettlementSetting:
                      automaticSettlement: true
                      originatorType: { }
                      originatorId: string
                  customProperties:
                    - customEntityPropertyTypeId: string
                      values:
                        - valueDecimal: 0
                          valueString: string
                          valueBoolean: true
                          valueNumber: 0
                          valueDateTime: string
                          valueDropdown:
                            - string
                          startDateTime: string
                          endDateTime: string
                  activationCode: string
                  portalProperties:
                    applicationUserId: string
                    confirmAccountToken: string
                    resetPasswordToken: string
                    email: string
                  generatedAnnualStatements:
                    - annualStatementId: string
                      annualStatementNumber: string
                      year: 0
                      version: 0
                      status: { }
  /Meters:
    post:
      tags:
        - Meters
      summary: Create new meter.
      description: Create new meter.
      operationId: post-meters
      parameters:
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: The request containing meter details.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/CreateMeterRequest'
            example:
              serialNumber: string
              meterType: { }
              meterTag: string
              modelId: string
              mutationDateTime: string
              channels:
                - dataFrequency: { }
                  meteringType: { }
                  utilityType: { }
                  direction: { }
                  incrementationType: { }
                  timeOfUse: string
                  unitOfMeasure: { }
                  externalIdentifier: string
                  description: string
                  relationExternalReference: string
              readingFrequency: { }
              nextExpectedReadingDate: string
              properties: { }
              parentRelation:
                parentMeterId: string
                externalReference: string
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/CreateMeterRequest'
            example:
              serialNumber: string
              meterType: { }
              meterTag: string
              modelId: string
              mutationDateTime: string
              channels:
                - dataFrequency: { }
                  meteringType: { }
                  utilityType: { }
                  direction: { }
                  incrementationType: { }
                  timeOfUse: string
                  unitOfMeasure: { }
                  externalIdentifier: string
                  description: string
                  relationExternalReference: string
              readingFrequency: { }
              nextExpectedReadingDate: string
              properties: { }
              parentRelation:
                parentMeterId: string
                externalReference: string
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/CreateMeterRequest'
            example:
              serialNumber: string
              meterType: { }
              meterTag: string
              modelId: string
              mutationDateTime: string
              channels:
                - dataFrequency: { }
                  meteringType: { }
                  utilityType: { }
                  direction: { }
                  incrementationType: { }
                  timeOfUse: string
                  unitOfMeasure: { }
                  externalIdentifier: string
                  description: string
                  relationExternalReference: string
              readingFrequency: { }
              nextExpectedReadingDate: string
              properties: { }
              parentRelation:
                parentMeterId: string
                externalReference: string
      responses:
        '201':
          description: Created
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/MeterDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/MeterDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  serialNumber: string
                  meterTag: string
                  meterType: { }
                  modelId: string
                  statusHistory:
                    - startDateTime: string
                      endDateTime: string
                      meterStatus: { }
                      serviceLocationId: string
                      installedAtAddress:
                        streetName: string
                        streetNumber: string
                        streetNumberAddition: string
                        postalCode: string
                        buildingName: string
                        locality: string
                        city: string
                        country: { }
                        localizedDisplay: string
                        lineOne: string
                        lineTwo: string
                      propertyGroup:
                        id: string
                        name: string
                  channels:
                    - startDateTime: string
                      endDateTime: string
                      dataFrequency: { }
                      incrementationType: { }
                      meteringType: { }
                      utilityType: { }
                      direction: { }
                      unitOfMeasure: { }
                      timeOfUse: string
                      description: string
                      externalIdentifier: string
                      lastTimeReceivedData: string
                      measurementsUntil: string
                      relationExternalReference: string
                      issuesCount: 0
                      hasIssue: true
                      issues:
                        - meteringIssueId: string
                          error: { }
                          status: { }
                          noticedDateTime: string
                      builtIn: true
                      hidden: true
                  lastTimeReceivedData: string
                  measurementsUntil: string
                  parentMeterRelation:
                    meterId: string
                    serialNumber: string
                    externalReference: string
                  propertyGroup:
                    id: string
                    name: string
                  timeZone: string
                  meterProperties: { }
                  customProperties:
                    - customEntityPropertyTypeId: string
                      values:
                        - valueDecimal: 0
                          valueString: string
                          valueBoolean: true
                          valueNumber: 0
                          valueDateTime: string
                          valueDropdown:
                            - string
                          startDateTime: string
                          endDateTime: string
                  measurementIssuesCount: 0
                  meterIssuesCount: 0
                  issuesCount: 0
                  hasIssue: true
                  issues:
                    - meteringIssueId: string
                      error: { }
                      status: { }
                      noticedDateTime: string
                  readingFrequency: { }
                  nextExpectedReadingDate: string
            text/json:
              schema:
                $ref: '#/components/schemas/MeterDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  serialNumber: string
                  meterTag: string
                  meterType: { }
                  modelId: string
                  statusHistory:
                    - startDateTime: string
                      endDateTime: string
                      meterStatus: { }
                      serviceLocationId: string
                      installedAtAddress:
                        streetName: string
                        streetNumber: string
                        streetNumberAddition: string
                        postalCode: string
                        buildingName: string
                        locality: string
                        city: string
                        country: { }
                        localizedDisplay: string
                        lineOne: string
                        lineTwo: string
                      propertyGroup:
                        id: string
                        name: string
                  channels:
                    - startDateTime: string
                      endDateTime: string
                      dataFrequency: { }
                      incrementationType: { }
                      meteringType: { }
                      utilityType: { }
                      direction: { }
                      unitOfMeasure: { }
                      timeOfUse: string
                      description: string
                      externalIdentifier: string
                      lastTimeReceivedData: string
                      measurementsUntil: string
                      relationExternalReference: string
                      issuesCount: 0
                      hasIssue: true
                      issues:
                        - meteringIssueId: string
                          error: { }
                          status: { }
                          noticedDateTime: string
                      builtIn: true
                      hidden: true
                  lastTimeReceivedData: string
                  measurementsUntil: string
                  parentMeterRelation:
                    meterId: string
                    serialNumber: string
                    externalReference: string
                  propertyGroup:
                    id: string
                    name: string
                  timeZone: string
                  meterProperties: { }
                  customProperties:
                    - customEntityPropertyTypeId: string
                      values:
                        - valueDecimal: 0
                          valueString: string
                          valueBoolean: true
                          valueNumber: 0
                          valueDateTime: string
                          valueDropdown:
                            - string
                          startDateTime: string
                          endDateTime: string
                  measurementIssuesCount: 0
                  meterIssuesCount: 0
                  issuesCount: 0
                  hasIssue: true
                  issues:
                    - meteringIssueId: string
                      error: { }
                      status: { }
                      noticedDateTime: string
                  readingFrequency: { }
                  nextExpectedReadingDate: string
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
    get:
      tags:
        - Meters
      summary: Retrieve meters based on the provided query parameters.
      description: Retrieve meters based on the provided query parameters.
      operationId: get-meters
      parameters:
        - name: ServicelocationIds
          in: query
          schema:
            type: array
            items:
              type: string
        - name: PropertyGroupIds
          in: query
          schema:
            type: array
            items:
              type: string
        - name: MeterType.Name
          in: query
          schema:
            type: string
        - name: MeterType.Id
          in: query
          description: Format - int32.
          schema:
            type: integer
            format: int32
        - name: ReceivedMeteringDataStart
          in: query
          description: Format - date-time (as date-time in RFC3339).
          schema:
            type: string
            format: date-time
            nullable: true
        - name: ReceivedMeteringDataEnd
          in: query
          description: Format - date-time (as date-time in RFC3339).
          schema:
            type: string
            format: date-time
            nullable: true
        - name: NextExpectedReadingDateStart
          in: query
          description: Format - date-time (as date-time in RFC3339).
          schema:
            type: string
            format: date-time
            nullable: true
        - name: NextExpectedReadingDateEnd
          in: query
          description: Format - date-time (as date-time in RFC3339).
          schema:
            type: string
            format: date-time
            nullable: true
        - name: ParentSerialNumber
          in: query
          schema:
            type: string
        - name: FilterByReadingFrequency
          in: query
          schema:
            type: boolean
        - name: ReadingFrequency.Name
          in: query
          schema:
            type: string
        - name: ReadingFrequency.Id
          in: query
          description: Format - int32.
          schema:
            type: integer
            format: int32
        - name: CustomerId
          in: query
          schema:
            type: string
        - name: MeterTypeGroup
          in: query
          schema:
            type: string
        - name: MeterSerialNumber
          in: query
          schema:
            type: string
        - name: FlexSearch
          in: query
          schema:
            type: string
        - name: IncludeOnlyIds
          in: query
          schema:
            type: array
            items:
              type: string
        - name: ExcludeIds
          in: query
          schema:
            type: array
            items:
              type: string
        - name: Name
          in: query
          schema:
            type: string
        - name: Id
          in: query
          description: Format - int32.
          schema:
            type: integer
            format: int32
        - name: orderBy
          in: query
          description: Allows to order the meters.
          schema:
            type: string
        - name: continuationToken
          in: header
          description: Token which allows you to fetch the next records. The continuation token is returned in the response and can be reused in the next request to fetch additional data.
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/MeterDTOPagedResponseModelDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/MeterDTOPagedResponseModelDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  results:
                    - id: string
                      entityType: { }
                      createdDateTime: string
                      discriminator: string
                      _etag: string
                      requireAttention: true
                      hasErrors: true
                      hasWarnings: true
                      isReadOnly: true
                      organisationId: string
                      serialNumber: string
                      meterTag: string
                      meterType: { }
                      modelId: string
                      statusHistory:
                        - startDateTime: string
                          endDateTime: string
                          meterStatus: { }
                          serviceLocationId: string
                          installedAtAddress:
                            streetName: string
                            streetNumber: string
                            streetNumberAddition: string
                            postalCode: string
                            buildingName: string
                            locality: string
                            city: string
                            country: { }
                            localizedDisplay: string
                            lineOne: string
                            lineTwo: string
                          propertyGroup:
                            id: string
                            name: string
                      channels:
                        - startDateTime: string
                          endDateTime: string
                          dataFrequency: { }
                          incrementationType: { }
                          meteringType: { }
                          utilityType: { }
                          direction: { }
                          unitOfMeasure: { }
                          timeOfUse: string
                          description: string
                          externalIdentifier: string
                          lastTimeReceivedData: string
                          measurementsUntil: string
                          relationExternalReference: string
                          issuesCount: 0
                          hasIssue: true
                          issues:
                            - meteringIssueId: string
                              error: { }
                              status: { }
                              noticedDateTime: string
                          builtIn: true
                          hidden: true
                      lastTimeReceivedData: string
                      measurementsUntil: string
                      parentMeterRelation:
                        meterId: string
                        serialNumber: string
                        externalReference: string
                      propertyGroup:
                        id: string
                        name: string
                      timeZone: string
                      meterProperties: { }
                      customProperties:
                        - customEntityPropertyTypeId: string
                          values:
                            - valueDecimal: 0
                              valueString: string
                              valueBoolean: true
                              valueNumber: 0
                              valueDateTime: string
                              valueDropdown:
                                - string
                              startDateTime: string
                              endDateTime: string
                      measurementIssuesCount: 0
                      meterIssuesCount: 0
                      issuesCount: 0
                      hasIssue: true
                      issues:
                        - meteringIssueId: string
                          error: { }
                          status: { }
                          noticedDateTime: string
                      readingFrequency: { }
                      nextExpectedReadingDate: string
                  hasNextPage: true
                  nextPageToken: string
                  totalRecords: 0
                  sortableFields:
                    - string
                  aggregateDetails:
                    - code: string
                      translation: string
                      value: 0
                      valueDate: string
            text/json:
              schema:
                $ref: '#/components/schemas/MeterDTOPagedResponseModelDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  results:
                    - id: string
                      entityType: { }
                      createdDateTime: string
                      discriminator: string
                      _etag: string
                      requireAttention: true
                      hasErrors: true
                      hasWarnings: true
                      isReadOnly: true
                      organisationId: string
                      serialNumber: string
                      meterTag: string
                      meterType: { }
                      modelId: string
                      statusHistory:
                        - startDateTime: string
                          endDateTime: string
                          meterStatus: { }
                          serviceLocationId: string
                          installedAtAddress:
                            streetName: string
                            streetNumber: string
                            streetNumberAddition: string
                            postalCode: string
                            buildingName: string
                            locality: string
                            city: string
                            country: { }
                            localizedDisplay: string
                            lineOne: string
                            lineTwo: string
                          propertyGroup:
                            id: string
                            name: string
                      channels:
                        - startDateTime: string
                          endDateTime: string
                          dataFrequency: { }
                          incrementationType: { }
                          meteringType: { }
                          utilityType: { }
                          direction: { }
                          unitOfMeasure: { }
                          timeOfUse: string
                          description: string
                          externalIdentifier: string
                          lastTimeReceivedData: string
                          measurementsUntil: string
                          relationExternalReference: string
                          issuesCount: 0
                          hasIssue: true
                          issues:
                            - meteringIssueId: string
                              error: { }
                              status: { }
                              noticedDateTime: string
                          builtIn: true
                          hidden: true
                      lastTimeReceivedData: string
                      measurementsUntil: string
                      parentMeterRelation:
                        meterId: string
                        serialNumber: string
                        externalReference: string
                      propertyGroup:
                        id: string
                        name: string
                      timeZone: string
                      meterProperties: { }
                      customProperties:
                        - customEntityPropertyTypeId: string
                          values:
                            - valueDecimal: 0
                              valueString: string
                              valueBoolean: true
                              valueNumber: 0
                              valueDateTime: string
                              valueDropdown:
                                - string
                              startDateTime: string
                              endDateTime: string
                      measurementIssuesCount: 0
                      meterIssuesCount: 0
                      issuesCount: 0
                      hasIssue: true
                      issues:
                        - meteringIssueId: string
                          error: { }
                          status: { }
                          noticedDateTime: string
                      readingFrequency: { }
                      nextExpectedReadingDate: string
                  hasNextPage: true
                  nextPageToken: string
                  totalRecords: 0
                  sortableFields:
                    - string
                  aggregateDetails:
                    - code: string
                      translation: string
                      value: 0
                      valueDate: string
  /Meters/overviewcount:
    get:
      tags:
        - Meters
      summary: Retrieve the overview count of meters based on the provided query parameters.
      description: Retrieve the overview count of meters based on the provided query parameters.
      operationId: get-meters-overviewcount
      parameters:
        - name: ServicelocationIds
          in: query
          schema:
            type: array
            items:
              type: string
        - name: PropertyGroupIds
          in: query
          schema:
            type: array
            items:
              type: string
        - name: MeterType.Name
          in: query
          schema:
            type: string
        - name: MeterType.Id
          in: query
          description: Format - int32.
          schema:
            type: integer
            format: int32
        - name: ReceivedMeteringDataStart
          in: query
          description: Format - date-time (as date-time in RFC3339).
          schema:
            type: string
            format: date-time
            nullable: true
        - name: ReceivedMeteringDataEnd
          in: query
          description: Format - date-time (as date-time in RFC3339).
          schema:
            type: string
            format: date-time
            nullable: true
        - name: NextExpectedReadingDateStart
          in: query
          description: Format - date-time (as date-time in RFC3339).
          schema:
            type: string
            format: date-time
            nullable: true
        - name: NextExpectedReadingDateEnd
          in: query
          description: Format - date-time (as date-time in RFC3339).
          schema:
            type: string
            format: date-time
            nullable: true
        - name: ParentSerialNumber
          in: query
          schema:
            type: string
        - name: FilterByReadingFrequency
          in: query
          schema:
            type: boolean
        - name: ReadingFrequency.Name
          in: query
          schema:
            type: string
        - name: ReadingFrequency.Id
          in: query
          description: Format - int32.
          schema:
            type: integer
            format: int32
        - name: CustomerId
          in: query
          schema:
            type: string
        - name: MeterTypeGroup
          in: query
          schema:
            type: string
        - name: MeterSerialNumber
          in: query
          schema:
            type: string
        - name: FlexSearch
          in: query
          schema:
            type: string
        - name: IncludeOnlyIds
          in: query
          schema:
            type: array
            items:
              type: string
        - name: ExcludeIds
          in: query
          schema:
            type: array
            items:
              type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/MeterOverviewCountDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/MeterOverviewCountDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  all: 0
                  installed: 0
                  inactive: 0
            text/json:
              schema:
                $ref: '#/components/schemas/MeterOverviewCountDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  all: 0
                  installed: 0
                  inactive: 0
  '/Meters/{meteruuid}':
    get:
      tags:
        - Meters
      summary: Retrieve a meter by its ID.
      description: Retrieve a meter by its ID.
      operationId: get-meters-meteruuid
      parameters:
        - name: meteruuid
          in: path
          description: The ID of the meter.
          required: true
          schema:
            type: string
        - name: showHiddenChannels
          in: query
          schema:
            type: boolean
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: string
                title: string
                status: 0
                detail: string
                instance: string
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: string
                title: string
                status: 0
                detail: string
                instance: string
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/MeterDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/MeterDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  serialNumber: string
                  meterTag: string
                  meterType: { }
                  modelId: string
                  statusHistory:
                    - startDateTime: string
                      endDateTime: string
                      meterStatus: { }
                      serviceLocationId: string
                      installedAtAddress:
                        streetName: string
                        streetNumber: string
                        streetNumberAddition: string
                        postalCode: string
                        buildingName: string
                        locality: string
                        city: string
                        country: { }
                        localizedDisplay: string
                        lineOne: string
                        lineTwo: string
                      propertyGroup:
                        id: string
                        name: string
                  channels:
                    - startDateTime: string
                      endDateTime: string
                      dataFrequency: { }
                      incrementationType: { }
                      meteringType: { }
                      utilityType: { }
                      direction: { }
                      unitOfMeasure: { }
                      timeOfUse: string
                      description: string
                      externalIdentifier: string
                      lastTimeReceivedData: string
                      measurementsUntil: string
                      relationExternalReference: string
                      issuesCount: 0
                      hasIssue: true
                      issues:
                        - meteringIssueId: string
                          error: { }
                          status: { }
                          noticedDateTime: string
                      builtIn: true
                      hidden: true
                  lastTimeReceivedData: string
                  measurementsUntil: string
                  parentMeterRelation:
                    meterId: string
                    serialNumber: string
                    externalReference: string
                  propertyGroup:
                    id: string
                    name: string
                  timeZone: string
                  meterProperties: { }
                  customProperties:
                    - customEntityPropertyTypeId: string
                      values:
                        - valueDecimal: 0
                          valueString: string
                          valueBoolean: true
                          valueNumber: 0
                          valueDateTime: string
                          valueDropdown:
                            - string
                          startDateTime: string
                          endDateTime: string
                  measurementIssuesCount: 0
                  meterIssuesCount: 0
                  issuesCount: 0
                  hasIssue: true
                  issues:
                    - meteringIssueId: string
                      error: { }
                      status: { }
                      noticedDateTime: string
                  readingFrequency: { }
                  nextExpectedReadingDate: string
            text/json:
              schema:
                $ref: '#/components/schemas/MeterDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  serialNumber: string
                  meterTag: string
                  meterType: { }
                  modelId: string
                  statusHistory:
                    - startDateTime: string
                      endDateTime: string
                      meterStatus: { }
                      serviceLocationId: string
                      installedAtAddress:
                        streetName: string
                        streetNumber: string
                        streetNumberAddition: string
                        postalCode: string
                        buildingName: string
                        locality: string
                        city: string
                        country: { }
                        localizedDisplay: string
                        lineOne: string
                        lineTwo: string
                      propertyGroup:
                        id: string
                        name: string
                  channels:
                    - startDateTime: string
                      endDateTime: string
                      dataFrequency: { }
                      incrementationType: { }
                      meteringType: { }
                      utilityType: { }
                      direction: { }
                      unitOfMeasure: { }
                      timeOfUse: string
                      description: string
                      externalIdentifier: string
                      lastTimeReceivedData: string
                      measurementsUntil: string
                      relationExternalReference: string
                      issuesCount: 0
                      hasIssue: true
                      issues:
                        - meteringIssueId: string
                          error: { }
                          status: { }
                          noticedDateTime: string
                      builtIn: true
                      hidden: true
                  lastTimeReceivedData: string
                  measurementsUntil: string
                  parentMeterRelation:
                    meterId: string
                    serialNumber: string
                    externalReference: string
                  propertyGroup:
                    id: string
                    name: string
                  timeZone: string
                  meterProperties: { }
                  customProperties:
                    - customEntityPropertyTypeId: string
                      values:
                        - valueDecimal: 0
                          valueString: string
                          valueBoolean: true
                          valueNumber: 0
                          valueDateTime: string
                          valueDropdown:
                            - string
                          startDateTime: string
                          endDateTime: string
                  measurementIssuesCount: 0
                  meterIssuesCount: 0
                  issuesCount: 0
                  hasIssue: true
                  issues:
                    - meteringIssueId: string
                      error: { }
                      status: { }
                      noticedDateTime: string
                  readingFrequency: { }
                  nextExpectedReadingDate: string
  '/Meters/{meteruuid}/channels':
    post:
      tags:
        - Meters
      summary: Update channels configured on a meter.
      description: Update channels configured on a meter.
      operationId: post-meters-meteruuid-channels
      parameters:
        - name: meteruuid
          in: path
          description: The ID of the meter.
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: The request containing all channels configured on a meter after the mutation date.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/UpdateMeterChannelsRequest'
            example:
              mutationDateTime: string
              channelTemplates:
                - dataFrequency: { }
                  meteringType: { }
                  utilityType: { }
                  direction: { }
                  incrementationType: { }
                  timeOfUse: string
                  unitOfMeasure: { }
                  externalIdentifier: string
                  description: string
                  relationExternalReference: string
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/UpdateMeterChannelsRequest'
            example:
              mutationDateTime: string
              channelTemplates:
                - dataFrequency: { }
                  meteringType: { }
                  utilityType: { }
                  direction: { }
                  incrementationType: { }
                  timeOfUse: string
                  unitOfMeasure: { }
                  externalIdentifier: string
                  description: string
                  relationExternalReference: string
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/UpdateMeterChannelsRequest'
            example:
              mutationDateTime: string
              channelTemplates:
                - dataFrequency: { }
                  meteringType: { }
                  utilityType: { }
                  direction: { }
                  incrementationType: { }
                  timeOfUse: string
                  unitOfMeasure: { }
                  externalIdentifier: string
                  description: string
                  relationExternalReference: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/MeterDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/MeterDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  serialNumber: string
                  meterTag: string
                  meterType: { }
                  modelId: string
                  statusHistory:
                    - startDateTime: string
                      endDateTime: string
                      meterStatus: { }
                      serviceLocationId: string
                      installedAtAddress:
                        streetName: string
                        streetNumber: string
                        streetNumberAddition: string
                        postalCode: string
                        buildingName: string
                        locality: string
                        city: string
                        country: { }
                        localizedDisplay: string
                        lineOne: string
                        lineTwo: string
                      propertyGroup:
                        id: string
                        name: string
                  channels:
                    - startDateTime: string
                      endDateTime: string
                      dataFrequency: { }
                      incrementationType: { }
                      meteringType: { }
                      utilityType: { }
                      direction: { }
                      unitOfMeasure: { }
                      timeOfUse: string
                      description: string
                      externalIdentifier: string
                      lastTimeReceivedData: string
                      measurementsUntil: string
                      relationExternalReference: string
                      issuesCount: 0
                      hasIssue: true
                      issues:
                        - meteringIssueId: string
                          error: { }
                          status: { }
                          noticedDateTime: string
                      builtIn: true
                      hidden: true
                  lastTimeReceivedData: string
                  measurementsUntil: string
                  parentMeterRelation:
                    meterId: string
                    serialNumber: string
                    externalReference: string
                  propertyGroup:
                    id: string
                    name: string
                  timeZone: string
                  meterProperties: { }
                  customProperties:
                    - customEntityPropertyTypeId: string
                      values:
                        - valueDecimal: 0
                          valueString: string
                          valueBoolean: true
                          valueNumber: 0
                          valueDateTime: string
                          valueDropdown:
                            - string
                          startDateTime: string
                          endDateTime: string
                  measurementIssuesCount: 0
                  meterIssuesCount: 0
                  issuesCount: 0
                  hasIssue: true
                  issues:
                    - meteringIssueId: string
                      error: { }
                      status: { }
                      noticedDateTime: string
                  readingFrequency: { }
                  nextExpectedReadingDate: string
            text/json:
              schema:
                $ref: '#/components/schemas/MeterDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  serialNumber: string
                  meterTag: string
                  meterType: { }
                  modelId: string
                  statusHistory:
                    - startDateTime: string
                      endDateTime: string
                      meterStatus: { }
                      serviceLocationId: string
                      installedAtAddress:
                        streetName: string
                        streetNumber: string
                        streetNumberAddition: string
                        postalCode: string
                        buildingName: string
                        locality: string
                        city: string
                        country: { }
                        localizedDisplay: string
                        lineOne: string
                        lineTwo: string
                      propertyGroup:
                        id: string
                        name: string
                  channels:
                    - startDateTime: string
                      endDateTime: string
                      dataFrequency: { }
                      incrementationType: { }
                      meteringType: { }
                      utilityType: { }
                      direction: { }
                      unitOfMeasure: { }
                      timeOfUse: string
                      description: string
                      externalIdentifier: string
                      lastTimeReceivedData: string
                      measurementsUntil: string
                      relationExternalReference: string
                      issuesCount: 0
                      hasIssue: true
                      issues:
                        - meteringIssueId: string
                          error: { }
                          status: { }
                          noticedDateTime: string
                      builtIn: true
                      hidden: true
                  lastTimeReceivedData: string
                  measurementsUntil: string
                  parentMeterRelation:
                    meterId: string
                    serialNumber: string
                    externalReference: string
                  propertyGroup:
                    id: string
                    name: string
                  timeZone: string
                  meterProperties: { }
                  customProperties:
                    - customEntityPropertyTypeId: string
                      values:
                        - valueDecimal: 0
                          valueString: string
                          valueBoolean: true
                          valueNumber: 0
                          valueDateTime: string
                          valueDropdown:
                            - string
                          startDateTime: string
                          endDateTime: string
                  measurementIssuesCount: 0
                  meterIssuesCount: 0
                  issuesCount: 0
                  hasIssue: true
                  issues:
                    - meteringIssueId: string
                      error: { }
                      status: { }
                      noticedDateTime: string
                  readingFrequency: { }
                  nextExpectedReadingDate: string
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
  '/Meters/{meteruuid}/details':
    post:
      tags:
        - Meters
      summary: Update details of a meter.
      description: Update details of a meter.
      operationId: post-meters-meteruuid-details
      parameters:
        - name: meteruuid
          in: path
          description: The ID of the meter.
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: The request containing meter details.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/UpdateMeterDetailsRequest'
            example:
              meterType: { }
              nextExpectedReadingDate: string
              meterReadingFrequency: { }
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/UpdateMeterDetailsRequest'
            example:
              meterType: { }
              nextExpectedReadingDate: string
              meterReadingFrequency: { }
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/UpdateMeterDetailsRequest'
            example:
              meterType: { }
              nextExpectedReadingDate: string
              meterReadingFrequency: { }
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/MeterDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/MeterDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  serialNumber: string
                  meterTag: string
                  meterType: { }
                  modelId: string
                  statusHistory:
                    - startDateTime: string
                      endDateTime: string
                      meterStatus: { }
                      serviceLocationId: string
                      installedAtAddress:
                        streetName: string
                        streetNumber: string
                        streetNumberAddition: string
                        postalCode: string
                        buildingName: string
                        locality: string
                        city: string
                        country: { }
                        localizedDisplay: string
                        lineOne: string
                        lineTwo: string
                      propertyGroup:
                        id: string
                        name: string
                  channels:
                    - startDateTime: string
                      endDateTime: string
                      dataFrequency: { }
                      incrementationType: { }
                      meteringType: { }
                      utilityType: { }
                      direction: { }
                      unitOfMeasure: { }
                      timeOfUse: string
                      description: string
                      externalIdentifier: string
                      lastTimeReceivedData: string
                      measurementsUntil: string
                      relationExternalReference: string
                      issuesCount: 0
                      hasIssue: true
                      issues:
                        - meteringIssueId: string
                          error: { }
                          status: { }
                          noticedDateTime: string
                      builtIn: true
                      hidden: true
                  lastTimeReceivedData: string
                  measurementsUntil: string
                  parentMeterRelation:
                    meterId: string
                    serialNumber: string
                    externalReference: string
                  propertyGroup:
                    id: string
                    name: string
                  timeZone: string
                  meterProperties: { }
                  customProperties:
                    - customEntityPropertyTypeId: string
                      values:
                        - valueDecimal: 0
                          valueString: string
                          valueBoolean: true
                          valueNumber: 0
                          valueDateTime: string
                          valueDropdown:
                            - string
                          startDateTime: string
                          endDateTime: string
                  measurementIssuesCount: 0
                  meterIssuesCount: 0
                  issuesCount: 0
                  hasIssue: true
                  issues:
                    - meteringIssueId: string
                      error: { }
                      status: { }
                      noticedDateTime: string
                  readingFrequency: { }
                  nextExpectedReadingDate: string
            text/json:
              schema:
                $ref: '#/components/schemas/MeterDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  serialNumber: string
                  meterTag: string
                  meterType: { }
                  modelId: string
                  statusHistory:
                    - startDateTime: string
                      endDateTime: string
                      meterStatus: { }
                      serviceLocationId: string
                      installedAtAddress:
                        streetName: string
                        streetNumber: string
                        streetNumberAddition: string
                        postalCode: string
                        buildingName: string
                        locality: string
                        city: string
                        country: { }
                        localizedDisplay: string
                        lineOne: string
                        lineTwo: string
                      propertyGroup:
                        id: string
                        name: string
                  channels:
                    - startDateTime: string
                      endDateTime: string
                      dataFrequency: { }
                      incrementationType: { }
                      meteringType: { }
                      utilityType: { }
                      direction: { }
                      unitOfMeasure: { }
                      timeOfUse: string
                      description: string
                      externalIdentifier: string
                      lastTimeReceivedData: string
                      measurementsUntil: string
                      relationExternalReference: string
                      issuesCount: 0
                      hasIssue: true
                      issues:
                        - meteringIssueId: string
                          error: { }
                          status: { }
                          noticedDateTime: string
                      builtIn: true
                      hidden: true
                  lastTimeReceivedData: string
                  measurementsUntil: string
                  parentMeterRelation:
                    meterId: string
                    serialNumber: string
                    externalReference: string
                  propertyGroup:
                    id: string
                    name: string
                  timeZone: string
                  meterProperties: { }
                  customProperties:
                    - customEntityPropertyTypeId: string
                      values:
                        - valueDecimal: 0
                          valueString: string
                          valueBoolean: true
                          valueNumber: 0
                          valueDateTime: string
                          valueDropdown:
                            - string
                          startDateTime: string
                          endDateTime: string
                  measurementIssuesCount: 0
                  meterIssuesCount: 0
                  issuesCount: 0
                  hasIssue: true
                  issues:
                    - meteringIssueId: string
                      error: { }
                      status: { }
                      noticedDateTime: string
                  readingFrequency: { }
                  nextExpectedReadingDate: string
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
  '/Meters/{meteruuid}/install':
    post:
      tags:
        - Meters
      summary: Install an uninstalled meter.
      description: Install an uninstalled meter.
      operationId: post-meters-meteruuid-install
      parameters:
        - name: meteruuid
          in: path
          description: The ID of the meter.
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: The request containing installation details.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/InstallMeterRequest'
            example:
              mutationDateTime: string
              serviceLocationId: string
              propertyGroupId: string
              addressInstalled:
                streetName: string
                streetNumber: string
                streetNumberAddition: string
                postalCode: string
                buildingName: string
                locality: string
                city: string
                country: { }
                localizedDisplay: string
                lineOne: string
                lineTwo: string
              channelTemplates:
                - dataFrequency: { }
                  meteringType: { }
                  utilityType: { }
                  direction: { }
                  incrementationType: { }
                  timeOfUse: string
                  unitOfMeasure: { }
                  externalIdentifier: string
                  description: string
                  relationExternalReference: string
              nextExpectedReadingDate: string
              readingFrequency: { }
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/InstallMeterRequest'
            example:
              mutationDateTime: string
              serviceLocationId: string
              propertyGroupId: string
              addressInstalled:
                streetName: string
                streetNumber: string
                streetNumberAddition: string
                postalCode: string
                buildingName: string
                locality: string
                city: string
                country: { }
                localizedDisplay: string
                lineOne: string
                lineTwo: string
              channelTemplates:
                - dataFrequency: { }
                  meteringType: { }
                  utilityType: { }
                  direction: { }
                  incrementationType: { }
                  timeOfUse: string
                  unitOfMeasure: { }
                  externalIdentifier: string
                  description: string
                  relationExternalReference: string
              nextExpectedReadingDate: string
              readingFrequency: { }
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/InstallMeterRequest'
            example:
              mutationDateTime: string
              serviceLocationId: string
              propertyGroupId: string
              addressInstalled:
                streetName: string
                streetNumber: string
                streetNumberAddition: string
                postalCode: string
                buildingName: string
                locality: string
                city: string
                country: { }
                localizedDisplay: string
                lineOne: string
                lineTwo: string
              channelTemplates:
                - dataFrequency: { }
                  meteringType: { }
                  utilityType: { }
                  direction: { }
                  incrementationType: { }
                  timeOfUse: string
                  unitOfMeasure: { }
                  externalIdentifier: string
                  description: string
                  relationExternalReference: string
              nextExpectedReadingDate: string
              readingFrequency: { }
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/MeterDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/MeterDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  serialNumber: string
                  meterTag: string
                  meterType: { }
                  modelId: string
                  statusHistory:
                    - startDateTime: string
                      endDateTime: string
                      meterStatus: { }
                      serviceLocationId: string
                      installedAtAddress:
                        streetName: string
                        streetNumber: string
                        streetNumberAddition: string
                        postalCode: string
                        buildingName: string
                        locality: string
                        city: string
                        country: { }
                        localizedDisplay: string
                        lineOne: string
                        lineTwo: string
                      propertyGroup:
                        id: string
                        name: string
                  channels:
                    - startDateTime: string
                      endDateTime: string
                      dataFrequency: { }
                      incrementationType: { }
                      meteringType: { }
                      utilityType: { }
                      direction: { }
                      unitOfMeasure: { }
                      timeOfUse: string
                      description: string
                      externalIdentifier: string
                      lastTimeReceivedData: string
                      measurementsUntil: string
                      relationExternalReference: string
                      issuesCount: 0
                      hasIssue: true
                      issues:
                        - meteringIssueId: string
                          error: { }
                          status: { }
                          noticedDateTime: string
                      builtIn: true
                      hidden: true
                  lastTimeReceivedData: string
                  measurementsUntil: string
                  parentMeterRelation:
                    meterId: string
                    serialNumber: string
                    externalReference: string
                  propertyGroup:
                    id: string
                    name: string
                  timeZone: string
                  meterProperties: { }
                  customProperties:
                    - customEntityPropertyTypeId: string
                      values:
                        - valueDecimal: 0
                          valueString: string
                          valueBoolean: true
                          valueNumber: 0
                          valueDateTime: string
                          valueDropdown:
                            - string
                          startDateTime: string
                          endDateTime: string
                  measurementIssuesCount: 0
                  meterIssuesCount: 0
                  issuesCount: 0
                  hasIssue: true
                  issues:
                    - meteringIssueId: string
                      error: { }
                      status: { }
                      noticedDateTime: string
                  readingFrequency: { }
                  nextExpectedReadingDate: string
            text/json:
              schema:
                $ref: '#/components/schemas/MeterDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  serialNumber: string
                  meterTag: string
                  meterType: { }
                  modelId: string
                  statusHistory:
                    - startDateTime: string
                      endDateTime: string
                      meterStatus: { }
                      serviceLocationId: string
                      installedAtAddress:
                        streetName: string
                        streetNumber: string
                        streetNumberAddition: string
                        postalCode: string
                        buildingName: string
                        locality: string
                        city: string
                        country: { }
                        localizedDisplay: string
                        lineOne: string
                        lineTwo: string
                      propertyGroup:
                        id: string
                        name: string
                  channels:
                    - startDateTime: string
                      endDateTime: string
                      dataFrequency: { }
                      incrementationType: { }
                      meteringType: { }
                      utilityType: { }
                      direction: { }
                      unitOfMeasure: { }
                      timeOfUse: string
                      description: string
                      externalIdentifier: string
                      lastTimeReceivedData: string
                      measurementsUntil: string
                      relationExternalReference: string
                      issuesCount: 0
                      hasIssue: true
                      issues:
                        - meteringIssueId: string
                          error: { }
                          status: { }
                          noticedDateTime: string
                      builtIn: true
                      hidden: true
                  lastTimeReceivedData: string
                  measurementsUntil: string
                  parentMeterRelation:
                    meterId: string
                    serialNumber: string
                    externalReference: string
                  propertyGroup:
                    id: string
                    name: string
                  timeZone: string
                  meterProperties: { }
                  customProperties:
                    - customEntityPropertyTypeId: string
                      values:
                        - valueDecimal: 0
                          valueString: string
                          valueBoolean: true
                          valueNumber: 0
                          valueDateTime: string
                          valueDropdown:
                            - string
                          startDateTime: string
                          endDateTime: string
                  measurementIssuesCount: 0
                  meterIssuesCount: 0
                  issuesCount: 0
                  hasIssue: true
                  issues:
                    - meteringIssueId: string
                      error: { }
                      status: { }
                      noticedDateTime: string
                  readingFrequency: { }
                  nextExpectedReadingDate: string
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
  '/Meters/{meteruuid}/uninstall':
    post:
      tags:
        - Meters
      summary: Uninstall an installed meter.
      description: Uninstall an installed meter.
      operationId: post-meters-meteruuid-uninstall
      parameters:
        - name: meteruuid
          in: path
          description: The ID of the meter.
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: The request containing uninstallation details.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/UninstallMeterRequest'
            example:
              removeDate: string
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/UninstallMeterRequest'
            example:
              removeDate: string
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/UninstallMeterRequest'
            example:
              removeDate: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/MeterDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/MeterDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  serialNumber: string
                  meterTag: string
                  meterType: { }
                  modelId: string
                  statusHistory:
                    - startDateTime: string
                      endDateTime: string
                      meterStatus: { }
                      serviceLocationId: string
                      installedAtAddress:
                        streetName: string
                        streetNumber: string
                        streetNumberAddition: string
                        postalCode: string
                        buildingName: string
                        locality: string
                        city: string
                        country: { }
                        localizedDisplay: string
                        lineOne: string
                        lineTwo: string
                      propertyGroup:
                        id: string
                        name: string
                  channels:
                    - startDateTime: string
                      endDateTime: string
                      dataFrequency: { }
                      incrementationType: { }
                      meteringType: { }
                      utilityType: { }
                      direction: { }
                      unitOfMeasure: { }
                      timeOfUse: string
                      description: string
                      externalIdentifier: string
                      lastTimeReceivedData: string
                      measurementsUntil: string
                      relationExternalReference: string
                      issuesCount: 0
                      hasIssue: true
                      issues:
                        - meteringIssueId: string
                          error: { }
                          status: { }
                          noticedDateTime: string
                      builtIn: true
                      hidden: true
                  lastTimeReceivedData: string
                  measurementsUntil: string
                  parentMeterRelation:
                    meterId: string
                    serialNumber: string
                    externalReference: string
                  propertyGroup:
                    id: string
                    name: string
                  timeZone: string
                  meterProperties: { }
                  customProperties:
                    - customEntityPropertyTypeId: string
                      values:
                        - valueDecimal: 0
                          valueString: string
                          valueBoolean: true
                          valueNumber: 0
                          valueDateTime: string
                          valueDropdown:
                            - string
                          startDateTime: string
                          endDateTime: string
                  measurementIssuesCount: 0
                  meterIssuesCount: 0
                  issuesCount: 0
                  hasIssue: true
                  issues:
                    - meteringIssueId: string
                      error: { }
                      status: { }
                      noticedDateTime: string
                  readingFrequency: { }
                  nextExpectedReadingDate: string
            text/json:
              schema:
                $ref: '#/components/schemas/MeterDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  serialNumber: string
                  meterTag: string
                  meterType: { }
                  modelId: string
                  statusHistory:
                    - startDateTime: string
                      endDateTime: string
                      meterStatus: { }
                      serviceLocationId: string
                      installedAtAddress:
                        streetName: string
                        streetNumber: string
                        streetNumberAddition: string
                        postalCode: string
                        buildingName: string
                        locality: string
                        city: string
                        country: { }
                        localizedDisplay: string
                        lineOne: string
                        lineTwo: string
                      propertyGroup:
                        id: string
                        name: string
                  channels:
                    - startDateTime: string
                      endDateTime: string
                      dataFrequency: { }
                      incrementationType: { }
                      meteringType: { }
                      utilityType: { }
                      direction: { }
                      unitOfMeasure: { }
                      timeOfUse: string
                      description: string
                      externalIdentifier: string
                      lastTimeReceivedData: string
                      measurementsUntil: string
                      relationExternalReference: string
                      issuesCount: 0
                      hasIssue: true
                      issues:
                        - meteringIssueId: string
                          error: { }
                          status: { }
                          noticedDateTime: string
                      builtIn: true
                      hidden: true
                  lastTimeReceivedData: string
                  measurementsUntil: string
                  parentMeterRelation:
                    meterId: string
                    serialNumber: string
                    externalReference: string
                  propertyGroup:
                    id: string
                    name: string
                  timeZone: string
                  meterProperties: { }
                  customProperties:
                    - customEntityPropertyTypeId: string
                      values:
                        - valueDecimal: 0
                          valueString: string
                          valueBoolean: true
                          valueNumber: 0
                          valueDateTime: string
                          valueDropdown:
                            - string
                          startDateTime: string
                          endDateTime: string
                  measurementIssuesCount: 0
                  meterIssuesCount: 0
                  issuesCount: 0
                  hasIssue: true
                  issues:
                    - meteringIssueId: string
                      error: { }
                      status: { }
                      noticedDateTime: string
                  readingFrequency: { }
                  nextExpectedReadingDate: string
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
  '/Meters/{meteruuid}/metertag':
    post:
      tags:
        - Meters
      summary: Update meter tag.
      description: Update meter tag.
      operationId: post-meters-meteruuid-metertag
      parameters:
        - name: meteruuid
          in: path
          description: The ID of the meter.
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: The request containing new meter tag.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/UpdateMeterTagRequest'
            example:
              meterTag: string
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/UpdateMeterTagRequest'
            example:
              meterTag: string
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/UpdateMeterTagRequest'
            example:
              meterTag: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/MeterDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/MeterDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  serialNumber: string
                  meterTag: string
                  meterType: { }
                  modelId: string
                  statusHistory:
                    - startDateTime: string
                      endDateTime: string
                      meterStatus: { }
                      serviceLocationId: string
                      installedAtAddress:
                        streetName: string
                        streetNumber: string
                        streetNumberAddition: string
                        postalCode: string
                        buildingName: string
                        locality: string
                        city: string
                        country: { }
                        localizedDisplay: string
                        lineOne: string
                        lineTwo: string
                      propertyGroup:
                        id: string
                        name: string
                  channels:
                    - startDateTime: string
                      endDateTime: string
                      dataFrequency: { }
                      incrementationType: { }
                      meteringType: { }
                      utilityType: { }
                      direction: { }
                      unitOfMeasure: { }
                      timeOfUse: string
                      description: string
                      externalIdentifier: string
                      lastTimeReceivedData: string
                      measurementsUntil: string
                      relationExternalReference: string
                      issuesCount: 0
                      hasIssue: true
                      issues:
                        - meteringIssueId: string
                          error: { }
                          status: { }
                          noticedDateTime: string
                      builtIn: true
                      hidden: true
                  lastTimeReceivedData: string
                  measurementsUntil: string
                  parentMeterRelation:
                    meterId: string
                    serialNumber: string
                    externalReference: string
                  propertyGroup:
                    id: string
                    name: string
                  timeZone: string
                  meterProperties: { }
                  customProperties:
                    - customEntityPropertyTypeId: string
                      values:
                        - valueDecimal: 0
                          valueString: string
                          valueBoolean: true
                          valueNumber: 0
                          valueDateTime: string
                          valueDropdown:
                            - string
                          startDateTime: string
                          endDateTime: string
                  measurementIssuesCount: 0
                  meterIssuesCount: 0
                  issuesCount: 0
                  hasIssue: true
                  issues:
                    - meteringIssueId: string
                      error: { }
                      status: { }
                      noticedDateTime: string
                  readingFrequency: { }
                  nextExpectedReadingDate: string
            text/json:
              schema:
                $ref: '#/components/schemas/MeterDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  serialNumber: string
                  meterTag: string
                  meterType: { }
                  modelId: string
                  statusHistory:
                    - startDateTime: string
                      endDateTime: string
                      meterStatus: { }
                      serviceLocationId: string
                      installedAtAddress:
                        streetName: string
                        streetNumber: string
                        streetNumberAddition: string
                        postalCode: string
                        buildingName: string
                        locality: string
                        city: string
                        country: { }
                        localizedDisplay: string
                        lineOne: string
                        lineTwo: string
                      propertyGroup:
                        id: string
                        name: string
                  channels:
                    - startDateTime: string
                      endDateTime: string
                      dataFrequency: { }
                      incrementationType: { }
                      meteringType: { }
                      utilityType: { }
                      direction: { }
                      unitOfMeasure: { }
                      timeOfUse: string
                      description: string
                      externalIdentifier: string
                      lastTimeReceivedData: string
                      measurementsUntil: string
                      relationExternalReference: string
                      issuesCount: 0
                      hasIssue: true
                      issues:
                        - meteringIssueId: string
                          error: { }
                          status: { }
                          noticedDateTime: string
                      builtIn: true
                      hidden: true
                  lastTimeReceivedData: string
                  measurementsUntil: string
                  parentMeterRelation:
                    meterId: string
                    serialNumber: string
                    externalReference: string
                  propertyGroup:
                    id: string
                    name: string
                  timeZone: string
                  meterProperties: { }
                  customProperties:
                    - customEntityPropertyTypeId: string
                      values:
                        - valueDecimal: 0
                          valueString: string
                          valueBoolean: true
                          valueNumber: 0
                          valueDateTime: string
                          valueDropdown:
                            - string
                          startDateTime: string
                          endDateTime: string
                  measurementIssuesCount: 0
                  meterIssuesCount: 0
                  issuesCount: 0
                  hasIssue: true
                  issues:
                    - meteringIssueId: string
                      error: { }
                      status: { }
                      noticedDateTime: string
                  readingFrequency: { }
                  nextExpectedReadingDate: string
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
  '/Meters/{meteruuid}/updateparentrelation':
    post:
      tags:
        - Meters
      summary: Set this meter as a sub-meter of another meter.
      description: Set this meter as a sub-meter of another meter.
      operationId: post-meters-meteruuid-updateparentrelation
      parameters:
        - name: meteruuid
          in: path
          description: 'The ID of the meter, which is supposed to be a sub-meter.'
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: 'The request containing parent relation details, including the ID of the meter, which is supposed to be a parent meter.'
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/UpdateParentRelationRequest'
            example:
              meterId: string
              externalReference: string
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/UpdateParentRelationRequest'
            example:
              meterId: string
              externalReference: string
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/UpdateParentRelationRequest'
            example:
              meterId: string
              externalReference: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/MeterDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/MeterDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  serialNumber: string
                  meterTag: string
                  meterType: { }
                  modelId: string
                  statusHistory:
                    - startDateTime: string
                      endDateTime: string
                      meterStatus: { }
                      serviceLocationId: string
                      installedAtAddress:
                        streetName: string
                        streetNumber: string
                        streetNumberAddition: string
                        postalCode: string
                        buildingName: string
                        locality: string
                        city: string
                        country: { }
                        localizedDisplay: string
                        lineOne: string
                        lineTwo: string
                      propertyGroup:
                        id: string
                        name: string
                  channels:
                    - startDateTime: string
                      endDateTime: string
                      dataFrequency: { }
                      incrementationType: { }
                      meteringType: { }
                      utilityType: { }
                      direction: { }
                      unitOfMeasure: { }
                      timeOfUse: string
                      description: string
                      externalIdentifier: string
                      lastTimeReceivedData: string
                      measurementsUntil: string
                      relationExternalReference: string
                      issuesCount: 0
                      hasIssue: true
                      issues:
                        - meteringIssueId: string
                          error: { }
                          status: { }
                          noticedDateTime: string
                      builtIn: true
                      hidden: true
                  lastTimeReceivedData: string
                  measurementsUntil: string
                  parentMeterRelation:
                    meterId: string
                    serialNumber: string
                    externalReference: string
                  propertyGroup:
                    id: string
                    name: string
                  timeZone: string
                  meterProperties: { }
                  customProperties:
                    - customEntityPropertyTypeId: string
                      values:
                        - valueDecimal: 0
                          valueString: string
                          valueBoolean: true
                          valueNumber: 0
                          valueDateTime: string
                          valueDropdown:
                            - string
                          startDateTime: string
                          endDateTime: string
                  measurementIssuesCount: 0
                  meterIssuesCount: 0
                  issuesCount: 0
                  hasIssue: true
                  issues:
                    - meteringIssueId: string
                      error: { }
                      status: { }
                      noticedDateTime: string
                  readingFrequency: { }
                  nextExpectedReadingDate: string
            text/json:
              schema:
                $ref: '#/components/schemas/MeterDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  serialNumber: string
                  meterTag: string
                  meterType: { }
                  modelId: string
                  statusHistory:
                    - startDateTime: string
                      endDateTime: string
                      meterStatus: { }
                      serviceLocationId: string
                      installedAtAddress:
                        streetName: string
                        streetNumber: string
                        streetNumberAddition: string
                        postalCode: string
                        buildingName: string
                        locality: string
                        city: string
                        country: { }
                        localizedDisplay: string
                        lineOne: string
                        lineTwo: string
                      propertyGroup:
                        id: string
                        name: string
                  channels:
                    - startDateTime: string
                      endDateTime: string
                      dataFrequency: { }
                      incrementationType: { }
                      meteringType: { }
                      utilityType: { }
                      direction: { }
                      unitOfMeasure: { }
                      timeOfUse: string
                      description: string
                      externalIdentifier: string
                      lastTimeReceivedData: string
                      measurementsUntil: string
                      relationExternalReference: string
                      issuesCount: 0
                      hasIssue: true
                      issues:
                        - meteringIssueId: string
                          error: { }
                          status: { }
                          noticedDateTime: string
                      builtIn: true
                      hidden: true
                  lastTimeReceivedData: string
                  measurementsUntil: string
                  parentMeterRelation:
                    meterId: string
                    serialNumber: string
                    externalReference: string
                  propertyGroup:
                    id: string
                    name: string
                  timeZone: string
                  meterProperties: { }
                  customProperties:
                    - customEntityPropertyTypeId: string
                      values:
                        - valueDecimal: 0
                          valueString: string
                          valueBoolean: true
                          valueNumber: 0
                          valueDateTime: string
                          valueDropdown:
                            - string
                          startDateTime: string
                          endDateTime: string
                  measurementIssuesCount: 0
                  meterIssuesCount: 0
                  issuesCount: 0
                  hasIssue: true
                  issues:
                    - meteringIssueId: string
                      error: { }
                      status: { }
                      noticedDateTime: string
                  readingFrequency: { }
                  nextExpectedReadingDate: string
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
  '/Meters/{meteruuid}/submeter/add':
    post:
      tags:
        - Meters
      summary: Set this meter as a parent meter of another meter.
      description: Set this meter as a parent meter of another meter.
      operationId: post-meters-meteruuid-submeter-add
      parameters:
        - name: meteruuid
          in: path
          description: 'The ID of the meter, which is supposed to be a parent meter.'
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: 'The request containing parent relation details, including the ID of the meter, which is supposed to be a sub-meter.'
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/AddSubMeterRequest'
            example:
              subMeterId: string
              externalReference: string
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/AddSubMeterRequest'
            example:
              subMeterId: string
              externalReference: string
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/AddSubMeterRequest'
            example:
              subMeterId: string
              externalReference: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/MeterDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/MeterDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  serialNumber: string
                  meterTag: string
                  meterType: { }
                  modelId: string
                  statusHistory:
                    - startDateTime: string
                      endDateTime: string
                      meterStatus: { }
                      serviceLocationId: string
                      installedAtAddress:
                        streetName: string
                        streetNumber: string
                        streetNumberAddition: string
                        postalCode: string
                        buildingName: string
                        locality: string
                        city: string
                        country: { }
                        localizedDisplay: string
                        lineOne: string
                        lineTwo: string
                      propertyGroup:
                        id: string
                        name: string
                  channels:
                    - startDateTime: string
                      endDateTime: string
                      dataFrequency: { }
                      incrementationType: { }
                      meteringType: { }
                      utilityType: { }
                      direction: { }
                      unitOfMeasure: { }
                      timeOfUse: string
                      description: string
                      externalIdentifier: string
                      lastTimeReceivedData: string
                      measurementsUntil: string
                      relationExternalReference: string
                      issuesCount: 0
                      hasIssue: true
                      issues:
                        - meteringIssueId: string
                          error: { }
                          status: { }
                          noticedDateTime: string
                      builtIn: true
                      hidden: true
                  lastTimeReceivedData: string
                  measurementsUntil: string
                  parentMeterRelation:
                    meterId: string
                    serialNumber: string
                    externalReference: string
                  propertyGroup:
                    id: string
                    name: string
                  timeZone: string
                  meterProperties: { }
                  customProperties:
                    - customEntityPropertyTypeId: string
                      values:
                        - valueDecimal: 0
                          valueString: string
                          valueBoolean: true
                          valueNumber: 0
                          valueDateTime: string
                          valueDropdown:
                            - string
                          startDateTime: string
                          endDateTime: string
                  measurementIssuesCount: 0
                  meterIssuesCount: 0
                  issuesCount: 0
                  hasIssue: true
                  issues:
                    - meteringIssueId: string
                      error: { }
                      status: { }
                      noticedDateTime: string
                  readingFrequency: { }
                  nextExpectedReadingDate: string
            text/json:
              schema:
                $ref: '#/components/schemas/MeterDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  serialNumber: string
                  meterTag: string
                  meterType: { }
                  modelId: string
                  statusHistory:
                    - startDateTime: string
                      endDateTime: string
                      meterStatus: { }
                      serviceLocationId: string
                      installedAtAddress:
                        streetName: string
                        streetNumber: string
                        streetNumberAddition: string
                        postalCode: string
                        buildingName: string
                        locality: string
                        city: string
                        country: { }
                        localizedDisplay: string
                        lineOne: string
                        lineTwo: string
                      propertyGroup:
                        id: string
                        name: string
                  channels:
                    - startDateTime: string
                      endDateTime: string
                      dataFrequency: { }
                      incrementationType: { }
                      meteringType: { }
                      utilityType: { }
                      direction: { }
                      unitOfMeasure: { }
                      timeOfUse: string
                      description: string
                      externalIdentifier: string
                      lastTimeReceivedData: string
                      measurementsUntil: string
                      relationExternalReference: string
                      issuesCount: 0
                      hasIssue: true
                      issues:
                        - meteringIssueId: string
                          error: { }
                          status: { }
                          noticedDateTime: string
                      builtIn: true
                      hidden: true
                  lastTimeReceivedData: string
                  measurementsUntil: string
                  parentMeterRelation:
                    meterId: string
                    serialNumber: string
                    externalReference: string
                  propertyGroup:
                    id: string
                    name: string
                  timeZone: string
                  meterProperties: { }
                  customProperties:
                    - customEntityPropertyTypeId: string
                      values:
                        - valueDecimal: 0
                          valueString: string
                          valueBoolean: true
                          valueNumber: 0
                          valueDateTime: string
                          valueDropdown:
                            - string
                          startDateTime: string
                          endDateTime: string
                  measurementIssuesCount: 0
                  meterIssuesCount: 0
                  issuesCount: 0
                  hasIssue: true
                  issues:
                    - meteringIssueId: string
                      error: { }
                      status: { }
                      noticedDateTime: string
                  readingFrequency: { }
                  nextExpectedReadingDate: string
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
  /Meters/bulk/uninstall:
    post:
      tags:
        - Meters
      summary: Uninstall multiple installed meters in bulk.
      description: Uninstall multiple installed meters in bulk.
      operationId: post-meters-bulk-uninstall
      parameters:
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: The request containing bulk unintallation details and query parameters to filter the meters to be uninstalled.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BulkUninstallMeterRequest'
            example:
              removeDate: string
              onlyValidate: true
              queryParams:
                flexSearch: string
                includeOnlyIds:
                  - string
                excludeIds:
                  - string
                servicelocationIds:
                  - string
                propertyGroupIds:
                  - string
                meterType: { }
                receivedMeteringDataStart: string
                receivedMeteringDataEnd: string
                nextExpectedReadingDateStart: string
                nextExpectedReadingDateEnd: string
                parentSerialNumber: string
                filterByReadingFrequency: true
                readingFrequency: { }
                customerId: string
                meterTypeGroup: string
                meterSerialNumber: string
              quickFilter: string
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BulkUninstallMeterRequest'
            example:
              removeDate: string
              onlyValidate: true
              queryParams:
                flexSearch: string
                includeOnlyIds:
                  - string
                excludeIds:
                  - string
                servicelocationIds:
                  - string
                propertyGroupIds:
                  - string
                meterType: { }
                receivedMeteringDataStart: string
                receivedMeteringDataEnd: string
                nextExpectedReadingDateStart: string
                nextExpectedReadingDateEnd: string
                parentSerialNumber: string
                filterByReadingFrequency: true
                readingFrequency: { }
                customerId: string
                meterTypeGroup: string
                meterSerialNumber: string
              quickFilter: string
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BulkUninstallMeterRequest'
            example:
              removeDate: string
              onlyValidate: true
              queryParams:
                flexSearch: string
                includeOnlyIds:
                  - string
                excludeIds:
                  - string
                servicelocationIds:
                  - string
                propertyGroupIds:
                  - string
                meterType: { }
                receivedMeteringDataStart: string
                receivedMeteringDataEnd: string
                nextExpectedReadingDateStart: string
                nextExpectedReadingDateEnd: string
                parentSerialNumber: string
                filterByReadingFrequency: true
                readingFrequency: { }
                customerId: string
                meterTypeGroup: string
                meterSerialNumber: string
              quickFilter: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/BooleanApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/BooleanApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data: true
            text/json:
              schema:
                $ref: '#/components/schemas/BooleanApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data: true
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
  '/Meters/{meteruuid}/validate':
    post:
      tags:
        - Meters
      summary: Trigger meter validation.
      description: Trigger meter validation.
      operationId: post-meters-meteruuid-validate
      parameters:
        - name: meteruuid
          in: path
          description: The ID of the meter.
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/MeterDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/MeterDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  serialNumber: string
                  meterTag: string
                  meterType: { }
                  modelId: string
                  statusHistory:
                    - startDateTime: string
                      endDateTime: string
                      meterStatus: { }
                      serviceLocationId: string
                      installedAtAddress:
                        streetName: string
                        streetNumber: string
                        streetNumberAddition: string
                        postalCode: string
                        buildingName: string
                        locality: string
                        city: string
                        country: { }
                        localizedDisplay: string
                        lineOne: string
                        lineTwo: string
                      propertyGroup:
                        id: string
                        name: string
                  channels:
                    - startDateTime: string
                      endDateTime: string
                      dataFrequency: { }
                      incrementationType: { }
                      meteringType: { }
                      utilityType: { }
                      direction: { }
                      unitOfMeasure: { }
                      timeOfUse: string
                      description: string
                      externalIdentifier: string
                      lastTimeReceivedData: string
                      measurementsUntil: string
                      relationExternalReference: string
                      issuesCount: 0
                      hasIssue: true
                      issues:
                        - meteringIssueId: string
                          error: { }
                          status: { }
                          noticedDateTime: string
                      builtIn: true
                      hidden: true
                  lastTimeReceivedData: string
                  measurementsUntil: string
                  parentMeterRelation:
                    meterId: string
                    serialNumber: string
                    externalReference: string
                  propertyGroup:
                    id: string
                    name: string
                  timeZone: string
                  meterProperties: { }
                  customProperties:
                    - customEntityPropertyTypeId: string
                      values:
                        - valueDecimal: 0
                          valueString: string
                          valueBoolean: true
                          valueNumber: 0
                          valueDateTime: string
                          valueDropdown:
                            - string
                          startDateTime: string
                          endDateTime: string
                  measurementIssuesCount: 0
                  meterIssuesCount: 0
                  issuesCount: 0
                  hasIssue: true
                  issues:
                    - meteringIssueId: string
                      error: { }
                      status: { }
                      noticedDateTime: string
                  readingFrequency: { }
                  nextExpectedReadingDate: string
            text/json:
              schema:
                $ref: '#/components/schemas/MeterDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  serialNumber: string
                  meterTag: string
                  meterType: { }
                  modelId: string
                  statusHistory:
                    - startDateTime: string
                      endDateTime: string
                      meterStatus: { }
                      serviceLocationId: string
                      installedAtAddress:
                        streetName: string
                        streetNumber: string
                        streetNumberAddition: string
                        postalCode: string
                        buildingName: string
                        locality: string
                        city: string
                        country: { }
                        localizedDisplay: string
                        lineOne: string
                        lineTwo: string
                      propertyGroup:
                        id: string
                        name: string
                  channels:
                    - startDateTime: string
                      endDateTime: string
                      dataFrequency: { }
                      incrementationType: { }
                      meteringType: { }
                      utilityType: { }
                      direction: { }
                      unitOfMeasure: { }
                      timeOfUse: string
                      description: string
                      externalIdentifier: string
                      lastTimeReceivedData: string
                      measurementsUntil: string
                      relationExternalReference: string
                      issuesCount: 0
                      hasIssue: true
                      issues:
                        - meteringIssueId: string
                          error: { }
                          status: { }
                          noticedDateTime: string
                      builtIn: true
                      hidden: true
                  lastTimeReceivedData: string
                  measurementsUntil: string
                  parentMeterRelation:
                    meterId: string
                    serialNumber: string
                    externalReference: string
                  propertyGroup:
                    id: string
                    name: string
                  timeZone: string
                  meterProperties: { }
                  customProperties:
                    - customEntityPropertyTypeId: string
                      values:
                        - valueDecimal: 0
                          valueString: string
                          valueBoolean: true
                          valueNumber: 0
                          valueDateTime: string
                          valueDropdown:
                            - string
                          startDateTime: string
                          endDateTime: string
                  measurementIssuesCount: 0
                  meterIssuesCount: 0
                  issuesCount: 0
                  hasIssue: true
                  issues:
                    - meteringIssueId: string
                      error: { }
                      status: { }
                      noticedDateTime: string
                  readingFrequency: { }
                  nextExpectedReadingDate: string
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
  '/Meters/{entityId}/customproperties':
    post:
      tags:
        - Meters
      summary: '/Meters/{entityId}/customproperties - POST'
      operationId: post-meters-entityid-customproperties
      parameters:
        - name: entityId
          in: path
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/UpdateCustomEntityPropertiesRequest'
            example:
              properties:
                - customEntityPropertyTypeId: string
                  values:
                    - startDateTime: string
                      endDateTime: string
                      valueDecimal: 0
                      valueString: string
                      valueBoolean: true
                      valueNumber: 0
                      valueDateTime: string
                      valueDropdown:
                        - string
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/UpdateCustomEntityPropertiesRequest'
            example:
              properties:
                - customEntityPropertyTypeId: string
                  values:
                    - startDateTime: string
                      endDateTime: string
                      valueDecimal: 0
                      valueString: string
                      valueBoolean: true
                      valueNumber: 0
                      valueDateTime: string
                      valueDropdown:
                        - string
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/UpdateCustomEntityPropertiesRequest'
            example:
              properties:
                - customEntityPropertyTypeId: string
                  values:
                    - startDateTime: string
                      endDateTime: string
                      valueDecimal: 0
                      valueString: string
                      valueBoolean: true
                      valueNumber: 0
                      valueDateTime: string
                      valueDropdown:
                        - string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/MeterDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/MeterDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  serialNumber: string
                  meterTag: string
                  meterType: { }
                  modelId: string
                  statusHistory:
                    - startDateTime: string
                      endDateTime: string
                      meterStatus: { }
                      serviceLocationId: string
                      installedAtAddress:
                        streetName: string
                        streetNumber: string
                        streetNumberAddition: string
                        postalCode: string
                        buildingName: string
                        locality: string
                        city: string
                        country: { }
                        localizedDisplay: string
                        lineOne: string
                        lineTwo: string
                      propertyGroup:
                        id: string
                        name: string
                  channels:
                    - startDateTime: string
                      endDateTime: string
                      dataFrequency: { }
                      incrementationType: { }
                      meteringType: { }
                      utilityType: { }
                      direction: { }
                      unitOfMeasure: { }
                      timeOfUse: string
                      description: string
                      externalIdentifier: string
                      lastTimeReceivedData: string
                      measurementsUntil: string
                      relationExternalReference: string
                      issuesCount: 0
                      hasIssue: true
                      issues:
                        - meteringIssueId: string
                          error: { }
                          status: { }
                          noticedDateTime: string
                      builtIn: true
                      hidden: true
                  lastTimeReceivedData: string
                  measurementsUntil: string
                  parentMeterRelation:
                    meterId: string
                    serialNumber: string
                    externalReference: string
                  propertyGroup:
                    id: string
                    name: string
                  timeZone: string
                  meterProperties: { }
                  customProperties:
                    - customEntityPropertyTypeId: string
                      values:
                        - valueDecimal: 0
                          valueString: string
                          valueBoolean: true
                          valueNumber: 0
                          valueDateTime: string
                          valueDropdown:
                            - string
                          startDateTime: string
                          endDateTime: string
                  measurementIssuesCount: 0
                  meterIssuesCount: 0
                  issuesCount: 0
                  hasIssue: true
                  issues:
                    - meteringIssueId: string
                      error: { }
                      status: { }
                      noticedDateTime: string
                  readingFrequency: { }
                  nextExpectedReadingDate: string
            text/json:
              schema:
                $ref: '#/components/schemas/MeterDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  serialNumber: string
                  meterTag: string
                  meterType: { }
                  modelId: string
                  statusHistory:
                    - startDateTime: string
                      endDateTime: string
                      meterStatus: { }
                      serviceLocationId: string
                      installedAtAddress:
                        streetName: string
                        streetNumber: string
                        streetNumberAddition: string
                        postalCode: string
                        buildingName: string
                        locality: string
                        city: string
                        country: { }
                        localizedDisplay: string
                        lineOne: string
                        lineTwo: string
                      propertyGroup:
                        id: string
                        name: string
                  channels:
                    - startDateTime: string
                      endDateTime: string
                      dataFrequency: { }
                      incrementationType: { }
                      meteringType: { }
                      utilityType: { }
                      direction: { }
                      unitOfMeasure: { }
                      timeOfUse: string
                      description: string
                      externalIdentifier: string
                      lastTimeReceivedData: string
                      measurementsUntil: string
                      relationExternalReference: string
                      issuesCount: 0
                      hasIssue: true
                      issues:
                        - meteringIssueId: string
                          error: { }
                          status: { }
                          noticedDateTime: string
                      builtIn: true
                      hidden: true
                  lastTimeReceivedData: string
                  measurementsUntil: string
                  parentMeterRelation:
                    meterId: string
                    serialNumber: string
                    externalReference: string
                  propertyGroup:
                    id: string
                    name: string
                  timeZone: string
                  meterProperties: { }
                  customProperties:
                    - customEntityPropertyTypeId: string
                      values:
                        - valueDecimal: 0
                          valueString: string
                          valueBoolean: true
                          valueNumber: 0
                          valueDateTime: string
                          valueDropdown:
                            - string
                          startDateTime: string
                          endDateTime: string
                  measurementIssuesCount: 0
                  meterIssuesCount: 0
                  issuesCount: 0
                  hasIssue: true
                  issues:
                    - meteringIssueId: string
                      error: { }
                      status: { }
                      noticedDateTime: string
                  readingFrequency: { }
                  nextExpectedReadingDate: string
  /MoveRequests:
    post:
      tags:
        - MoveRequests
      summary: Create new move request.
      description: Create new move request.
      operationId: post-moverequests
      parameters:
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: The request containing move request details.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/CreateMoveRequestRequest'
            example:
              moveRequestType: { }
              mutationDateTime: string
              customerDetails:
                internalId: string
                accountNumber: string
                salutation: string
                initials: string
                firstName: string
                lastName: string
                birthDate: string
                ssin: string
                ssinCountry: { }
                customerType: { }
                companyName: string
                organizationNumber: string
                vatNumber: string
                defaultPaymentMethod: { }
                invoiceAddress:
                  streetName: string
                  streetNumber: string
                  streetNumberAddition: string
                  postalCode: string
                  buildingName: string
                  locality: string
                  city: string
                  country: { }
                  localizedDisplay: string
                  lineOne: string
                  lineTwo: string
                bankAccount: string
                emailAddress: string
                telephoneNumber: string
                mobileTelephoneNumber: string
                website: string
                culture: { }
              externalContractId: string
              externalId: string
              serviceLocationDetails:
                address:
                  streetName: string
                  streetNumber: string
                  streetNumberAddition: string
                  postalCode: string
                  buildingName: string
                  locality: string
                  city: string
                  country: { }
                  localizedDisplay: string
                  lineOne: string
                  lineTwo: string
                services:
                  - externalIdentifier: string
                    utilityType: { }
                internalId: string
              measurementDetails:
                - internalMeterId: string
                  externalChannelIdentifier: string
                  meterSerialNumber: string
                  utilityType: { }
                  unitOfMeasure: { }
                  timeOfUse: string
                  value: 0
              attachmentSignatures:
                - origin: { }
                  culture: { }
                  productAttachmentId: string
                  entityAttachmentGroupId: string
                  signDate: string
                  viewedDate: string
              customMessage: string
              productId: string
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/CreateMoveRequestRequest'
            example:
              moveRequestType: { }
              mutationDateTime: string
              customerDetails:
                internalId: string
                accountNumber: string
                salutation: string
                initials: string
                firstName: string
                lastName: string
                birthDate: string
                ssin: string
                ssinCountry: { }
                customerType: { }
                companyName: string
                organizationNumber: string
                vatNumber: string
                defaultPaymentMethod: { }
                invoiceAddress:
                  streetName: string
                  streetNumber: string
                  streetNumberAddition: string
                  postalCode: string
                  buildingName: string
                  locality: string
                  city: string
                  country: { }
                  localizedDisplay: string
                  lineOne: string
                  lineTwo: string
                bankAccount: string
                emailAddress: string
                telephoneNumber: string
                mobileTelephoneNumber: string
                website: string
                culture: { }
              externalContractId: string
              externalId: string
              serviceLocationDetails:
                address:
                  streetName: string
                  streetNumber: string
                  streetNumberAddition: string
                  postalCode: string
                  buildingName: string
                  locality: string
                  city: string
                  country: { }
                  localizedDisplay: string
                  lineOne: string
                  lineTwo: string
                services:
                  - externalIdentifier: string
                    utilityType: { }
                internalId: string
              measurementDetails:
                - internalMeterId: string
                  externalChannelIdentifier: string
                  meterSerialNumber: string
                  utilityType: { }
                  unitOfMeasure: { }
                  timeOfUse: string
                  value: 0
              attachmentSignatures:
                - origin: { }
                  culture: { }
                  productAttachmentId: string
                  entityAttachmentGroupId: string
                  signDate: string
                  viewedDate: string
              customMessage: string
              productId: string
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/CreateMoveRequestRequest'
            example:
              moveRequestType: { }
              mutationDateTime: string
              customerDetails:
                internalId: string
                accountNumber: string
                salutation: string
                initials: string
                firstName: string
                lastName: string
                birthDate: string
                ssin: string
                ssinCountry: { }
                customerType: { }
                companyName: string
                organizationNumber: string
                vatNumber: string
                defaultPaymentMethod: { }
                invoiceAddress:
                  streetName: string
                  streetNumber: string
                  streetNumberAddition: string
                  postalCode: string
                  buildingName: string
                  locality: string
                  city: string
                  country: { }
                  localizedDisplay: string
                  lineOne: string
                  lineTwo: string
                bankAccount: string
                emailAddress: string
                telephoneNumber: string
                mobileTelephoneNumber: string
                website: string
                culture: { }
              externalContractId: string
              externalId: string
              serviceLocationDetails:
                address:
                  streetName: string
                  streetNumber: string
                  streetNumberAddition: string
                  postalCode: string
                  buildingName: string
                  locality: string
                  city: string
                  country: { }
                  localizedDisplay: string
                  lineOne: string
                  lineTwo: string
                services:
                  - externalIdentifier: string
                    utilityType: { }
                internalId: string
              measurementDetails:
                - internalMeterId: string
                  externalChannelIdentifier: string
                  meterSerialNumber: string
                  utilityType: { }
                  unitOfMeasure: { }
                  timeOfUse: string
                  value: 0
              attachmentSignatures:
                - origin: { }
                  culture: { }
                  productAttachmentId: string
                  entityAttachmentGroupId: string
                  signDate: string
                  viewedDate: string
              customMessage: string
              productId: string
      responses:
        '201':
          description: Created
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/MoveRequestDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/MoveRequestDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  externalId: string
                  customerDetails:
                    accountNumber: string
                    salutation: string
                    initials: string
                    firstName: string
                    lastName: string
                    birthDate: string
                    ssin: string
                    ssinCountry: { }
                    customerType: { }
                    companyName: string
                    organizationNumber: string
                    vatNumber: string
                    defaultPaymentMethod: { }
                    invoiceAddress:
                      streetName: string
                      streetNumber: string
                      streetNumberAddition: string
                      postalCode: string
                      buildingName: string
                      locality: string
                      city: string
                      country: { }
                      localizedDisplay: string
                      lineOne: string
                      lineTwo: string
                    bankAccount: string
                    emailAddress: string
                    telephoneNumber: string
                    mobileTelephoneNumber: string
                    website: string
                    culture: { }
                    internalId: string
                    createdOrLinked: true
                    errors:
                      - key: { }
                        correlationId: string
                        message: string
                        messageValues:
                          - dataType: { }
                            value: string
                            capitalize: true
                    customerGroupId: string
                  serviceLocationDetails:
                    previousContractDetails:
                      contractId: string
                      contractNumber: string
                      contractSupplyStartDate: string
                      contractSupplyEndDate: string
                      customerId: string
                      customerDisplayName: string
                      customerAccountNumber: string
                    currentContractDetails:
                      contractId: string
                      contractNumber: string
                      contractSupplyStartDate: string
                      contractSupplyEndDate: string
                      customerId: string
                      customerDisplayName: string
                      customerAccountNumber: string
                    owner:
                      customerId: string
                      shortDisplayName: string
                      accountNumber: string
                      managementRelationType: { }
                    address:
                      streetName: string
                      streetNumber: string
                      streetNumberAddition: string
                      postalCode: string
                      buildingName: string
                      locality: string
                      city: string
                      country: { }
                      localizedDisplay: string
                      lineOne: string
                      lineTwo: string
                    services:
                      - externalIdentifier: string
                        utilityType: { }
                    linked: true
                    internalId: string
                    errors:
                      - key: { }
                        correlationId: string
                        message: string
                        messageValues:
                          - dataType: { }
                            value: string
                            capitalize: true
                  measurementDetails:
                    - internalMeterId: string
                      externalChannelIdentifier: string
                      meterSerialNumber: string
                      utilityType: { }
                      unitOfMeasure: { }
                      timeOfUse: string
                      value: 0
                      timeZone: string
                      errors:
                        - key: { }
                          correlationId: string
                          message: string
                          messageValues:
                            - dataType: { }
                              value: string
                              capitalize: true
                  contractDetails:
                    productId: string
                    usePropertyGroupProduct: true
                    estimations:
                      - utilityType: { }
                        unitOfMeasure: { }
                        meteringType: { }
                        value: 0
                        consumerGroupId: string
                    errors:
                      - key: { }
                        correlationId: string
                        message: string
                        messageValues:
                          - dataType: { }
                            value: string
                            capitalize: true
                    internalContractId: string
                    externalContractId: string
                    contractNumber: string
                    createdOrLinked: true
                    serviceLocationsCount: 0
                    billingProperties:
                      billingMethod: { }
                  moveRequestType: { }
                  status: { }
                  mutationDateTime: string
                  customMessage: string
                  attachmentSignatures:
                    - culture: { }
                      attachmentFileName: string
                      errorCode: { }
                      origin: { }
                      productAttachmentId: string
                      attachmentFileId: string
                      entityAttachmentGroupId: string
                      signDate: string
                      viewedDate: string
                  hasAnyErrors: true
            text/json:
              schema:
                $ref: '#/components/schemas/MoveRequestDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  externalId: string
                  customerDetails:
                    accountNumber: string
                    salutation: string
                    initials: string
                    firstName: string
                    lastName: string
                    birthDate: string
                    ssin: string
                    ssinCountry: { }
                    customerType: { }
                    companyName: string
                    organizationNumber: string
                    vatNumber: string
                    defaultPaymentMethod: { }
                    invoiceAddress:
                      streetName: string
                      streetNumber: string
                      streetNumberAddition: string
                      postalCode: string
                      buildingName: string
                      locality: string
                      city: string
                      country: { }
                      localizedDisplay: string
                      lineOne: string
                      lineTwo: string
                    bankAccount: string
                    emailAddress: string
                    telephoneNumber: string
                    mobileTelephoneNumber: string
                    website: string
                    culture: { }
                    internalId: string
                    createdOrLinked: true
                    errors:
                      - key: { }
                        correlationId: string
                        message: string
                        messageValues:
                          - dataType: { }
                            value: string
                            capitalize: true
                    customerGroupId: string
                  serviceLocationDetails:
                    previousContractDetails:
                      contractId: string
                      contractNumber: string
                      contractSupplyStartDate: string
                      contractSupplyEndDate: string
                      customerId: string
                      customerDisplayName: string
                      customerAccountNumber: string
                    currentContractDetails:
                      contractId: string
                      contractNumber: string
                      contractSupplyStartDate: string
                      contractSupplyEndDate: string
                      customerId: string
                      customerDisplayName: string
                      customerAccountNumber: string
                    owner:
                      customerId: string
                      shortDisplayName: string
                      accountNumber: string
                      managementRelationType: { }
                    address:
                      streetName: string
                      streetNumber: string
                      streetNumberAddition: string
                      postalCode: string
                      buildingName: string
                      locality: string
                      city: string
                      country: { }
                      localizedDisplay: string
                      lineOne: string
                      lineTwo: string
                    services:
                      - externalIdentifier: string
                        utilityType: { }
                    linked: true
                    internalId: string
                    errors:
                      - key: { }
                        correlationId: string
                        message: string
                        messageValues:
                          - dataType: { }
                            value: string
                            capitalize: true
                  measurementDetails:
                    - internalMeterId: string
                      externalChannelIdentifier: string
                      meterSerialNumber: string
                      utilityType: { }
                      unitOfMeasure: { }
                      timeOfUse: string
                      value: 0
                      timeZone: string
                      errors:
                        - key: { }
                          correlationId: string
                          message: string
                          messageValues:
                            - dataType: { }
                              value: string
                              capitalize: true
                  contractDetails:
                    productId: string
                    usePropertyGroupProduct: true
                    estimations:
                      - utilityType: { }
                        unitOfMeasure: { }
                        meteringType: { }
                        value: 0
                        consumerGroupId: string
                    errors:
                      - key: { }
                        correlationId: string
                        message: string
                        messageValues:
                          - dataType: { }
                            value: string
                            capitalize: true
                    internalContractId: string
                    externalContractId: string
                    contractNumber: string
                    createdOrLinked: true
                    serviceLocationsCount: 0
                    billingProperties:
                      billingMethod: { }
                  moveRequestType: { }
                  status: { }
                  mutationDateTime: string
                  customMessage: string
                  attachmentSignatures:
                    - culture: { }
                      attachmentFileName: string
                      errorCode: { }
                      origin: { }
                      productAttachmentId: string
                      attachmentFileId: string
                      entityAttachmentGroupId: string
                      signDate: string
                      viewedDate: string
                  hasAnyErrors: true
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
    get:
      tags:
        - MoveRequests
      summary: Retrieve move requests based on the provided query parameters.
      description: Retrieve move requests based on the provided query parameters.
      operationId: get-moverequests
      parameters:
        - name: LocationId
          in: query
          schema:
            type: string
        - name: MoveRequestTypeId
          in: query
          schema:
            type: string
        - name: FlexSearch
          in: query
          schema:
            type: string
        - name: IncludeOnlyIds
          in: query
          schema:
            type: array
            items:
              type: string
        - name: ExcludeIds
          in: query
          schema:
            type: array
            items:
              type: string
        - name: Name
          in: query
          schema:
            type: string
        - name: Id
          in: query
          description: Format - int32.
          schema:
            type: integer
            format: int32
        - name: orderBy
          in: query
          description: Allows to order the move requests.
          schema:
            type: string
        - name: continuationToken
          in: header
          description: Token which allows you to fetch the next records. The continuation token is returned in the response and can be reused in the next request to fetch additional data.
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/MoveRequestDTOPagedResponseModelDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/MoveRequestDTOPagedResponseModelDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  results:
                    - id: string
                      entityType: { }
                      createdDateTime: string
                      discriminator: string
                      _etag: string
                      requireAttention: true
                      hasErrors: true
                      hasWarnings: true
                      isReadOnly: true
                      organisationId: string
                      externalId: string
                      customerDetails:
                        accountNumber: string
                        salutation: string
                        initials: string
                        firstName: string
                        lastName: string
                        birthDate: string
                        ssin: string
                        ssinCountry: { }
                        customerType: { }
                        companyName: string
                        organizationNumber: string
                        vatNumber: string
                        defaultPaymentMethod: { }
                        invoiceAddress:
                          streetName: string
                          streetNumber: string
                          streetNumberAddition: string
                          postalCode: string
                          buildingName: string
                          locality: string
                          city: string
                          country: { }
                          localizedDisplay: string
                          lineOne: string
                          lineTwo: string
                        bankAccount: string
                        emailAddress: string
                        telephoneNumber: string
                        mobileTelephoneNumber: string
                        website: string
                        culture: { }
                        internalId: string
                        createdOrLinked: true
                        errors:
                          - key: { }
                            correlationId: string
                            message: string
                            messageValues:
                              - dataType: { }
                                value: string
                                capitalize: true
                        customerGroupId: string
                      serviceLocationDetails:
                        previousContractDetails:
                          contractId: string
                          contractNumber: string
                          contractSupplyStartDate: string
                          contractSupplyEndDate: string
                          customerId: string
                          customerDisplayName: string
                          customerAccountNumber: string
                        currentContractDetails:
                          contractId: string
                          contractNumber: string
                          contractSupplyStartDate: string
                          contractSupplyEndDate: string
                          customerId: string
                          customerDisplayName: string
                          customerAccountNumber: string
                        owner:
                          customerId: string
                          shortDisplayName: string
                          accountNumber: string
                          managementRelationType: { }
                        address:
                          streetName: string
                          streetNumber: string
                          streetNumberAddition: string
                          postalCode: string
                          buildingName: string
                          locality: string
                          city: string
                          country: { }
                          localizedDisplay: string
                          lineOne: string
                          lineTwo: string
                        services:
                          - externalIdentifier: string
                            utilityType: { }
                        linked: true
                        internalId: string
                        errors:
                          - key: { }
                            correlationId: string
                            message: string
                            messageValues:
                              - dataType: { }
                                value: string
                                capitalize: true
                      measurementDetails:
                        - internalMeterId: string
                          externalChannelIdentifier: string
                          meterSerialNumber: string
                          utilityType: { }
                          unitOfMeasure: { }
                          timeOfUse: string
                          value: 0
                          timeZone: string
                          errors:
                            - key: { }
                              correlationId: string
                              message: string
                              messageValues:
                                - dataType: { }
                                  value: string
                                  capitalize: true
                      contractDetails:
                        productId: string
                        usePropertyGroupProduct: true
                        estimations:
                          - utilityType: { }
                            unitOfMeasure: { }
                            meteringType: { }
                            value: 0
                            consumerGroupId: string
                        errors:
                          - key: { }
                            correlationId: string
                            message: string
                            messageValues:
                              - dataType: { }
                                value: string
                                capitalize: true
                        internalContractId: string
                        externalContractId: string
                        contractNumber: string
                        createdOrLinked: true
                        serviceLocationsCount: 0
                        billingProperties:
                          billingMethod: { }
                      moveRequestType: { }
                      status: { }
                      mutationDateTime: string
                      customMessage: string
                      attachmentSignatures:
                        - culture: { }
                          attachmentFileName: string
                          errorCode: { }
                          origin: { }
                          productAttachmentId: string
                          attachmentFileId: string
                          entityAttachmentGroupId: string
                          signDate: string
                          viewedDate: string
                      hasAnyErrors: true
                  hasNextPage: true
                  nextPageToken: string
                  totalRecords: 0
                  sortableFields:
                    - string
                  aggregateDetails:
                    - code: string
                      translation: string
                      value: 0
                      valueDate: string
            text/json:
              schema:
                $ref: '#/components/schemas/MoveRequestDTOPagedResponseModelDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  results:
                    - id: string
                      entityType: { }
                      createdDateTime: string
                      discriminator: string
                      _etag: string
                      requireAttention: true
                      hasErrors: true
                      hasWarnings: true
                      isReadOnly: true
                      organisationId: string
                      externalId: string
                      customerDetails:
                        accountNumber: string
                        salutation: string
                        initials: string
                        firstName: string
                        lastName: string
                        birthDate: string
                        ssin: string
                        ssinCountry: { }
                        customerType: { }
                        companyName: string
                        organizationNumber: string
                        vatNumber: string
                        defaultPaymentMethod: { }
                        invoiceAddress:
                          streetName: string
                          streetNumber: string
                          streetNumberAddition: string
                          postalCode: string
                          buildingName: string
                          locality: string
                          city: string
                          country: { }
                          localizedDisplay: string
                          lineOne: string
                          lineTwo: string
                        bankAccount: string
                        emailAddress: string
                        telephoneNumber: string
                        mobileTelephoneNumber: string
                        website: string
                        culture: { }
                        internalId: string
                        createdOrLinked: true
                        errors:
                          - key: { }
                            correlationId: string
                            message: string
                            messageValues:
                              - dataType: { }
                                value: string
                                capitalize: true
                        customerGroupId: string
                      serviceLocationDetails:
                        previousContractDetails:
                          contractId: string
                          contractNumber: string
                          contractSupplyStartDate: string
                          contractSupplyEndDate: string
                          customerId: string
                          customerDisplayName: string
                          customerAccountNumber: string
                        currentContractDetails:
                          contractId: string
                          contractNumber: string
                          contractSupplyStartDate: string
                          contractSupplyEndDate: string
                          customerId: string
                          customerDisplayName: string
                          customerAccountNumber: string
                        owner:
                          customerId: string
                          shortDisplayName: string
                          accountNumber: string
                          managementRelationType: { }
                        address:
                          streetName: string
                          streetNumber: string
                          streetNumberAddition: string
                          postalCode: string
                          buildingName: string
                          locality: string
                          city: string
                          country: { }
                          localizedDisplay: string
                          lineOne: string
                          lineTwo: string
                        services:
                          - externalIdentifier: string
                            utilityType: { }
                        linked: true
                        internalId: string
                        errors:
                          - key: { }
                            correlationId: string
                            message: string
                            messageValues:
                              - dataType: { }
                                value: string
                                capitalize: true
                      measurementDetails:
                        - internalMeterId: string
                          externalChannelIdentifier: string
                          meterSerialNumber: string
                          utilityType: { }
                          unitOfMeasure: { }
                          timeOfUse: string
                          value: 0
                          timeZone: string
                          errors:
                            - key: { }
                              correlationId: string
                              message: string
                              messageValues:
                                - dataType: { }
                                  value: string
                                  capitalize: true
                      contractDetails:
                        productId: string
                        usePropertyGroupProduct: true
                        estimations:
                          - utilityType: { }
                            unitOfMeasure: { }
                            meteringType: { }
                            value: 0
                            consumerGroupId: string
                        errors:
                          - key: { }
                            correlationId: string
                            message: string
                            messageValues:
                              - dataType: { }
                                value: string
                                capitalize: true
                        internalContractId: string
                        externalContractId: string
                        contractNumber: string
                        createdOrLinked: true
                        serviceLocationsCount: 0
                        billingProperties:
                          billingMethod: { }
                      moveRequestType: { }
                      status: { }
                      mutationDateTime: string
                      customMessage: string
                      attachmentSignatures:
                        - culture: { }
                          attachmentFileName: string
                          errorCode: { }
                          origin: { }
                          productAttachmentId: string
                          attachmentFileId: string
                          entityAttachmentGroupId: string
                          signDate: string
                          viewedDate: string
                      hasAnyErrors: true
                  hasNextPage: true
                  nextPageToken: string
                  totalRecords: 0
                  sortableFields:
                    - string
                  aggregateDetails:
                    - code: string
                      translation: string
                      value: 0
                      valueDate: string
    delete:
      tags:
        - MoveRequests
      summary: Delete multiple move requests in bulk.
      description: This action is irreversible.
      operationId: delete-moverequests
      parameters:
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: The request containing bulk deletion details and query parameters to filter the move requests to be deleted.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BulkDeleteMoveRequestRequest'
            example:
              onlyValidate: true
              queryParams:
                flexSearch: string
                includeOnlyIds:
                  - string
                excludeIds:
                  - string
                locationId: string
                moveRequestTypeId: string
              quickFilter: string
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BulkDeleteMoveRequestRequest'
            example:
              onlyValidate: true
              queryParams:
                flexSearch: string
                includeOnlyIds:
                  - string
                excludeIds:
                  - string
                locationId: string
                moveRequestTypeId: string
              quickFilter: string
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BulkDeleteMoveRequestRequest'
            example:
              onlyValidate: true
              queryParams:
                flexSearch: string
                includeOnlyIds:
                  - string
                excludeIds:
                  - string
                locationId: string
                moveRequestTypeId: string
              quickFilter: string
      responses:
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: string
                title: string
                status: 0
                detail: string
                instance: string
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: string
                title: string
                status: 0
                detail: string
                instance: string
        '204':
          description: No Content
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/BooleanApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/BooleanApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data: true
            text/json:
              schema:
                $ref: '#/components/schemas/BooleanApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data: true
  /MoveRequests/overviewcount:
    get:
      tags:
        - MoveRequests
      summary: Retrieve the overview count of move requests based on the provided query parameters.
      description: Retrieve the overview count of move requests based on the provided query parameters.
      operationId: get-moverequests-overviewcount
      parameters:
        - name: LocationId
          in: query
          schema:
            type: string
        - name: MoveRequestTypeId
          in: query
          schema:
            type: string
        - name: FlexSearch
          in: query
          schema:
            type: string
        - name: IncludeOnlyIds
          in: query
          schema:
            type: array
            items:
              type: string
        - name: ExcludeIds
          in: query
          schema:
            type: array
            items:
              type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/MoveRequestOverviewCountDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/MoveRequestOverviewCountDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  all: 0
                  new: 0
                  pending: 0
                  processed: 0
                  rejected: 0
                  toBeProcessed: 0
            text/json:
              schema:
                $ref: '#/components/schemas/MoveRequestOverviewCountDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  all: 0
                  new: 0
                  pending: 0
                  processed: 0
                  rejected: 0
                  toBeProcessed: 0
  '/MoveRequests/{moverequestuuid}':
    get:
      tags:
        - MoveRequests
      summary: Retrieve a move request by its ID.
      description: Retrieve a move request by its ID.
      operationId: get-moverequests-moverequestuuid
      parameters:
        - name: moverequestuuid
          in: path
          description: The ID of the move request.
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: string
                title: string
                status: 0
                detail: string
                instance: string
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: string
                title: string
                status: 0
                detail: string
                instance: string
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/MoveRequestDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/MoveRequestDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  externalId: string
                  customerDetails:
                    accountNumber: string
                    salutation: string
                    initials: string
                    firstName: string
                    lastName: string
                    birthDate: string
                    ssin: string
                    ssinCountry: { }
                    customerType: { }
                    companyName: string
                    organizationNumber: string
                    vatNumber: string
                    defaultPaymentMethod: { }
                    invoiceAddress:
                      streetName: string
                      streetNumber: string
                      streetNumberAddition: string
                      postalCode: string
                      buildingName: string
                      locality: string
                      city: string
                      country: { }
                      localizedDisplay: string
                      lineOne: string
                      lineTwo: string
                    bankAccount: string
                    emailAddress: string
                    telephoneNumber: string
                    mobileTelephoneNumber: string
                    website: string
                    culture: { }
                    internalId: string
                    createdOrLinked: true
                    errors:
                      - key: { }
                        correlationId: string
                        message: string
                        messageValues:
                          - dataType: { }
                            value: string
                            capitalize: true
                    customerGroupId: string
                  serviceLocationDetails:
                    previousContractDetails:
                      contractId: string
                      contractNumber: string
                      contractSupplyStartDate: string
                      contractSupplyEndDate: string
                      customerId: string
                      customerDisplayName: string
                      customerAccountNumber: string
                    currentContractDetails:
                      contractId: string
                      contractNumber: string
                      contractSupplyStartDate: string
                      contractSupplyEndDate: string
                      customerId: string
                      customerDisplayName: string
                      customerAccountNumber: string
                    owner:
                      customerId: string
                      shortDisplayName: string
                      accountNumber: string
                      managementRelationType: { }
                    address:
                      streetName: string
                      streetNumber: string
                      streetNumberAddition: string
                      postalCode: string
                      buildingName: string
                      locality: string
                      city: string
                      country: { }
                      localizedDisplay: string
                      lineOne: string
                      lineTwo: string
                    services:
                      - externalIdentifier: string
                        utilityType: { }
                    linked: true
                    internalId: string
                    errors:
                      - key: { }
                        correlationId: string
                        message: string
                        messageValues:
                          - dataType: { }
                            value: string
                            capitalize: true
                  measurementDetails:
                    - internalMeterId: string
                      externalChannelIdentifier: string
                      meterSerialNumber: string
                      utilityType: { }
                      unitOfMeasure: { }
                      timeOfUse: string
                      value: 0
                      timeZone: string
                      errors:
                        - key: { }
                          correlationId: string
                          message: string
                          messageValues:
                            - dataType: { }
                              value: string
                              capitalize: true
                  contractDetails:
                    productId: string
                    usePropertyGroupProduct: true
                    estimations:
                      - utilityType: { }
                        unitOfMeasure: { }
                        meteringType: { }
                        value: 0
                        consumerGroupId: string
                    errors:
                      - key: { }
                        correlationId: string
                        message: string
                        messageValues:
                          - dataType: { }
                            value: string
                            capitalize: true
                    internalContractId: string
                    externalContractId: string
                    contractNumber: string
                    createdOrLinked: true
                    serviceLocationsCount: 0
                    billingProperties:
                      billingMethod: { }
                  moveRequestType: { }
                  status: { }
                  mutationDateTime: string
                  customMessage: string
                  attachmentSignatures:
                    - culture: { }
                      attachmentFileName: string
                      errorCode: { }
                      origin: { }
                      productAttachmentId: string
                      attachmentFileId: string
                      entityAttachmentGroupId: string
                      signDate: string
                      viewedDate: string
                  hasAnyErrors: true
            text/json:
              schema:
                $ref: '#/components/schemas/MoveRequestDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  externalId: string
                  customerDetails:
                    accountNumber: string
                    salutation: string
                    initials: string
                    firstName: string
                    lastName: string
                    birthDate: string
                    ssin: string
                    ssinCountry: { }
                    customerType: { }
                    companyName: string
                    organizationNumber: string
                    vatNumber: string
                    defaultPaymentMethod: { }
                    invoiceAddress:
                      streetName: string
                      streetNumber: string
                      streetNumberAddition: string
                      postalCode: string
                      buildingName: string
                      locality: string
                      city: string
                      country: { }
                      localizedDisplay: string
                      lineOne: string
                      lineTwo: string
                    bankAccount: string
                    emailAddress: string
                    telephoneNumber: string
                    mobileTelephoneNumber: string
                    website: string
                    culture: { }
                    internalId: string
                    createdOrLinked: true
                    errors:
                      - key: { }
                        correlationId: string
                        message: string
                        messageValues:
                          - dataType: { }
                            value: string
                            capitalize: true
                    customerGroupId: string
                  serviceLocationDetails:
                    previousContractDetails:
                      contractId: string
                      contractNumber: string
                      contractSupplyStartDate: string
                      contractSupplyEndDate: string
                      customerId: string
                      customerDisplayName: string
                      customerAccountNumber: string
                    currentContractDetails:
                      contractId: string
                      contractNumber: string
                      contractSupplyStartDate: string
                      contractSupplyEndDate: string
                      customerId: string
                      customerDisplayName: string
                      customerAccountNumber: string
                    owner:
                      customerId: string
                      shortDisplayName: string
                      accountNumber: string
                      managementRelationType: { }
                    address:
                      streetName: string
                      streetNumber: string
                      streetNumberAddition: string
                      postalCode: string
                      buildingName: string
                      locality: string
                      city: string
                      country: { }
                      localizedDisplay: string
                      lineOne: string
                      lineTwo: string
                    services:
                      - externalIdentifier: string
                        utilityType: { }
                    linked: true
                    internalId: string
                    errors:
                      - key: { }
                        correlationId: string
                        message: string
                        messageValues:
                          - dataType: { }
                            value: string
                            capitalize: true
                  measurementDetails:
                    - internalMeterId: string
                      externalChannelIdentifier: string
                      meterSerialNumber: string
                      utilityType: { }
                      unitOfMeasure: { }
                      timeOfUse: string
                      value: 0
                      timeZone: string
                      errors:
                        - key: { }
                          correlationId: string
                          message: string
                          messageValues:
                            - dataType: { }
                              value: string
                              capitalize: true
                  contractDetails:
                    productId: string
                    usePropertyGroupProduct: true
                    estimations:
                      - utilityType: { }
                        unitOfMeasure: { }
                        meteringType: { }
                        value: 0
                        consumerGroupId: string
                    errors:
                      - key: { }
                        correlationId: string
                        message: string
                        messageValues:
                          - dataType: { }
                            value: string
                            capitalize: true
                    internalContractId: string
                    externalContractId: string
                    contractNumber: string
                    createdOrLinked: true
                    serviceLocationsCount: 0
                    billingProperties:
                      billingMethod: { }
                  moveRequestType: { }
                  status: { }
                  mutationDateTime: string
                  customMessage: string
                  attachmentSignatures:
                    - culture: { }
                      attachmentFileName: string
                      errorCode: { }
                      origin: { }
                      productAttachmentId: string
                      attachmentFileId: string
                      entityAttachmentGroupId: string
                      signDate: string
                      viewedDate: string
                  hasAnyErrors: true
    delete:
      tags:
        - MoveRequests
      summary: Delete move request.
      description: This action is irreversible.
      operationId: delete-moverequests-moverequestuuid
      parameters:
        - name: moverequestuuid
          in: path
          description: The ID of the move request.
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/BooleanApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/BooleanApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data: true
            text/json:
              schema:
                $ref: '#/components/schemas/BooleanApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data: true
  '/MoveRequests/externalid/{externalId}':
    get:
      tags:
        - MoveRequests
      summary: Retrieve a move request by its external ID.
      description: Retrieve a move request by its external ID.
      operationId: get-moverequests-externalid-externalid
      parameters:
        - name: externalId
          in: path
          description: The external ID of the move request.
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: string
                title: string
                status: 0
                detail: string
                instance: string
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: string
                title: string
                status: 0
                detail: string
                instance: string
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/MoveRequestDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/MoveRequestDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  externalId: string
                  customerDetails:
                    accountNumber: string
                    salutation: string
                    initials: string
                    firstName: string
                    lastName: string
                    birthDate: string
                    ssin: string
                    ssinCountry: { }
                    customerType: { }
                    companyName: string
                    organizationNumber: string
                    vatNumber: string
                    defaultPaymentMethod: { }
                    invoiceAddress:
                      streetName: string
                      streetNumber: string
                      streetNumberAddition: string
                      postalCode: string
                      buildingName: string
                      locality: string
                      city: string
                      country: { }
                      localizedDisplay: string
                      lineOne: string
                      lineTwo: string
                    bankAccount: string
                    emailAddress: string
                    telephoneNumber: string
                    mobileTelephoneNumber: string
                    website: string
                    culture: { }
                    internalId: string
                    createdOrLinked: true
                    errors:
                      - key: { }
                        correlationId: string
                        message: string
                        messageValues:
                          - dataType: { }
                            value: string
                            capitalize: true
                    customerGroupId: string
                  serviceLocationDetails:
                    previousContractDetails:
                      contractId: string
                      contractNumber: string
                      contractSupplyStartDate: string
                      contractSupplyEndDate: string
                      customerId: string
                      customerDisplayName: string
                      customerAccountNumber: string
                    currentContractDetails:
                      contractId: string
                      contractNumber: string
                      contractSupplyStartDate: string
                      contractSupplyEndDate: string
                      customerId: string
                      customerDisplayName: string
                      customerAccountNumber: string
                    owner:
                      customerId: string
                      shortDisplayName: string
                      accountNumber: string
                      managementRelationType: { }
                    address:
                      streetName: string
                      streetNumber: string
                      streetNumberAddition: string
                      postalCode: string
                      buildingName: string
                      locality: string
                      city: string
                      country: { }
                      localizedDisplay: string
                      lineOne: string
                      lineTwo: string
                    services:
                      - externalIdentifier: string
                        utilityType: { }
                    linked: true
                    internalId: string
                    errors:
                      - key: { }
                        correlationId: string
                        message: string
                        messageValues:
                          - dataType: { }
                            value: string
                            capitalize: true
                  measurementDetails:
                    - internalMeterId: string
                      externalChannelIdentifier: string
                      meterSerialNumber: string
                      utilityType: { }
                      unitOfMeasure: { }
                      timeOfUse: string
                      value: 0
                      timeZone: string
                      errors:
                        - key: { }
                          correlationId: string
                          message: string
                          messageValues:
                            - dataType: { }
                              value: string
                              capitalize: true
                  contractDetails:
                    productId: string
                    usePropertyGroupProduct: true
                    estimations:
                      - utilityType: { }
                        unitOfMeasure: { }
                        meteringType: { }
                        value: 0
                        consumerGroupId: string
                    errors:
                      - key: { }
                        correlationId: string
                        message: string
                        messageValues:
                          - dataType: { }
                            value: string
                            capitalize: true
                    internalContractId: string
                    externalContractId: string
                    contractNumber: string
                    createdOrLinked: true
                    serviceLocationsCount: 0
                    billingProperties:
                      billingMethod: { }
                  moveRequestType: { }
                  status: { }
                  mutationDateTime: string
                  customMessage: string
                  attachmentSignatures:
                    - culture: { }
                      attachmentFileName: string
                      errorCode: { }
                      origin: { }
                      productAttachmentId: string
                      attachmentFileId: string
                      entityAttachmentGroupId: string
                      signDate: string
                      viewedDate: string
                  hasAnyErrors: true
            text/json:
              schema:
                $ref: '#/components/schemas/MoveRequestDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  externalId: string
                  customerDetails:
                    accountNumber: string
                    salutation: string
                    initials: string
                    firstName: string
                    lastName: string
                    birthDate: string
                    ssin: string
                    ssinCountry: { }
                    customerType: { }
                    companyName: string
                    organizationNumber: string
                    vatNumber: string
                    defaultPaymentMethod: { }
                    invoiceAddress:
                      streetName: string
                      streetNumber: string
                      streetNumberAddition: string
                      postalCode: string
                      buildingName: string
                      locality: string
                      city: string
                      country: { }
                      localizedDisplay: string
                      lineOne: string
                      lineTwo: string
                    bankAccount: string
                    emailAddress: string
                    telephoneNumber: string
                    mobileTelephoneNumber: string
                    website: string
                    culture: { }
                    internalId: string
                    createdOrLinked: true
                    errors:
                      - key: { }
                        correlationId: string
                        message: string
                        messageValues:
                          - dataType: { }
                            value: string
                            capitalize: true
                    customerGroupId: string
                  serviceLocationDetails:
                    previousContractDetails:
                      contractId: string
                      contractNumber: string
                      contractSupplyStartDate: string
                      contractSupplyEndDate: string
                      customerId: string
                      customerDisplayName: string
                      customerAccountNumber: string
                    currentContractDetails:
                      contractId: string
                      contractNumber: string
                      contractSupplyStartDate: string
                      contractSupplyEndDate: string
                      customerId: string
                      customerDisplayName: string
                      customerAccountNumber: string
                    owner:
                      customerId: string
                      shortDisplayName: string
                      accountNumber: string
                      managementRelationType: { }
                    address:
                      streetName: string
                      streetNumber: string
                      streetNumberAddition: string
                      postalCode: string
                      buildingName: string
                      locality: string
                      city: string
                      country: { }
                      localizedDisplay: string
                      lineOne: string
                      lineTwo: string
                    services:
                      - externalIdentifier: string
                        utilityType: { }
                    linked: true
                    internalId: string
                    errors:
                      - key: { }
                        correlationId: string
                        message: string
                        messageValues:
                          - dataType: { }
                            value: string
                            capitalize: true
                  measurementDetails:
                    - internalMeterId: string
                      externalChannelIdentifier: string
                      meterSerialNumber: string
                      utilityType: { }
                      unitOfMeasure: { }
                      timeOfUse: string
                      value: 0
                      timeZone: string
                      errors:
                        - key: { }
                          correlationId: string
                          message: string
                          messageValues:
                            - dataType: { }
                              value: string
                              capitalize: true
                  contractDetails:
                    productId: string
                    usePropertyGroupProduct: true
                    estimations:
                      - utilityType: { }
                        unitOfMeasure: { }
                        meteringType: { }
                        value: 0
                        consumerGroupId: string
                    errors:
                      - key: { }
                        correlationId: string
                        message: string
                        messageValues:
                          - dataType: { }
                            value: string
                            capitalize: true
                    internalContractId: string
                    externalContractId: string
                    contractNumber: string
                    createdOrLinked: true
                    serviceLocationsCount: 0
                    billingProperties:
                      billingMethod: { }
                  moveRequestType: { }
                  status: { }
                  mutationDateTime: string
                  customMessage: string
                  attachmentSignatures:
                    - culture: { }
                      attachmentFileName: string
                      errorCode: { }
                      origin: { }
                      productAttachmentId: string
                      attachmentFileId: string
                      entityAttachmentGroupId: string
                      signDate: string
                      viewedDate: string
                  hasAnyErrors: true
  '/MoveRequests/{moverequestuuid}/updatedetails':
    post:
      tags:
        - MoveRequests
      summary: Update details of a move request.
      description: Update details of a move request.
      operationId: post-moverequests-moverequestuuid-updatedetails
      parameters:
        - name: moverequestuuid
          in: path
          description: The ID of the move request.
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: The request containing move request details.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/UpdateMoveRequestRequest'
            example:
              productId: string
              usePropertyGroupProduct: true
              contractNumber: string
              estimations:
                - utilityType: { }
                  unitOfMeasure: { }
                  meteringType: { }
                  value: 0
                  consumerGroupId: string
              billingProperties:
                billingMethod: { }
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/UpdateMoveRequestRequest'
            example:
              productId: string
              usePropertyGroupProduct: true
              contractNumber: string
              estimations:
                - utilityType: { }
                  unitOfMeasure: { }
                  meteringType: { }
                  value: 0
                  consumerGroupId: string
              billingProperties:
                billingMethod: { }
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/UpdateMoveRequestRequest'
            example:
              productId: string
              usePropertyGroupProduct: true
              contractNumber: string
              estimations:
                - utilityType: { }
                  unitOfMeasure: { }
                  meteringType: { }
                  value: 0
                  consumerGroupId: string
              billingProperties:
                billingMethod: { }
      responses:
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: string
                title: string
                status: 0
                detail: string
                instance: string
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: string
                title: string
                status: 0
                detail: string
                instance: string
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/MoveRequestDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/MoveRequestDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  externalId: string
                  customerDetails:
                    accountNumber: string
                    salutation: string
                    initials: string
                    firstName: string
                    lastName: string
                    birthDate: string
                    ssin: string
                    ssinCountry: { }
                    customerType: { }
                    companyName: string
                    organizationNumber: string
                    vatNumber: string
                    defaultPaymentMethod: { }
                    invoiceAddress:
                      streetName: string
                      streetNumber: string
                      streetNumberAddition: string
                      postalCode: string
                      buildingName: string
                      locality: string
                      city: string
                      country: { }
                      localizedDisplay: string
                      lineOne: string
                      lineTwo: string
                    bankAccount: string
                    emailAddress: string
                    telephoneNumber: string
                    mobileTelephoneNumber: string
                    website: string
                    culture: { }
                    internalId: string
                    createdOrLinked: true
                    errors:
                      - key: { }
                        correlationId: string
                        message: string
                        messageValues:
                          - dataType: { }
                            value: string
                            capitalize: true
                    customerGroupId: string
                  serviceLocationDetails:
                    previousContractDetails:
                      contractId: string
                      contractNumber: string
                      contractSupplyStartDate: string
                      contractSupplyEndDate: string
                      customerId: string
                      customerDisplayName: string
                      customerAccountNumber: string
                    currentContractDetails:
                      contractId: string
                      contractNumber: string
                      contractSupplyStartDate: string
                      contractSupplyEndDate: string
                      customerId: string
                      customerDisplayName: string
                      customerAccountNumber: string
                    owner:
                      customerId: string
                      shortDisplayName: string
                      accountNumber: string
                      managementRelationType: { }
                    address:
                      streetName: string
                      streetNumber: string
                      streetNumberAddition: string
                      postalCode: string
                      buildingName: string
                      locality: string
                      city: string
                      country: { }
                      localizedDisplay: string
                      lineOne: string
                      lineTwo: string
                    services:
                      - externalIdentifier: string
                        utilityType: { }
                    linked: true
                    internalId: string
                    errors:
                      - key: { }
                        correlationId: string
                        message: string
                        messageValues:
                          - dataType: { }
                            value: string
                            capitalize: true
                  measurementDetails:
                    - internalMeterId: string
                      externalChannelIdentifier: string
                      meterSerialNumber: string
                      utilityType: { }
                      unitOfMeasure: { }
                      timeOfUse: string
                      value: 0
                      timeZone: string
                      errors:
                        - key: { }
                          correlationId: string
                          message: string
                          messageValues:
                            - dataType: { }
                              value: string
                              capitalize: true
                  contractDetails:
                    productId: string
                    usePropertyGroupProduct: true
                    estimations:
                      - utilityType: { }
                        unitOfMeasure: { }
                        meteringType: { }
                        value: 0
                        consumerGroupId: string
                    errors:
                      - key: { }
                        correlationId: string
                        message: string
                        messageValues:
                          - dataType: { }
                            value: string
                            capitalize: true
                    internalContractId: string
                    externalContractId: string
                    contractNumber: string
                    createdOrLinked: true
                    serviceLocationsCount: 0
                    billingProperties:
                      billingMethod: { }
                  moveRequestType: { }
                  status: { }
                  mutationDateTime: string
                  customMessage: string
                  attachmentSignatures:
                    - culture: { }
                      attachmentFileName: string
                      errorCode: { }
                      origin: { }
                      productAttachmentId: string
                      attachmentFileId: string
                      entityAttachmentGroupId: string
                      signDate: string
                      viewedDate: string
                  hasAnyErrors: true
            text/json:
              schema:
                $ref: '#/components/schemas/MoveRequestDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  externalId: string
                  customerDetails:
                    accountNumber: string
                    salutation: string
                    initials: string
                    firstName: string
                    lastName: string
                    birthDate: string
                    ssin: string
                    ssinCountry: { }
                    customerType: { }
                    companyName: string
                    organizationNumber: string
                    vatNumber: string
                    defaultPaymentMethod: { }
                    invoiceAddress:
                      streetName: string
                      streetNumber: string
                      streetNumberAddition: string
                      postalCode: string
                      buildingName: string
                      locality: string
                      city: string
                      country: { }
                      localizedDisplay: string
                      lineOne: string
                      lineTwo: string
                    bankAccount: string
                    emailAddress: string
                    telephoneNumber: string
                    mobileTelephoneNumber: string
                    website: string
                    culture: { }
                    internalId: string
                    createdOrLinked: true
                    errors:
                      - key: { }
                        correlationId: string
                        message: string
                        messageValues:
                          - dataType: { }
                            value: string
                            capitalize: true
                    customerGroupId: string
                  serviceLocationDetails:
                    previousContractDetails:
                      contractId: string
                      contractNumber: string
                      contractSupplyStartDate: string
                      contractSupplyEndDate: string
                      customerId: string
                      customerDisplayName: string
                      customerAccountNumber: string
                    currentContractDetails:
                      contractId: string
                      contractNumber: string
                      contractSupplyStartDate: string
                      contractSupplyEndDate: string
                      customerId: string
                      customerDisplayName: string
                      customerAccountNumber: string
                    owner:
                      customerId: string
                      shortDisplayName: string
                      accountNumber: string
                      managementRelationType: { }
                    address:
                      streetName: string
                      streetNumber: string
                      streetNumberAddition: string
                      postalCode: string
                      buildingName: string
                      locality: string
                      city: string
                      country: { }
                      localizedDisplay: string
                      lineOne: string
                      lineTwo: string
                    services:
                      - externalIdentifier: string
                        utilityType: { }
                    linked: true
                    internalId: string
                    errors:
                      - key: { }
                        correlationId: string
                        message: string
                        messageValues:
                          - dataType: { }
                            value: string
                            capitalize: true
                  measurementDetails:
                    - internalMeterId: string
                      externalChannelIdentifier: string
                      meterSerialNumber: string
                      utilityType: { }
                      unitOfMeasure: { }
                      timeOfUse: string
                      value: 0
                      timeZone: string
                      errors:
                        - key: { }
                          correlationId: string
                          message: string
                          messageValues:
                            - dataType: { }
                              value: string
                              capitalize: true
                  contractDetails:
                    productId: string
                    usePropertyGroupProduct: true
                    estimations:
                      - utilityType: { }
                        unitOfMeasure: { }
                        meteringType: { }
                        value: 0
                        consumerGroupId: string
                    errors:
                      - key: { }
                        correlationId: string
                        message: string
                        messageValues:
                          - dataType: { }
                            value: string
                            capitalize: true
                    internalContractId: string
                    externalContractId: string
                    contractNumber: string
                    createdOrLinked: true
                    serviceLocationsCount: 0
                    billingProperties:
                      billingMethod: { }
                  moveRequestType: { }
                  status: { }
                  mutationDateTime: string
                  customMessage: string
                  attachmentSignatures:
                    - culture: { }
                      attachmentFileName: string
                      errorCode: { }
                      origin: { }
                      productAttachmentId: string
                      attachmentFileId: string
                      entityAttachmentGroupId: string
                      signDate: string
                      viewedDate: string
                  hasAnyErrors: true
  '/MoveRequests/{moverequestuuid}/updateMutationDateTime':
    post:
      tags:
        - MoveRequests
      summary: Update mutation date of a move request.
      description: 'Mutation date is a sign date in case of move-in requests, or termination date in case of move-out request.'
      operationId: post-moverequests-moverequestuuid-updatemutationdatetime
      parameters:
        - name: moverequestuuid
          in: path
          description: The ID of the move request.
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: The request containing new mutation date.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/UpdateMoveRequestMutationDateTimeRequest'
            example:
              mutationDateTime: string
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/UpdateMoveRequestMutationDateTimeRequest'
            example:
              mutationDateTime: string
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/UpdateMoveRequestMutationDateTimeRequest'
            example:
              mutationDateTime: string
      responses:
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: string
                title: string
                status: 0
                detail: string
                instance: string
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: string
                title: string
                status: 0
                detail: string
                instance: string
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/MoveRequestDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/MoveRequestDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  externalId: string
                  customerDetails:
                    accountNumber: string
                    salutation: string
                    initials: string
                    firstName: string
                    lastName: string
                    birthDate: string
                    ssin: string
                    ssinCountry: { }
                    customerType: { }
                    companyName: string
                    organizationNumber: string
                    vatNumber: string
                    defaultPaymentMethod: { }
                    invoiceAddress:
                      streetName: string
                      streetNumber: string
                      streetNumberAddition: string
                      postalCode: string
                      buildingName: string
                      locality: string
                      city: string
                      country: { }
                      localizedDisplay: string
                      lineOne: string
                      lineTwo: string
                    bankAccount: string
                    emailAddress: string
                    telephoneNumber: string
                    mobileTelephoneNumber: string
                    website: string
                    culture: { }
                    internalId: string
                    createdOrLinked: true
                    errors:
                      - key: { }
                        correlationId: string
                        message: string
                        messageValues:
                          - dataType: { }
                            value: string
                            capitalize: true
                    customerGroupId: string
                  serviceLocationDetails:
                    previousContractDetails:
                      contractId: string
                      contractNumber: string
                      contractSupplyStartDate: string
                      contractSupplyEndDate: string
                      customerId: string
                      customerDisplayName: string
                      customerAccountNumber: string
                    currentContractDetails:
                      contractId: string
                      contractNumber: string
                      contractSupplyStartDate: string
                      contractSupplyEndDate: string
                      customerId: string
                      customerDisplayName: string
                      customerAccountNumber: string
                    owner:
                      customerId: string
                      shortDisplayName: string
                      accountNumber: string
                      managementRelationType: { }
                    address:
                      streetName: string
                      streetNumber: string
                      streetNumberAddition: string
                      postalCode: string
                      buildingName: string
                      locality: string
                      city: string
                      country: { }
                      localizedDisplay: string
                      lineOne: string
                      lineTwo: string
                    services:
                      - externalIdentifier: string
                        utilityType: { }
                    linked: true
                    internalId: string
                    errors:
                      - key: { }
                        correlationId: string
                        message: string
                        messageValues:
                          - dataType: { }
                            value: string
                            capitalize: true
                  measurementDetails:
                    - internalMeterId: string
                      externalChannelIdentifier: string
                      meterSerialNumber: string
                      utilityType: { }
                      unitOfMeasure: { }
                      timeOfUse: string
                      value: 0
                      timeZone: string
                      errors:
                        - key: { }
                          correlationId: string
                          message: string
                          messageValues:
                            - dataType: { }
                              value: string
                              capitalize: true
                  contractDetails:
                    productId: string
                    usePropertyGroupProduct: true
                    estimations:
                      - utilityType: { }
                        unitOfMeasure: { }
                        meteringType: { }
                        value: 0
                        consumerGroupId: string
                    errors:
                      - key: { }
                        correlationId: string
                        message: string
                        messageValues:
                          - dataType: { }
                            value: string
                            capitalize: true
                    internalContractId: string
                    externalContractId: string
                    contractNumber: string
                    createdOrLinked: true
                    serviceLocationsCount: 0
                    billingProperties:
                      billingMethod: { }
                  moveRequestType: { }
                  status: { }
                  mutationDateTime: string
                  customMessage: string
                  attachmentSignatures:
                    - culture: { }
                      attachmentFileName: string
                      errorCode: { }
                      origin: { }
                      productAttachmentId: string
                      attachmentFileId: string
                      entityAttachmentGroupId: string
                      signDate: string
                      viewedDate: string
                  hasAnyErrors: true
            text/json:
              schema:
                $ref: '#/components/schemas/MoveRequestDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  externalId: string
                  customerDetails:
                    accountNumber: string
                    salutation: string
                    initials: string
                    firstName: string
                    lastName: string
                    birthDate: string
                    ssin: string
                    ssinCountry: { }
                    customerType: { }
                    companyName: string
                    organizationNumber: string
                    vatNumber: string
                    defaultPaymentMethod: { }
                    invoiceAddress:
                      streetName: string
                      streetNumber: string
                      streetNumberAddition: string
                      postalCode: string
                      buildingName: string
                      locality: string
                      city: string
                      country: { }
                      localizedDisplay: string
                      lineOne: string
                      lineTwo: string
                    bankAccount: string
                    emailAddress: string
                    telephoneNumber: string
                    mobileTelephoneNumber: string
                    website: string
                    culture: { }
                    internalId: string
                    createdOrLinked: true
                    errors:
                      - key: { }
                        correlationId: string
                        message: string
                        messageValues:
                          - dataType: { }
                            value: string
                            capitalize: true
                    customerGroupId: string
                  serviceLocationDetails:
                    previousContractDetails:
                      contractId: string
                      contractNumber: string
                      contractSupplyStartDate: string
                      contractSupplyEndDate: string
                      customerId: string
                      customerDisplayName: string
                      customerAccountNumber: string
                    currentContractDetails:
                      contractId: string
                      contractNumber: string
                      contractSupplyStartDate: string
                      contractSupplyEndDate: string
                      customerId: string
                      customerDisplayName: string
                      customerAccountNumber: string
                    owner:
                      customerId: string
                      shortDisplayName: string
                      accountNumber: string
                      managementRelationType: { }
                    address:
                      streetName: string
                      streetNumber: string
                      streetNumberAddition: string
                      postalCode: string
                      buildingName: string
                      locality: string
                      city: string
                      country: { }
                      localizedDisplay: string
                      lineOne: string
                      lineTwo: string
                    services:
                      - externalIdentifier: string
                        utilityType: { }
                    linked: true
                    internalId: string
                    errors:
                      - key: { }
                        correlationId: string
                        message: string
                        messageValues:
                          - dataType: { }
                            value: string
                            capitalize: true
                  measurementDetails:
                    - internalMeterId: string
                      externalChannelIdentifier: string
                      meterSerialNumber: string
                      utilityType: { }
                      unitOfMeasure: { }
                      timeOfUse: string
                      value: 0
                      timeZone: string
                      errors:
                        - key: { }
                          correlationId: string
                          message: string
                          messageValues:
                            - dataType: { }
                              value: string
                              capitalize: true
                  contractDetails:
                    productId: string
                    usePropertyGroupProduct: true
                    estimations:
                      - utilityType: { }
                        unitOfMeasure: { }
                        meteringType: { }
                        value: 0
                        consumerGroupId: string
                    errors:
                      - key: { }
                        correlationId: string
                        message: string
                        messageValues:
                          - dataType: { }
                            value: string
                            capitalize: true
                    internalContractId: string
                    externalContractId: string
                    contractNumber: string
                    createdOrLinked: true
                    serviceLocationsCount: 0
                    billingProperties:
                      billingMethod: { }
                  moveRequestType: { }
                  status: { }
                  mutationDateTime: string
                  customMessage: string
                  attachmentSignatures:
                    - culture: { }
                      attachmentFileName: string
                      errorCode: { }
                      origin: { }
                      productAttachmentId: string
                      attachmentFileId: string
                      entityAttachmentGroupId: string
                      signDate: string
                      viewedDate: string
                  hasAnyErrors: true
  '/MoveRequests/{moverequestuuid}/updatecustomerdetails':
    post:
      tags:
        - MoveRequests
      summary: Update customer details of a move request.
      description: Update customer details of a move request.
      operationId: post-moverequests-moverequestuuid-updatecustomerdetails
      parameters:
        - name: moverequestuuid
          in: path
          description: The ID of the move request.
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: The request containing customer details.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/UpdateMoveRequestCustomerDetailsRequest'
            example:
              accountNumber: string
              salutation: string
              initials: string
              firstName: string
              lastName: string
              birthDate: string
              ssin: string
              ssinCountry: { }
              customerType: { }
              companyName: string
              organizationNumber: string
              vatNumber: string
              defaultPaymentMethod: { }
              invoiceAddress:
                streetName: string
                streetNumber: string
                streetNumberAddition: string
                postalCode: string
                buildingName: string
                locality: string
                city: string
                country: { }
                localizedDisplay: string
                lineOne: string
                lineTwo: string
              bankAccount: string
              emailAddress: string
              telephoneNumber: string
              mobileTelephoneNumber: string
              website: string
              culture: { }
              internalId: string
              customerGroupId: string
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/UpdateMoveRequestCustomerDetailsRequest'
            example:
              accountNumber: string
              salutation: string
              initials: string
              firstName: string
              lastName: string
              birthDate: string
              ssin: string
              ssinCountry: { }
              customerType: { }
              companyName: string
              organizationNumber: string
              vatNumber: string
              defaultPaymentMethod: { }
              invoiceAddress:
                streetName: string
                streetNumber: string
                streetNumberAddition: string
                postalCode: string
                buildingName: string
                locality: string
                city: string
                country: { }
                localizedDisplay: string
                lineOne: string
                lineTwo: string
              bankAccount: string
              emailAddress: string
              telephoneNumber: string
              mobileTelephoneNumber: string
              website: string
              culture: { }
              internalId: string
              customerGroupId: string
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/UpdateMoveRequestCustomerDetailsRequest'
            example:
              accountNumber: string
              salutation: string
              initials: string
              firstName: string
              lastName: string
              birthDate: string
              ssin: string
              ssinCountry: { }
              customerType: { }
              companyName: string
              organizationNumber: string
              vatNumber: string
              defaultPaymentMethod: { }
              invoiceAddress:
                streetName: string
                streetNumber: string
                streetNumberAddition: string
                postalCode: string
                buildingName: string
                locality: string
                city: string
                country: { }
                localizedDisplay: string
                lineOne: string
                lineTwo: string
              bankAccount: string
              emailAddress: string
              telephoneNumber: string
              mobileTelephoneNumber: string
              website: string
              culture: { }
              internalId: string
              customerGroupId: string
      responses:
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: string
                title: string
                status: 0
                detail: string
                instance: string
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: string
                title: string
                status: 0
                detail: string
                instance: string
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/MoveRequestDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/MoveRequestDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  externalId: string
                  customerDetails:
                    accountNumber: string
                    salutation: string
                    initials: string
                    firstName: string
                    lastName: string
                    birthDate: string
                    ssin: string
                    ssinCountry: { }
                    customerType: { }
                    companyName: string
                    organizationNumber: string
                    vatNumber: string
                    defaultPaymentMethod: { }
                    invoiceAddress:
                      streetName: string
                      streetNumber: string
                      streetNumberAddition: string
                      postalCode: string
                      buildingName: string
                      locality: string
                      city: string
                      country: { }
                      localizedDisplay: string
                      lineOne: string
                      lineTwo: string
                    bankAccount: string
                    emailAddress: string
                    telephoneNumber: string
                    mobileTelephoneNumber: string
                    website: string
                    culture: { }
                    internalId: string
                    createdOrLinked: true
                    errors:
                      - key: { }
                        correlationId: string
                        message: string
                        messageValues:
                          - dataType: { }
                            value: string
                            capitalize: true
                    customerGroupId: string
                  serviceLocationDetails:
                    previousContractDetails:
                      contractId: string
                      contractNumber: string
                      contractSupplyStartDate: string
                      contractSupplyEndDate: string
                      customerId: string
                      customerDisplayName: string
                      customerAccountNumber: string
                    currentContractDetails:
                      contractId: string
                      contractNumber: string
                      contractSupplyStartDate: string
                      contractSupplyEndDate: string
                      customerId: string
                      customerDisplayName: string
                      customerAccountNumber: string
                    owner:
                      customerId: string
                      shortDisplayName: string
                      accountNumber: string
                      managementRelationType: { }
                    address:
                      streetName: string
                      streetNumber: string
                      streetNumberAddition: string
                      postalCode: string
                      buildingName: string
                      locality: string
                      city: string
                      country: { }
                      localizedDisplay: string
                      lineOne: string
                      lineTwo: string
                    services:
                      - externalIdentifier: string
                        utilityType: { }
                    linked: true
                    internalId: string
                    errors:
                      - key: { }
                        correlationId: string
                        message: string
                        messageValues:
                          - dataType: { }
                            value: string
                            capitalize: true
                  measurementDetails:
                    - internalMeterId: string
                      externalChannelIdentifier: string
                      meterSerialNumber: string
                      utilityType: { }
                      unitOfMeasure: { }
                      timeOfUse: string
                      value: 0
                      timeZone: string
                      errors:
                        - key: { }
                          correlationId: string
                          message: string
                          messageValues:
                            - dataType: { }
                              value: string
                              capitalize: true
                  contractDetails:
                    productId: string
                    usePropertyGroupProduct: true
                    estimations:
                      - utilityType: { }
                        unitOfMeasure: { }
                        meteringType: { }
                        value: 0
                        consumerGroupId: string
                    errors:
                      - key: { }
                        correlationId: string
                        message: string
                        messageValues:
                          - dataType: { }
                            value: string
                            capitalize: true
                    internalContractId: string
                    externalContractId: string
                    contractNumber: string
                    createdOrLinked: true
                    serviceLocationsCount: 0
                    billingProperties:
                      billingMethod: { }
                  moveRequestType: { }
                  status: { }
                  mutationDateTime: string
                  customMessage: string
                  attachmentSignatures:
                    - culture: { }
                      attachmentFileName: string
                      errorCode: { }
                      origin: { }
                      productAttachmentId: string
                      attachmentFileId: string
                      entityAttachmentGroupId: string
                      signDate: string
                      viewedDate: string
                  hasAnyErrors: true
            text/json:
              schema:
                $ref: '#/components/schemas/MoveRequestDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  externalId: string
                  customerDetails:
                    accountNumber: string
                    salutation: string
                    initials: string
                    firstName: string
                    lastName: string
                    birthDate: string
                    ssin: string
                    ssinCountry: { }
                    customerType: { }
                    companyName: string
                    organizationNumber: string
                    vatNumber: string
                    defaultPaymentMethod: { }
                    invoiceAddress:
                      streetName: string
                      streetNumber: string
                      streetNumberAddition: string
                      postalCode: string
                      buildingName: string
                      locality: string
                      city: string
                      country: { }
                      localizedDisplay: string
                      lineOne: string
                      lineTwo: string
                    bankAccount: string
                    emailAddress: string
                    telephoneNumber: string
                    mobileTelephoneNumber: string
                    website: string
                    culture: { }
                    internalId: string
                    createdOrLinked: true
                    errors:
                      - key: { }
                        correlationId: string
                        message: string
                        messageValues:
                          - dataType: { }
                            value: string
                            capitalize: true
                    customerGroupId: string
                  serviceLocationDetails:
                    previousContractDetails:
                      contractId: string
                      contractNumber: string
                      contractSupplyStartDate: string
                      contractSupplyEndDate: string
                      customerId: string
                      customerDisplayName: string
                      customerAccountNumber: string
                    currentContractDetails:
                      contractId: string
                      contractNumber: string
                      contractSupplyStartDate: string
                      contractSupplyEndDate: string
                      customerId: string
                      customerDisplayName: string
                      customerAccountNumber: string
                    owner:
                      customerId: string
                      shortDisplayName: string
                      accountNumber: string
                      managementRelationType: { }
                    address:
                      streetName: string
                      streetNumber: string
                      streetNumberAddition: string
                      postalCode: string
                      buildingName: string
                      locality: string
                      city: string
                      country: { }
                      localizedDisplay: string
                      lineOne: string
                      lineTwo: string
                    services:
                      - externalIdentifier: string
                        utilityType: { }
                    linked: true
                    internalId: string
                    errors:
                      - key: { }
                        correlationId: string
                        message: string
                        messageValues:
                          - dataType: { }
                            value: string
                            capitalize: true
                  measurementDetails:
                    - internalMeterId: string
                      externalChannelIdentifier: string
                      meterSerialNumber: string
                      utilityType: { }
                      unitOfMeasure: { }
                      timeOfUse: string
                      value: 0
                      timeZone: string
                      errors:
                        - key: { }
                          correlationId: string
                          message: string
                          messageValues:
                            - dataType: { }
                              value: string
                              capitalize: true
                  contractDetails:
                    productId: string
                    usePropertyGroupProduct: true
                    estimations:
                      - utilityType: { }
                        unitOfMeasure: { }
                        meteringType: { }
                        value: 0
                        consumerGroupId: string
                    errors:
                      - key: { }
                        correlationId: string
                        message: string
                        messageValues:
                          - dataType: { }
                            value: string
                            capitalize: true
                    internalContractId: string
                    externalContractId: string
                    contractNumber: string
                    createdOrLinked: true
                    serviceLocationsCount: 0
                    billingProperties:
                      billingMethod: { }
                  moveRequestType: { }
                  status: { }
                  mutationDateTime: string
                  customMessage: string
                  attachmentSignatures:
                    - culture: { }
                      attachmentFileName: string
                      errorCode: { }
                      origin: { }
                      productAttachmentId: string
                      attachmentFileId: string
                      entityAttachmentGroupId: string
                      signDate: string
                      viewedDate: string
                  hasAnyErrors: true
  '/MoveRequests/{moverequestuuid}/updateservicelocationdetails':
    post:
      tags:
        - MoveRequests
      summary: Update location details of a move request.
      description: Update location details of a move request.
      operationId: post-moverequests-moverequestuuid-updateservicelocationdetails
      parameters:
        - name: moverequestuuid
          in: path
          description: The ID of the move request.
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: The request containing location details.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/UpdateMoveRequestServiceLocationDetailsRequest'
            example:
              address:
                streetName: string
                streetNumber: string
                streetNumberAddition: string
                postalCode: string
                buildingName: string
                locality: string
                city: string
                country: { }
                localizedDisplay: string
                lineOne: string
                lineTwo: string
              services:
                - externalIdentifier: string
                  utilityType: { }
              internalId: string
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/UpdateMoveRequestServiceLocationDetailsRequest'
            example:
              address:
                streetName: string
                streetNumber: string
                streetNumberAddition: string
                postalCode: string
                buildingName: string
                locality: string
                city: string
                country: { }
                localizedDisplay: string
                lineOne: string
                lineTwo: string
              services:
                - externalIdentifier: string
                  utilityType: { }
              internalId: string
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/UpdateMoveRequestServiceLocationDetailsRequest'
            example:
              address:
                streetName: string
                streetNumber: string
                streetNumberAddition: string
                postalCode: string
                buildingName: string
                locality: string
                city: string
                country: { }
                localizedDisplay: string
                lineOne: string
                lineTwo: string
              services:
                - externalIdentifier: string
                  utilityType: { }
              internalId: string
      responses:
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: string
                title: string
                status: 0
                detail: string
                instance: string
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: string
                title: string
                status: 0
                detail: string
                instance: string
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/MoveRequestDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/MoveRequestDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  externalId: string
                  customerDetails:
                    accountNumber: string
                    salutation: string
                    initials: string
                    firstName: string
                    lastName: string
                    birthDate: string
                    ssin: string
                    ssinCountry: { }
                    customerType: { }
                    companyName: string
                    organizationNumber: string
                    vatNumber: string
                    defaultPaymentMethod: { }
                    invoiceAddress:
                      streetName: string
                      streetNumber: string
                      streetNumberAddition: string
                      postalCode: string
                      buildingName: string
                      locality: string
                      city: string
                      country: { }
                      localizedDisplay: string
                      lineOne: string
                      lineTwo: string
                    bankAccount: string
                    emailAddress: string
                    telephoneNumber: string
                    mobileTelephoneNumber: string
                    website: string
                    culture: { }
                    internalId: string
                    createdOrLinked: true
                    errors:
                      - key: { }
                        correlationId: string
                        message: string
                        messageValues:
                          - dataType: { }
                            value: string
                            capitalize: true
                    customerGroupId: string
                  serviceLocationDetails:
                    previousContractDetails:
                      contractId: string
                      contractNumber: string
                      contractSupplyStartDate: string
                      contractSupplyEndDate: string
                      customerId: string
                      customerDisplayName: string
                      customerAccountNumber: string
                    currentContractDetails:
                      contractId: string
                      contractNumber: string
                      contractSupplyStartDate: string
                      contractSupplyEndDate: string
                      customerId: string
                      customerDisplayName: string
                      customerAccountNumber: string
                    owner:
                      customerId: string
                      shortDisplayName: string
                      accountNumber: string
                      managementRelationType: { }
                    address:
                      streetName: string
                      streetNumber: string
                      streetNumberAddition: string
                      postalCode: string
                      buildingName: string
                      locality: string
                      city: string
                      country: { }
                      localizedDisplay: string
                      lineOne: string
                      lineTwo: string
                    services:
                      - externalIdentifier: string
                        utilityType: { }
                    linked: true
                    internalId: string
                    errors:
                      - key: { }
                        correlationId: string
                        message: string
                        messageValues:
                          - dataType: { }
                            value: string
                            capitalize: true
                  measurementDetails:
                    - internalMeterId: string
                      externalChannelIdentifier: string
                      meterSerialNumber: string
                      utilityType: { }
                      unitOfMeasure: { }
                      timeOfUse: string
                      value: 0
                      timeZone: string
                      errors:
                        - key: { }
                          correlationId: string
                          message: string
                          messageValues:
                            - dataType: { }
                              value: string
                              capitalize: true
                  contractDetails:
                    productId: string
                    usePropertyGroupProduct: true
                    estimations:
                      - utilityType: { }
                        unitOfMeasure: { }
                        meteringType: { }
                        value: 0
                        consumerGroupId: string
                    errors:
                      - key: { }
                        correlationId: string
                        message: string
                        messageValues:
                          - dataType: { }
                            value: string
                            capitalize: true
                    internalContractId: string
                    externalContractId: string
                    contractNumber: string
                    createdOrLinked: true
                    serviceLocationsCount: 0
                    billingProperties:
                      billingMethod: { }
                  moveRequestType: { }
                  status: { }
                  mutationDateTime: string
                  customMessage: string
                  attachmentSignatures:
                    - culture: { }
                      attachmentFileName: string
                      errorCode: { }
                      origin: { }
                      productAttachmentId: string
                      attachmentFileId: string
                      entityAttachmentGroupId: string
                      signDate: string
                      viewedDate: string
                  hasAnyErrors: true
            text/json:
              schema:
                $ref: '#/components/schemas/MoveRequestDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  externalId: string
                  customerDetails:
                    accountNumber: string
                    salutation: string
                    initials: string
                    firstName: string
                    lastName: string
                    birthDate: string
                    ssin: string
                    ssinCountry: { }
                    customerType: { }
                    companyName: string
                    organizationNumber: string
                    vatNumber: string
                    defaultPaymentMethod: { }
                    invoiceAddress:
                      streetName: string
                      streetNumber: string
                      streetNumberAddition: string
                      postalCode: string
                      buildingName: string
                      locality: string
                      city: string
                      country: { }
                      localizedDisplay: string
                      lineOne: string
                      lineTwo: string
                    bankAccount: string
                    emailAddress: string
                    telephoneNumber: string
                    mobileTelephoneNumber: string
                    website: string
                    culture: { }
                    internalId: string
                    createdOrLinked: true
                    errors:
                      - key: { }
                        correlationId: string
                        message: string
                        messageValues:
                          - dataType: { }
                            value: string
                            capitalize: true
                    customerGroupId: string
                  serviceLocationDetails:
                    previousContractDetails:
                      contractId: string
                      contractNumber: string
                      contractSupplyStartDate: string
                      contractSupplyEndDate: string
                      customerId: string
                      customerDisplayName: string
                      customerAccountNumber: string
                    currentContractDetails:
                      contractId: string
                      contractNumber: string
                      contractSupplyStartDate: string
                      contractSupplyEndDate: string
                      customerId: string
                      customerDisplayName: string
                      customerAccountNumber: string
                    owner:
                      customerId: string
                      shortDisplayName: string
                      accountNumber: string
                      managementRelationType: { }
                    address:
                      streetName: string
                      streetNumber: string
                      streetNumberAddition: string
                      postalCode: string
                      buildingName: string
                      locality: string
                      city: string
                      country: { }
                      localizedDisplay: string
                      lineOne: string
                      lineTwo: string
                    services:
                      - externalIdentifier: string
                        utilityType: { }
                    linked: true
                    internalId: string
                    errors:
                      - key: { }
                        correlationId: string
                        message: string
                        messageValues:
                          - dataType: { }
                            value: string
                            capitalize: true
                  measurementDetails:
                    - internalMeterId: string
                      externalChannelIdentifier: string
                      meterSerialNumber: string
                      utilityType: { }
                      unitOfMeasure: { }
                      timeOfUse: string
                      value: 0
                      timeZone: string
                      errors:
                        - key: { }
                          correlationId: string
                          message: string
                          messageValues:
                            - dataType: { }
                              value: string
                              capitalize: true
                  contractDetails:
                    productId: string
                    usePropertyGroupProduct: true
                    estimations:
                      - utilityType: { }
                        unitOfMeasure: { }
                        meteringType: { }
                        value: 0
                        consumerGroupId: string
                    errors:
                      - key: { }
                        correlationId: string
                        message: string
                        messageValues:
                          - dataType: { }
                            value: string
                            capitalize: true
                    internalContractId: string
                    externalContractId: string
                    contractNumber: string
                    createdOrLinked: true
                    serviceLocationsCount: 0
                    billingProperties:
                      billingMethod: { }
                  moveRequestType: { }
                  status: { }
                  mutationDateTime: string
                  customMessage: string
                  attachmentSignatures:
                    - culture: { }
                      attachmentFileName: string
                      errorCode: { }
                      origin: { }
                      productAttachmentId: string
                      attachmentFileId: string
                      entityAttachmentGroupId: string
                      signDate: string
                      viewedDate: string
                  hasAnyErrors: true
  '/MoveRequests/{moverequestuuid}/updatemeasurementdetails':
    post:
      tags:
        - MoveRequests
      summary: Update measurement details of a move request.
      description: Update measurement details of a move request.
      operationId: post-moverequests-moverequestuuid-updatemeasurementdetails
      parameters:
        - name: moverequestuuid
          in: path
          description: The ID of the move request.
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: The request containing measurement details.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/UpdateMoveRequestMeasurementDetailsRequest'
            example:
              measurements:
                - internalMeterId: string
                  externalChannelIdentifier: string
                  meterSerialNumber: string
                  utilityType: { }
                  unitOfMeasure: { }
                  timeOfUse: string
                  value: 0
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/UpdateMoveRequestMeasurementDetailsRequest'
            example:
              measurements:
                - internalMeterId: string
                  externalChannelIdentifier: string
                  meterSerialNumber: string
                  utilityType: { }
                  unitOfMeasure: { }
                  timeOfUse: string
                  value: 0
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/UpdateMoveRequestMeasurementDetailsRequest'
            example:
              measurements:
                - internalMeterId: string
                  externalChannelIdentifier: string
                  meterSerialNumber: string
                  utilityType: { }
                  unitOfMeasure: { }
                  timeOfUse: string
                  value: 0
      responses:
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: string
                title: string
                status: 0
                detail: string
                instance: string
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: string
                title: string
                status: 0
                detail: string
                instance: string
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/MoveRequestDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/MoveRequestDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  externalId: string
                  customerDetails:
                    accountNumber: string
                    salutation: string
                    initials: string
                    firstName: string
                    lastName: string
                    birthDate: string
                    ssin: string
                    ssinCountry: { }
                    customerType: { }
                    companyName: string
                    organizationNumber: string
                    vatNumber: string
                    defaultPaymentMethod: { }
                    invoiceAddress:
                      streetName: string
                      streetNumber: string
                      streetNumberAddition: string
                      postalCode: string
                      buildingName: string
                      locality: string
                      city: string
                      country: { }
                      localizedDisplay: string
                      lineOne: string
                      lineTwo: string
                    bankAccount: string
                    emailAddress: string
                    telephoneNumber: string
                    mobileTelephoneNumber: string
                    website: string
                    culture: { }
                    internalId: string
                    createdOrLinked: true
                    errors:
                      - key: { }
                        correlationId: string
                        message: string
                        messageValues:
                          - dataType: { }
                            value: string
                            capitalize: true
                    customerGroupId: string
                  serviceLocationDetails:
                    previousContractDetails:
                      contractId: string
                      contractNumber: string
                      contractSupplyStartDate: string
                      contractSupplyEndDate: string
                      customerId: string
                      customerDisplayName: string
                      customerAccountNumber: string
                    currentContractDetails:
                      contractId: string
                      contractNumber: string
                      contractSupplyStartDate: string
                      contractSupplyEndDate: string
                      customerId: string
                      customerDisplayName: string
                      customerAccountNumber: string
                    owner:
                      customerId: string
                      shortDisplayName: string
                      accountNumber: string
                      managementRelationType: { }
                    address:
                      streetName: string
                      streetNumber: string
                      streetNumberAddition: string
                      postalCode: string
                      buildingName: string
                      locality: string
                      city: string
                      country: { }
                      localizedDisplay: string
                      lineOne: string
                      lineTwo: string
                    services:
                      - externalIdentifier: string
                        utilityType: { }
                    linked: true
                    internalId: string
                    errors:
                      - key: { }
                        correlationId: string
                        message: string
                        messageValues:
                          - dataType: { }
                            value: string
                            capitalize: true
                  measurementDetails:
                    - internalMeterId: string
                      externalChannelIdentifier: string
                      meterSerialNumber: string
                      utilityType: { }
                      unitOfMeasure: { }
                      timeOfUse: string
                      value: 0
                      timeZone: string
                      errors:
                        - key: { }
                          correlationId: string
                          message: string
                          messageValues:
                            - dataType: { }
                              value: string
                              capitalize: true
                  contractDetails:
                    productId: string
                    usePropertyGroupProduct: true
                    estimations:
                      - utilityType: { }
                        unitOfMeasure: { }
                        meteringType: { }
                        value: 0
                        consumerGroupId: string
                    errors:
                      - key: { }
                        correlationId: string
                        message: string
                        messageValues:
                          - dataType: { }
                            value: string
                            capitalize: true
                    internalContractId: string
                    externalContractId: string
                    contractNumber: string
                    createdOrLinked: true
                    serviceLocationsCount: 0
                    billingProperties:
                      billingMethod: { }
                  moveRequestType: { }
                  status: { }
                  mutationDateTime: string
                  customMessage: string
                  attachmentSignatures:
                    - culture: { }
                      attachmentFileName: string
                      errorCode: { }
                      origin: { }
                      productAttachmentId: string
                      attachmentFileId: string
                      entityAttachmentGroupId: string
                      signDate: string
                      viewedDate: string
                  hasAnyErrors: true
            text/json:
              schema:
                $ref: '#/components/schemas/MoveRequestDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  externalId: string
                  customerDetails:
                    accountNumber: string
                    salutation: string
                    initials: string
                    firstName: string
                    lastName: string
                    birthDate: string
                    ssin: string
                    ssinCountry: { }
                    customerType: { }
                    companyName: string
                    organizationNumber: string
                    vatNumber: string
                    defaultPaymentMethod: { }
                    invoiceAddress:
                      streetName: string
                      streetNumber: string
                      streetNumberAddition: string
                      postalCode: string
                      buildingName: string
                      locality: string
                      city: string
                      country: { }
                      localizedDisplay: string
                      lineOne: string
                      lineTwo: string
                    bankAccount: string
                    emailAddress: string
                    telephoneNumber: string
                    mobileTelephoneNumber: string
                    website: string
                    culture: { }
                    internalId: string
                    createdOrLinked: true
                    errors:
                      - key: { }
                        correlationId: string
                        message: string
                        messageValues:
                          - dataType: { }
                            value: string
                            capitalize: true
                    customerGroupId: string
                  serviceLocationDetails:
                    previousContractDetails:
                      contractId: string
                      contractNumber: string
                      contractSupplyStartDate: string
                      contractSupplyEndDate: string
                      customerId: string
                      customerDisplayName: string
                      customerAccountNumber: string
                    currentContractDetails:
                      contractId: string
                      contractNumber: string
                      contractSupplyStartDate: string
                      contractSupplyEndDate: string
                      customerId: string
                      customerDisplayName: string
                      customerAccountNumber: string
                    owner:
                      customerId: string
                      shortDisplayName: string
                      accountNumber: string
                      managementRelationType: { }
                    address:
                      streetName: string
                      streetNumber: string
                      streetNumberAddition: string
                      postalCode: string
                      buildingName: string
                      locality: string
                      city: string
                      country: { }
                      localizedDisplay: string
                      lineOne: string
                      lineTwo: string
                    services:
                      - externalIdentifier: string
                        utilityType: { }
                    linked: true
                    internalId: string
                    errors:
                      - key: { }
                        correlationId: string
                        message: string
                        messageValues:
                          - dataType: { }
                            value: string
                            capitalize: true
                  measurementDetails:
                    - internalMeterId: string
                      externalChannelIdentifier: string
                      meterSerialNumber: string
                      utilityType: { }
                      unitOfMeasure: { }
                      timeOfUse: string
                      value: 0
                      timeZone: string
                      errors:
                        - key: { }
                          correlationId: string
                          message: string
                          messageValues:
                            - dataType: { }
                              value: string
                              capitalize: true
                  contractDetails:
                    productId: string
                    usePropertyGroupProduct: true
                    estimations:
                      - utilityType: { }
                        unitOfMeasure: { }
                        meteringType: { }
                        value: 0
                        consumerGroupId: string
                    errors:
                      - key: { }
                        correlationId: string
                        message: string
                        messageValues:
                          - dataType: { }
                            value: string
                            capitalize: true
                    internalContractId: string
                    externalContractId: string
                    contractNumber: string
                    createdOrLinked: true
                    serviceLocationsCount: 0
                    billingProperties:
                      billingMethod: { }
                  moveRequestType: { }
                  status: { }
                  mutationDateTime: string
                  customMessage: string
                  attachmentSignatures:
                    - culture: { }
                      attachmentFileName: string
                      errorCode: { }
                      origin: { }
                      productAttachmentId: string
                      attachmentFileId: string
                      entityAttachmentGroupId: string
                      signDate: string
                      viewedDate: string
                  hasAnyErrors: true
  '/MoveRequests/{moverequestuuid}/process':
    post:
      tags:
        - MoveRequests
      summary: Process uncompleted move request.
      description: 'This action can only be executed on move requests, which are not yet rejected or processed.'
      operationId: post-moverequests-moverequestuuid-process
      parameters:
        - name: moverequestuuid
          in: path
          description: The ID of the move request.
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: string
                title: string
                status: 0
                detail: string
                instance: string
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: string
                title: string
                status: 0
                detail: string
                instance: string
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/MoveRequestDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/MoveRequestDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  externalId: string
                  customerDetails:
                    accountNumber: string
                    salutation: string
                    initials: string
                    firstName: string
                    lastName: string
                    birthDate: string
                    ssin: string
                    ssinCountry: { }
                    customerType: { }
                    companyName: string
                    organizationNumber: string
                    vatNumber: string
                    defaultPaymentMethod: { }
                    invoiceAddress:
                      streetName: string
                      streetNumber: string
                      streetNumberAddition: string
                      postalCode: string
                      buildingName: string
                      locality: string
                      city: string
                      country: { }
                      localizedDisplay: string
                      lineOne: string
                      lineTwo: string
                    bankAccount: string
                    emailAddress: string
                    telephoneNumber: string
                    mobileTelephoneNumber: string
                    website: string
                    culture: { }
                    internalId: string
                    createdOrLinked: true
                    errors:
                      - key: { }
                        correlationId: string
                        message: string
                        messageValues:
                          - dataType: { }
                            value: string
                            capitalize: true
                    customerGroupId: string
                  serviceLocationDetails:
                    previousContractDetails:
                      contractId: string
                      contractNumber: string
                      contractSupplyStartDate: string
                      contractSupplyEndDate: string
                      customerId: string
                      customerDisplayName: string
                      customerAccountNumber: string
                    currentContractDetails:
                      contractId: string
                      contractNumber: string
                      contractSupplyStartDate: string
                      contractSupplyEndDate: string
                      customerId: string
                      customerDisplayName: string
                      customerAccountNumber: string
                    owner:
                      customerId: string
                      shortDisplayName: string
                      accountNumber: string
                      managementRelationType: { }
                    address:
                      streetName: string
                      streetNumber: string
                      streetNumberAddition: string
                      postalCode: string
                      buildingName: string
                      locality: string
                      city: string
                      country: { }
                      localizedDisplay: string
                      lineOne: string
                      lineTwo: string
                    services:
                      - externalIdentifier: string
                        utilityType: { }
                    linked: true
                    internalId: string
                    errors:
                      - key: { }
                        correlationId: string
                        message: string
                        messageValues:
                          - dataType: { }
                            value: string
                            capitalize: true
                  measurementDetails:
                    - internalMeterId: string
                      externalChannelIdentifier: string
                      meterSerialNumber: string
                      utilityType: { }
                      unitOfMeasure: { }
                      timeOfUse: string
                      value: 0
                      timeZone: string
                      errors:
                        - key: { }
                          correlationId: string
                          message: string
                          messageValues:
                            - dataType: { }
                              value: string
                              capitalize: true
                  contractDetails:
                    productId: string
                    usePropertyGroupProduct: true
                    estimations:
                      - utilityType: { }
                        unitOfMeasure: { }
                        meteringType: { }
                        value: 0
                        consumerGroupId: string
                    errors:
                      - key: { }
                        correlationId: string
                        message: string
                        messageValues:
                          - dataType: { }
                            value: string
                            capitalize: true
                    internalContractId: string
                    externalContractId: string
                    contractNumber: string
                    createdOrLinked: true
                    serviceLocationsCount: 0
                    billingProperties:
                      billingMethod: { }
                  moveRequestType: { }
                  status: { }
                  mutationDateTime: string
                  customMessage: string
                  attachmentSignatures:
                    - culture: { }
                      attachmentFileName: string
                      errorCode: { }
                      origin: { }
                      productAttachmentId: string
                      attachmentFileId: string
                      entityAttachmentGroupId: string
                      signDate: string
                      viewedDate: string
                  hasAnyErrors: true
            text/json:
              schema:
                $ref: '#/components/schemas/MoveRequestDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  externalId: string
                  customerDetails:
                    accountNumber: string
                    salutation: string
                    initials: string
                    firstName: string
                    lastName: string
                    birthDate: string
                    ssin: string
                    ssinCountry: { }
                    customerType: { }
                    companyName: string
                    organizationNumber: string
                    vatNumber: string
                    defaultPaymentMethod: { }
                    invoiceAddress:
                      streetName: string
                      streetNumber: string
                      streetNumberAddition: string
                      postalCode: string
                      buildingName: string
                      locality: string
                      city: string
                      country: { }
                      localizedDisplay: string
                      lineOne: string
                      lineTwo: string
                    bankAccount: string
                    emailAddress: string
                    telephoneNumber: string
                    mobileTelephoneNumber: string
                    website: string
                    culture: { }
                    internalId: string
                    createdOrLinked: true
                    errors:
                      - key: { }
                        correlationId: string
                        message: string
                        messageValues:
                          - dataType: { }
                            value: string
                            capitalize: true
                    customerGroupId: string
                  serviceLocationDetails:
                    previousContractDetails:
                      contractId: string
                      contractNumber: string
                      contractSupplyStartDate: string
                      contractSupplyEndDate: string
                      customerId: string
                      customerDisplayName: string
                      customerAccountNumber: string
                    currentContractDetails:
                      contractId: string
                      contractNumber: string
                      contractSupplyStartDate: string
                      contractSupplyEndDate: string
                      customerId: string
                      customerDisplayName: string
                      customerAccountNumber: string
                    owner:
                      customerId: string
                      shortDisplayName: string
                      accountNumber: string
                      managementRelationType: { }
                    address:
                      streetName: string
                      streetNumber: string
                      streetNumberAddition: string
                      postalCode: string
                      buildingName: string
                      locality: string
                      city: string
                      country: { }
                      localizedDisplay: string
                      lineOne: string
                      lineTwo: string
                    services:
                      - externalIdentifier: string
                        utilityType: { }
                    linked: true
                    internalId: string
                    errors:
                      - key: { }
                        correlationId: string
                        message: string
                        messageValues:
                          - dataType: { }
                            value: string
                            capitalize: true
                  measurementDetails:
                    - internalMeterId: string
                      externalChannelIdentifier: string
                      meterSerialNumber: string
                      utilityType: { }
                      unitOfMeasure: { }
                      timeOfUse: string
                      value: 0
                      timeZone: string
                      errors:
                        - key: { }
                          correlationId: string
                          message: string
                          messageValues:
                            - dataType: { }
                              value: string
                              capitalize: true
                  contractDetails:
                    productId: string
                    usePropertyGroupProduct: true
                    estimations:
                      - utilityType: { }
                        unitOfMeasure: { }
                        meteringType: { }
                        value: 0
                        consumerGroupId: string
                    errors:
                      - key: { }
                        correlationId: string
                        message: string
                        messageValues:
                          - dataType: { }
                            value: string
                            capitalize: true
                    internalContractId: string
                    externalContractId: string
                    contractNumber: string
                    createdOrLinked: true
                    serviceLocationsCount: 0
                    billingProperties:
                      billingMethod: { }
                  moveRequestType: { }
                  status: { }
                  mutationDateTime: string
                  customMessage: string
                  attachmentSignatures:
                    - culture: { }
                      attachmentFileName: string
                      errorCode: { }
                      origin: { }
                      productAttachmentId: string
                      attachmentFileId: string
                      entityAttachmentGroupId: string
                      signDate: string
                      viewedDate: string
                  hasAnyErrors: true
  '/MoveRequests/{moverequestuuid}/reject':
    post:
      tags:
        - MoveRequests
      summary: Reject uncompleted move request.
      description: This action is irreversible.
      operationId: post-moverequests-moverequestuuid-reject
      parameters:
        - name: moverequestuuid
          in: path
          description: The ID of the move request.
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: string
                title: string
                status: 0
                detail: string
                instance: string
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: string
                title: string
                status: 0
                detail: string
                instance: string
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/MoveRequestDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/MoveRequestDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  externalId: string
                  customerDetails:
                    accountNumber: string
                    salutation: string
                    initials: string
                    firstName: string
                    lastName: string
                    birthDate: string
                    ssin: string
                    ssinCountry: { }
                    customerType: { }
                    companyName: string
                    organizationNumber: string
                    vatNumber: string
                    defaultPaymentMethod: { }
                    invoiceAddress:
                      streetName: string
                      streetNumber: string
                      streetNumberAddition: string
                      postalCode: string
                      buildingName: string
                      locality: string
                      city: string
                      country: { }
                      localizedDisplay: string
                      lineOne: string
                      lineTwo: string
                    bankAccount: string
                    emailAddress: string
                    telephoneNumber: string
                    mobileTelephoneNumber: string
                    website: string
                    culture: { }
                    internalId: string
                    createdOrLinked: true
                    errors:
                      - key: { }
                        correlationId: string
                        message: string
                        messageValues:
                          - dataType: { }
                            value: string
                            capitalize: true
                    customerGroupId: string
                  serviceLocationDetails:
                    previousContractDetails:
                      contractId: string
                      contractNumber: string
                      contractSupplyStartDate: string
                      contractSupplyEndDate: string
                      customerId: string
                      customerDisplayName: string
                      customerAccountNumber: string
                    currentContractDetails:
                      contractId: string
                      contractNumber: string
                      contractSupplyStartDate: string
                      contractSupplyEndDate: string
                      customerId: string
                      customerDisplayName: string
                      customerAccountNumber: string
                    owner:
                      customerId: string
                      shortDisplayName: string
                      accountNumber: string
                      managementRelationType: { }
                    address:
                      streetName: string
                      streetNumber: string
                      streetNumberAddition: string
                      postalCode: string
                      buildingName: string
                      locality: string
                      city: string
                      country: { }
                      localizedDisplay: string
                      lineOne: string
                      lineTwo: string
                    services:
                      - externalIdentifier: string
                        utilityType: { }
                    linked: true
                    internalId: string
                    errors:
                      - key: { }
                        correlationId: string
                        message: string
                        messageValues:
                          - dataType: { }
                            value: string
                            capitalize: true
                  measurementDetails:
                    - internalMeterId: string
                      externalChannelIdentifier: string
                      meterSerialNumber: string
                      utilityType: { }
                      unitOfMeasure: { }
                      timeOfUse: string
                      value: 0
                      timeZone: string
                      errors:
                        - key: { }
                          correlationId: string
                          message: string
                          messageValues:
                            - dataType: { }
                              value: string
                              capitalize: true
                  contractDetails:
                    productId: string
                    usePropertyGroupProduct: true
                    estimations:
                      - utilityType: { }
                        unitOfMeasure: { }
                        meteringType: { }
                        value: 0
                        consumerGroupId: string
                    errors:
                      - key: { }
                        correlationId: string
                        message: string
                        messageValues:
                          - dataType: { }
                            value: string
                            capitalize: true
                    internalContractId: string
                    externalContractId: string
                    contractNumber: string
                    createdOrLinked: true
                    serviceLocationsCount: 0
                    billingProperties:
                      billingMethod: { }
                  moveRequestType: { }
                  status: { }
                  mutationDateTime: string
                  customMessage: string
                  attachmentSignatures:
                    - culture: { }
                      attachmentFileName: string
                      errorCode: { }
                      origin: { }
                      productAttachmentId: string
                      attachmentFileId: string
                      entityAttachmentGroupId: string
                      signDate: string
                      viewedDate: string
                  hasAnyErrors: true
            text/json:
              schema:
                $ref: '#/components/schemas/MoveRequestDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  externalId: string
                  customerDetails:
                    accountNumber: string
                    salutation: string
                    initials: string
                    firstName: string
                    lastName: string
                    birthDate: string
                    ssin: string
                    ssinCountry: { }
                    customerType: { }
                    companyName: string
                    organizationNumber: string
                    vatNumber: string
                    defaultPaymentMethod: { }
                    invoiceAddress:
                      streetName: string
                      streetNumber: string
                      streetNumberAddition: string
                      postalCode: string
                      buildingName: string
                      locality: string
                      city: string
                      country: { }
                      localizedDisplay: string
                      lineOne: string
                      lineTwo: string
                    bankAccount: string
                    emailAddress: string
                    telephoneNumber: string
                    mobileTelephoneNumber: string
                    website: string
                    culture: { }
                    internalId: string
                    createdOrLinked: true
                    errors:
                      - key: { }
                        correlationId: string
                        message: string
                        messageValues:
                          - dataType: { }
                            value: string
                            capitalize: true
                    customerGroupId: string
                  serviceLocationDetails:
                    previousContractDetails:
                      contractId: string
                      contractNumber: string
                      contractSupplyStartDate: string
                      contractSupplyEndDate: string
                      customerId: string
                      customerDisplayName: string
                      customerAccountNumber: string
                    currentContractDetails:
                      contractId: string
                      contractNumber: string
                      contractSupplyStartDate: string
                      contractSupplyEndDate: string
                      customerId: string
                      customerDisplayName: string
                      customerAccountNumber: string
                    owner:
                      customerId: string
                      shortDisplayName: string
                      accountNumber: string
                      managementRelationType: { }
                    address:
                      streetName: string
                      streetNumber: string
                      streetNumberAddition: string
                      postalCode: string
                      buildingName: string
                      locality: string
                      city: string
                      country: { }
                      localizedDisplay: string
                      lineOne: string
                      lineTwo: string
                    services:
                      - externalIdentifier: string
                        utilityType: { }
                    linked: true
                    internalId: string
                    errors:
                      - key: { }
                        correlationId: string
                        message: string
                        messageValues:
                          - dataType: { }
                            value: string
                            capitalize: true
                  measurementDetails:
                    - internalMeterId: string
                      externalChannelIdentifier: string
                      meterSerialNumber: string
                      utilityType: { }
                      unitOfMeasure: { }
                      timeOfUse: string
                      value: 0
                      timeZone: string
                      errors:
                        - key: { }
                          correlationId: string
                          message: string
                          messageValues:
                            - dataType: { }
                              value: string
                              capitalize: true
                  contractDetails:
                    productId: string
                    usePropertyGroupProduct: true
                    estimations:
                      - utilityType: { }
                        unitOfMeasure: { }
                        meteringType: { }
                        value: 0
                        consumerGroupId: string
                    errors:
                      - key: { }
                        correlationId: string
                        message: string
                        messageValues:
                          - dataType: { }
                            value: string
                            capitalize: true
                    internalContractId: string
                    externalContractId: string
                    contractNumber: string
                    createdOrLinked: true
                    serviceLocationsCount: 0
                    billingProperties:
                      billingMethod: { }
                  moveRequestType: { }
                  status: { }
                  mutationDateTime: string
                  customMessage: string
                  attachmentSignatures:
                    - culture: { }
                      attachmentFileName: string
                      errorCode: { }
                      origin: { }
                      productAttachmentId: string
                      attachmentFileId: string
                      entityAttachmentGroupId: string
                      signDate: string
                      viewedDate: string
                  hasAnyErrors: true
  '/MoveRequests/{moverequestuuid}/setpending':
    post:
      tags:
        - MoveRequests
      summary: Mark uncompleted move request as pending.
      description: 'This action can only be executed on move requests, which are not yet rejected or processed.'
      operationId: post-moverequests-moverequestuuid-setpending
      parameters:
        - name: moverequestuuid
          in: path
          description: The ID of the move request.
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: The request containing pending details.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/SetMoveRequestToPendingRequest'
            example:
              newStatus: { }
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/SetMoveRequestToPendingRequest'
            example:
              newStatus: { }
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/SetMoveRequestToPendingRequest'
            example:
              newStatus: { }
      responses:
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: string
                title: string
                status: 0
                detail: string
                instance: string
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: string
                title: string
                status: 0
                detail: string
                instance: string
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/MoveRequestDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/MoveRequestDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  externalId: string
                  customerDetails:
                    accountNumber: string
                    salutation: string
                    initials: string
                    firstName: string
                    lastName: string
                    birthDate: string
                    ssin: string
                    ssinCountry: { }
                    customerType: { }
                    companyName: string
                    organizationNumber: string
                    vatNumber: string
                    defaultPaymentMethod: { }
                    invoiceAddress:
                      streetName: string
                      streetNumber: string
                      streetNumberAddition: string
                      postalCode: string
                      buildingName: string
                      locality: string
                      city: string
                      country: { }
                      localizedDisplay: string
                      lineOne: string
                      lineTwo: string
                    bankAccount: string
                    emailAddress: string
                    telephoneNumber: string
                    mobileTelephoneNumber: string
                    website: string
                    culture: { }
                    internalId: string
                    createdOrLinked: true
                    errors:
                      - key: { }
                        correlationId: string
                        message: string
                        messageValues:
                          - dataType: { }
                            value: string
                            capitalize: true
                    customerGroupId: string
                  serviceLocationDetails:
                    previousContractDetails:
                      contractId: string
                      contractNumber: string
                      contractSupplyStartDate: string
                      contractSupplyEndDate: string
                      customerId: string
                      customerDisplayName: string
                      customerAccountNumber: string
                    currentContractDetails:
                      contractId: string
                      contractNumber: string
                      contractSupplyStartDate: string
                      contractSupplyEndDate: string
                      customerId: string
                      customerDisplayName: string
                      customerAccountNumber: string
                    owner:
                      customerId: string
                      shortDisplayName: string
                      accountNumber: string
                      managementRelationType: { }
                    address:
                      streetName: string
                      streetNumber: string
                      streetNumberAddition: string
                      postalCode: string
                      buildingName: string
                      locality: string
                      city: string
                      country: { }
                      localizedDisplay: string
                      lineOne: string
                      lineTwo: string
                    services:
                      - externalIdentifier: string
                        utilityType: { }
                    linked: true
                    internalId: string
                    errors:
                      - key: { }
                        correlationId: string
                        message: string
                        messageValues:
                          - dataType: { }
                            value: string
                            capitalize: true
                  measurementDetails:
                    - internalMeterId: string
                      externalChannelIdentifier: string
                      meterSerialNumber: string
                      utilityType: { }
                      unitOfMeasure: { }
                      timeOfUse: string
                      value: 0
                      timeZone: string
                      errors:
                        - key: { }
                          correlationId: string
                          message: string
                          messageValues:
                            - dataType: { }
                              value: string
                              capitalize: true
                  contractDetails:
                    productId: string
                    usePropertyGroupProduct: true
                    estimations:
                      - utilityType: { }
                        unitOfMeasure: { }
                        meteringType: { }
                        value: 0
                        consumerGroupId: string
                    errors:
                      - key: { }
                        correlationId: string
                        message: string
                        messageValues:
                          - dataType: { }
                            value: string
                            capitalize: true
                    internalContractId: string
                    externalContractId: string
                    contractNumber: string
                    createdOrLinked: true
                    serviceLocationsCount: 0
                    billingProperties:
                      billingMethod: { }
                  moveRequestType: { }
                  status: { }
                  mutationDateTime: string
                  customMessage: string
                  attachmentSignatures:
                    - culture: { }
                      attachmentFileName: string
                      errorCode: { }
                      origin: { }
                      productAttachmentId: string
                      attachmentFileId: string
                      entityAttachmentGroupId: string
                      signDate: string
                      viewedDate: string
                  hasAnyErrors: true
            text/json:
              schema:
                $ref: '#/components/schemas/MoveRequestDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  externalId: string
                  customerDetails:
                    accountNumber: string
                    salutation: string
                    initials: string
                    firstName: string
                    lastName: string
                    birthDate: string
                    ssin: string
                    ssinCountry: { }
                    customerType: { }
                    companyName: string
                    organizationNumber: string
                    vatNumber: string
                    defaultPaymentMethod: { }
                    invoiceAddress:
                      streetName: string
                      streetNumber: string
                      streetNumberAddition: string
                      postalCode: string
                      buildingName: string
                      locality: string
                      city: string
                      country: { }
                      localizedDisplay: string
                      lineOne: string
                      lineTwo: string
                    bankAccount: string
                    emailAddress: string
                    telephoneNumber: string
                    mobileTelephoneNumber: string
                    website: string
                    culture: { }
                    internalId: string
                    createdOrLinked: true
                    errors:
                      - key: { }
                        correlationId: string
                        message: string
                        messageValues:
                          - dataType: { }
                            value: string
                            capitalize: true
                    customerGroupId: string
                  serviceLocationDetails:
                    previousContractDetails:
                      contractId: string
                      contractNumber: string
                      contractSupplyStartDate: string
                      contractSupplyEndDate: string
                      customerId: string
                      customerDisplayName: string
                      customerAccountNumber: string
                    currentContractDetails:
                      contractId: string
                      contractNumber: string
                      contractSupplyStartDate: string
                      contractSupplyEndDate: string
                      customerId: string
                      customerDisplayName: string
                      customerAccountNumber: string
                    owner:
                      customerId: string
                      shortDisplayName: string
                      accountNumber: string
                      managementRelationType: { }
                    address:
                      streetName: string
                      streetNumber: string
                      streetNumberAddition: string
                      postalCode: string
                      buildingName: string
                      locality: string
                      city: string
                      country: { }
                      localizedDisplay: string
                      lineOne: string
                      lineTwo: string
                    services:
                      - externalIdentifier: string
                        utilityType: { }
                    linked: true
                    internalId: string
                    errors:
                      - key: { }
                        correlationId: string
                        message: string
                        messageValues:
                          - dataType: { }
                            value: string
                            capitalize: true
                  measurementDetails:
                    - internalMeterId: string
                      externalChannelIdentifier: string
                      meterSerialNumber: string
                      utilityType: { }
                      unitOfMeasure: { }
                      timeOfUse: string
                      value: 0
                      timeZone: string
                      errors:
                        - key: { }
                          correlationId: string
                          message: string
                          messageValues:
                            - dataType: { }
                              value: string
                              capitalize: true
                  contractDetails:
                    productId: string
                    usePropertyGroupProduct: true
                    estimations:
                      - utilityType: { }
                        unitOfMeasure: { }
                        meteringType: { }
                        value: 0
                        consumerGroupId: string
                    errors:
                      - key: { }
                        correlationId: string
                        message: string
                        messageValues:
                          - dataType: { }
                            value: string
                            capitalize: true
                    internalContractId: string
                    externalContractId: string
                    contractNumber: string
                    createdOrLinked: true
                    serviceLocationsCount: 0
                    billingProperties:
                      billingMethod: { }
                  moveRequestType: { }
                  status: { }
                  mutationDateTime: string
                  customMessage: string
                  attachmentSignatures:
                    - culture: { }
                      attachmentFileName: string
                      errorCode: { }
                      origin: { }
                      productAttachmentId: string
                      attachmentFileId: string
                      entityAttachmentGroupId: string
                      signDate: string
                      viewedDate: string
                  hasAnyErrors: true
  '/MoveRequests/{moverequestuuid}/setnew':
    post:
      tags:
        - MoveRequests
      summary: Mark uncompleted move request as new.
      description: 'This action can only be executed on move requests, which are not yet rejected or processed.'
      operationId: post-moverequests-moverequestuuid-setnew
      parameters:
        - name: moverequestuuid
          in: path
          description: The ID of the move request.
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: string
                title: string
                status: 0
                detail: string
                instance: string
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: string
                title: string
                status: 0
                detail: string
                instance: string
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/MoveRequestDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/MoveRequestDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  externalId: string
                  customerDetails:
                    accountNumber: string
                    salutation: string
                    initials: string
                    firstName: string
                    lastName: string
                    birthDate: string
                    ssin: string
                    ssinCountry: { }
                    customerType: { }
                    companyName: string
                    organizationNumber: string
                    vatNumber: string
                    defaultPaymentMethod: { }
                    invoiceAddress:
                      streetName: string
                      streetNumber: string
                      streetNumberAddition: string
                      postalCode: string
                      buildingName: string
                      locality: string
                      city: string
                      country: { }
                      localizedDisplay: string
                      lineOne: string
                      lineTwo: string
                    bankAccount: string
                    emailAddress: string
                    telephoneNumber: string
                    mobileTelephoneNumber: string
                    website: string
                    culture: { }
                    internalId: string
                    createdOrLinked: true
                    errors:
                      - key: { }
                        correlationId: string
                        message: string
                        messageValues:
                          - dataType: { }
                            value: string
                            capitalize: true
                    customerGroupId: string
                  serviceLocationDetails:
                    previousContractDetails:
                      contractId: string
                      contractNumber: string
                      contractSupplyStartDate: string
                      contractSupplyEndDate: string
                      customerId: string
                      customerDisplayName: string
                      customerAccountNumber: string
                    currentContractDetails:
                      contractId: string
                      contractNumber: string
                      contractSupplyStartDate: string
                      contractSupplyEndDate: string
                      customerId: string
                      customerDisplayName: string
                      customerAccountNumber: string
                    owner:
                      customerId: string
                      shortDisplayName: string
                      accountNumber: string
                      managementRelationType: { }
                    address:
                      streetName: string
                      streetNumber: string
                      streetNumberAddition: string
                      postalCode: string
                      buildingName: string
                      locality: string
                      city: string
                      country: { }
                      localizedDisplay: string
                      lineOne: string
                      lineTwo: string
                    services:
                      - externalIdentifier: string
                        utilityType: { }
                    linked: true
                    internalId: string
                    errors:
                      - key: { }
                        correlationId: string
                        message: string
                        messageValues:
                          - dataType: { }
                            value: string
                            capitalize: true
                  measurementDetails:
                    - internalMeterId: string
                      externalChannelIdentifier: string
                      meterSerialNumber: string
                      utilityType: { }
                      unitOfMeasure: { }
                      timeOfUse: string
                      value: 0
                      timeZone: string
                      errors:
                        - key: { }
                          correlationId: string
                          message: string
                          messageValues:
                            - dataType: { }
                              value: string
                              capitalize: true
                  contractDetails:
                    productId: string
                    usePropertyGroupProduct: true
                    estimations:
                      - utilityType: { }
                        unitOfMeasure: { }
                        meteringType: { }
                        value: 0
                        consumerGroupId: string
                    errors:
                      - key: { }
                        correlationId: string
                        message: string
                        messageValues:
                          - dataType: { }
                            value: string
                            capitalize: true
                    internalContractId: string
                    externalContractId: string
                    contractNumber: string
                    createdOrLinked: true
                    serviceLocationsCount: 0
                    billingProperties:
                      billingMethod: { }
                  moveRequestType: { }
                  status: { }
                  mutationDateTime: string
                  customMessage: string
                  attachmentSignatures:
                    - culture: { }
                      attachmentFileName: string
                      errorCode: { }
                      origin: { }
                      productAttachmentId: string
                      attachmentFileId: string
                      entityAttachmentGroupId: string
                      signDate: string
                      viewedDate: string
                  hasAnyErrors: true
            text/json:
              schema:
                $ref: '#/components/schemas/MoveRequestDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  externalId: string
                  customerDetails:
                    accountNumber: string
                    salutation: string
                    initials: string
                    firstName: string
                    lastName: string
                    birthDate: string
                    ssin: string
                    ssinCountry: { }
                    customerType: { }
                    companyName: string
                    organizationNumber: string
                    vatNumber: string
                    defaultPaymentMethod: { }
                    invoiceAddress:
                      streetName: string
                      streetNumber: string
                      streetNumberAddition: string
                      postalCode: string
                      buildingName: string
                      locality: string
                      city: string
                      country: { }
                      localizedDisplay: string
                      lineOne: string
                      lineTwo: string
                    bankAccount: string
                    emailAddress: string
                    telephoneNumber: string
                    mobileTelephoneNumber: string
                    website: string
                    culture: { }
                    internalId: string
                    createdOrLinked: true
                    errors:
                      - key: { }
                        correlationId: string
                        message: string
                        messageValues:
                          - dataType: { }
                            value: string
                            capitalize: true
                    customerGroupId: string
                  serviceLocationDetails:
                    previousContractDetails:
                      contractId: string
                      contractNumber: string
                      contractSupplyStartDate: string
                      contractSupplyEndDate: string
                      customerId: string
                      customerDisplayName: string
                      customerAccountNumber: string
                    currentContractDetails:
                      contractId: string
                      contractNumber: string
                      contractSupplyStartDate: string
                      contractSupplyEndDate: string
                      customerId: string
                      customerDisplayName: string
                      customerAccountNumber: string
                    owner:
                      customerId: string
                      shortDisplayName: string
                      accountNumber: string
                      managementRelationType: { }
                    address:
                      streetName: string
                      streetNumber: string
                      streetNumberAddition: string
                      postalCode: string
                      buildingName: string
                      locality: string
                      city: string
                      country: { }
                      localizedDisplay: string
                      lineOne: string
                      lineTwo: string
                    services:
                      - externalIdentifier: string
                        utilityType: { }
                    linked: true
                    internalId: string
                    errors:
                      - key: { }
                        correlationId: string
                        message: string
                        messageValues:
                          - dataType: { }
                            value: string
                            capitalize: true
                  measurementDetails:
                    - internalMeterId: string
                      externalChannelIdentifier: string
                      meterSerialNumber: string
                      utilityType: { }
                      unitOfMeasure: { }
                      timeOfUse: string
                      value: 0
                      timeZone: string
                      errors:
                        - key: { }
                          correlationId: string
                          message: string
                          messageValues:
                            - dataType: { }
                              value: string
                              capitalize: true
                  contractDetails:
                    productId: string
                    usePropertyGroupProduct: true
                    estimations:
                      - utilityType: { }
                        unitOfMeasure: { }
                        meteringType: { }
                        value: 0
                        consumerGroupId: string
                    errors:
                      - key: { }
                        correlationId: string
                        message: string
                        messageValues:
                          - dataType: { }
                            value: string
                            capitalize: true
                    internalContractId: string
                    externalContractId: string
                    contractNumber: string
                    createdOrLinked: true
                    serviceLocationsCount: 0
                    billingProperties:
                      billingMethod: { }
                  moveRequestType: { }
                  status: { }
                  mutationDateTime: string
                  customMessage: string
                  attachmentSignatures:
                    - culture: { }
                      attachmentFileName: string
                      errorCode: { }
                      origin: { }
                      productAttachmentId: string
                      attachmentFileId: string
                      entityAttachmentGroupId: string
                      signDate: string
                      viewedDate: string
                  hasAnyErrors: true
  /MoveRequests/bulk/reject:
    post:
      tags:
        - MoveRequests
      summary: Reject multiple uncompleted move requests in bulk.
      description: This action is irreversible.
      operationId: post-moverequests-bulk-reject
      parameters:
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: The request containing bulk rejection details and query parameters to filter the move requests to be rejected.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BulkRejectMoveRequest'
            example:
              onlyValidate: true
              queryParams:
                flexSearch: string
                includeOnlyIds:
                  - string
                excludeIds:
                  - string
                locationId: string
                moveRequestTypeId: string
              quickFilter: string
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BulkRejectMoveRequest'
            example:
              onlyValidate: true
              queryParams:
                flexSearch: string
                includeOnlyIds:
                  - string
                excludeIds:
                  - string
                locationId: string
                moveRequestTypeId: string
              quickFilter: string
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BulkRejectMoveRequest'
            example:
              onlyValidate: true
              queryParams:
                flexSearch: string
                includeOnlyIds:
                  - string
                excludeIds:
                  - string
                locationId: string
                moveRequestTypeId: string
              quickFilter: string
      responses:
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: string
                title: string
                status: 0
                detail: string
                instance: string
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: string
                title: string
                status: 0
                detail: string
                instance: string
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
  /MoveRequests/bulk/setpending:
    post:
      tags:
        - MoveRequests
      summary: Mark multiple uncompleted move requests as pending in bulk.
      description: Mark multiple uncompleted move requests as pending in bulk.
      operationId: post-moverequests-bulk-setpending
      parameters:
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: The request containing bulk pending details and query parameters to filter the move requests to be marked as pending.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BulkSetMoveRequestToPendingRequest'
            example:
              newStatus: { }
              onlyValidate: true
              queryParams:
                flexSearch: string
                includeOnlyIds:
                  - string
                excludeIds:
                  - string
                locationId: string
                moveRequestTypeId: string
              quickFilter: string
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BulkSetMoveRequestToPendingRequest'
            example:
              newStatus: { }
              onlyValidate: true
              queryParams:
                flexSearch: string
                includeOnlyIds:
                  - string
                excludeIds:
                  - string
                locationId: string
                moveRequestTypeId: string
              quickFilter: string
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BulkSetMoveRequestToPendingRequest'
            example:
              newStatus: { }
              onlyValidate: true
              queryParams:
                flexSearch: string
                includeOnlyIds:
                  - string
                excludeIds:
                  - string
                locationId: string
                moveRequestTypeId: string
              quickFilter: string
      responses:
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: string
                title: string
                status: 0
                detail: string
                instance: string
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: string
                title: string
                status: 0
                detail: string
                instance: string
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
  /MoveRequests/bulk/setnew:
    post:
      tags:
        - MoveRequests
      summary: Mark multiple uncompleted move requests as new in bulk.
      description: Mark multiple uncompleted move requests as new in bulk.
      operationId: post-moverequests-bulk-setnew
      parameters:
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: The request containing query parameters to filter the move requests to be marked as new.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BulkSetMoveRequestToNew'
            example:
              onlyValidate: true
              queryParams:
                flexSearch: string
                includeOnlyIds:
                  - string
                excludeIds:
                  - string
                locationId: string
                moveRequestTypeId: string
              quickFilter: string
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BulkSetMoveRequestToNew'
            example:
              onlyValidate: true
              queryParams:
                flexSearch: string
                includeOnlyIds:
                  - string
                excludeIds:
                  - string
                locationId: string
                moveRequestTypeId: string
              quickFilter: string
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BulkSetMoveRequestToNew'
            example:
              onlyValidate: true
              queryParams:
                flexSearch: string
                includeOnlyIds:
                  - string
                excludeIds:
                  - string
                locationId: string
                moveRequestTypeId: string
              quickFilter: string
      responses:
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: string
                title: string
                status: 0
                detail: string
                instance: string
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: string
                title: string
                status: 0
                detail: string
                instance: string
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
  /PrepaymentAccounts:
    get:
      tags:
        - PrepaymentAccounts
      summary: Retrieve prepayment accounts based on the provided query parameters.
      description: Retrieve prepayment accounts based on the provided query parameters.
      operationId: get-prepaymentaccounts
      parameters:
        - name: meterId
          in: query
          description: Allows to filter on an ID of a meter.
          schema:
            type: string
        - name: customerId
          in: query
          description: Allows to filter on an ID of a customer.
          schema:
            type: string
        - name: contractId
          in: query
          description: Allows to filter on an ID of a contract.
          schema:
            type: string
        - name: activeDateTime
          in: query
          description: Format - date-time (as date-time in RFC3339). Allows to filter on a date in which prepayment account is active.
          schema:
            type: string
            format: date-time
            nullable: true
        - name: onlyWithExternalReference
          in: query
          description: Allows to filter only prepayment account with external references set.
          schema:
            type: boolean
        - name: orderBy
          in: query
          description: Allows to order the prepayment accounts.
          schema:
            type: string
        - name: continuationToken
          in: header
          description: Token which allows you to fetch the next records. The continuation token is returned in the response and can be reused in the next request to fetch additional data.
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/PrepaymentAccountDTOPagedResponseModelDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/PrepaymentAccountDTOPagedResponseModelDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  results:
                    - id: string
                      entityType: { }
                      createdDateTime: string
                      discriminator: string
                      _etag: string
                      requireAttention: true
                      hasErrors: true
                      hasWarnings: true
                      isReadOnly: true
                      organisationId: string
                      status: { }
                      meter:
                        meterId: string
                        serialNumber: string
                      shareBalanceAcrossUtilities: true
                      channelIdentifier: string
                      customerId: string
                      contractId: string
                      serviceLocationId: string
                      externalReference: string
                      utilityType: { }
                      startDateTime: string
                      endDateTime: string
                      balance: 0
                      debt: 0
                      emergencyCredit: 0
                      balanceUntil: string
                      lastTimeReceivedPrepaymentTransactions: string
                      prepaymentTransactionsUntil: string
                  hasNextPage: true
                  nextPageToken: string
                  totalRecords: 0
                  sortableFields:
                    - string
                  aggregateDetails:
                    - code: string
                      translation: string
                      value: 0
                      valueDate: string
            text/json:
              schema:
                $ref: '#/components/schemas/PrepaymentAccountDTOPagedResponseModelDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  results:
                    - id: string
                      entityType: { }
                      createdDateTime: string
                      discriminator: string
                      _etag: string
                      requireAttention: true
                      hasErrors: true
                      hasWarnings: true
                      isReadOnly: true
                      organisationId: string
                      status: { }
                      meter:
                        meterId: string
                        serialNumber: string
                      shareBalanceAcrossUtilities: true
                      channelIdentifier: string
                      customerId: string
                      contractId: string
                      serviceLocationId: string
                      externalReference: string
                      utilityType: { }
                      startDateTime: string
                      endDateTime: string
                      balance: 0
                      debt: 0
                      emergencyCredit: 0
                      balanceUntil: string
                      lastTimeReceivedPrepaymentTransactions: string
                      prepaymentTransactionsUntil: string
                  hasNextPage: true
                  nextPageToken: string
                  totalRecords: 0
                  sortableFields:
                    - string
                  aggregateDetails:
                    - code: string
                      translation: string
                      value: 0
                      valueDate: string
  '/PrepaymentAccounts/{prepaymentAccountId}':
    get:
      tags:
        - PrepaymentAccounts
      summary: Retrieve a prepayment account by its ID.
      description: Retrieve a prepayment account by its ID.
      operationId: get-prepaymentaccounts-prepaymentaccountid
      parameters:
        - name: prepaymentAccountId
          in: path
          description: The ID of the prepayment account.
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/PrepaymentAccountDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/PrepaymentAccountDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  status: { }
                  meter:
                    meterId: string
                    serialNumber: string
                  shareBalanceAcrossUtilities: true
                  channelIdentifier: string
                  customerId: string
                  contractId: string
                  serviceLocationId: string
                  externalReference: string
                  utilityType: { }
                  startDateTime: string
                  endDateTime: string
                  balance: 0
                  debt: 0
                  emergencyCredit: 0
                  balanceUntil: string
                  lastTimeReceivedPrepaymentTransactions: string
                  prepaymentTransactionsUntil: string
            text/json:
              schema:
                $ref: '#/components/schemas/PrepaymentAccountDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  status: { }
                  meter:
                    meterId: string
                    serialNumber: string
                  shareBalanceAcrossUtilities: true
                  channelIdentifier: string
                  customerId: string
                  contractId: string
                  serviceLocationId: string
                  externalReference: string
                  utilityType: { }
                  startDateTime: string
                  endDateTime: string
                  balance: 0
                  debt: 0
                  emergencyCredit: 0
                  balanceUntil: string
                  lastTimeReceivedPrepaymentTransactions: string
                  prepaymentTransactionsUntil: string
  '/PrepaymentAccounts/meter/{meterId}/externalReferences':
    post:
      tags:
        - PrepaymentAccounts
      summary: Update external references on prepayment accounts related to given meter.
      description: Update external references on prepayment accounts related to given meter.
      operationId: post-prepaymentaccounts-meter-meterid-externalreferences
      parameters:
        - name: meterId
          in: path
          description: 'The ID of the meter, for which the prepayment accounts''external references are supposed to be updated.'
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: The request containing external references for prepayment accounts.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/UpdatePrepaymentAccountsExternalReferencesRequest'
              description: Necessary information to update external references.
            example:
              externalReferencesForPrepaymentAccounts: { }
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/UpdatePrepaymentAccountsExternalReferencesRequest'
              description: Necessary information to update external references.
            example:
              externalReferencesForPrepaymentAccounts: { }
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/UpdatePrepaymentAccountsExternalReferencesRequest'
              description: Necessary information to update external references.
            example:
              externalReferencesForPrepaymentAccounts: { }
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/PrepaymentAccountDTOListApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/PrepaymentAccountDTOListApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  - id: string
                    entityType: { }
                    createdDateTime: string
                    discriminator: string
                    _etag: string
                    requireAttention: true
                    hasErrors: true
                    hasWarnings: true
                    isReadOnly: true
                    organisationId: string
                    status: { }
                    meter:
                      meterId: string
                      serialNumber: string
                    shareBalanceAcrossUtilities: true
                    channelIdentifier: string
                    customerId: string
                    contractId: string
                    serviceLocationId: string
                    externalReference: string
                    utilityType: { }
                    startDateTime: string
                    endDateTime: string
                    balance: 0
                    debt: 0
                    emergencyCredit: 0
                    balanceUntil: string
                    lastTimeReceivedPrepaymentTransactions: string
                    prepaymentTransactionsUntil: string
            text/json:
              schema:
                $ref: '#/components/schemas/PrepaymentAccountDTOListApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  - id: string
                    entityType: { }
                    createdDateTime: string
                    discriminator: string
                    _etag: string
                    requireAttention: true
                    hasErrors: true
                    hasWarnings: true
                    isReadOnly: true
                    organisationId: string
                    status: { }
                    meter:
                      meterId: string
                      serialNumber: string
                    shareBalanceAcrossUtilities: true
                    channelIdentifier: string
                    customerId: string
                    contractId: string
                    serviceLocationId: string
                    externalReference: string
                    utilityType: { }
                    startDateTime: string
                    endDateTime: string
                    balance: 0
                    debt: 0
                    emergencyCredit: 0
                    balanceUntil: string
                    lastTimeReceivedPrepaymentTransactions: string
                    prepaymentTransactionsUntil: string
  /PrepaymentAccounts/installedprepaymentmeters:
    post:
      tags:
        - PrepaymentAccounts
      summary: 'Return locations with lists of prepayment meters installed on them, and utility types that are supported for prepayment on given location for each of these prepayment meters.'
      description: 'Return locations with lists of prepayment meters installed on them, and utility types that are supported for prepayment on given location for each of these prepayment meters.'
      operationId: post-prepaymentaccounts-installedprepaymentmeters
      parameters:
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: 'The request containing the IDs of locations, for which the installed prepayment meters (overlapping given period) are supposed to be retrieved.'
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/GetPrepaymentMetersInstalledOnServiceLocationsRequest'
            example:
              serviceLocationIds:
                - string
              supplyPeriod:
                startDateTime: string
                endDateTime: string
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/GetPrepaymentMetersInstalledOnServiceLocationsRequest'
            example:
              serviceLocationIds:
                - string
              supplyPeriod:
                startDateTime: string
                endDateTime: string
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/GetPrepaymentMetersInstalledOnServiceLocationsRequest'
            example:
              serviceLocationIds:
                - string
              supplyPeriod:
                startDateTime: string
                endDateTime: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/PrepaymentMetersInstalledOnServiceLocationDTOListApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/PrepaymentMetersInstalledOnServiceLocationDTOListApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  - serviceLocationId: string
                    meters:
                      - meter:
                          id: string
                          entityType: { }
                          createdDateTime: string
                          discriminator: string
                          _etag: string
                          requireAttention: true
                          hasErrors: true
                          hasWarnings: true
                          isReadOnly: true
                          organisationId: string
                          serialNumber: string
                          meterTag: string
                          meterType: { }
                          modelId: string
                          statusHistory:
                            - startDateTime: string
                              endDateTime: string
                              meterStatus: { }
                              serviceLocationId: string
                              installedAtAddress:
                                streetName: string
                                streetNumber: string
                                streetNumberAddition: string
                                postalCode: string
                                buildingName: string
                                locality: string
                                city: string
                                country: { }
                                localizedDisplay: string
                                lineOne: string
                                lineTwo: string
                              propertyGroup:
                                id: string
                                name: string
                          channels:
                            - startDateTime: string
                              endDateTime: string
                              dataFrequency: { }
                              incrementationType: { }
                              meteringType: { }
                              utilityType: { }
                              direction: { }
                              unitOfMeasure: { }
                              timeOfUse: string
                              description: string
                              externalIdentifier: string
                              lastTimeReceivedData: string
                              measurementsUntil: string
                              relationExternalReference: string
                              issuesCount: 0
                              hasIssue: true
                              issues:
                                - meteringIssueId: string
                                  error: { }
                                  status: { }
                                  noticedDateTime: string
                              builtIn: true
                              hidden: true
                          lastTimeReceivedData: string
                          measurementsUntil: string
                          parentMeterRelation:
                            meterId: string
                            serialNumber: string
                            externalReference: string
                          propertyGroup:
                            id: string
                            name: string
                          timeZone: string
                          meterProperties: { }
                          customProperties:
                            - customEntityPropertyTypeId: string
                              values:
                                - valueDecimal: 0
                                  valueString: string
                                  valueBoolean: true
                                  valueNumber: 0
                                  valueDateTime: string
                                  valueDropdown:
                                    - string
                                  startDateTime: string
                                  endDateTime: string
                          measurementIssuesCount: 0
                          meterIssuesCount: 0
                          issuesCount: 0
                          hasIssue: true
                          issues:
                            - meteringIssueId: string
                              error: { }
                              status: { }
                              noticedDateTime: string
                          readingFrequency: { }
                          nextExpectedReadingDate: string
                        utilityTypesOnStartDate:
                          - none
                    hasPpmMeterCoverage: true
            text/json:
              schema:
                $ref: '#/components/schemas/PrepaymentMetersInstalledOnServiceLocationDTOListApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  - serviceLocationId: string
                    meters:
                      - meter:
                          id: string
                          entityType: { }
                          createdDateTime: string
                          discriminator: string
                          _etag: string
                          requireAttention: true
                          hasErrors: true
                          hasWarnings: true
                          isReadOnly: true
                          organisationId: string
                          serialNumber: string
                          meterTag: string
                          meterType: { }
                          modelId: string
                          statusHistory:
                            - startDateTime: string
                              endDateTime: string
                              meterStatus: { }
                              serviceLocationId: string
                              installedAtAddress:
                                streetName: string
                                streetNumber: string
                                streetNumberAddition: string
                                postalCode: string
                                buildingName: string
                                locality: string
                                city: string
                                country: { }
                                localizedDisplay: string
                                lineOne: string
                                lineTwo: string
                              propertyGroup:
                                id: string
                                name: string
                          channels:
                            - startDateTime: string
                              endDateTime: string
                              dataFrequency: { }
                              incrementationType: { }
                              meteringType: { }
                              utilityType: { }
                              direction: { }
                              unitOfMeasure: { }
                              timeOfUse: string
                              description: string
                              externalIdentifier: string
                              lastTimeReceivedData: string
                              measurementsUntil: string
                              relationExternalReference: string
                              issuesCount: 0
                              hasIssue: true
                              issues:
                                - meteringIssueId: string
                                  error: { }
                                  status: { }
                                  noticedDateTime: string
                              builtIn: true
                              hidden: true
                          lastTimeReceivedData: string
                          measurementsUntil: string
                          parentMeterRelation:
                            meterId: string
                            serialNumber: string
                            externalReference: string
                          propertyGroup:
                            id: string
                            name: string
                          timeZone: string
                          meterProperties: { }
                          customProperties:
                            - customEntityPropertyTypeId: string
                              values:
                                - valueDecimal: 0
                                  valueString: string
                                  valueBoolean: true
                                  valueNumber: 0
                                  valueDateTime: string
                                  valueDropdown:
                                    - string
                                  startDateTime: string
                                  endDateTime: string
                          measurementIssuesCount: 0
                          meterIssuesCount: 0
                          issuesCount: 0
                          hasIssue: true
                          issues:
                            - meteringIssueId: string
                              error: { }
                              status: { }
                              noticedDateTime: string
                          readingFrequency: { }
                          nextExpectedReadingDate: string
                        utilityTypesOnStartDate:
                          - none
                    hasPpmMeterCoverage: true
  '/PrepaymentAccounts/meter/{meterId}/contracts/distinct':
    get:
      tags:
        - PrepaymentAccounts
      summary: 'Retrieve distinct prepayment contracts, which are linked to the meter.'
      description: 'Retrieve distinct prepayment contracts, which are linked to the meter.'
      operationId: get-prepaymentaccounts-meter-meterid-contracts-distinct
      parameters:
        - name: meterId
          in: path
          description: The ID of the meter.
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ContractDTOListApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ContractDTOListApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  - id: string
                    entityType: { }
                    createdDateTime: string
                    discriminator: string
                    _etag: string
                    requireAttention: true
                    hasErrors: true
                    hasWarnings: true
                    isReadOnly: true
                    organisationId: string
                    contractNumber: string
                    contractor:
                      customerId: string
                      accountNumber: string
                      shortDisplayName: string
                      paymentMethod: { }
                      customerType: { }
                      customerGroup:
                        id: string
                        name: string
                    supplyStartDate: string
                    supplyEndDate: string
                    serviceLocations:
                      - id: string
                        address:
                          streetName: string
                          streetNumber: string
                          streetNumberAddition: string
                          postalCode: string
                          buildingName: string
                          locality: string
                          city: string
                          country: { }
                          localizedDisplay: string
                          lineOne: string
                          lineTwo: string
                        propertyGroupId: string
                        services:
                          - startDateTime: string
                            endDateTime: string
                            utilityType: { }
                            externalIdentifier: string
                            isConsumptionBased: true
                            estimatedConsumptions:
                              - consumerGroupId: string
                                value: 0
                                unitOfMeasure: { }
                                meteringType: { }
                                isManualEntry: true
                    statusHistory:
                      - contractStatus: { }
                        mutationDateTime: string
                    currentContractStatus: { }
                    billingDetails:
                      billingMethod: { }
                      invoiceFrequency: { }
                      advanceFrequency: { }
                      contractualAdvanceAmount: 0
                      products:
                        - productId: string
                          productName: string
                          startDateTime: string
                          endDateTime: string
                      invoiceAddress:
                        streetName: string
                        streetNumber: string
                        streetNumberAddition: string
                        postalCode: string
                        buildingName: string
                        locality: string
                        city: string
                        country: { }
                        localizedDisplay: string
                        lineOne: string
                        lineTwo: string
                      firstInvoiceStartDateTime: string
                      firstInvoiceEndDateTime: string
                      blocked: true
                    externalContractReference: string
                    paymentTermsId: string
                    blockedForDeletion: true
                    expectAdvancesToBeImportedPeriodically: true
                    usePropertyGroupProduct: true
                    propertyGroups:
                      - id: string
                        name: string
                    attachmentSignatures:
                      - culture: { }
                        attachmentFileName: string
                        errorCode: { }
                        origin: { }
                        productAttachmentId: string
                        attachmentFileId: string
                        entityAttachmentGroupId: string
                        signDate: string
                        viewedDate: string
                    customProperties:
                      - customEntityPropertyTypeId: string
                        values:
                          - valueDecimal: 0
                            valueString: string
                            valueBoolean: true
                            valueNumber: 0
                            valueDateTime: string
                            valueDropdown:
                              - string
                            startDateTime: string
                            endDateTime: string
            text/json:
              schema:
                $ref: '#/components/schemas/ContractDTOListApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  - id: string
                    entityType: { }
                    createdDateTime: string
                    discriminator: string
                    _etag: string
                    requireAttention: true
                    hasErrors: true
                    hasWarnings: true
                    isReadOnly: true
                    organisationId: string
                    contractNumber: string
                    contractor:
                      customerId: string
                      accountNumber: string
                      shortDisplayName: string
                      paymentMethod: { }
                      customerType: { }
                      customerGroup:
                        id: string
                        name: string
                    supplyStartDate: string
                    supplyEndDate: string
                    serviceLocations:
                      - id: string
                        address:
                          streetName: string
                          streetNumber: string
                          streetNumberAddition: string
                          postalCode: string
                          buildingName: string
                          locality: string
                          city: string
                          country: { }
                          localizedDisplay: string
                          lineOne: string
                          lineTwo: string
                        propertyGroupId: string
                        services:
                          - startDateTime: string
                            endDateTime: string
                            utilityType: { }
                            externalIdentifier: string
                            isConsumptionBased: true
                            estimatedConsumptions:
                              - consumerGroupId: string
                                value: 0
                                unitOfMeasure: { }
                                meteringType: { }
                                isManualEntry: true
                    statusHistory:
                      - contractStatus: { }
                        mutationDateTime: string
                    currentContractStatus: { }
                    billingDetails:
                      billingMethod: { }
                      invoiceFrequency: { }
                      advanceFrequency: { }
                      contractualAdvanceAmount: 0
                      products:
                        - productId: string
                          productName: string
                          startDateTime: string
                          endDateTime: string
                      invoiceAddress:
                        streetName: string
                        streetNumber: string
                        streetNumberAddition: string
                        postalCode: string
                        buildingName: string
                        locality: string
                        city: string
                        country: { }
                        localizedDisplay: string
                        lineOne: string
                        lineTwo: string
                      firstInvoiceStartDateTime: string
                      firstInvoiceEndDateTime: string
                      blocked: true
                    externalContractReference: string
                    paymentTermsId: string
                    blockedForDeletion: true
                    expectAdvancesToBeImportedPeriodically: true
                    usePropertyGroupProduct: true
                    propertyGroups:
                      - id: string
                        name: string
                    attachmentSignatures:
                      - culture: { }
                        attachmentFileName: string
                        errorCode: { }
                        origin: { }
                        productAttachmentId: string
                        attachmentFileId: string
                        entityAttachmentGroupId: string
                        signDate: string
                        viewedDate: string
                    customProperties:
                      - customEntityPropertyTypeId: string
                        values:
                          - valueDecimal: 0
                            valueString: string
                            valueBoolean: true
                            valueNumber: 0
                            valueDateTime: string
                            valueDropdown:
                              - string
                            startDateTime: string
                            endDateTime: string
  /PropertyGroups:
    post:
      tags:
        - PropertyGroups
      summary: Create new location group.
      description: Create new location group.
      operationId: post-propertygroups
      parameters:
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: The request containing location group details.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/CreatePropertyGroupRequest'
            example:
              name: string
              type: { }
              address:
                streetName: string
                streetNumber: string
                streetNumberAddition: string
                postalCode: string
                buildingName: string
                locality: string
                city: string
                country: { }
                localizedDisplay: string
                lineOne: string
                lineTwo: string
              managementRelations:
                - customerId: string
                  managementRelationType: { }
              serviceLocations:
                - string
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/CreatePropertyGroupRequest'
            example:
              name: string
              type: { }
              address:
                streetName: string
                streetNumber: string
                streetNumberAddition: string
                postalCode: string
                buildingName: string
                locality: string
                city: string
                country: { }
                localizedDisplay: string
                lineOne: string
                lineTwo: string
              managementRelations:
                - customerId: string
                  managementRelationType: { }
              serviceLocations:
                - string
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/CreatePropertyGroupRequest'
            example:
              name: string
              type: { }
              address:
                streetName: string
                streetNumber: string
                streetNumberAddition: string
                postalCode: string
                buildingName: string
                locality: string
                city: string
                country: { }
                localizedDisplay: string
                lineOne: string
                lineTwo: string
              managementRelations:
                - customerId: string
                  managementRelationType: { }
              serviceLocations:
                - string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/PropertyGroupDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyGroupDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  name: string
                  address:
                    streetName: string
                    streetNumber: string
                    streetNumberAddition: string
                    postalCode: string
                    buildingName: string
                    locality: string
                    city: string
                    country: { }
                    localizedDisplay: string
                    lineOne: string
                    lineTwo: string
                  defaultManagementRelations:
                    - customerId: string
                      shortDisplayName: string
                      accountNumber: string
                      managementRelationType: { }
                  serviceLocationIds:
                    - string
                  type: { }
                  costAllocationEnabled: true
                  communicationConfiguration:
                    companyName: string
                    vatAccountNumber: string
                    companyAccountNumber: string
                    logo: string
                    logoCdnUrl: string
                    primaryColor: string
                    secondaryColor: string
                    address:
                      streetName: string
                      streetNumber: string
                      streetNumberAddition: string
                      postalCode: string
                      buildingName: string
                      locality: string
                      city: string
                      country: { }
                      localizedDisplay: string
                      lineOne: string
                      lineTwo: string
                    contactDetails:
                      emailAddress: string
                      telephone: string
                      website: string
                      telephoneInterruptions: string
                  customProperties:
                    - customEntityPropertyTypeId: string
                      values:
                        - valueDecimal: 0
                          valueString: string
                          valueBoolean: true
                          valueNumber: 0
                          valueDateTime: string
                          valueDropdown:
                            - string
                          startDateTime: string
                          endDateTime: string
                  deleted: true
            text/json:
              schema:
                $ref: '#/components/schemas/PropertyGroupDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  name: string
                  address:
                    streetName: string
                    streetNumber: string
                    streetNumberAddition: string
                    postalCode: string
                    buildingName: string
                    locality: string
                    city: string
                    country: { }
                    localizedDisplay: string
                    lineOne: string
                    lineTwo: string
                  defaultManagementRelations:
                    - customerId: string
                      shortDisplayName: string
                      accountNumber: string
                      managementRelationType: { }
                  serviceLocationIds:
                    - string
                  type: { }
                  costAllocationEnabled: true
                  communicationConfiguration:
                    companyName: string
                    vatAccountNumber: string
                    companyAccountNumber: string
                    logo: string
                    logoCdnUrl: string
                    primaryColor: string
                    secondaryColor: string
                    address:
                      streetName: string
                      streetNumber: string
                      streetNumberAddition: string
                      postalCode: string
                      buildingName: string
                      locality: string
                      city: string
                      country: { }
                      localizedDisplay: string
                      lineOne: string
                      lineTwo: string
                    contactDetails:
                      emailAddress: string
                      telephone: string
                      website: string
                      telephoneInterruptions: string
                  customProperties:
                    - customEntityPropertyTypeId: string
                      values:
                        - valueDecimal: 0
                          valueString: string
                          valueBoolean: true
                          valueNumber: 0
                          valueDateTime: string
                          valueDropdown:
                            - string
                          startDateTime: string
                          endDateTime: string
                  deleted: true
    get:
      tags:
        - PropertyGroups
      summary: Retrieve location groups based on the provided query parameters.
      description: Retrieve location groups based on the provided query parameters.
      operationId: get-propertygroups
      parameters:
        - name: NameContains
          in: query
          schema:
            type: string
        - name: FlexSearch
          in: query
          schema:
            type: string
        - name: IncludeOnlyIds
          in: query
          schema:
            type: array
            items:
              type: string
        - name: ExcludeIds
          in: query
          schema:
            type: array
            items:
              type: string
        - name: Name
          in: query
          schema:
            type: string
        - name: Id
          in: query
          description: Format - int32.
          schema:
            type: integer
            format: int32
        - name: orderBy
          in: query
          description: Allows to order the location groups.
          schema:
            type: string
        - name: continuationToken
          in: header
          description: Token which allows you to fetch the next records. The continuation token is returned in the response and can be reused in the next request to fetch additional data.
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/PropertyGroupDTOPagedResponseModelDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyGroupDTOPagedResponseModelDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  results:
                    - id: string
                      entityType: { }
                      createdDateTime: string
                      discriminator: string
                      _etag: string
                      requireAttention: true
                      hasErrors: true
                      hasWarnings: true
                      isReadOnly: true
                      organisationId: string
                      name: string
                      address:
                        streetName: string
                        streetNumber: string
                        streetNumberAddition: string
                        postalCode: string
                        buildingName: string
                        locality: string
                        city: string
                        country: { }
                        localizedDisplay: string
                        lineOne: string
                        lineTwo: string
                      defaultManagementRelations:
                        - customerId: string
                          shortDisplayName: string
                          accountNumber: string
                          managementRelationType: { }
                      serviceLocationIds:
                        - string
                      type: { }
                      costAllocationEnabled: true
                      communicationConfiguration:
                        companyName: string
                        vatAccountNumber: string
                        companyAccountNumber: string
                        logo: string
                        logoCdnUrl: string
                        primaryColor: string
                        secondaryColor: string
                        address:
                          streetName: string
                          streetNumber: string
                          streetNumberAddition: string
                          postalCode: string
                          buildingName: string
                          locality: string
                          city: string
                          country: { }
                          localizedDisplay: string
                          lineOne: string
                          lineTwo: string
                        contactDetails:
                          emailAddress: string
                          telephone: string
                          website: string
                          telephoneInterruptions: string
                      customProperties:
                        - customEntityPropertyTypeId: string
                          values:
                            - valueDecimal: 0
                              valueString: string
                              valueBoolean: true
                              valueNumber: 0
                              valueDateTime: string
                              valueDropdown:
                                - string
                              startDateTime: string
                              endDateTime: string
                      deleted: true
                  hasNextPage: true
                  nextPageToken: string
                  totalRecords: 0
                  sortableFields:
                    - string
                  aggregateDetails:
                    - code: string
                      translation: string
                      value: 0
                      valueDate: string
            text/json:
              schema:
                $ref: '#/components/schemas/PropertyGroupDTOPagedResponseModelDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  results:
                    - id: string
                      entityType: { }
                      createdDateTime: string
                      discriminator: string
                      _etag: string
                      requireAttention: true
                      hasErrors: true
                      hasWarnings: true
                      isReadOnly: true
                      organisationId: string
                      name: string
                      address:
                        streetName: string
                        streetNumber: string
                        streetNumberAddition: string
                        postalCode: string
                        buildingName: string
                        locality: string
                        city: string
                        country: { }
                        localizedDisplay: string
                        lineOne: string
                        lineTwo: string
                      defaultManagementRelations:
                        - customerId: string
                          shortDisplayName: string
                          accountNumber: string
                          managementRelationType: { }
                      serviceLocationIds:
                        - string
                      type: { }
                      costAllocationEnabled: true
                      communicationConfiguration:
                        companyName: string
                        vatAccountNumber: string
                        companyAccountNumber: string
                        logo: string
                        logoCdnUrl: string
                        primaryColor: string
                        secondaryColor: string
                        address:
                          streetName: string
                          streetNumber: string
                          streetNumberAddition: string
                          postalCode: string
                          buildingName: string
                          locality: string
                          city: string
                          country: { }
                          localizedDisplay: string
                          lineOne: string
                          lineTwo: string
                        contactDetails:
                          emailAddress: string
                          telephone: string
                          website: string
                          telephoneInterruptions: string
                      customProperties:
                        - customEntityPropertyTypeId: string
                          values:
                            - valueDecimal: 0
                              valueString: string
                              valueBoolean: true
                              valueNumber: 0
                              valueDateTime: string
                              valueDropdown:
                                - string
                              startDateTime: string
                              endDateTime: string
                      deleted: true
                  hasNextPage: true
                  nextPageToken: string
                  totalRecords: 0
                  sortableFields:
                    - string
                  aggregateDetails:
                    - code: string
                      translation: string
                      value: 0
                      valueDate: string
  /PropertyGroups/overviewcount:
    get:
      tags:
        - PropertyGroups
      summary: Retrieve the overview count of location groups based on the provided query parameters.
      description: Retrieve the overview count of location groups based on the provided query parameters.
      operationId: get-propertygroups-overviewcount
      parameters:
        - name: NameContains
          in: query
          schema:
            type: string
        - name: FlexSearch
          in: query
          schema:
            type: string
        - name: IncludeOnlyIds
          in: query
          schema:
            type: array
            items:
              type: string
        - name: ExcludeIds
          in: query
          schema:
            type: array
            items:
              type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/PropertyGroupOverviewCountDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyGroupOverviewCountDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  all: 0
            text/json:
              schema:
                $ref: '#/components/schemas/PropertyGroupOverviewCountDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  all: 0
  '/PropertyGroups/{propertygroupuuid}':
    get:
      tags:
        - PropertyGroups
      summary: Retrieve a location group by its ID.
      description: Retrieve a location group by its ID.
      operationId: get-propertygroups-propertygroupuuid
      parameters:
        - name: propertygroupuuid
          in: path
          description: The ID of the location group.
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/PropertyGroupDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyGroupDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  name: string
                  address:
                    streetName: string
                    streetNumber: string
                    streetNumberAddition: string
                    postalCode: string
                    buildingName: string
                    locality: string
                    city: string
                    country: { }
                    localizedDisplay: string
                    lineOne: string
                    lineTwo: string
                  defaultManagementRelations:
                    - customerId: string
                      shortDisplayName: string
                      accountNumber: string
                      managementRelationType: { }
                  serviceLocationIds:
                    - string
                  type: { }
                  costAllocationEnabled: true
                  communicationConfiguration:
                    companyName: string
                    vatAccountNumber: string
                    companyAccountNumber: string
                    logo: string
                    logoCdnUrl: string
                    primaryColor: string
                    secondaryColor: string
                    address:
                      streetName: string
                      streetNumber: string
                      streetNumberAddition: string
                      postalCode: string
                      buildingName: string
                      locality: string
                      city: string
                      country: { }
                      localizedDisplay: string
                      lineOne: string
                      lineTwo: string
                    contactDetails:
                      emailAddress: string
                      telephone: string
                      website: string
                      telephoneInterruptions: string
                  customProperties:
                    - customEntityPropertyTypeId: string
                      values:
                        - valueDecimal: 0
                          valueString: string
                          valueBoolean: true
                          valueNumber: 0
                          valueDateTime: string
                          valueDropdown:
                            - string
                          startDateTime: string
                          endDateTime: string
                  deleted: true
            text/json:
              schema:
                $ref: '#/components/schemas/PropertyGroupDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  name: string
                  address:
                    streetName: string
                    streetNumber: string
                    streetNumberAddition: string
                    postalCode: string
                    buildingName: string
                    locality: string
                    city: string
                    country: { }
                    localizedDisplay: string
                    lineOne: string
                    lineTwo: string
                  defaultManagementRelations:
                    - customerId: string
                      shortDisplayName: string
                      accountNumber: string
                      managementRelationType: { }
                  serviceLocationIds:
                    - string
                  type: { }
                  costAllocationEnabled: true
                  communicationConfiguration:
                    companyName: string
                    vatAccountNumber: string
                    companyAccountNumber: string
                    logo: string
                    logoCdnUrl: string
                    primaryColor: string
                    secondaryColor: string
                    address:
                      streetName: string
                      streetNumber: string
                      streetNumberAddition: string
                      postalCode: string
                      buildingName: string
                      locality: string
                      city: string
                      country: { }
                      localizedDisplay: string
                      lineOne: string
                      lineTwo: string
                    contactDetails:
                      emailAddress: string
                      telephone: string
                      website: string
                      telephoneInterruptions: string
                  customProperties:
                    - customEntityPropertyTypeId: string
                      values:
                        - valueDecimal: 0
                          valueString: string
                          valueBoolean: true
                          valueNumber: 0
                          valueDateTime: string
                          valueDropdown:
                            - string
                          startDateTime: string
                          endDateTime: string
                  deleted: true
    post:
      tags:
        - PropertyGroups
      summary: Update details of a location group.
      description: Update details of a location group.
      operationId: post-propertygroups-propertygroupuuid
      parameters:
        - name: propertygroupuuid
          in: path
          description: The ID of the location group.
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: The request containing location group details.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/UpdatePropertyGroupRequest'
            example:
              name: string
              type: { }
              address:
                streetName: string
                streetNumber: string
                streetNumberAddition: string
                postalCode: string
                buildingName: string
                locality: string
                city: string
                country: { }
                localizedDisplay: string
                lineOne: string
                lineTwo: string
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/UpdatePropertyGroupRequest'
            example:
              name: string
              type: { }
              address:
                streetName: string
                streetNumber: string
                streetNumberAddition: string
                postalCode: string
                buildingName: string
                locality: string
                city: string
                country: { }
                localizedDisplay: string
                lineOne: string
                lineTwo: string
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/UpdatePropertyGroupRequest'
            example:
              name: string
              type: { }
              address:
                streetName: string
                streetNumber: string
                streetNumberAddition: string
                postalCode: string
                buildingName: string
                locality: string
                city: string
                country: { }
                localizedDisplay: string
                lineOne: string
                lineTwo: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/PropertyGroupDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyGroupDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  name: string
                  address:
                    streetName: string
                    streetNumber: string
                    streetNumberAddition: string
                    postalCode: string
                    buildingName: string
                    locality: string
                    city: string
                    country: { }
                    localizedDisplay: string
                    lineOne: string
                    lineTwo: string
                  defaultManagementRelations:
                    - customerId: string
                      shortDisplayName: string
                      accountNumber: string
                      managementRelationType: { }
                  serviceLocationIds:
                    - string
                  type: { }
                  costAllocationEnabled: true
                  communicationConfiguration:
                    companyName: string
                    vatAccountNumber: string
                    companyAccountNumber: string
                    logo: string
                    logoCdnUrl: string
                    primaryColor: string
                    secondaryColor: string
                    address:
                      streetName: string
                      streetNumber: string
                      streetNumberAddition: string
                      postalCode: string
                      buildingName: string
                      locality: string
                      city: string
                      country: { }
                      localizedDisplay: string
                      lineOne: string
                      lineTwo: string
                    contactDetails:
                      emailAddress: string
                      telephone: string
                      website: string
                      telephoneInterruptions: string
                  customProperties:
                    - customEntityPropertyTypeId: string
                      values:
                        - valueDecimal: 0
                          valueString: string
                          valueBoolean: true
                          valueNumber: 0
                          valueDateTime: string
                          valueDropdown:
                            - string
                          startDateTime: string
                          endDateTime: string
                  deleted: true
            text/json:
              schema:
                $ref: '#/components/schemas/PropertyGroupDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  name: string
                  address:
                    streetName: string
                    streetNumber: string
                    streetNumberAddition: string
                    postalCode: string
                    buildingName: string
                    locality: string
                    city: string
                    country: { }
                    localizedDisplay: string
                    lineOne: string
                    lineTwo: string
                  defaultManagementRelations:
                    - customerId: string
                      shortDisplayName: string
                      accountNumber: string
                      managementRelationType: { }
                  serviceLocationIds:
                    - string
                  type: { }
                  costAllocationEnabled: true
                  communicationConfiguration:
                    companyName: string
                    vatAccountNumber: string
                    companyAccountNumber: string
                    logo: string
                    logoCdnUrl: string
                    primaryColor: string
                    secondaryColor: string
                    address:
                      streetName: string
                      streetNumber: string
                      streetNumberAddition: string
                      postalCode: string
                      buildingName: string
                      locality: string
                      city: string
                      country: { }
                      localizedDisplay: string
                      lineOne: string
                      lineTwo: string
                    contactDetails:
                      emailAddress: string
                      telephone: string
                      website: string
                      telephoneInterruptions: string
                  customProperties:
                    - customEntityPropertyTypeId: string
                      values:
                        - valueDecimal: 0
                          valueString: string
                          valueBoolean: true
                          valueNumber: 0
                          valueDateTime: string
                          valueDropdown:
                            - string
                          startDateTime: string
                          endDateTime: string
                  deleted: true
    delete:
      tags:
        - PropertyGroups
      summary: Delete a location group.
      description: Delete a location group.
      operationId: delete-propertygroups-propertygroupuuid
      parameters:
        - name: propertygroupuuid
          in: path
          description: The ID of the location group.
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: The request containing delete details.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/DeletePropertyGroupRequest'
            example:
              mutationDateTime: string
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/DeletePropertyGroupRequest'
            example:
              mutationDateTime: string
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/DeletePropertyGroupRequest'
            example:
              mutationDateTime: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/BooleanApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/BooleanApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data: true
            text/json:
              schema:
                $ref: '#/components/schemas/BooleanApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data: true
  '/PropertyGroups/{propertygroupuuid}/managementrelations':
    post:
      tags:
        - PropertyGroups
      summary: Update management relations of a location group.
      description: Update management relations of a location group.
      operationId: post-propertygroups-propertygroupuuid-managementrelations
      parameters:
        - name: propertygroupuuid
          in: path
          description: The ID of the location group.
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: The request containing a complete list of new management relations.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/UpdatePropertyGroupManagementRelationsRequest'
            example:
              managementRelations:
                - customerId: string
                  managementRelationType: { }
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/UpdatePropertyGroupManagementRelationsRequest'
            example:
              managementRelations:
                - customerId: string
                  managementRelationType: { }
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/UpdatePropertyGroupManagementRelationsRequest'
            example:
              managementRelations:
                - customerId: string
                  managementRelationType: { }
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/PropertyGroupDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyGroupDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  name: string
                  address:
                    streetName: string
                    streetNumber: string
                    streetNumberAddition: string
                    postalCode: string
                    buildingName: string
                    locality: string
                    city: string
                    country: { }
                    localizedDisplay: string
                    lineOne: string
                    lineTwo: string
                  defaultManagementRelations:
                    - customerId: string
                      shortDisplayName: string
                      accountNumber: string
                      managementRelationType: { }
                  serviceLocationIds:
                    - string
                  type: { }
                  costAllocationEnabled: true
                  communicationConfiguration:
                    companyName: string
                    vatAccountNumber: string
                    companyAccountNumber: string
                    logo: string
                    logoCdnUrl: string
                    primaryColor: string
                    secondaryColor: string
                    address:
                      streetName: string
                      streetNumber: string
                      streetNumberAddition: string
                      postalCode: string
                      buildingName: string
                      locality: string
                      city: string
                      country: { }
                      localizedDisplay: string
                      lineOne: string
                      lineTwo: string
                    contactDetails:
                      emailAddress: string
                      telephone: string
                      website: string
                      telephoneInterruptions: string
                  customProperties:
                    - customEntityPropertyTypeId: string
                      values:
                        - valueDecimal: 0
                          valueString: string
                          valueBoolean: true
                          valueNumber: 0
                          valueDateTime: string
                          valueDropdown:
                            - string
                          startDateTime: string
                          endDateTime: string
                  deleted: true
            text/json:
              schema:
                $ref: '#/components/schemas/PropertyGroupDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  name: string
                  address:
                    streetName: string
                    streetNumber: string
                    streetNumberAddition: string
                    postalCode: string
                    buildingName: string
                    locality: string
                    city: string
                    country: { }
                    localizedDisplay: string
                    lineOne: string
                    lineTwo: string
                  defaultManagementRelations:
                    - customerId: string
                      shortDisplayName: string
                      accountNumber: string
                      managementRelationType: { }
                  serviceLocationIds:
                    - string
                  type: { }
                  costAllocationEnabled: true
                  communicationConfiguration:
                    companyName: string
                    vatAccountNumber: string
                    companyAccountNumber: string
                    logo: string
                    logoCdnUrl: string
                    primaryColor: string
                    secondaryColor: string
                    address:
                      streetName: string
                      streetNumber: string
                      streetNumberAddition: string
                      postalCode: string
                      buildingName: string
                      locality: string
                      city: string
                      country: { }
                      localizedDisplay: string
                      lineOne: string
                      lineTwo: string
                    contactDetails:
                      emailAddress: string
                      telephone: string
                      website: string
                      telephoneInterruptions: string
                  customProperties:
                    - customEntityPropertyTypeId: string
                      values:
                        - valueDecimal: 0
                          valueString: string
                          valueBoolean: true
                          valueNumber: 0
                          valueDateTime: string
                          valueDropdown:
                            - string
                          startDateTime: string
                          endDateTime: string
                  deleted: true
  '/PropertyGroups/{propertygroupuuid}/communicationconfiguration':
    post:
      tags:
        - PropertyGroups
      summary: Update communication configuration of a location group.
      description: Update communication configuration of a location group.
      operationId: post-propertygroups-propertygroupuuid-communicationconfiguration
      parameters:
        - name: propertygroupuuid
          in: path
          description: The ID of the location group.
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: The request containing communication configuration.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/UpdatePropertyGroupCommunicationConfigurationRequest'
            example:
              companyName: string
              vatAccountNumber: string
              companyAccountNumber: string
              primaryColor: string
              secondaryColor: string
              address:
                streetName: string
                streetNumber: string
                streetNumberAddition: string
                postalCode: string
                buildingName: string
                locality: string
                city: string
                country: { }
                localizedDisplay: string
                lineOne: string
                lineTwo: string
              logo: string
              contactDetails:
                emailAddress: string
                telephone: string
                website: string
                telephoneInterruptions: string
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/UpdatePropertyGroupCommunicationConfigurationRequest'
            example:
              companyName: string
              vatAccountNumber: string
              companyAccountNumber: string
              primaryColor: string
              secondaryColor: string
              address:
                streetName: string
                streetNumber: string
                streetNumberAddition: string
                postalCode: string
                buildingName: string
                locality: string
                city: string
                country: { }
                localizedDisplay: string
                lineOne: string
                lineTwo: string
              logo: string
              contactDetails:
                emailAddress: string
                telephone: string
                website: string
                telephoneInterruptions: string
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/UpdatePropertyGroupCommunicationConfigurationRequest'
            example:
              companyName: string
              vatAccountNumber: string
              companyAccountNumber: string
              primaryColor: string
              secondaryColor: string
              address:
                streetName: string
                streetNumber: string
                streetNumberAddition: string
                postalCode: string
                buildingName: string
                locality: string
                city: string
                country: { }
                localizedDisplay: string
                lineOne: string
                lineTwo: string
              logo: string
              contactDetails:
                emailAddress: string
                telephone: string
                website: string
                telephoneInterruptions: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/PropertyGroupDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyGroupDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  name: string
                  address:
                    streetName: string
                    streetNumber: string
                    streetNumberAddition: string
                    postalCode: string
                    buildingName: string
                    locality: string
                    city: string
                    country: { }
                    localizedDisplay: string
                    lineOne: string
                    lineTwo: string
                  defaultManagementRelations:
                    - customerId: string
                      shortDisplayName: string
                      accountNumber: string
                      managementRelationType: { }
                  serviceLocationIds:
                    - string
                  type: { }
                  costAllocationEnabled: true
                  communicationConfiguration:
                    companyName: string
                    vatAccountNumber: string
                    companyAccountNumber: string
                    logo: string
                    logoCdnUrl: string
                    primaryColor: string
                    secondaryColor: string
                    address:
                      streetName: string
                      streetNumber: string
                      streetNumberAddition: string
                      postalCode: string
                      buildingName: string
                      locality: string
                      city: string
                      country: { }
                      localizedDisplay: string
                      lineOne: string
                      lineTwo: string
                    contactDetails:
                      emailAddress: string
                      telephone: string
                      website: string
                      telephoneInterruptions: string
                  customProperties:
                    - customEntityPropertyTypeId: string
                      values:
                        - valueDecimal: 0
                          valueString: string
                          valueBoolean: true
                          valueNumber: 0
                          valueDateTime: string
                          valueDropdown:
                            - string
                          startDateTime: string
                          endDateTime: string
                  deleted: true
            text/json:
              schema:
                $ref: '#/components/schemas/PropertyGroupDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  name: string
                  address:
                    streetName: string
                    streetNumber: string
                    streetNumberAddition: string
                    postalCode: string
                    buildingName: string
                    locality: string
                    city: string
                    country: { }
                    localizedDisplay: string
                    lineOne: string
                    lineTwo: string
                  defaultManagementRelations:
                    - customerId: string
                      shortDisplayName: string
                      accountNumber: string
                      managementRelationType: { }
                  serviceLocationIds:
                    - string
                  type: { }
                  costAllocationEnabled: true
                  communicationConfiguration:
                    companyName: string
                    vatAccountNumber: string
                    companyAccountNumber: string
                    logo: string
                    logoCdnUrl: string
                    primaryColor: string
                    secondaryColor: string
                    address:
                      streetName: string
                      streetNumber: string
                      streetNumberAddition: string
                      postalCode: string
                      buildingName: string
                      locality: string
                      city: string
                      country: { }
                      localizedDisplay: string
                      lineOne: string
                      lineTwo: string
                    contactDetails:
                      emailAddress: string
                      telephone: string
                      website: string
                      telephoneInterruptions: string
                  customProperties:
                    - customEntityPropertyTypeId: string
                      values:
                        - valueDecimal: 0
                          valueString: string
                          valueBoolean: true
                          valueNumber: 0
                          valueDateTime: string
                          valueDropdown:
                            - string
                          startDateTime: string
                          endDateTime: string
                  deleted: true
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
  '/PropertyGroups/{propertygroupuuid}/servicelocations':
    post:
      tags:
        - PropertyGroups
      summary: Add locations to a location group.
      description: 'If provided locations are already in another location group, they will be moved.'
      operationId: post-propertygroups-propertygroupuuid-servicelocations
      parameters:
        - name: propertygroupuuid
          in: path
          description: The ID of the location group.
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: The request containing locations to be added.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/PropertyGroupServiceLocationsRequest'
            example:
              serviceLocations:
                - string
              referenceDate: string
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/PropertyGroupServiceLocationsRequest'
            example:
              serviceLocations:
                - string
              referenceDate: string
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/PropertyGroupServiceLocationsRequest'
            example:
              serviceLocations:
                - string
              referenceDate: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/PropertyGroupDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyGroupDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  name: string
                  address:
                    streetName: string
                    streetNumber: string
                    streetNumberAddition: string
                    postalCode: string
                    buildingName: string
                    locality: string
                    city: string
                    country: { }
                    localizedDisplay: string
                    lineOne: string
                    lineTwo: string
                  defaultManagementRelations:
                    - customerId: string
                      shortDisplayName: string
                      accountNumber: string
                      managementRelationType: { }
                  serviceLocationIds:
                    - string
                  type: { }
                  costAllocationEnabled: true
                  communicationConfiguration:
                    companyName: string
                    vatAccountNumber: string
                    companyAccountNumber: string
                    logo: string
                    logoCdnUrl: string
                    primaryColor: string
                    secondaryColor: string
                    address:
                      streetName: string
                      streetNumber: string
                      streetNumberAddition: string
                      postalCode: string
                      buildingName: string
                      locality: string
                      city: string
                      country: { }
                      localizedDisplay: string
                      lineOne: string
                      lineTwo: string
                    contactDetails:
                      emailAddress: string
                      telephone: string
                      website: string
                      telephoneInterruptions: string
                  customProperties:
                    - customEntityPropertyTypeId: string
                      values:
                        - valueDecimal: 0
                          valueString: string
                          valueBoolean: true
                          valueNumber: 0
                          valueDateTime: string
                          valueDropdown:
                            - string
                          startDateTime: string
                          endDateTime: string
                  deleted: true
            text/json:
              schema:
                $ref: '#/components/schemas/PropertyGroupDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  name: string
                  address:
                    streetName: string
                    streetNumber: string
                    streetNumberAddition: string
                    postalCode: string
                    buildingName: string
                    locality: string
                    city: string
                    country: { }
                    localizedDisplay: string
                    lineOne: string
                    lineTwo: string
                  defaultManagementRelations:
                    - customerId: string
                      shortDisplayName: string
                      accountNumber: string
                      managementRelationType: { }
                  serviceLocationIds:
                    - string
                  type: { }
                  costAllocationEnabled: true
                  communicationConfiguration:
                    companyName: string
                    vatAccountNumber: string
                    companyAccountNumber: string
                    logo: string
                    logoCdnUrl: string
                    primaryColor: string
                    secondaryColor: string
                    address:
                      streetName: string
                      streetNumber: string
                      streetNumberAddition: string
                      postalCode: string
                      buildingName: string
                      locality: string
                      city: string
                      country: { }
                      localizedDisplay: string
                      lineOne: string
                      lineTwo: string
                    contactDetails:
                      emailAddress: string
                      telephone: string
                      website: string
                      telephoneInterruptions: string
                  customProperties:
                    - customEntityPropertyTypeId: string
                      values:
                        - valueDecimal: 0
                          valueString: string
                          valueBoolean: true
                          valueNumber: 0
                          valueDateTime: string
                          valueDropdown:
                            - string
                          startDateTime: string
                          endDateTime: string
                  deleted: true
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
    delete:
      tags:
        - PropertyGroups
      summary: Remove locations from a location group.
      description: Remove locations from a location group.
      operationId: delete-propertygroups-propertygroupuuid-servicelocations
      parameters:
        - name: propertygroupuuid
          in: path
          description: The ID of the location group.
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: The request containing locations to be removed.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/PropertyGroupServiceLocationsRequest'
            example:
              serviceLocations:
                - string
              referenceDate: string
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/PropertyGroupServiceLocationsRequest'
            example:
              serviceLocations:
                - string
              referenceDate: string
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/PropertyGroupServiceLocationsRequest'
            example:
              serviceLocations:
                - string
              referenceDate: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/PropertyGroupDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyGroupDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  name: string
                  address:
                    streetName: string
                    streetNumber: string
                    streetNumberAddition: string
                    postalCode: string
                    buildingName: string
                    locality: string
                    city: string
                    country: { }
                    localizedDisplay: string
                    lineOne: string
                    lineTwo: string
                  defaultManagementRelations:
                    - customerId: string
                      shortDisplayName: string
                      accountNumber: string
                      managementRelationType: { }
                  serviceLocationIds:
                    - string
                  type: { }
                  costAllocationEnabled: true
                  communicationConfiguration:
                    companyName: string
                    vatAccountNumber: string
                    companyAccountNumber: string
                    logo: string
                    logoCdnUrl: string
                    primaryColor: string
                    secondaryColor: string
                    address:
                      streetName: string
                      streetNumber: string
                      streetNumberAddition: string
                      postalCode: string
                      buildingName: string
                      locality: string
                      city: string
                      country: { }
                      localizedDisplay: string
                      lineOne: string
                      lineTwo: string
                    contactDetails:
                      emailAddress: string
                      telephone: string
                      website: string
                      telephoneInterruptions: string
                  customProperties:
                    - customEntityPropertyTypeId: string
                      values:
                        - valueDecimal: 0
                          valueString: string
                          valueBoolean: true
                          valueNumber: 0
                          valueDateTime: string
                          valueDropdown:
                            - string
                          startDateTime: string
                          endDateTime: string
                  deleted: true
            text/json:
              schema:
                $ref: '#/components/schemas/PropertyGroupDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  name: string
                  address:
                    streetName: string
                    streetNumber: string
                    streetNumberAddition: string
                    postalCode: string
                    buildingName: string
                    locality: string
                    city: string
                    country: { }
                    localizedDisplay: string
                    lineOne: string
                    lineTwo: string
                  defaultManagementRelations:
                    - customerId: string
                      shortDisplayName: string
                      accountNumber: string
                      managementRelationType: { }
                  serviceLocationIds:
                    - string
                  type: { }
                  costAllocationEnabled: true
                  communicationConfiguration:
                    companyName: string
                    vatAccountNumber: string
                    companyAccountNumber: string
                    logo: string
                    logoCdnUrl: string
                    primaryColor: string
                    secondaryColor: string
                    address:
                      streetName: string
                      streetNumber: string
                      streetNumberAddition: string
                      postalCode: string
                      buildingName: string
                      locality: string
                      city: string
                      country: { }
                      localizedDisplay: string
                      lineOne: string
                      lineTwo: string
                    contactDetails:
                      emailAddress: string
                      telephone: string
                      website: string
                      telephoneInterruptions: string
                  customProperties:
                    - customEntityPropertyTypeId: string
                      values:
                        - valueDecimal: 0
                          valueString: string
                          valueBoolean: true
                          valueNumber: 0
                          valueDateTime: string
                          valueDropdown:
                            - string
                          startDateTime: string
                          endDateTime: string
                  deleted: true
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
  /PropertyGroups/bulk:
    delete:
      tags:
        - PropertyGroups
      summary: Delete multiple location groups in bulk.
      description: Delete multiple location groups in bulk.
      operationId: delete-propertygroups-bulk
      parameters:
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: The request containing bulk deletion details and query parameters to filter the location groups to be deleted.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BulkDeletePropertyGroupRequest'
            example:
              mutationDateTime: string
              onlyValidate: true
              queryParams:
                flexSearch: string
                includeOnlyIds:
                  - string
                excludeIds:
                  - string
                nameContains: string
              quickFilter: string
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BulkDeletePropertyGroupRequest'
            example:
              mutationDateTime: string
              onlyValidate: true
              queryParams:
                flexSearch: string
                includeOnlyIds:
                  - string
                excludeIds:
                  - string
                nameContains: string
              quickFilter: string
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BulkDeletePropertyGroupRequest'
            example:
              mutationDateTime: string
              onlyValidate: true
              queryParams:
                flexSearch: string
                includeOnlyIds:
                  - string
                excludeIds:
                  - string
                nameContains: string
              quickFilter: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
  '/PropertyGroups/{entityId}/customproperties':
    post:
      tags:
        - PropertyGroups
      summary: '/PropertyGroups/{entityId}/customproperties - POST'
      operationId: post-propertygroups-entityid-customproperties
      parameters:
        - name: entityId
          in: path
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/UpdateCustomEntityPropertiesRequest'
            example:
              properties:
                - customEntityPropertyTypeId: string
                  values:
                    - startDateTime: string
                      endDateTime: string
                      valueDecimal: 0
                      valueString: string
                      valueBoolean: true
                      valueNumber: 0
                      valueDateTime: string
                      valueDropdown:
                        - string
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/UpdateCustomEntityPropertiesRequest'
            example:
              properties:
                - customEntityPropertyTypeId: string
                  values:
                    - startDateTime: string
                      endDateTime: string
                      valueDecimal: 0
                      valueString: string
                      valueBoolean: true
                      valueNumber: 0
                      valueDateTime: string
                      valueDropdown:
                        - string
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/UpdateCustomEntityPropertiesRequest'
            example:
              properties:
                - customEntityPropertyTypeId: string
                  values:
                    - startDateTime: string
                      endDateTime: string
                      valueDecimal: 0
                      valueString: string
                      valueBoolean: true
                      valueNumber: 0
                      valueDateTime: string
                      valueDropdown:
                        - string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/PropertyGroupDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyGroupDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  name: string
                  address:
                    streetName: string
                    streetNumber: string
                    streetNumberAddition: string
                    postalCode: string
                    buildingName: string
                    locality: string
                    city: string
                    country: { }
                    localizedDisplay: string
                    lineOne: string
                    lineTwo: string
                  defaultManagementRelations:
                    - customerId: string
                      shortDisplayName: string
                      accountNumber: string
                      managementRelationType: { }
                  serviceLocationIds:
                    - string
                  type: { }
                  costAllocationEnabled: true
                  communicationConfiguration:
                    companyName: string
                    vatAccountNumber: string
                    companyAccountNumber: string
                    logo: string
                    logoCdnUrl: string
                    primaryColor: string
                    secondaryColor: string
                    address:
                      streetName: string
                      streetNumber: string
                      streetNumberAddition: string
                      postalCode: string
                      buildingName: string
                      locality: string
                      city: string
                      country: { }
                      localizedDisplay: string
                      lineOne: string
                      lineTwo: string
                    contactDetails:
                      emailAddress: string
                      telephone: string
                      website: string
                      telephoneInterruptions: string
                  customProperties:
                    - customEntityPropertyTypeId: string
                      values:
                        - valueDecimal: 0
                          valueString: string
                          valueBoolean: true
                          valueNumber: 0
                          valueDateTime: string
                          valueDropdown:
                            - string
                          startDateTime: string
                          endDateTime: string
                  deleted: true
            text/json:
              schema:
                $ref: '#/components/schemas/PropertyGroupDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  name: string
                  address:
                    streetName: string
                    streetNumber: string
                    streetNumberAddition: string
                    postalCode: string
                    buildingName: string
                    locality: string
                    city: string
                    country: { }
                    localizedDisplay: string
                    lineOne: string
                    lineTwo: string
                  defaultManagementRelations:
                    - customerId: string
                      shortDisplayName: string
                      accountNumber: string
                      managementRelationType: { }
                  serviceLocationIds:
                    - string
                  type: { }
                  costAllocationEnabled: true
                  communicationConfiguration:
                    companyName: string
                    vatAccountNumber: string
                    companyAccountNumber: string
                    logo: string
                    logoCdnUrl: string
                    primaryColor: string
                    secondaryColor: string
                    address:
                      streetName: string
                      streetNumber: string
                      streetNumberAddition: string
                      postalCode: string
                      buildingName: string
                      locality: string
                      city: string
                      country: { }
                      localizedDisplay: string
                      lineOne: string
                      lineTwo: string
                    contactDetails:
                      emailAddress: string
                      telephone: string
                      website: string
                      telephoneInterruptions: string
                  customProperties:
                    - customEntityPropertyTypeId: string
                      values:
                        - valueDecimal: 0
                          valueString: string
                          valueBoolean: true
                          valueNumber: 0
                          valueDateTime: string
                          valueDropdown:
                            - string
                          startDateTime: string
                          endDateTime: string
                  deleted: true
  /ServiceLocations:
    post:
      tags:
        - ServiceLocations
      summary: Create new location.
      description: Create new location.
      operationId: CreateServiceLocation
      parameters:
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: The request containing location details.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/CreateServiceLocationRequest'
            example:
              address:
                streetName: string
                streetNumber: string
                streetNumberAddition: string
                postalCode: string
                buildingName: string
                locality: string
                city: string
                country: { }
                localizedDisplay: string
                lineOne: string
                lineTwo: string
              externalId: string
              productId: string
              services:
                - utilityType: { }
                  externalIdentifier: string
              managementRelations:
                - customerId: string
                  managementRelationType: { }
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/CreateServiceLocationRequest'
            example:
              address:
                streetName: string
                streetNumber: string
                streetNumberAddition: string
                postalCode: string
                buildingName: string
                locality: string
                city: string
                country: { }
                localizedDisplay: string
                lineOne: string
                lineTwo: string
              externalId: string
              productId: string
              services:
                - utilityType: { }
                  externalIdentifier: string
              managementRelations:
                - customerId: string
                  managementRelationType: { }
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/CreateServiceLocationRequest'
            example:
              address:
                streetName: string
                streetNumber: string
                streetNumberAddition: string
                postalCode: string
                buildingName: string
                locality: string
                city: string
                country: { }
                localizedDisplay: string
                lineOne: string
                lineTwo: string
              externalId: string
              productId: string
              services:
                - utilityType: { }
                  externalIdentifier: string
              managementRelations:
                - customerId: string
                  managementRelationType: { }
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ServiceLocationDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceLocationDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  address:
                    streetName: string
                    streetNumber: string
                    streetNumberAddition: string
                    postalCode: string
                    buildingName: string
                    locality: string
                    city: string
                    country: { }
                    localizedDisplay: string
                    lineOne: string
                    lineTwo: string
                  displayAddress: string
                  propertyGroup:
                    id: string
                    name: string
                  product:
                    id: string
                    name: string
                    productId: string
                    productName: string
                  managementRelations:
                    - customerId: string
                      shortDisplayName: string
                      accountNumber: string
                      managementRelationType: { }
                  services:
                    - externalIdentifier: string
                      utilityType: { }
                      statusHistory:
                        - startDateTime: string
                          endDateTime: string
                          serviceStatus: { }
                      contracts:
                        - contractId: string
                          contractNumber: string
                          contractorId: string
                          contractorAcountNumber: string
                          contractorDisplayName: string
                          supplyStartDateTime: string
                          supplyEndDateTime: string
                          currentContractStatus: { }
                  hasMeters: true
                  externalId: string
                  timeZone: string
                  customProperties:
                    - customEntityPropertyTypeId: string
                      values:
                        - valueDecimal: 0
                          valueString: string
                          valueBoolean: true
                          valueNumber: 0
                          valueDateTime: string
                          valueDropdown:
                            - string
                          startDateTime: string
                          endDateTime: string
                  currentStatus: { }
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceLocationDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  address:
                    streetName: string
                    streetNumber: string
                    streetNumberAddition: string
                    postalCode: string
                    buildingName: string
                    locality: string
                    city: string
                    country: { }
                    localizedDisplay: string
                    lineOne: string
                    lineTwo: string
                  displayAddress: string
                  propertyGroup:
                    id: string
                    name: string
                  product:
                    id: string
                    name: string
                    productId: string
                    productName: string
                  managementRelations:
                    - customerId: string
                      shortDisplayName: string
                      accountNumber: string
                      managementRelationType: { }
                  services:
                    - externalIdentifier: string
                      utilityType: { }
                      statusHistory:
                        - startDateTime: string
                          endDateTime: string
                          serviceStatus: { }
                      contracts:
                        - contractId: string
                          contractNumber: string
                          contractorId: string
                          contractorAcountNumber: string
                          contractorDisplayName: string
                          supplyStartDateTime: string
                          supplyEndDateTime: string
                          currentContractStatus: { }
                  hasMeters: true
                  externalId: string
                  timeZone: string
                  customProperties:
                    - customEntityPropertyTypeId: string
                      values:
                        - valueDecimal: 0
                          valueString: string
                          valueBoolean: true
                          valueNumber: 0
                          valueDateTime: string
                          valueDropdown:
                            - string
                          startDateTime: string
                          endDateTime: string
                  currentStatus: { }
  /ServiceLocations/filter:
    post:
      tags:
        - ServiceLocations
      summary: Retrieve locations based on the provided query parameters.
      description: Retrieve locations based on the provided query parameters.
      operationId: FilterAllServiceLocations
      parameters:
        - name: Name
          in: query
          schema:
            type: string
        - name: Id
          in: query
          description: Format - int32.
          schema:
            type: integer
            format: int32
        - name: orderBy
          in: query
          description: Allows to order the locations.
          schema:
            type: string
        - name: continuationToken
          in: header
          description: Token which allows you to fetch the next records. The continuation token is returned in the response and can be reused in the next request to fetch additional data.
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: Allows to search on fields within the locations.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/GetServiceLocationsQueryParams'
            example:
              flexSearch: string
              includeOnlyIds:
                - string
              excludeIds:
                - string
              customerId: string
              propertyGroupIds:
                - string
              excludeServiceLocationsSuppliedInContractId: string
              excludeServiceLocationsInPropertyGroupId: string
              referenceDateTime: string
              postalCode: string
              city: string
              streetNumber: string
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/GetServiceLocationsQueryParams'
            example:
              flexSearch: string
              includeOnlyIds:
                - string
              excludeIds:
                - string
              customerId: string
              propertyGroupIds:
                - string
              excludeServiceLocationsSuppliedInContractId: string
              excludeServiceLocationsInPropertyGroupId: string
              referenceDateTime: string
              postalCode: string
              city: string
              streetNumber: string
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/GetServiceLocationsQueryParams'
            example:
              flexSearch: string
              includeOnlyIds:
                - string
              excludeIds:
                - string
              customerId: string
              propertyGroupIds:
                - string
              excludeServiceLocationsSuppliedInContractId: string
              excludeServiceLocationsInPropertyGroupId: string
              referenceDateTime: string
              postalCode: string
              city: string
              streetNumber: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ServiceLocationDTOPagedResponseModelDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceLocationDTOPagedResponseModelDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  results:
                    - id: string
                      entityType: { }
                      createdDateTime: string
                      discriminator: string
                      _etag: string
                      requireAttention: true
                      hasErrors: true
                      hasWarnings: true
                      isReadOnly: true
                      organisationId: string
                      address:
                        streetName: string
                        streetNumber: string
                        streetNumberAddition: string
                        postalCode: string
                        buildingName: string
                        locality: string
                        city: string
                        country: { }
                        localizedDisplay: string
                        lineOne: string
                        lineTwo: string
                      displayAddress: string
                      propertyGroup:
                        id: string
                        name: string
                      product:
                        id: string
                        name: string
                        productId: string
                        productName: string
                      managementRelations:
                        - customerId: string
                          shortDisplayName: string
                          accountNumber: string
                          managementRelationType: { }
                      services:
                        - externalIdentifier: string
                          utilityType: { }
                          statusHistory:
                            - startDateTime: string
                              endDateTime: string
                              serviceStatus: { }
                          contracts:
                            - contractId: string
                              contractNumber: string
                              contractorId: string
                              contractorAcountNumber: string
                              contractorDisplayName: string
                              supplyStartDateTime: string
                              supplyEndDateTime: string
                              currentContractStatus: { }
                      hasMeters: true
                      externalId: string
                      timeZone: string
                      customProperties:
                        - customEntityPropertyTypeId: string
                          values:
                            - valueDecimal: 0
                              valueString: string
                              valueBoolean: true
                              valueNumber: 0
                              valueDateTime: string
                              valueDropdown:
                                - string
                              startDateTime: string
                              endDateTime: string
                      currentStatus: { }
                  hasNextPage: true
                  nextPageToken: string
                  totalRecords: 0
                  sortableFields:
                    - string
                  aggregateDetails:
                    - code: string
                      translation: string
                      value: 0
                      valueDate: string
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceLocationDTOPagedResponseModelDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  results:
                    - id: string
                      entityType: { }
                      createdDateTime: string
                      discriminator: string
                      _etag: string
                      requireAttention: true
                      hasErrors: true
                      hasWarnings: true
                      isReadOnly: true
                      organisationId: string
                      address:
                        streetName: string
                        streetNumber: string
                        streetNumberAddition: string
                        postalCode: string
                        buildingName: string
                        locality: string
                        city: string
                        country: { }
                        localizedDisplay: string
                        lineOne: string
                        lineTwo: string
                      displayAddress: string
                      propertyGroup:
                        id: string
                        name: string
                      product:
                        id: string
                        name: string
                        productId: string
                        productName: string
                      managementRelations:
                        - customerId: string
                          shortDisplayName: string
                          accountNumber: string
                          managementRelationType: { }
                      services:
                        - externalIdentifier: string
                          utilityType: { }
                          statusHistory:
                            - startDateTime: string
                              endDateTime: string
                              serviceStatus: { }
                          contracts:
                            - contractId: string
                              contractNumber: string
                              contractorId: string
                              contractorAcountNumber: string
                              contractorDisplayName: string
                              supplyStartDateTime: string
                              supplyEndDateTime: string
                              currentContractStatus: { }
                      hasMeters: true
                      externalId: string
                      timeZone: string
                      customProperties:
                        - customEntityPropertyTypeId: string
                          values:
                            - valueDecimal: 0
                              valueString: string
                              valueBoolean: true
                              valueNumber: 0
                              valueDateTime: string
                              valueDropdown:
                                - string
                              startDateTime: string
                              endDateTime: string
                      currentStatus: { }
                  hasNextPage: true
                  nextPageToken: string
                  totalRecords: 0
                  sortableFields:
                    - string
                  aggregateDetails:
                    - code: string
                      translation: string
                      value: 0
                      valueDate: string
  /ServiceLocations/filter/overviewcount:
    post:
      tags:
        - ServiceLocations
      summary: Retrieve the overview count of locations based on the provided query parameters.
      description: Retrieve the overview count of locations based on the provided query parameters.
      operationId: FilterServiceLocationOverviewCount
      parameters:
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: Allows to search on fields within the locations.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/GetServiceLocationsQueryParams'
            example:
              flexSearch: string
              includeOnlyIds:
                - string
              excludeIds:
                - string
              customerId: string
              propertyGroupIds:
                - string
              excludeServiceLocationsSuppliedInContractId: string
              excludeServiceLocationsInPropertyGroupId: string
              referenceDateTime: string
              postalCode: string
              city: string
              streetNumber: string
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/GetServiceLocationsQueryParams'
            example:
              flexSearch: string
              includeOnlyIds:
                - string
              excludeIds:
                - string
              customerId: string
              propertyGroupIds:
                - string
              excludeServiceLocationsSuppliedInContractId: string
              excludeServiceLocationsInPropertyGroupId: string
              referenceDateTime: string
              postalCode: string
              city: string
              streetNumber: string
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/GetServiceLocationsQueryParams'
            example:
              flexSearch: string
              includeOnlyIds:
                - string
              excludeIds:
                - string
              customerId: string
              propertyGroupIds:
                - string
              excludeServiceLocationsSuppliedInContractId: string
              excludeServiceLocationsInPropertyGroupId: string
              referenceDateTime: string
              postalCode: string
              city: string
              streetNumber: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ServiceLocationOverviewCountDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceLocationOverviewCountDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  all: 0
                  supplied: 0
                  unsupplied: 0
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceLocationOverviewCountDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  all: 0
                  supplied: 0
                  unsupplied: 0
  '/ServiceLocations/{servicelocationuuid}':
    get:
      tags:
        - ServiceLocations
      summary: Retrieve a location by its ID.
      description: Retrieve a location by its ID.
      operationId: GetServiceLocation
      parameters:
        - name: servicelocationuuid
          in: path
          description: The ID of the location.
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ServiceLocationDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceLocationDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  address:
                    streetName: string
                    streetNumber: string
                    streetNumberAddition: string
                    postalCode: string
                    buildingName: string
                    locality: string
                    city: string
                    country: { }
                    localizedDisplay: string
                    lineOne: string
                    lineTwo: string
                  displayAddress: string
                  propertyGroup:
                    id: string
                    name: string
                  product:
                    id: string
                    name: string
                    productId: string
                    productName: string
                  managementRelations:
                    - customerId: string
                      shortDisplayName: string
                      accountNumber: string
                      managementRelationType: { }
                  services:
                    - externalIdentifier: string
                      utilityType: { }
                      statusHistory:
                        - startDateTime: string
                          endDateTime: string
                          serviceStatus: { }
                      contracts:
                        - contractId: string
                          contractNumber: string
                          contractorId: string
                          contractorAcountNumber: string
                          contractorDisplayName: string
                          supplyStartDateTime: string
                          supplyEndDateTime: string
                          currentContractStatus: { }
                  hasMeters: true
                  externalId: string
                  timeZone: string
                  customProperties:
                    - customEntityPropertyTypeId: string
                      values:
                        - valueDecimal: 0
                          valueString: string
                          valueBoolean: true
                          valueNumber: 0
                          valueDateTime: string
                          valueDropdown:
                            - string
                          startDateTime: string
                          endDateTime: string
                  currentStatus: { }
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceLocationDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  address:
                    streetName: string
                    streetNumber: string
                    streetNumberAddition: string
                    postalCode: string
                    buildingName: string
                    locality: string
                    city: string
                    country: { }
                    localizedDisplay: string
                    lineOne: string
                    lineTwo: string
                  displayAddress: string
                  propertyGroup:
                    id: string
                    name: string
                  product:
                    id: string
                    name: string
                    productId: string
                    productName: string
                  managementRelations:
                    - customerId: string
                      shortDisplayName: string
                      accountNumber: string
                      managementRelationType: { }
                  services:
                    - externalIdentifier: string
                      utilityType: { }
                      statusHistory:
                        - startDateTime: string
                          endDateTime: string
                          serviceStatus: { }
                      contracts:
                        - contractId: string
                          contractNumber: string
                          contractorId: string
                          contractorAcountNumber: string
                          contractorDisplayName: string
                          supplyStartDateTime: string
                          supplyEndDateTime: string
                          currentContractStatus: { }
                  hasMeters: true
                  externalId: string
                  timeZone: string
                  customProperties:
                    - customEntityPropertyTypeId: string
                      values:
                        - valueDecimal: 0
                          valueString: string
                          valueBoolean: true
                          valueNumber: 0
                          valueDateTime: string
                          valueDropdown:
                            - string
                          startDateTime: string
                          endDateTime: string
                  currentStatus: { }
  '/ServiceLocations/{servicelocationuuid}/updatemanagementdetails':
    post:
      tags:
        - ServiceLocations
      summary: Update management relations of a location.
      description: Update management relations of a location.
      operationId: UpdateServiceLocationManagementDetails
      parameters:
        - name: servicelocationuuid
          in: path
          description: The ID of the location.
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: The request containing a complete list of new management relations.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/UpdateManagementRelationsRequest'
              description: Represents a request to update multiple management relations in a single operation
            example:
              managementRelations:
                - customerId: string
                  managementRelationType: { }
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/UpdateManagementRelationsRequest'
              description: Represents a request to update multiple management relations in a single operation
            example:
              managementRelations:
                - customerId: string
                  managementRelationType: { }
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/UpdateManagementRelationsRequest'
              description: Represents a request to update multiple management relations in a single operation
            example:
              managementRelations:
                - customerId: string
                  managementRelationType: { }
      responses:
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: string
                title: string
                status: 0
                detail: string
                instance: string
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: string
                title: string
                status: 0
                detail: string
                instance: string
  '/ServiceLocations/{servicelocationuuid}/updateexternalid':
    post:
      tags:
        - ServiceLocations
      summary: Update external ID of a location.
      description: Update external ID of a location.
      operationId: UpdateServiceLocationExternalId
      parameters:
        - name: servicelocationuuid
          in: path
          description: The ID of the location.
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: The request containing new external ID.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/UpdateExternalIdRequest'
            example:
              externalId: string
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/UpdateExternalIdRequest'
            example:
              externalId: string
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/UpdateExternalIdRequest'
            example:
              externalId: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ServiceLocationDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceLocationDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  address:
                    streetName: string
                    streetNumber: string
                    streetNumberAddition: string
                    postalCode: string
                    buildingName: string
                    locality: string
                    city: string
                    country: { }
                    localizedDisplay: string
                    lineOne: string
                    lineTwo: string
                  displayAddress: string
                  propertyGroup:
                    id: string
                    name: string
                  product:
                    id: string
                    name: string
                    productId: string
                    productName: string
                  managementRelations:
                    - customerId: string
                      shortDisplayName: string
                      accountNumber: string
                      managementRelationType: { }
                  services:
                    - externalIdentifier: string
                      utilityType: { }
                      statusHistory:
                        - startDateTime: string
                          endDateTime: string
                          serviceStatus: { }
                      contracts:
                        - contractId: string
                          contractNumber: string
                          contractorId: string
                          contractorAcountNumber: string
                          contractorDisplayName: string
                          supplyStartDateTime: string
                          supplyEndDateTime: string
                          currentContractStatus: { }
                  hasMeters: true
                  externalId: string
                  timeZone: string
                  customProperties:
                    - customEntityPropertyTypeId: string
                      values:
                        - valueDecimal: 0
                          valueString: string
                          valueBoolean: true
                          valueNumber: 0
                          valueDateTime: string
                          valueDropdown:
                            - string
                          startDateTime: string
                          endDateTime: string
                  currentStatus: { }
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceLocationDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  address:
                    streetName: string
                    streetNumber: string
                    streetNumberAddition: string
                    postalCode: string
                    buildingName: string
                    locality: string
                    city: string
                    country: { }
                    localizedDisplay: string
                    lineOne: string
                    lineTwo: string
                  displayAddress: string
                  propertyGroup:
                    id: string
                    name: string
                  product:
                    id: string
                    name: string
                    productId: string
                    productName: string
                  managementRelations:
                    - customerId: string
                      shortDisplayName: string
                      accountNumber: string
                      managementRelationType: { }
                  services:
                    - externalIdentifier: string
                      utilityType: { }
                      statusHistory:
                        - startDateTime: string
                          endDateTime: string
                          serviceStatus: { }
                      contracts:
                        - contractId: string
                          contractNumber: string
                          contractorId: string
                          contractorAcountNumber: string
                          contractorDisplayName: string
                          supplyStartDateTime: string
                          supplyEndDateTime: string
                          currentContractStatus: { }
                  hasMeters: true
                  externalId: string
                  timeZone: string
                  customProperties:
                    - customEntityPropertyTypeId: string
                      values:
                        - valueDecimal: 0
                          valueString: string
                          valueBoolean: true
                          valueNumber: 0
                          valueDateTime: string
                          valueDropdown:
                            - string
                          startDateTime: string
                          endDateTime: string
                  currentStatus: { }
  '/ServiceLocations/{servicelocationuuid}/updateproduct':
    post:
      tags:
        - ServiceLocations
      summary: Update product for a location.
      description: Update product for a location.
      operationId: UpdateServiceLocationProduct
      parameters:
        - name: servicelocationuuid
          in: path
          description: The ID of the location.
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: The request containing the ID of a product to be linked.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/UpdateServiceLocationProductRequest'
            example:
              productId: string
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/UpdateServiceLocationProductRequest'
            example:
              productId: string
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/UpdateServiceLocationProductRequest'
            example:
              productId: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ServiceLocationDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceLocationDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  address:
                    streetName: string
                    streetNumber: string
                    streetNumberAddition: string
                    postalCode: string
                    buildingName: string
                    locality: string
                    city: string
                    country: { }
                    localizedDisplay: string
                    lineOne: string
                    lineTwo: string
                  displayAddress: string
                  propertyGroup:
                    id: string
                    name: string
                  product:
                    id: string
                    name: string
                    productId: string
                    productName: string
                  managementRelations:
                    - customerId: string
                      shortDisplayName: string
                      accountNumber: string
                      managementRelationType: { }
                  services:
                    - externalIdentifier: string
                      utilityType: { }
                      statusHistory:
                        - startDateTime: string
                          endDateTime: string
                          serviceStatus: { }
                      contracts:
                        - contractId: string
                          contractNumber: string
                          contractorId: string
                          contractorAcountNumber: string
                          contractorDisplayName: string
                          supplyStartDateTime: string
                          supplyEndDateTime: string
                          currentContractStatus: { }
                  hasMeters: true
                  externalId: string
                  timeZone: string
                  customProperties:
                    - customEntityPropertyTypeId: string
                      values:
                        - valueDecimal: 0
                          valueString: string
                          valueBoolean: true
                          valueNumber: 0
                          valueDateTime: string
                          valueDropdown:
                            - string
                          startDateTime: string
                          endDateTime: string
                  currentStatus: { }
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceLocationDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  address:
                    streetName: string
                    streetNumber: string
                    streetNumberAddition: string
                    postalCode: string
                    buildingName: string
                    locality: string
                    city: string
                    country: { }
                    localizedDisplay: string
                    lineOne: string
                    lineTwo: string
                  displayAddress: string
                  propertyGroup:
                    id: string
                    name: string
                  product:
                    id: string
                    name: string
                    productId: string
                    productName: string
                  managementRelations:
                    - customerId: string
                      shortDisplayName: string
                      accountNumber: string
                      managementRelationType: { }
                  services:
                    - externalIdentifier: string
                      utilityType: { }
                      statusHistory:
                        - startDateTime: string
                          endDateTime: string
                          serviceStatus: { }
                      contracts:
                        - contractId: string
                          contractNumber: string
                          contractorId: string
                          contractorAcountNumber: string
                          contractorDisplayName: string
                          supplyStartDateTime: string
                          supplyEndDateTime: string
                          currentContractStatus: { }
                  hasMeters: true
                  externalId: string
                  timeZone: string
                  customProperties:
                    - customEntityPropertyTypeId: string
                      values:
                        - valueDecimal: 0
                          valueString: string
                          valueBoolean: true
                          valueNumber: 0
                          valueDateTime: string
                          valueDropdown:
                            - string
                          startDateTime: string
                          endDateTime: string
                  currentStatus: { }
  /ServiceLocations/bulk/updateproduct:
    post:
      tags:
        - ServiceLocations
      summary: Update product for multiple locations in bulk.
      description: Update product for multiple locations in bulk.
      operationId: BulkUpdateServiceLocationProduct
      parameters:
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: 'The request containing bulk product update details and query parameters to filter the locations, which are supposed to have product updated.'
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BulkUpdateServiceLocationProductRequest'
            example:
              productId: string
              onlyValidate: true
              queryParams:
                flexSearch: string
                includeOnlyIds:
                  - string
                excludeIds:
                  - string
                customerId: string
                propertyGroupIds:
                  - string
                excludeServiceLocationsSuppliedInContractId: string
                excludeServiceLocationsInPropertyGroupId: string
                referenceDateTime: string
                postalCode: string
                city: string
                streetNumber: string
              quickFilter: string
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BulkUpdateServiceLocationProductRequest'
            example:
              productId: string
              onlyValidate: true
              queryParams:
                flexSearch: string
                includeOnlyIds:
                  - string
                excludeIds:
                  - string
                customerId: string
                propertyGroupIds:
                  - string
                excludeServiceLocationsSuppliedInContractId: string
                excludeServiceLocationsInPropertyGroupId: string
                referenceDateTime: string
                postalCode: string
                city: string
                streetNumber: string
              quickFilter: string
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BulkUpdateServiceLocationProductRequest'
            example:
              productId: string
              onlyValidate: true
              queryParams:
                flexSearch: string
                includeOnlyIds:
                  - string
                excludeIds:
                  - string
                customerId: string
                propertyGroupIds:
                  - string
                excludeServiceLocationsSuppliedInContractId: string
                excludeServiceLocationsInPropertyGroupId: string
                referenceDateTime: string
                postalCode: string
                city: string
                streetNumber: string
              quickFilter: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
  /ServiceLocations/bulk/recalculateeav:
    post:
      tags:
        - ServiceLocations
      summary: Trigger recalculation of EAV for multiple locations in bulk.
      description: The recalculation will happen on an active contract.
      operationId: post-servicelocations-bulk-recalculateeav
      parameters:
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: 'The request containing bulk EAV recalculation details and query parameters to filter the locations, which are supposed to have EAV recalculated.'
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BulkRecalculateEavServiceLocationRequest'
            example:
              onlyValidate: true
              queryParams:
                flexSearch: string
                includeOnlyIds:
                  - string
                excludeIds:
                  - string
                customerId: string
                propertyGroupIds:
                  - string
                excludeServiceLocationsSuppliedInContractId: string
                excludeServiceLocationsInPropertyGroupId: string
                referenceDateTime: string
                postalCode: string
                city: string
                streetNumber: string
              quickFilter: string
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BulkRecalculateEavServiceLocationRequest'
            example:
              onlyValidate: true
              queryParams:
                flexSearch: string
                includeOnlyIds:
                  - string
                excludeIds:
                  - string
                customerId: string
                propertyGroupIds:
                  - string
                excludeServiceLocationsSuppliedInContractId: string
                excludeServiceLocationsInPropertyGroupId: string
                referenceDateTime: string
                postalCode: string
                city: string
                streetNumber: string
              quickFilter: string
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BulkRecalculateEavServiceLocationRequest'
            example:
              onlyValidate: true
              queryParams:
                flexSearch: string
                includeOnlyIds:
                  - string
                excludeIds:
                  - string
                customerId: string
                propertyGroupIds:
                  - string
                excludeServiceLocationsSuppliedInContractId: string
                excludeServiceLocationsInPropertyGroupId: string
                referenceDateTime: string
                postalCode: string
                city: string
                streetNumber: string
              quickFilter: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
  '/ServiceLocations/{servicelocationuuid}/updateaddress':
    post:
      tags:
        - ServiceLocations
      summary: Update addres of a location.
      description: Update addres of a location.
      operationId: UpdateServiceLocationAddress
      parameters:
        - name: servicelocationuuid
          in: path
          description: The ID of the location.
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: The request containing a new address.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/UpdateServiceLocationAddressRequest'
            example:
              address:
                streetName: string
                streetNumber: string
                streetNumberAddition: string
                postalCode: string
                buildingName: string
                locality: string
                city: string
                country: { }
                localizedDisplay: string
                lineOne: string
                lineTwo: string
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/UpdateServiceLocationAddressRequest'
            example:
              address:
                streetName: string
                streetNumber: string
                streetNumberAddition: string
                postalCode: string
                buildingName: string
                locality: string
                city: string
                country: { }
                localizedDisplay: string
                lineOne: string
                lineTwo: string
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/UpdateServiceLocationAddressRequest'
            example:
              address:
                streetName: string
                streetNumber: string
                streetNumberAddition: string
                postalCode: string
                buildingName: string
                locality: string
                city: string
                country: { }
                localizedDisplay: string
                lineOne: string
                lineTwo: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ServiceLocationDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceLocationDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  address:
                    streetName: string
                    streetNumber: string
                    streetNumberAddition: string
                    postalCode: string
                    buildingName: string
                    locality: string
                    city: string
                    country: { }
                    localizedDisplay: string
                    lineOne: string
                    lineTwo: string
                  displayAddress: string
                  propertyGroup:
                    id: string
                    name: string
                  product:
                    id: string
                    name: string
                    productId: string
                    productName: string
                  managementRelations:
                    - customerId: string
                      shortDisplayName: string
                      accountNumber: string
                      managementRelationType: { }
                  services:
                    - externalIdentifier: string
                      utilityType: { }
                      statusHistory:
                        - startDateTime: string
                          endDateTime: string
                          serviceStatus: { }
                      contracts:
                        - contractId: string
                          contractNumber: string
                          contractorId: string
                          contractorAcountNumber: string
                          contractorDisplayName: string
                          supplyStartDateTime: string
                          supplyEndDateTime: string
                          currentContractStatus: { }
                  hasMeters: true
                  externalId: string
                  timeZone: string
                  customProperties:
                    - customEntityPropertyTypeId: string
                      values:
                        - valueDecimal: 0
                          valueString: string
                          valueBoolean: true
                          valueNumber: 0
                          valueDateTime: string
                          valueDropdown:
                            - string
                          startDateTime: string
                          endDateTime: string
                  currentStatus: { }
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceLocationDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  address:
                    streetName: string
                    streetNumber: string
                    streetNumberAddition: string
                    postalCode: string
                    buildingName: string
                    locality: string
                    city: string
                    country: { }
                    localizedDisplay: string
                    lineOne: string
                    lineTwo: string
                  displayAddress: string
                  propertyGroup:
                    id: string
                    name: string
                  product:
                    id: string
                    name: string
                    productId: string
                    productName: string
                  managementRelations:
                    - customerId: string
                      shortDisplayName: string
                      accountNumber: string
                      managementRelationType: { }
                  services:
                    - externalIdentifier: string
                      utilityType: { }
                      statusHistory:
                        - startDateTime: string
                          endDateTime: string
                          serviceStatus: { }
                      contracts:
                        - contractId: string
                          contractNumber: string
                          contractorId: string
                          contractorAcountNumber: string
                          contractorDisplayName: string
                          supplyStartDateTime: string
                          supplyEndDateTime: string
                          currentContractStatus: { }
                  hasMeters: true
                  externalId: string
                  timeZone: string
                  customProperties:
                    - customEntityPropertyTypeId: string
                      values:
                        - valueDecimal: 0
                          valueString: string
                          valueBoolean: true
                          valueNumber: 0
                          valueDateTime: string
                          valueDropdown:
                            - string
                          startDateTime: string
                          endDateTime: string
                  currentStatus: { }
  /ServiceLocations/bulk:
    delete:
      tags:
        - ServiceLocations
      summary: Delete multiple unused locations in bulk.
      description: Delete multiple unused locations in bulk.
      operationId: delete-servicelocations-bulk
      parameters:
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        description: The request containing bulk deletion details and query parameters to filter the locations to be deleted.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BulkDeleteServiceLocationRequest'
            example:
              onlyValidate: true
              queryParams:
                flexSearch: string
                includeOnlyIds:
                  - string
                excludeIds:
                  - string
                customerId: string
                propertyGroupIds:
                  - string
                excludeServiceLocationsSuppliedInContractId: string
                excludeServiceLocationsInPropertyGroupId: string
                referenceDateTime: string
                postalCode: string
                city: string
                streetNumber: string
              quickFilter: string
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BulkDeleteServiceLocationRequest'
            example:
              onlyValidate: true
              queryParams:
                flexSearch: string
                includeOnlyIds:
                  - string
                excludeIds:
                  - string
                customerId: string
                propertyGroupIds:
                  - string
                excludeServiceLocationsSuppliedInContractId: string
                excludeServiceLocationsInPropertyGroupId: string
                referenceDateTime: string
                postalCode: string
                city: string
                streetNumber: string
              quickFilter: string
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BulkDeleteServiceLocationRequest'
            example:
              onlyValidate: true
              queryParams:
                flexSearch: string
                includeOnlyIds:
                  - string
                excludeIds:
                  - string
                customerId: string
                propertyGroupIds:
                  - string
                excludeServiceLocationsSuppliedInContractId: string
                excludeServiceLocationsInPropertyGroupId: string
                referenceDateTime: string
                postalCode: string
                city: string
                streetNumber: string
              quickFilter: string
      responses:
        '204':
          description: No Content
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/BooleanApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/BooleanApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data: true
            text/json:
              schema:
                $ref: '#/components/schemas/BooleanApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data: true
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
  /ServiceLocations/postaladdresses:
    get:
      tags:
        - ServiceLocations
      summary: GetPostalAddresses
      operationId: GetPostalAddresses
      parameters:
        - name: PostalCode
          in: query
          schema:
            type: string
        - name: continuationToken
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/PostalCodeDTOPagedResponseModelDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/PostalCodeDTOPagedResponseModelDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  results:
                    - postalCode: string
                      city: string
                  hasNextPage: true
                  nextPageToken: string
                  totalRecords: 0
                  sortableFields:
                    - string
                  aggregateDetails:
                    - code: string
                      translation: string
                      value: 0
                      valueDate: string
            text/json:
              schema:
                $ref: '#/components/schemas/PostalCodeDTOPagedResponseModelDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  results:
                    - postalCode: string
                      city: string
                  hasNextPage: true
                  nextPageToken: string
                  totalRecords: 0
                  sortableFields:
                    - string
                  aggregateDetails:
                    - code: string
                      translation: string
                      value: 0
                      valueDate: string
  '/ServiceLocations/{entityId}/customproperties':
    post:
      tags:
        - ServiceLocations
      summary: '/ServiceLocations/{entityId}/customproperties - POST'
      operationId: post-servicelocations-entityid-customproperties
      parameters:
        - name: entityId
          in: path
          required: true
          schema:
            type: string
        - name: zf-tuuid
          in: header
          description: Format - uuid. Tenant ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Tenant ID:
              value: '{{zf-tuuid}}'
        - name: zf-ouuid
          in: header
          description: Format - uuid. Organisation ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Organisation ID:
              value: '{{zf-ouuid}}'
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/UpdateCustomEntityPropertiesRequest'
            example:
              properties:
                - customEntityPropertyTypeId: string
                  values:
                    - startDateTime: string
                      endDateTime: string
                      valueDecimal: 0
                      valueString: string
                      valueBoolean: true
                      valueNumber: 0
                      valueDateTime: string
                      valueDropdown:
                        - string
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/UpdateCustomEntityPropertiesRequest'
            example:
              properties:
                - customEntityPropertyTypeId: string
                  values:
                    - startDateTime: string
                      endDateTime: string
                      valueDecimal: 0
                      valueString: string
                      valueBoolean: true
                      valueNumber: 0
                      valueDateTime: string
                      valueDropdown:
                        - string
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/UpdateCustomEntityPropertiesRequest'
            example:
              properties:
                - customEntityPropertyTypeId: string
                  values:
                    - startDateTime: string
                      endDateTime: string
                      valueDecimal: 0
                      valueString: string
                      valueBoolean: true
                      valueNumber: 0
                      valueDateTime: string
                      valueDropdown:
                        - string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ServiceLocationDTOApiResponseDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceLocationDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  address:
                    streetName: string
                    streetNumber: string
                    streetNumberAddition: string
                    postalCode: string
                    buildingName: string
                    locality: string
                    city: string
                    country: { }
                    localizedDisplay: string
                    lineOne: string
                    lineTwo: string
                  displayAddress: string
                  propertyGroup:
                    id: string
                    name: string
                  product:
                    id: string
                    name: string
                    productId: string
                    productName: string
                  managementRelations:
                    - customerId: string
                      shortDisplayName: string
                      accountNumber: string
                      managementRelationType: { }
                  services:
                    - externalIdentifier: string
                      utilityType: { }
                      statusHistory:
                        - startDateTime: string
                          endDateTime: string
                          serviceStatus: { }
                      contracts:
                        - contractId: string
                          contractNumber: string
                          contractorId: string
                          contractorAcountNumber: string
                          contractorDisplayName: string
                          supplyStartDateTime: string
                          supplyEndDateTime: string
                          currentContractStatus: { }
                  hasMeters: true
                  externalId: string
                  timeZone: string
                  customProperties:
                    - customEntityPropertyTypeId: string
                      values:
                        - valueDecimal: 0
                          valueString: string
                          valueBoolean: true
                          valueNumber: 0
                          valueDateTime: string
                          valueDropdown:
                            - string
                          startDateTime: string
                          endDateTime: string
                  currentStatus: { }
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceLocationDTOApiResponseDTO'
              example:
                errors:
                  - key: { }
                    correlationId: string
                    message: string
                    messageValues:
                      - dataType: { }
                        value: string
                        capitalize: true
                success: true
                applicableEntitiesCount: 0
                requestedEntitiesCount: 0
                succeededEntitiesCount: 0
                isSynchronous: true
                data:
                  id: string
                  entityType: { }
                  createdDateTime: string
                  discriminator: string
                  _etag: string
                  requireAttention: true
                  hasErrors: true
                  hasWarnings: true
                  isReadOnly: true
                  organisationId: string
                  address:
                    streetName: string
                    streetNumber: string
                    streetNumberAddition: string
                    postalCode: string
                    buildingName: string
                    locality: string
                    city: string
                    country: { }
                    localizedDisplay: string
                    lineOne: string
                    lineTwo: string
                  displayAddress: string
                  propertyGroup:
                    id: string
                    name: string
                  product:
                    id: string
                    name: string
                    productId: string
                    productName: string
                  managementRelations:
                    - customerId: string
                      shortDisplayName: string
                      accountNumber: string
                      managementRelationType: { }
                  services:
                    - externalIdentifier: string
                      utilityType: { }
                      statusHistory:
                        - startDateTime: string
                          endDateTime: string
                          serviceStatus: { }
                      contracts:
                        - contractId: string
                          contractNumber: string
                          contractorId: string
                          contractorAcountNumber: string
                          contractorDisplayName: string
                          supplyStartDateTime: string
                          supplyEndDateTime: string
                          currentContractStatus: { }
                  hasMeters: true
                  externalId: string
                  timeZone: string
                  customProperties:
                    - customEntityPropertyTypeId: string
                      values:
                        - valueDecimal: 0
                          valueString: string
                          valueBoolean: true
                          valueNumber: 0
                          valueDateTime: string
                          valueDropdown:
                            - string
                          startDateTime: string
                          endDateTime: string
                  currentStatus: { }
components:
  schemas:
    AddContractedServicesRequest:
      type: object
      properties:
        supplyStartDate:
          type: string
          format: date-time
        supplyEndDate:
          type: string
          format: date-time
          nullable: true
        services:
          type: array
          items:
            $ref: '#/components/schemas/ChangeContractServiceLocationRequest'
          nullable: true
      additionalProperties: false
    AddSubMeterRequest:
      type: object
      properties:
        subMeterId:
          type: string
          nullable: true
        externalReference:
          type: string
          nullable: true
      additionalProperties: false
    AddressDTO:
      type: object
      properties:
        streetName:
          type: string
          nullable: true
        streetNumber:
          type: string
          nullable: true
        streetNumberAddition:
          type: string
          nullable: true
        postalCode:
          type: string
          nullable: true
        buildingName:
          type: string
          nullable: true
        locality:
          type: string
          nullable: true
        city:
          type: string
          nullable: true
        country:
          allOf:
            - $ref: '#/components/schemas/CountryCode'
          nullable: true
        localizedDisplay:
          type: string
          nullable: true
        lineOne:
          type: string
          nullable: true
        lineTwo:
          type: string
          nullable: true
      additionalProperties: false
    AdvanceAmountChangedBy:
      enum:
        - systeminvoicecalculation
        - customer
        - customerservicerepresentative
      type: string
    AdvanceAmountLimitType:
      enum:
        - fixed
        - percentage
      type: string
    AdvanceCalculationFallbackReason:
      enum:
        - na
        - deviationtoolow
        - accuracytoolow
        - estimationfailed
        - estimationfailedanddeviationtoolow
        - manuallyoverridden
      type: string
    AdvanceFrequency:
      enum:
        - none
        - monthly
        - quarterly
        - halfyearly
      type: string
    AdvanceRecalculationType:
      enum:
        - none
        - usingpreviousinvoice
        - usingestimatedinvoice
      type: string
    AggregateDetailsDTO:
      type: object
      properties:
        code:
          type: string
          nullable: true
        translation:
          type: string
          nullable: true
        value:
          type: number
          format: double
          nullable: true
        valueDate:
          type: string
          format: date-time
          nullable: true
      additionalProperties: false
    AggregationFrequency:
      enum:
        - none
        - daily
        - monthly
        - yearly
      type: string
    AggregationType:
      enum:
        - Max
        - Avg
        - Sum
        - Min
      type: string
    AnnualStatementOrigin:
      enum:
        - scheduledrun
        - manual
      type: string
    AnnualStatementReference:
      type: object
      properties:
        annualStatementId:
          type: string
          nullable: true
        annualStatementNumber:
          type: string
          nullable: true
        year:
          type: integer
          format: int32
        version:
          type: integer
          format: int32
        status:
          allOf:
            - $ref: '#/components/schemas/AnnualStatementStatus'
          nullable: true
      additionalProperties: false
    AnnualStatementStatus:
      enum:
        - created
        - generationinprogress
        - generated
        - generationfailed
      type: string
    ApiResponseDTO:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/LocalisedErrorDTO'
          nullable: true
        success:
          type: boolean
        applicableEntitiesCount:
          type: integer
          format: int32
        requestedEntitiesCount:
          type: integer
          format: int32
        succeededEntitiesCount:
          type: integer
          format: int32
          readOnly: true
        isSynchronous:
          type: boolean
      additionalProperties: false
    AppEnvironment:
      enum:
        - development
        - staging
        - production
        - cli
      type: string
    AttachmentSignature:
      type: object
      properties:
        culture:
          $ref: '#/components/schemas/CultureInfo'
          nullable: true
        attachmentFileName:
          type: string
          nullable: true
        errorCode:
          allOf:
            - $ref: '#/components/schemas/ErrorCode'
          nullable: true
        origin:
          allOf:
            - $ref: '#/components/schemas/EntityAttachmentOrigin'
          nullable: true
        productAttachmentId:
          type: string
          nullable: true
        attachmentFileId:
          type: string
          nullable: true
        entityAttachmentGroupId:
          type: string
          nullable: true
        signDate:
          type: string
          format: date-time
          nullable: true
        viewedDate:
          type: string
          format: date-time
          nullable: true
      additionalProperties: false
    AttachmentVisibility:
      enum:
        - internal
        - portal
        - portalandmovein
      type: string
    AttributeType:
      enum:
        - meterserialnumber
        - externalidentifier
        - meteringtype
        - direction
        - parentmeterserialnumber
        - unitofmeasure
        - timeofuse
        - utilitytype
        - externalreference
      type: string
    BankAccountDTO:
      type: object
      properties:
        iban:
          type: string
          description: International Bank Account Number (IBAN)
          nullable: true
        isDefault:
          type: boolean
          description: Indicates whether this is the default bank account
      additionalProperties: false
      description: Represents a bank account associated with a customer
    BankAccountRequest:
      type: object
      properties:
        iban:
          type: string
          nullable: true
        signDate:
          type: string
          format: date-time
      additionalProperties: false
    BankStatementCreditDebit:
      enum:
        - unknown
        - debit
        - credit
      type: string
    BankTransactionType:
      enum:
        - unknown
        - sddreversal
        - sctreceived
      type: string
    BillingCalculationStreamStatus:
      enum:
        - open
        - finished
      type: string
    BillingCalculationType:
      enum:
        - consumption
        - subscription
        - attribute
        - consumptionunit
        - customentityproperty
      type: string
    BillingCompletenessQuickFilter:
      enum:
        - all
        - waiting
        - inputmissing
        - manuallycorrected
        - previousstillopen
        - missingadvances
      type: string
    BillingCompletenessStatus:
      enum:
        - waiting
        - gatheringinput
        - inputmissing
        - pendingcalculation
        - calculating
        - closed
        - previousnotclosed
        - manuallycorrected
        - waitingforapproval
        - manuallyclosed
        - waitingfornextestimation
      type: string
    BillingCompletenessTariffInputType:
      enum:
        - paymentmethod
        - customentityproperty
      type: string
    BillingDetailsDTO:
      type: object
      properties:
        billingMethod:
          allOf:
            - $ref: '#/components/schemas/ContractBillingMethod'
          nullable: true
        invoiceFrequency:
          allOf:
            - $ref: '#/components/schemas/InvoiceFrequency'
          nullable: true
        advanceFrequency:
          allOf:
            - $ref: '#/components/schemas/AdvanceFrequency'
          nullable: true
        contractualAdvanceAmount:
          type: number
          format: double
        products:
          type: array
          items:
            $ref: '#/components/schemas/ProductPeriodReferenceDTO'
          nullable: true
        invoiceAddress:
          allOf:
            - $ref: '#/components/schemas/AddressDTO'
          nullable: true
        firstInvoiceStartDateTime:
          type: string
          format: date-time
        firstInvoiceEndDateTime:
          type: string
          format: date-time
        blocked:
          type: boolean
      additionalProperties: false
    BillingItemLevel:
      enum:
        - contract
        - service
      type: string
    BillingItemTariffCalculationType:
      enum:
        - unitprice
        - tiered
        - volume
        - stairstep
        - condition
      type: string
    BillingItemTariffConditionType:
      enum:
        - paymentmethod
        - customentitypropertytype
      type: string
    BillingRelationScenarioType:
      enum:
        - advanceamountchanged
      type: string
    BillingScope:
      enum:
        - contract
        - location
      type: string
    BillingTariffInputType:
      enum:
        - none
        - fixed
        - costcomponent
      type: string
    BlockContractRequest:
      type: object
      properties:
        comment:
          type: string
          nullable: true
      additionalProperties: false
    BooleanApiResponseDTO:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/LocalisedErrorDTO'
          nullable: true
        success:
          type: boolean
        applicableEntitiesCount:
          type: integer
          format: int32
        requestedEntitiesCount:
          type: integer
          format: int32
        succeededEntitiesCount:
          type: integer
          format: int32
          readOnly: true
        isSynchronous:
          type: boolean
        data:
          type: boolean
          description: The updated entity in case of modifications or creation
      additionalProperties: false
    BulkBlockContractRequest:
      type: object
      properties:
        comment:
          type: string
          nullable: true
        onlyValidate:
          type: boolean
        queryParams:
          allOf:
            - $ref: '#/components/schemas/GetContractsQueryParams'
          nullable: true
        quickFilter:
          type: string
          nullable: true
      additionalProperties: false
    BulkChangeCustomerCustomerGroupRequest:
      type: object
      properties:
        customerGroupId:
          type: string
          nullable: true
        onlyValidate:
          type: boolean
        queryParams:
          allOf:
            - $ref: '#/components/schemas/GetCustomersQueryParams'
          nullable: true
        quickFilter:
          type: string
          nullable: true
      additionalProperties: false
    BulkCreateAnnualStatementRequest:
      type: object
      properties:
        year:
          type: integer
          description: The year for which the annual statement should be generated.
          format: int32
        onlyValidate:
          type: boolean
        queryParams:
          allOf:
            - $ref: '#/components/schemas/GetCustomersQueryParams'
          nullable: true
        quickFilter:
          type: string
          nullable: true
        onlyWhereLatestNotGenerated:
          type: boolean
      additionalProperties: false
    BulkDeleteMoveRequestRequest:
      type: object
      properties:
        onlyValidate:
          type: boolean
        queryParams:
          allOf:
            - $ref: '#/components/schemas/GetMoveRequestsQueryParams'
          nullable: true
        quickFilter:
          type: string
          nullable: true
      additionalProperties: false
    BulkDeletePropertyGroupRequest:
      type: object
      properties:
        mutationDateTime:
          type: string
          format: date-time
        onlyValidate:
          type: boolean
        queryParams:
          allOf:
            - $ref: '#/components/schemas/GetPropertyGroupsQueryParams'
          nullable: true
        quickFilter:
          type: string
          nullable: true
      additionalProperties: false
    BulkDeleteServiceLocationRequest:
      type: object
      properties:
        onlyValidate:
          type: boolean
        queryParams:
          allOf:
            - $ref: '#/components/schemas/GetServiceLocationsQueryParams'
          nullable: true
        quickFilter:
          type: string
          nullable: true
      additionalProperties: false
    BulkRecalculateEavContractRequest:
      type: object
      properties:
        onlyValidate:
          type: boolean
        queryParams:
          allOf:
            - $ref: '#/components/schemas/GetContractsQueryParams'
          nullable: true
        quickFilter:
          type: string
          nullable: true
      additionalProperties: false
    BulkRecalculateEavServiceLocationRequest:
      type: object
      properties:
        onlyValidate:
          type: boolean
        queryParams:
          allOf:
            - $ref: '#/components/schemas/GetServiceLocationsQueryParams'
          nullable: true
        quickFilter:
          type: string
          nullable: true
      additionalProperties: false
    BulkRejectMoveRequest:
      type: object
      properties:
        onlyValidate:
          type: boolean
        queryParams:
          allOf:
            - $ref: '#/components/schemas/GetMoveRequestsQueryParams'
          nullable: true
        quickFilter:
          type: string
          nullable: true
      additionalProperties: false
    BulkRemoveContractRequest:
      type: object
      properties:
        onlyValidate:
          type: boolean
        queryParams:
          allOf:
            - $ref: '#/components/schemas/GetContractsQueryParams'
          nullable: true
        quickFilter:
          type: string
          nullable: true
      additionalProperties: false
    BulkSetMoveRequestToNew:
      type: object
      properties:
        onlyValidate:
          type: boolean
        queryParams:
          allOf:
            - $ref: '#/components/schemas/GetMoveRequestsQueryParams'
          nullable: true
        quickFilter:
          type: string
          nullable: true
      additionalProperties: false
    BulkSetMoveRequestToPendingRequest:
      type: object
      properties:
        newStatus:
          allOf:
            - $ref: '#/components/schemas/MoveRequestStatus'
          nullable: true
        onlyValidate:
          type: boolean
        queryParams:
          allOf:
            - $ref: '#/components/schemas/GetMoveRequestsQueryParams'
          nullable: true
        quickFilter:
          type: string
          nullable: true
      additionalProperties: false
    BulkSignContractRequest:
      type: object
      properties:
        mutationDateTime:
          type: string
          format: date-time
        keepExistingInvoiceOnEndDate:
          type: boolean
          description: "When this flag is set, if an invoice exists with the end date equal to the move-out date,\r\nno credit note shall be created."
        onlyValidate:
          type: boolean
        queryParams:
          allOf:
            - $ref: '#/components/schemas/GetContractsQueryParams'
          nullable: true
        quickFilter:
          type: string
          nullable: true
      additionalProperties: false
    BulkTerminateContractRequest:
      type: object
      properties:
        mutationDateTime:
          type: string
          format: date-time
        keepExistingInvoiceOnEndDate:
          type: boolean
          description: "When this flag is set, if an invoice exists with the end date equal to the move-out date,\r\nno credit note shall be created."
        onlyValidate:
          type: boolean
        queryParams:
          allOf:
            - $ref: '#/components/schemas/GetContractsQueryParams'
          nullable: true
        quickFilter:
          type: string
          nullable: true
      additionalProperties: false
    BulkUnblockContractRequest:
      type: object
      properties:
        onlyValidate:
          type: boolean
        queryParams:
          allOf:
            - $ref: '#/components/schemas/GetContractsQueryParams'
          nullable: true
        quickFilter:
          type: string
          nullable: true
      additionalProperties: false
    BulkUninstallMeterRequest:
      type: object
      properties:
        removeDate:
          type: string
          format: date-time
        onlyValidate:
          type: boolean
        queryParams:
          allOf:
            - $ref: '#/components/schemas/GetMetersQueryParams'
          nullable: true
        quickFilter:
          type: string
          nullable: true
      additionalProperties: false
    BulkUpdateContractProductRequest:
      type: object
      properties:
        startDate:
          type: string
          format: date-time
        productId:
          type: string
          nullable: true
        parameter:
          allOf:
            - $ref: '#/components/schemas/UpdateContractProductParameter'
          nullable: true
        onlyValidate:
          type: boolean
        queryParams:
          allOf:
            - $ref: '#/components/schemas/GetContractsQueryParams'
          nullable: true
        quickFilter:
          type: string
          nullable: true
      additionalProperties: false
    BulkUpdateServiceLocationProductRequest:
      type: object
      properties:
        productId:
          type: string
          nullable: true
        onlyValidate:
          type: boolean
        queryParams:
          allOf:
            - $ref: '#/components/schemas/GetServiceLocationsQueryParams'
          nullable: true
        quickFilter:
          type: string
          nullable: true
      additionalProperties: false
    CalculatedLineStatus:
      enum:
        - created
        - transferred
        - approved
      type: string
    Calendar:
      type: object
      properties:
        minSupportedDateTime:
          type: string
          format: date-time
          readOnly: true
        maxSupportedDateTime:
          type: string
          format: date-time
          readOnly: true
        algorithmType:
          allOf:
            - $ref: '#/components/schemas/CalendarAlgorithmType'
          readOnly: true
        isReadOnly:
          type: boolean
          readOnly: true
        eras:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
          readOnly: true
        twoDigitYearMax:
          type: integer
          format: int32
      additionalProperties: false
    CalendarAlgorithmType:
      enum:
        - Unknown
        - SolarCalendar
        - LunarCalendar
        - LunisolarCalendar
      type: string
    CalendarWeekRule:
      enum:
        - FirstDay
        - FirstFullWeek
        - FirstFourDayWeek
      type: string
    ChangeContractServiceEstimatedConsumptionRequest:
      type: object
      properties:
        consumerGroupId:
          type: string
          nullable: true
        value:
          type: number
          format: double
        unitOfMeasure:
          allOf:
            - $ref: '#/components/schemas/UnitOfMeasure'
          nullable: true
        meteringType:
          allOf:
            - $ref: '#/components/schemas/MeteringType'
          nullable: true
        isManualEntry:
          type: boolean
      additionalProperties: false
    ChangeContractServiceLocationRequest:
      type: object
      properties:
        serviceLocationId:
          type: string
          nullable: true
        utilityType:
          allOf:
            - $ref: '#/components/schemas/UtilityType'
          nullable: true
        externalIdentifier:
          type: string
          nullable: true
        estimatedConsumptions:
          type: array
          items:
            $ref: '#/components/schemas/ChangeContractServiceEstimatedConsumptionRequest'
          nullable: true
      additionalProperties: false
    ChangeContractedServicesRequest:
      type: object
      properties:
        services:
          type: array
          items:
            $ref: '#/components/schemas/ChangeContractServiceLocationRequest'
          nullable: true
      additionalProperties: false
    ChangeCustomerCommunicationPreferencesRequest:
      type: object
      properties:
        communicationPreferences:
          allOf:
            - $ref: '#/components/schemas/CustomerCommunicationPreferencesRequest'
          nullable: true
      additionalProperties: false
    ChangeCustomerContactDetailsRequest:
      type: object
      properties:
        contactEntries:
          type: array
          items:
            $ref: '#/components/schemas/ContactEntryRequest'
          nullable: true
      additionalProperties: false
    ChangeCustomerCustomerGroupRequest:
      type: object
      properties:
        customerGroupId:
          type: string
          nullable: true
      additionalProperties: false
    ChangeCustomerDetailsRequest:
      type: object
      properties:
        accountNumber:
          type: string
          nullable: true
        salutation:
          type: string
          nullable: true
        initials:
          type: string
          nullable: true
        firstName:
          type: string
          nullable: true
        lastName:
          type: string
          nullable: true
        birthDate:
          type: string
          format: date-time
        ssin:
          type: string
          description: Social security identification number
          nullable: true
        ssinCountry:
          allOf:
            - $ref: '#/components/schemas/CountryCode'
          description: 'Social security identification number country, used for validation'
          nullable: true
        companyName:
          type: string
          nullable: true
        organizationNumber:
          type: string
          nullable: true
        vatNumber:
          type: string
          nullable: true
        customerType:
          allOf:
            - $ref: '#/components/schemas/CustomerType'
          nullable: true
      additionalProperties: false
    ChangeDraftContractAdvanceAmountRequest:
      type: object
      properties:
        newAdvanceAmount:
          type: number
          format: double
      additionalProperties: false
    CollectionCaseQuickFilter:
      enum:
        - all
        - active
        - requiresmanualintervention
        - closed
        - requireattention
      type: string
    CollectionChargeType:
      enum:
        - none
        - fixed
        - percentageofopenamount
        - tieredpercentageofopenamount
      type: string
    CollectionFlowStatus:
      enum:
        - active
        - manuallyclosed
        - automaticallyclosed
      type: string
    CollectionStepLevel:
      enum:
        - collection
        - reminder
        - noticeofdefault
      type: string
    CollectionStepStatus:
      enum:
        - pending
        - waitingformanualsend
        - closed
        - inprogress
        - skipped
        - generatingdocuments
        - failed
        - printing
      type: string
    CollectionStepType:
      enum:
        - communication
        - manualintervention
      type: string
    CommunicationConfigurationDTO:
      type: object
      properties:
        companyName:
          type: string
          nullable: true
        vatAccountNumber:
          type: string
          nullable: true
        companyAccountNumber:
          type: string
          nullable: true
        logo:
          type: string
          nullable: true
        logoCdnUrl:
          type: string
          nullable: true
        primaryColor:
          type: string
          nullable: true
        secondaryColor:
          type: string
          nullable: true
        address:
          allOf:
            - $ref: '#/components/schemas/AddressDTO'
          nullable: true
        contactDetails:
          allOf:
            - $ref: '#/components/schemas/PropertyGroupContactDetailsDTO'
          nullable: true
      additionalProperties: false
    CommunicationDocumentType:
      enum:
        - maindocument
        - additionaldocument
        - emailbody
      type: string
    CommunicationEntryQuickFilter:
      enum:
        - all
        - failed
      type: string
    CommunicationEntryStatus:
      enum:
        - generating
        - sending
        - failed
        - successful
        - skipped
      type: string
    CommunicationType:
      enum:
        - postal
        - none
        - email
        - manual
        - skipifsdd
        - sms
      type: string
    CompareInfo:
      type: object
      properties:
        name:
          type: string
          nullable: true
          readOnly: true
        version:
          allOf:
            - $ref: '#/components/schemas/SortVersion'
          nullable: true
          readOnly: true
        lcid:
          type: integer
          format: int32
          readOnly: true
      additionalProperties: false
    ConsumerGroupOrigin:
      enum:
        - manual
        - systemgenerated
      type: string
    ConsumerGroupSuggestion:
      enum:
        - frompropertygroup
        - originmanual
        - originsystemgenerated
      type: string
    ConsumptionOrigin:
      enum:
        - actual
        - manual
        - frompreviousyear
        - fromconsumergroup
        - forecast
      type: string
    ContactEntryDTO:
      type: object
      properties:
        contactType:
          allOf:
            - $ref: '#/components/schemas/ContactType'
          description: Type of contact information
          nullable: true
        value:
          type: string
          description: The actual contact value
          nullable: true
        description:
          type: string
          description: Description of the contact entry
          nullable: true
        primaryForType:
          type: boolean
          description: Indicates whether this is the primary contact method for its type
      additionalProperties: false
      description: Represents a contact entry for a customer
    ContactEntryRequest:
      type: object
      properties:
        value:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        primaryForType:
          type: boolean
        contactType:
          allOf:
            - $ref: '#/components/schemas/ContactType'
          nullable: true
      additionalProperties: false
    ContactType:
      enum:
        - email
        - telephone
        - mobiletelephone
        - website
      type: string
    ContractBillingMethod:
      enum:
        - credit
        - prepayment
      type: string
    ContractDTO:
      type: object
      properties:
        id:
          type: string
          description: Gets or sets the unique identifier.
          nullable: true
        entityType:
          allOf:
            - $ref: '#/components/schemas/EntitySubjectType'
          description: Gets or sets the type of the entity.
          nullable: true
        createdDateTime:
          type: string
          description: Gets or sets the date and time when the entity was created.
          format: date-time
        discriminator:
          type: string
          description: Gets or sets the discriminator value.
          nullable: true
        _etag:
          type: string
          description: Gets or sets the ETag value.
          nullable: true
        requireAttention:
          type: boolean
          description: Gets a value indicating whether the entity requires attention.
          readOnly: true
        hasErrors:
          type: boolean
          description: Gets or sets a value indicating whether the entity has errors.
        hasWarnings:
          type: boolean
          description: Gets or sets a value indicating whether the entity has warnings.
        isReadOnly:
          type: boolean
          description: Gets or sets a value indicating whether the entity is read-only.
        organisationId:
          type: string
          description: Gets or sets the organization identifier.
          nullable: true
        contractNumber:
          type: string
          nullable: true
        contractor:
          allOf:
            - $ref: '#/components/schemas/ContractorDTO'
          nullable: true
        supplyStartDate:
          type: string
          format: date-time
        supplyEndDate:
          type: string
          format: date-time
        serviceLocations:
          type: array
          items:
            $ref: '#/components/schemas/ContractServiceLocationDTO'
          nullable: true
        statusHistory:
          type: array
          items:
            $ref: '#/components/schemas/ContractStatusHistoryDTO'
          nullable: true
        currentContractStatus:
          allOf:
            - $ref: '#/components/schemas/ContractStatus'
          nullable: true
        billingDetails:
          allOf:
            - $ref: '#/components/schemas/BillingDetailsDTO'
          nullable: true
        externalContractReference:
          type: string
          nullable: true
        paymentTermsId:
          type: string
          nullable: true
        blockedForDeletion:
          type: boolean
        expectAdvancesToBeImportedPeriodically:
          type: boolean
        usePropertyGroupProduct:
          type: boolean
        propertyGroups:
          type: array
          items:
            $ref: '#/components/schemas/PropertyGroupReferenceDTO'
          nullable: true
        attachmentSignatures:
          type: array
          items:
            $ref: '#/components/schemas/AttachmentSignature'
          nullable: true
        customProperties:
          type: array
          items:
            $ref: '#/components/schemas/CustomEntityPropertyDTO'
          nullable: true
      additionalProperties: false
    ContractDTOApiResponseDTO:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/LocalisedErrorDTO'
          nullable: true
        success:
          type: boolean
        applicableEntitiesCount:
          type: integer
          format: int32
        requestedEntitiesCount:
          type: integer
          format: int32
        succeededEntitiesCount:
          type: integer
          format: int32
          readOnly: true
        isSynchronous:
          type: boolean
        data:
          allOf:
            - $ref: '#/components/schemas/ContractDTO'
          description: The updated entity in case of modifications or creation
          nullable: true
      additionalProperties: false
    ContractDTOListApiResponseDTO:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/LocalisedErrorDTO'
          nullable: true
        success:
          type: boolean
        applicableEntitiesCount:
          type: integer
          format: int32
        requestedEntitiesCount:
          type: integer
          format: int32
        succeededEntitiesCount:
          type: integer
          format: int32
          readOnly: true
        isSynchronous:
          type: boolean
        data:
          type: array
          items:
            $ref: '#/components/schemas/ContractDTO'
          description: The updated entity in case of modifications or creation
          nullable: true
      additionalProperties: false
    ContractDTOPagedResponseModelDTO:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/ContractDTO'
          nullable: true
        hasNextPage:
          type: boolean
        nextPageToken:
          type: string
          nullable: true
        totalRecords:
          type: integer
          format: int32
        sortableFields:
          type: array
          items:
            type: string
          nullable: true
        aggregateDetails:
          type: array
          items:
            $ref: '#/components/schemas/AggregateDetailsDTO'
          nullable: true
      additionalProperties: false
    ContractDTOPagedResponseModelDTOApiResponseDTO:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/LocalisedErrorDTO'
          nullable: true
        success:
          type: boolean
        applicableEntitiesCount:
          type: integer
          format: int32
        requestedEntitiesCount:
          type: integer
          format: int32
        succeededEntitiesCount:
          type: integer
          format: int32
          readOnly: true
        isSynchronous:
          type: boolean
        data:
          allOf:
            - $ref: '#/components/schemas/ContractDTOPagedResponseModelDTO'
          description: The updated entity in case of modifications or creation
          nullable: true
      additionalProperties: false
    ContractDetailsBillingPropertiesBaseDTO:
      type: object
      properties:
        billingMethod:
          allOf:
            - $ref: '#/components/schemas/ContractBillingMethod'
          nullable: true
          readOnly: true
      additionalProperties: false
    ContractDetailsDTO:
      type: object
      properties:
        productId:
          type: string
          nullable: true
        usePropertyGroupProduct:
          type: boolean
        estimations:
          type: array
          items:
            $ref: '#/components/schemas/ContractEstimationDTO'
          nullable: true
        errors:
          type: array
          items:
            $ref: '#/components/schemas/LocalisedErrorDTO'
          nullable: true
        internalContractId:
          type: string
          nullable: true
        externalContractId:
          type: string
          nullable: true
        contractNumber:
          type: string
          nullable: true
        createdOrLinked:
          type: boolean
        serviceLocationsCount:
          type: integer
          format: int32
        billingProperties:
          allOf:
            - $ref: '#/components/schemas/ContractDetailsBillingPropertiesBaseDTO'
          nullable: true
      additionalProperties: false
    ContractEstimationDTO:
      type: object
      properties:
        utilityType:
          allOf:
            - $ref: '#/components/schemas/UtilityType'
          nullable: true
        unitOfMeasure:
          allOf:
            - $ref: '#/components/schemas/UnitOfMeasure'
          nullable: true
        meteringType:
          allOf:
            - $ref: '#/components/schemas/MeteringType'
          nullable: true
        value:
          type: number
          format: double
        consumerGroupId:
          type: string
          nullable: true
      additionalProperties: false
    ContractOverviewCountDTO:
      type: object
      properties:
        all:
          type: integer
          format: int32
        draft:
          type: integer
          format: int32
        ongoing:
          type: integer
          format: int32
        blocked:
          type: integer
          format: int32
      additionalProperties: false
    ContractOverviewCountDTOApiResponseDTO:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/LocalisedErrorDTO'
          nullable: true
        success:
          type: boolean
        applicableEntitiesCount:
          type: integer
          format: int32
        requestedEntitiesCount:
          type: integer
          format: int32
        succeededEntitiesCount:
          type: integer
          format: int32
          readOnly: true
        isSynchronous:
          type: boolean
        data:
          allOf:
            - $ref: '#/components/schemas/ContractOverviewCountDTO'
          description: The updated entity in case of modifications or creation
          nullable: true
      additionalProperties: false
    ContractQuickFilter:
      enum:
        - all
        - ongoing
        - draft
        - blocked
        - requireattention
      type: string
    ContractScenarioType:
      enum:
        - welcome
        - termination
        - locationsadded
        - locationsremoved
      type: string
    ContractServiceLocationDTO:
      type: object
      properties:
        id:
          type: string
          nullable: true
        address:
          allOf:
            - $ref: '#/components/schemas/AddressDTO'
          nullable: true
        propertyGroupId:
          type: string
          nullable: true
        services:
          type: array
          items:
            $ref: '#/components/schemas/ContractedServiceDTO'
          nullable: true
      additionalProperties: false
    ContractServicesUpdatedAction:
      enum:
        - servicesadded
        - servicesremoved
        - servicesupdated
        - servicescorrected
      type: string
    ContractStatus:
      enum:
        - draft
        - sent
        - signed
        - cancelled
        - terminated
      type: string
    ContractStatusHistoryDTO:
      type: object
      properties:
        contractStatus:
          allOf:
            - $ref: '#/components/schemas/ContractStatus'
          nullable: true
        mutationDateTime:
          type: string
          format: date-time
      additionalProperties: false
    ContractedServiceDTO:
      type: object
      properties:
        startDateTime:
          type: string
          format: date-time
        endDateTime:
          type: string
          format: date-time
        utilityType:
          allOf:
            - $ref: '#/components/schemas/UtilityType'
          nullable: true
        externalIdentifier:
          type: string
          nullable: true
        isConsumptionBased:
          type: boolean
        estimatedConsumptions:
          type: array
          items:
            $ref: '#/components/schemas/ContractedServiceEstimatedConsumptionDTO'
          nullable: true
      additionalProperties: false
    ContractedServiceEstimatedConsumptionDTO:
      type: object
      properties:
        consumerGroupId:
          type: string
          nullable: true
        value:
          type: number
          format: double
        unitOfMeasure:
          allOf:
            - $ref: '#/components/schemas/UnitOfMeasure'
          nullable: true
        meteringType:
          allOf:
            - $ref: '#/components/schemas/MeteringType'
          nullable: true
        isManualEntry:
          type: boolean
      additionalProperties: false
    ContractorDTO:
      type: object
      properties:
        customerId:
          type: string
          nullable: true
        accountNumber:
          type: string
          nullable: true
        shortDisplayName:
          type: string
          nullable: true
        paymentMethod:
          allOf:
            - $ref: '#/components/schemas/PaymentMethod'
          nullable: true
        customerType:
          allOf:
            - $ref: '#/components/schemas/CustomerType'
          nullable: true
        customerGroup:
          allOf:
            - $ref: '#/components/schemas/CustomerGroupReferenceDTO'
          nullable: true
      additionalProperties: false
    CountryCode:
      enum:
        - aut
        - bel
        - bgr
        - cyp
        - cze
        - dnk
        - est
        - fin
        - fra
        - deu
        - grc
        - hun
        - irl
        - ita
        - lva
        - ltu
        - lux
        - mlt
        - nld
        - pol
        - prt
        - rou
        - svk
        - esp
        - swe
        - gbr
        - che
        - isl
        - nor
        - rus
        - blr
        - ukr
        - mda
        - srb
        - alb
        - mne
        - mkd
        - tur
        - lie
        - smr
        - and
        - mco
        - bih
        - bra
        - usa
        - sgp
        - zaf
        - cuw
      type: string
    CreateContractBillingPropertiesBaseRequest:
      type: object
      additionalProperties: false
    CreateContractRequest:
      type: object
      properties:
        contractorId:
          type: string
          nullable: true
        contractNumber:
          type: string
          nullable: true
        supplyStartDate:
          type: string
          format: date-time
        supplyEndDate:
          type: string
          format: date-time
          nullable: true
        contractedServiceLocations:
          type: array
          items:
            $ref: '#/components/schemas/CreateContractServiceLocationRequest'
          nullable: true
        attachmentSignatures:
          type: array
          items:
            $ref: '#/components/schemas/AttachmentSignature'
          nullable: true
        productId:
          type: string
          nullable: true
        usePropertyGroupProduct:
          type: boolean
        invoiceAddress:
          allOf:
            - $ref: '#/components/schemas/AddressDTO'
          nullable: true
        externalContractReference:
          type: string
          nullable: true
        billingProperties:
          allOf:
            - $ref: '#/components/schemas/CreateContractBillingPropertiesBaseRequest'
          nullable: true
      additionalProperties: false
    CreateContractServiceEstimatedConsumptionRequest:
      type: object
      properties:
        consumerGroupId:
          type: string
          nullable: true
        value:
          type: number
          format: double
        unitOfMeasure:
          allOf:
            - $ref: '#/components/schemas/UnitOfMeasure'
          nullable: true
        meteringType:
          allOf:
            - $ref: '#/components/schemas/MeteringType'
          nullable: true
        isManualEntry:
          type: boolean
      additionalProperties: false
    CreateContractServiceLocationRequest:
      type: object
      properties:
        serviceLocationId:
          type: string
          nullable: true
        utilityType:
          allOf:
            - $ref: '#/components/schemas/UtilityType'
          nullable: true
        externalIdentifier:
          type: string
          nullable: true
        estimatedConsumptions:
          type: array
          items:
            $ref: '#/components/schemas/CreateContractServiceEstimatedConsumptionRequest'
          nullable: true
      additionalProperties: false
    CreateCustomerGroupRequest:
      type: object
      properties:
        name:
          type: string
          nullable: true
        settings:
          allOf:
            - $ref: '#/components/schemas/CreateCustomerGroupSettingsRequest'
          nullable: true
      additionalProperties: false
    CreateCustomerGroupSettingsRequest:
      type: object
      properties:
        automaticSettlement:
          type: boolean
          nullable: true
      additionalProperties: false
    CreateCustomerRequest:
      type: object
      properties:
        accountNum:
          type: string
          nullable: true
        salutation:
          type: string
          nullable: true
        initials:
          type: string
          nullable: true
        firstName:
          type: string
          nullable: true
        lastName:
          type: string
          nullable: true
        birthDate:
          type: string
          format: date-time
        ssin:
          type: string
          description: Social security identification number
          nullable: true
        ssinCountry:
          allOf:
            - $ref: '#/components/schemas/CountryCode'
          description: 'Social security identification number country, used for validation'
          nullable: true
        customerType:
          allOf:
            - $ref: '#/components/schemas/CustomerType'
          nullable: true
        companyName:
          type: string
          nullable: true
        vatNumber:
          type: string
          nullable: true
        organizationNumber:
          type: string
          nullable: true
        paymentTermsId:
          type: string
          nullable: true
        defaultPaymentMethod:
          allOf:
            - $ref: '#/components/schemas/PaymentMethod'
          nullable: true
        customerGroupId:
          type: string
          nullable: true
        invoiceAddress:
          allOf:
            - $ref: '#/components/schemas/AddressDTO'
          nullable: true
        bankAccounts:
          type: array
          items:
            $ref: '#/components/schemas/BankAccountRequest'
          nullable: true
        contactDetails:
          type: array
          items:
            $ref: '#/components/schemas/ContactEntryRequest'
          nullable: true
        communicationPreferences:
          allOf:
            - $ref: '#/components/schemas/CustomerCommunicationPreferencesRequest'
          nullable: true
      additionalProperties: false
    CreateMeterParentRelationRequest:
      type: object
      properties:
        parentMeterId:
          type: string
          nullable: true
        externalReference:
          type: string
          nullable: true
      additionalProperties: false
    CreateMeterPropertiesBaseRequest:
      type: object
      additionalProperties: false
    CreateMeterRequest:
      type: object
      properties:
        serialNumber:
          type: string
          nullable: true
        meterType:
          allOf:
            - $ref: '#/components/schemas/MeterType'
          nullable: true
        meterTag:
          type: string
          nullable: true
        modelId:
          type: string
          nullable: true
        mutationDateTime:
          type: string
          format: date-time
        channels:
          type: array
          items:
            $ref: '#/components/schemas/ExternalChannelRequest'
          nullable: true
        readingFrequency:
          allOf:
            - $ref: '#/components/schemas/MeterReadingFrequency'
          nullable: true
        nextExpectedReadingDate:
          type: string
          format: date-time
          nullable: true
        properties:
          allOf:
            - $ref: '#/components/schemas/CreateMeterPropertiesBaseRequest'
          nullable: true
        parentRelation:
          allOf:
            - $ref: '#/components/schemas/CreateMeterParentRelationRequest'
          nullable: true
      additionalProperties: false
    CreateMoveRequestRequest:
      type: object
      properties:
        moveRequestType:
          allOf:
            - $ref: '#/components/schemas/MoveRequestType'
          nullable: true
        mutationDateTime:
          type: string
          format: date-time
        customerDetails:
          allOf:
            - $ref: '#/components/schemas/MoveRequestCustomerDetails'
          nullable: true
        externalContractId:
          type: string
          nullable: true
        externalId:
          type: string
          nullable: true
        serviceLocationDetails:
          allOf:
            - $ref: '#/components/schemas/MoveRequestServiceLocationDetails'
          nullable: true
        measurementDetails:
          type: array
          items:
            $ref: '#/components/schemas/MoveRequestMeasurementDetails'
          nullable: true
        attachmentSignatures:
          type: array
          items:
            $ref: '#/components/schemas/MoveRequestAttachmentSignatureRequest'
          nullable: true
        customMessage:
          type: string
          nullable: true
        productId:
          type: string
          nullable: true
      additionalProperties: false
    CreatePropertyGroupRequest:
      type: object
      properties:
        name:
          type: string
          nullable: true
        type:
          allOf:
            - $ref: '#/components/schemas/PropertyGroupType'
          nullable: true
        address:
          allOf:
            - $ref: '#/components/schemas/AddressDTO'
          nullable: true
        managementRelations:
          type: array
          items:
            $ref: '#/components/schemas/ManagementRelationRequest'
          nullable: true
        serviceLocations:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
    CreateServiceLocationRequest:
      type: object
      properties:
        address:
          allOf:
            - $ref: '#/components/schemas/AddressDTO'
          nullable: true
        externalId:
          type: string
          nullable: true
        productId:
          type: string
          nullable: true
        services:
          type: array
          items:
            $ref: '#/components/schemas/CreateServiceRequest'
          nullable: true
        managementRelations:
          type: array
          items:
            $ref: '#/components/schemas/ManagementRelationRequest'
          nullable: true
      additionalProperties: false
    CreateServiceRequest:
      type: object
      properties:
        utilityType:
          allOf:
            - $ref: '#/components/schemas/UtilityType'
          nullable: true
        externalIdentifier:
          type: string
          nullable: true
      additionalProperties: false
    CultureInfo:
      type: string
      enum:
        - ''
        - aa
        - aa-DJ
        - aa-ER
        - aa-ET
        - af
        - af-NA
        - af-ZA
        - agq
        - agq-CM
        - ak
        - ak-GH
        - am
        - am-ET
        - ar
        - ar-001
        - ar-AE
        - ar-BH
        - ar-DJ
        - ar-DZ
        - ar-EG
        - ar-ER
        - ar-IL
        - ar-IQ
        - ar-JO
        - ar-KM
        - ar-KW
        - ar-LB
        - ar-LY
        - ar-MA
        - ar-MR
        - ar-OM
        - ar-PS
        - ar-QA
        - ar-SA
        - ar-SD
        - ar-SO
        - ar-SS
        - ar-SY
        - ar-TD
        - ar-TN
        - ar-YE
        - arn
        - arn-CL
        - as
        - as-IN
        - asa
        - asa-TZ
        - ast
        - ast-ES
        - az
        - az-Cyrl
        - az-Cyrl-AZ
        - az-Latn
        - az-Latn-AZ
        - ba
        - ba-RU
        - bas
        - bas-CM
        - be
        - be-BY
        - bem
        - bem-ZM
        - bez
        - bez-TZ
        - bg
        - bg-BG
        - bm
        - bm-ML
        - bn
        - bn-BD
        - bn-IN
        - bo
        - bo-CN
        - bo-IN
        - br
        - br-FR
        - brx
        - brx-IN
        - bs
        - bs-Cyrl
        - bs-Cyrl-BA
        - bs-Latn
        - bs-Latn-BA
        - byn
        - byn-ER
        - ca
        - ca-AD
        - ca-ES
        - ca-FR
        - ca-IT
        - ccp
        - ccp-BD
        - ccp-IN
        - ce
        - ce-RU
        - ceb
        - ceb-PH
        - cgg
        - cgg-UG
        - chr
        - chr-US
        - ckb
        - ckb-IQ
        - ckb-IR
        - co
        - co-FR
        - cs
        - cs-CZ
        - cu
        - cu-RU
        - cy
        - cy-GB
        - da
        - da-DK
        - da-GL
        - dav
        - dav-KE
        - de
        - de-AT
        - de-BE
        - de-CH
        - de-DE
        - de-IT
        - de-LI
        - de-LU
        - dje
        - dje-NE
        - dsb
        - dsb-DE
        - dua
        - dua-CM
        - dv
        - dv-MV
        - dyo
        - dyo-SN
        - dz
        - dz-BT
        - ebu
        - ebu-KE
        - ee
        - ee-GH
        - ee-TG
        - el
        - el-CY
        - el-GR
        - en
        - en-001
        - en-150
        - en-AE
        - en-AG
        - en-AI
        - en-AS
        - en-AT
        - en-AU
        - en-BB
        - en-BE
        - en-BI
        - en-BM
        - en-BS
        - en-BW
        - en-BZ
        - en-CA
        - en-CC
        - en-CH
        - en-CK
        - en-CM
        - en-CX
        - en-CY
        - en-DE
        - en-DK
        - en-DM
        - en-ER
        - en-FI
        - en-FJ
        - en-FK
        - en-FM
        - en-GB
        - en-GD
        - en-GG
        - en-GH
        - en-GI
        - en-GM
        - en-GU
        - en-GY
        - en-HK
        - en-IE
        - en-IL
        - en-IM
        - en-IN
        - en-IO
        - en-JE
        - en-JM
        - en-KE
        - en-KI
        - en-KN
        - en-KY
        - en-LC
        - en-LR
        - en-LS
        - en-MG
        - en-MH
        - en-MO
        - en-MP
        - en-MS
        - en-MT
        - en-MU
        - en-MW
        - en-MY
        - en-NA
        - en-NF
        - en-NG
        - en-NL
        - en-NR
        - en-NU
        - en-NZ
        - en-PG
        - en-PH
        - en-PK
        - en-PN
        - en-PR
        - en-PW
        - en-RW
        - en-SB
        - en-SC
        - en-SD
        - en-SE
        - en-SG
        - en-SH
        - en-SI
        - en-SL
        - en-SS
        - en-SX
        - en-SZ
        - en-TC
        - en-TK
        - en-TO
        - en-TT
        - en-TV
        - en-TZ
        - en-UG
        - en-UM
        - en-US
        - en-US-POSIX
        - en-VC
        - en-VG
        - en-VI
        - en-VU
        - en-WS
        - en-ZA
        - en-ZM
        - en-ZW
        - eo
        - eo-001
        - es
        - es-419
        - es-AR
        - es-BO
        - es-BR
        - es-BZ
        - es-CL
        - es-CO
        - es-CR
        - es-CU
        - es-DO
        - es-EC
        - es-ES
        - es-GQ
        - es-GT
        - es-HN
        - es-MX
        - es-NI
        - es-PA
        - es-PE
        - es-PH
        - es-PR
        - es-PY
        - es-SV
        - es-US
        - es-UY
        - es-VE
        - et
        - et-EE
        - eu
        - eu-ES
        - ewo
        - ewo-CM
        - fa
        - fa-AF
        - fa-IR
        - ff
        - ff-Latn
        - ff-Latn-BF
        - ff-Latn-CM
        - ff-Latn-GH
        - ff-Latn-GM
        - ff-Latn-GN
        - ff-Latn-GW
        - ff-Latn-LR
        - ff-Latn-MR
        - ff-Latn-NE
        - ff-Latn-NG
        - ff-Latn-SL
        - ff-Latn-SN
        - fi
        - fi-FI
        - fil
        - fil-PH
        - fo
        - fo-DK
        - fo-FO
        - fr
        - fr-BE
        - fr-BF
        - fr-BI
        - fr-BJ
        - fr-BL
        - fr-CA
        - fr-CD
        - fr-CF
        - fr-CG
        - fr-CH
        - fr-CI
        - fr-CM
        - fr-DJ
        - fr-DZ
        - fr-FR
        - fr-GA
        - fr-GF
        - fr-GN
        - fr-GP
        - fr-GQ
        - fr-HT
        - fr-KM
        - fr-LU
        - fr-MA
        - fr-MC
        - fr-MF
        - fr-MG
        - fr-ML
        - fr-MQ
        - fr-MR
        - fr-MU
        - fr-NC
        - fr-NE
        - fr-PF
        - fr-PM
        - fr-RE
        - fr-RW
        - fr-SC
        - fr-SN
        - fr-SY
        - fr-TD
        - fr-TG
        - fr-TN
        - fr-VU
        - fr-WF
        - fr-YT
        - fur
        - fur-IT
        - fy
        - fy-NL
        - ga
        - ga-IE
        - gd
        - gd-GB
        - gl
        - gl-ES
        - gn
        - gn-PY
        - gsw
        - gsw-CH
        - gsw-FR
        - gsw-LI
        - gu
        - gu-IN
        - guz
        - guz-KE
        - gv
        - gv-IM
        - ha
        - ha-GH
        - ha-NE
        - ha-NG
        - haw
        - haw-US
        - he
        - he-IL
        - hi
        - hi-IN
        - hr
        - hr-BA
        - hr-HR
        - hsb
        - hsb-DE
        - hu
        - hu-HU
        - hy
        - hy-AM
        - ia
        - ia-001
        - id
        - id-ID
        - ig
        - ig-NG
        - ii
        - ii-CN
        - is
        - is-IS
        - it
        - it-CH
        - it-IT
        - it-SM
        - it-VA
        - iu
        - iu-CA
        - iu-Latn
        - iu-Latn-CA
        - ja
        - ja-JP
        - jgo
        - jgo-CM
        - jmc
        - jmc-TZ
        - jv
        - jv-ID
        - ka
        - ka-GE
        - kab
        - kab-DZ
        - kam
        - kam-KE
        - kde
        - kde-TZ
        - kea
        - kea-CV
        - khq
        - khq-ML
        - ki
        - ki-KE
        - kk
        - kk-KZ
        - kkj
        - kkj-CM
        - kl
        - kl-GL
        - kln
        - kln-KE
        - km
        - km-KH
        - kn
        - kn-IN
        - ko
        - ko-KP
        - ko-KR
        - kok
        - kok-IN
        - ks
        - ks-IN
        - ksb
        - ksb-TZ
        - ksf
        - ksf-CM
        - ksh
        - ksh-DE
        - kw
        - kw-GB
        - ky
        - ky-KG
        - lag
        - lag-TZ
        - lb
        - lb-LU
        - lg
        - lg-UG
        - lkt
        - lkt-US
        - ln
        - ln-AO
        - ln-CD
        - ln-CF
        - ln-CG
        - lo
        - lo-LA
        - lrc
        - lrc-IQ
        - lrc-IR
        - lt
        - lt-LT
        - lu
        - lu-CD
        - luo
        - luo-KE
        - luy
        - luy-KE
        - lv
        - lv-LV
        - mas
        - mas-KE
        - mas-TZ
        - mer
        - mer-KE
        - mfe
        - mfe-MU
        - mg
        - mg-MG
        - mgh
        - mgh-MZ
        - mgo
        - mgo-CM
        - mi
        - mi-NZ
        - mk
        - mk-MK
        - ml
        - ml-IN
        - mn
        - mn-MN
        - mn-Mong
        - mn-Mong-CN
        - mn-Mong-MN
        - moh
        - moh-CA
        - mr
        - mr-IN
        - ms
        - ms-BN
        - ms-MY
        - ms-SG
        - mt
        - mt-MT
        - mua
        - mua-CM
        - my
        - my-MM
        - mzn
        - mzn-IR
        - naq
        - naq-NA
        - nb
        - nb-NO
        - nb-SJ
        - nd
        - nd-ZW
        - nds
        - nds-DE
        - nds-NL
        - ne
        - ne-IN
        - ne-NP
        - nl
        - nl-AW
        - nl-BE
        - nl-BQ
        - nl-CW
        - nl-NL
        - nl-SR
        - nl-SX
        - nmg
        - nmg-CM
        - nn
        - nn-NO
        - nnh
        - nnh-CM
        - nqo
        - nqo-GN
        - nr
        - nr-ZA
        - nso
        - nso-ZA
        - nus
        - nus-SS
        - nyn
        - nyn-UG
        - oc
        - oc-FR
        - om
        - om-ET
        - om-KE
        - or
        - or-IN
        - os
        - os-GE
        - os-RU
        - pa
        - pa-Arab
        - pa-Arab-PK
        - pa-Guru
        - pa-Guru-IN
        - pl
        - pl-PL
        - prg
        - prg-001
        - ps
        - ps-AF
        - ps-PK
        - pt
        - pt-AO
        - pt-BR
        - pt-CH
        - pt-CV
        - pt-GQ
        - pt-GW
        - pt-LU
        - pt-MO
        - pt-MZ
        - pt-PT
        - pt-ST
        - pt-TL
        - qu
        - qu-BO
        - qu-EC
        - qu-PE
        - quc
        - quc-GT
        - rm
        - rm-CH
        - rn
        - rn-BI
        - ro
        - ro-MD
        - ro-RO
        - rof
        - rof-TZ
        - ru
        - ru-BY
        - ru-KG
        - ru-KZ
        - ru-MD
        - ru-RU
        - ru-UA
        - rw
        - rw-RW
        - rwk
        - rwk-TZ
        - sa
        - sa-IN
        - sah
        - sah-RU
        - saq
        - saq-KE
        - sbp
        - sbp-TZ
        - sd
        - sd-PK
        - se
        - se-FI
        - se-NO
        - se-SE
        - seh
        - seh-MZ
        - ses
        - ses-ML
        - sg
        - sg-CF
        - shi
        - shi-Latn
        - shi-Latn-MA
        - shi-Tfng
        - shi-Tfng-MA
        - si
        - si-LK
        - sk
        - sk-SK
        - sl
        - sl-SI
        - sma
        - sma-NO
        - sma-SE
        - smj
        - smj-NO
        - smj-SE
        - smn
        - smn-FI
        - sms
        - sms-FI
        - sn
        - sn-ZW
        - so
        - so-DJ
        - so-ET
        - so-KE
        - so-SO
        - sq
        - sq-AL
        - sq-MK
        - sq-XK
        - sr
        - sr-Cyrl
        - sr-Cyrl-BA
        - sr-Cyrl-ME
        - sr-Cyrl-RS
        - sr-Cyrl-XK
        - sr-Latn
        - sr-Latn-BA
        - sr-Latn-ME
        - sr-Latn-RS
        - sr-Latn-XK
        - ss
        - ss-SZ
        - ss-ZA
        - ssy
        - ssy-ER
        - st
        - st-LS
        - st-ZA
        - sv
        - sv-AX
        - sv-FI
        - sv-SE
        - sw
        - sw-CD
        - sw-KE
        - sw-TZ
        - sw-UG
        - syr
        - syr-SY
        - ta
        - ta-IN
        - ta-LK
        - ta-MY
        - ta-SG
        - te
        - te-IN
        - teo
        - teo-KE
        - teo-UG
        - tg
        - tg-TJ
        - th
        - th-TH
        - ti
        - ti-ER
        - ti-ET
        - tig
        - tig-ER
        - tk
        - tk-TM
        - tn
        - tn-BW
        - tn-ZA
        - to
        - to-TO
        - tr
        - tr-CY
        - tr-TR
        - ts
        - ts-ZA
        - tt
        - tt-RU
        - twq
        - twq-NE
        - tzm
        - tzm-MA
        - ug
        - ug-CN
        - uk
        - uk-UA
        - ur
        - ur-IN
        - ur-PK
        - uz
        - uz-Arab
        - uz-Arab-AF
        - uz-Cyrl
        - uz-Cyrl-UZ
        - uz-Latn
        - uz-Latn-UZ
        - vai
        - vai-Latn
        - vai-Latn-LR
        - vai-Vaii
        - vai-Vaii-LR
        - ve
        - ve-ZA
        - vi
        - vi-VN
        - vo
        - vo-001
        - vun
        - vun-TZ
        - wae
        - wae-CH
        - wal
        - wal-ET
        - wo
        - wo-SN
        - xh
        - xh-ZA
        - xog
        - xog-UG
        - yav
        - yav-CM
        - yi
        - yi-001
        - yo
        - yo-BJ
        - yo-NG
        - zgh
        - zgh-MA
        - zh
        - zh-Hans
        - zh-Hans-CN
        - zh-Hans-HK
        - zh-Hans-MO
        - zh-Hans-SG
        - zh-Hant
        - zh-Hant-HK
        - zh-Hant-MO
        - zh-Hant-TW
        - zu
        - zu-ZA
      additionalProperties: false
    CultureTypes:
      enum:
        - NeutralCultures
        - SpecificCultures
        - InstalledWin32Cultures
        - AllCultures
        - UserCustomCulture
        - ReplacementCultures
        - WindowsOnlyCultures
        - FrameworkCultures
      type: string
    CustAgingBucketType:
      enum:
        - anyopenexcloverdue
        - anyoverdue
        - anyoverdue30
        - anyoverdue60
        - anyoverdue90
        - anyoverduemorethan90
      type: string
    CustomEntityPropertyDTO:
      type: object
      properties:
        customEntityPropertyTypeId:
          type: string
          nullable: true
        values:
          type: array
          items:
            $ref: '#/components/schemas/CustomEntityPropertyValueDTO'
          nullable: true
      additionalProperties: false
    CustomEntityPropertyTypeTagColor:
      enum:
        - blue
        - slate
        - green
        - yellow
        - orange
        - red
      type: string
    CustomEntityPropertyValueDTO:
      type: object
      properties:
        valueDecimal:
          type: number
          format: double
        valueString:
          type: string
          nullable: true
        valueBoolean:
          type: boolean
        valueNumber:
          type: integer
          format: int64
        valueDateTime:
          type: string
          format: date-time
          nullable: true
        valueDropdown:
          type: array
          items:
            type: string
          nullable: true
        startDateTime:
          type: string
          format: date-time
        endDateTime:
          type: string
          format: date-time
      additionalProperties: false
    CustomEntityPropertyValueType:
      enum:
        - string
        - number
        - decimal
        - boolean
        - datetime
        - dropdown
      type: string
    CustomerAnnualStatementOverviewCountDTO:
      type: object
      properties:
        all:
          type: integer
          format: int32
        latestAnnualStatementGenerationInProgress:
          type: integer
          format: int32
        latestAnnualStatementGenerated:
          type: integer
          format: int32
        latestAnnualStatementFailed:
          type: integer
          format: int32
      additionalProperties: false
    CustomerAnnualStatementOverviewCountDTOApiResponseDTO:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/LocalisedErrorDTO'
          nullable: true
        success:
          type: boolean
        applicableEntitiesCount:
          type: integer
          format: int32
        requestedEntitiesCount:
          type: integer
          format: int32
        succeededEntitiesCount:
          type: integer
          format: int32
          readOnly: true
        isSynchronous:
          type: boolean
        data:
          allOf:
            - $ref: '#/components/schemas/CustomerAnnualStatementOverviewCountDTO'
          description: The updated entity in case of modifications or creation
          nullable: true
      additionalProperties: false
    CustomerBalance:
      enum:
        - equaltozero
        - smallerthanzero
        - greaterthanzero
      type: string
    CustomerBillingSettingsAutomaticSettlementDTO:
      type: object
      properties:
        automaticSettlement:
          type: boolean
          description: Indicates whether automatic settlement is enabled
          nullable: true
        originatorType:
          allOf:
            - $ref: '#/components/schemas/EntitySubjectType'
          description: Type of entity that initiated the automatic settlement
          nullable: true
        originatorId:
          type: string
          description: Identifier of the entity that initiated the automatic settlement
          nullable: true
      additionalProperties: false
      description: Represents automatic settlement settings for a customer
    CustomerBillingSettingsDTO:
      type: object
      properties:
        automaticSettlementSetting:
          allOf:
            - $ref: '#/components/schemas/CustomerBillingSettingsAutomaticSettlementDTO'
          description: Automatic settlement settings for the customer
          nullable: true
      additionalProperties: false
      description: Represents billing settings for a customer
    CustomerCommunicationPreferencesDTO:
      type: object
      properties:
        culture:
          $ref: '#/components/schemas/CultureInfo'
          description: Preferred culture/language for communication
          nullable: true
        invoiceCommunicationPreferences:
          type: array
          items:
            $ref: '#/components/schemas/InvoiceCommunicationPreferenceDTO'
          description: List of invoice communication preferences
          nullable: true
        annualStatementCommunicationPreference:
          allOf:
            - $ref: '#/components/schemas/CommunicationType'
          description: The communication type preference for annual statements
          nullable: true
        collectionFlowId:
          type: string
          description: Identifier for the collection flow
          nullable: true
      additionalProperties: false
      description: Represents communication preferences for a customer
    CustomerCommunicationPreferencesRequest:
      type: object
      properties:
        culture:
          $ref: '#/components/schemas/CultureInfo'
          nullable: true
        invoiceCommunicationPreferences:
          type: array
          items:
            $ref: '#/components/schemas/CustomerInvoiceCommunicationPreferencesRequest'
          nullable: true
        annualStatementCommunicationPreference:
          allOf:
            - $ref: '#/components/schemas/CommunicationType'
          nullable: true
        collectionFlowId:
          type: string
          nullable: true
      additionalProperties: false
    CustomerContractDTO:
      type: object
      properties:
        contractId:
          type: string
          description: Unique identifier of the contract
          nullable: true
        contractNumber:
          type: string
          description: Contract number for reference
          nullable: true
        supplyStartDateTime:
          type: string
          description: Start date and time of the contract
          format: date-time
        supplyEndDateTime:
          type: string
          description: End date and time of the contract
          format: date-time
        currentContractStatus:
          allOf:
            - $ref: '#/components/schemas/ContractStatus'
          description: Current status of the contract
          nullable: true
        contractBillingMethod:
          allOf:
            - $ref: '#/components/schemas/ContractBillingMethod'
          description: Billing method for the contract
          nullable: true
      additionalProperties: false
      description: Represents a contract associated with a customer
    CustomerDTO:
      type: object
      properties:
        id:
          type: string
          description: Gets or sets the unique identifier.
          nullable: true
        entityType:
          allOf:
            - $ref: '#/components/schemas/EntitySubjectType'
          description: Gets or sets the type of the entity.
          nullable: true
        createdDateTime:
          type: string
          description: Gets or sets the date and time when the entity was created.
          format: date-time
        discriminator:
          type: string
          description: Gets or sets the discriminator value.
          nullable: true
        _etag:
          type: string
          description: Gets or sets the ETag value.
          nullable: true
        requireAttention:
          type: boolean
          description: Gets a value indicating whether the entity requires attention.
          readOnly: true
        hasErrors:
          type: boolean
          description: Gets or sets a value indicating whether the entity has errors.
        hasWarnings:
          type: boolean
          description: Gets or sets a value indicating whether the entity has warnings.
        isReadOnly:
          type: boolean
          description: Gets or sets a value indicating whether the entity is read-only.
        organisationId:
          type: string
          description: Gets or sets the organization identifier.
          nullable: true
        accountNumber:
          type: string
          description: Unique account number assigned to the customer
          nullable: true
        salutation:
          type: string
          description: 'Customer''s salutation (e.g., Mr., Mrs., Dr.)'
          nullable: true
        initials:
          type: string
          description: Customer's initials
          nullable: true
        firstName:
          type: string
          description: Customer's first name
          nullable: true
        lastName:
          type: string
          description: Customer's last name
          nullable: true
        birthDate:
          type: string
          description: Customer's date of birth
          format: date-time
        ssin:
          type: string
          description: Social Security Identification Number
          nullable: true
        ssinCountry:
          allOf:
            - $ref: '#/components/schemas/CountryCode'
          description: Country code associated with the SSIN
          nullable: true
        shortDisplayName:
          type: string
          description: Short display name for the customer
          nullable: true
        customerType:
          allOf:
            - $ref: '#/components/schemas/CustomerType'
          description: 'Type of customer (e.g., Individual, Business)'
          nullable: true
        companyName:
          type: string
          description: Company name for business customers
          nullable: true
        organizationNumber:
          type: string
          description: Organization registration number
          nullable: true
        vatNumber:
          type: string
          description: Value Added Tax registration number
          nullable: true
        paymentTermsId:
          type: string
          description: Identifier for payment terms
          nullable: true
        defaultPaymentMethod:
          allOf:
            - $ref: '#/components/schemas/PaymentMethod'
          description: Default payment method for the customer
          nullable: true
        invoiceAddress:
          allOf:
            - $ref: '#/components/schemas/AddressDTO'
          description: Address for invoice delivery
          nullable: true
        bankAccountIbans:
          type: array
          items:
            $ref: '#/components/schemas/BankAccountDTO'
          description: List of bank account IBANs associated with the customer
          nullable: true
        contactDetails:
          type: array
          items:
            $ref: '#/components/schemas/ContactEntryDTO'
          description: Collection of contact details for the customer
          nullable: true
        contracts:
          type: array
          items:
            $ref: '#/components/schemas/CustomerContractDTO'
          description: Collection of contracts associated with the customer
          nullable: true
        communicationPreferences:
          allOf:
            - $ref: '#/components/schemas/CustomerCommunicationPreferencesDTO'
          description: Customer's communication preferences
          nullable: true
        propertyGroups:
          type: array
          items:
            $ref: '#/components/schemas/PropertyGroupReferenceDTO'
          description: List of property groups associated with the customer
          nullable: true
        customerGroup:
          allOf:
            - $ref: '#/components/schemas/CustomerGroupReferenceDTO'
          description: Customer group reference
          nullable: true
        billingSettings:
          allOf:
            - $ref: '#/components/schemas/CustomerBillingSettingsDTO'
          description: Customer's billing settings
          nullable: true
        customProperties:
          type: array
          items:
            $ref: '#/components/schemas/CustomEntityPropertyDTO'
          description: List of custom properties associated with the customer
          nullable: true
        activationCode:
          type: string
          description: Activation code for customer portal access
          nullable: true
        portalProperties:
          allOf:
            - $ref: '#/components/schemas/CustomerPortalPropertiesDTO'
          description: Portal-specific properties for the customer
          nullable: true
        generatedAnnualStatements:
          type: array
          items:
            $ref: '#/components/schemas/AnnualStatementReference'
          description: List of generated annual statements for the customer
          nullable: true
      additionalProperties: false
      description: Represents a customer entity with all associated information
    CustomerDTOApiResponseDTO:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/LocalisedErrorDTO'
          nullable: true
        success:
          type: boolean
        applicableEntitiesCount:
          type: integer
          format: int32
        requestedEntitiesCount:
          type: integer
          format: int32
        succeededEntitiesCount:
          type: integer
          format: int32
          readOnly: true
        isSynchronous:
          type: boolean
        data:
          allOf:
            - $ref: '#/components/schemas/CustomerDTO'
          description: The updated entity in case of modifications or creation
          nullable: true
      additionalProperties: false
    CustomerDTOPagedResponseModelDTO:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/CustomerDTO'
          nullable: true
        hasNextPage:
          type: boolean
        nextPageToken:
          type: string
          nullable: true
        totalRecords:
          type: integer
          format: int32
        sortableFields:
          type: array
          items:
            type: string
          nullable: true
        aggregateDetails:
          type: array
          items:
            $ref: '#/components/schemas/AggregateDetailsDTO'
          nullable: true
      additionalProperties: false
    CustomerDTOPagedResponseModelDTOApiResponseDTO:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/LocalisedErrorDTO'
          nullable: true
        success:
          type: boolean
        applicableEntitiesCount:
          type: integer
          format: int32
        requestedEntitiesCount:
          type: integer
          format: int32
        succeededEntitiesCount:
          type: integer
          format: int32
          readOnly: true
        isSynchronous:
          type: boolean
        data:
          allOf:
            - $ref: '#/components/schemas/CustomerDTOPagedResponseModelDTO'
          description: The updated entity in case of modifications or creation
          nullable: true
      additionalProperties: false
    CustomerDetailsDTO:
      type: object
      properties:
        accountNumber:
          type: string
          nullable: true
        salutation:
          type: string
          nullable: true
        initials:
          type: string
          nullable: true
        firstName:
          type: string
          nullable: true
        lastName:
          type: string
          nullable: true
        birthDate:
          type: string
          format: date-time
        ssin:
          type: string
          nullable: true
        ssinCountry:
          allOf:
            - $ref: '#/components/schemas/CountryCode'
          nullable: true
        customerType:
          allOf:
            - $ref: '#/components/schemas/CustomerType'
          nullable: true
        companyName:
          type: string
          nullable: true
        organizationNumber:
          type: string
          nullable: true
        vatNumber:
          type: string
          nullable: true
        defaultPaymentMethod:
          allOf:
            - $ref: '#/components/schemas/PaymentMethod'
          nullable: true
        invoiceAddress:
          allOf:
            - $ref: '#/components/schemas/AddressDTO'
          nullable: true
        bankAccount:
          type: string
          nullable: true
        emailAddress:
          type: string
          nullable: true
        telephoneNumber:
          type: string
          nullable: true
        mobileTelephoneNumber:
          type: string
          nullable: true
        website:
          type: string
          nullable: true
        culture:
          $ref: '#/components/schemas/CultureInfo'
          nullable: true
        internalId:
          type: string
          nullable: true
        createdOrLinked:
          type: boolean
        errors:
          type: array
          items:
            $ref: '#/components/schemas/LocalisedErrorDTO'
          nullable: true
        customerGroupId:
          type: string
          nullable: true
      additionalProperties: false
    CustomerGroupDTO:
      type: object
      properties:
        id:
          type: string
          description: Gets or sets the unique identifier.
          nullable: true
        entityType:
          allOf:
            - $ref: '#/components/schemas/EntitySubjectType'
          description: Gets or sets the type of the entity.
          nullable: true
        createdDateTime:
          type: string
          description: Gets or sets the date and time when the entity was created.
          format: date-time
        discriminator:
          type: string
          description: Gets or sets the discriminator value.
          nullable: true
        _etag:
          type: string
          description: Gets or sets the ETag value.
          nullable: true
        requireAttention:
          type: boolean
          description: Gets a value indicating whether the entity requires attention.
          readOnly: true
        hasErrors:
          type: boolean
          description: Gets or sets a value indicating whether the entity has errors.
        hasWarnings:
          type: boolean
          description: Gets or sets a value indicating whether the entity has warnings.
        isReadOnly:
          type: boolean
          description: Gets or sets a value indicating whether the entity is read-only.
        organisationId:
          type: string
          description: Gets or sets the organization identifier.
          nullable: true
        name:
          type: string
          nullable: true
        amountOfCustomers:
          type: integer
          format: int32
        settings:
          allOf:
            - $ref: '#/components/schemas/CustomerGroupSettingsDTO'
          nullable: true
      additionalProperties: false
    CustomerGroupDTOApiResponseDTO:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/LocalisedErrorDTO'
          nullable: true
        success:
          type: boolean
        applicableEntitiesCount:
          type: integer
          format: int32
        requestedEntitiesCount:
          type: integer
          format: int32
        succeededEntitiesCount:
          type: integer
          format: int32
          readOnly: true
        isSynchronous:
          type: boolean
        data:
          allOf:
            - $ref: '#/components/schemas/CustomerGroupDTO'
          description: The updated entity in case of modifications or creation
          nullable: true
      additionalProperties: false
    CustomerGroupDTOPagedResponseModelDTO:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/CustomerGroupDTO'
          nullable: true
        hasNextPage:
          type: boolean
        nextPageToken:
          type: string
          nullable: true
        totalRecords:
          type: integer
          format: int32
        sortableFields:
          type: array
          items:
            type: string
          nullable: true
        aggregateDetails:
          type: array
          items:
            $ref: '#/components/schemas/AggregateDetailsDTO'
          nullable: true
      additionalProperties: false
    CustomerGroupDTOPagedResponseModelDTOApiResponseDTO:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/LocalisedErrorDTO'
          nullable: true
        success:
          type: boolean
        applicableEntitiesCount:
          type: integer
          format: int32
        requestedEntitiesCount:
          type: integer
          format: int32
        succeededEntitiesCount:
          type: integer
          format: int32
          readOnly: true
        isSynchronous:
          type: boolean
        data:
          allOf:
            - $ref: '#/components/schemas/CustomerGroupDTOPagedResponseModelDTO'
          description: The updated entity in case of modifications or creation
          nullable: true
      additionalProperties: false
    CustomerGroupOverviewCountDTO:
      type: object
      properties:
        all:
          type: integer
          format: int32
      additionalProperties: false
    CustomerGroupOverviewCountDTOApiResponseDTO:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/LocalisedErrorDTO'
          nullable: true
        success:
          type: boolean
        applicableEntitiesCount:
          type: integer
          format: int32
        requestedEntitiesCount:
          type: integer
          format: int32
        succeededEntitiesCount:
          type: integer
          format: int32
          readOnly: true
        isSynchronous:
          type: boolean
        data:
          allOf:
            - $ref: '#/components/schemas/CustomerGroupOverviewCountDTO'
          description: The updated entity in case of modifications or creation
          nullable: true
      additionalProperties: false
    CustomerGroupQuickFilter:
      enum:
        - all
      type: string
    CustomerGroupReferenceDTO:
      type: object
      properties:
        id:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
      additionalProperties: false
    CustomerGroupSettingsDTO:
      type: object
      properties:
        automaticSettlement:
          type: boolean
          nullable: true
      additionalProperties: false
    CustomerInvoiceCommunicationPreferencesRequest:
      type: object
      properties:
        invoiceType:
          allOf:
            - $ref: '#/components/schemas/InvoiceType'
          nullable: true
        communicationType:
          allOf:
            - $ref: '#/components/schemas/CommunicationType'
          nullable: true
      additionalProperties: false
    CustomerOverviewCountDTO:
      type: object
      properties:
        all:
          type: integer
          format: int32
        supplied:
          type: integer
          format: int32
        unsupplied:
          type: integer
          format: int32
      additionalProperties: false
    CustomerOverviewCountDTOApiResponseDTO:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/LocalisedErrorDTO'
          nullable: true
        success:
          type: boolean
        applicableEntitiesCount:
          type: integer
          format: int32
        requestedEntitiesCount:
          type: integer
          format: int32
        succeededEntitiesCount:
          type: integer
          format: int32
          readOnly: true
        isSynchronous:
          type: boolean
        data:
          allOf:
            - $ref: '#/components/schemas/CustomerOverviewCountDTO'
          description: The updated entity in case of modifications or creation
          nullable: true
      additionalProperties: false
    CustomerPortalPropertiesDTO:
      type: object
      properties:
        applicationUserId:
          type: string
          description: Unique identifier for the application user
          nullable: true
        confirmAccountToken:
          type: string
          description: Token for account confirmation
          nullable: true
        resetPasswordToken:
          type: string
          description: Token for password reset
          nullable: true
        email:
          type: string
          description: Email address for the customer
          nullable: true
      additionalProperties: false
      description: Represents portal-specific properties for a customer
    CustomerQuickFilter:
      enum:
        - all
        - supplied
        - unsupplied
        - requireattention
      type: string
    CustomerScenarioType:
      enum:
        - portalconfirmation
        - portalresetpassword
        - annualstatement
      type: string
    CustomerType:
      enum:
        - person
        - organization
      type: string
    DataExportCommunicationType:
      enum:
        - manualdownload
        - ftp
        - sftp
        - ftps
      type: string
    DataExportInvoiceFormatType:
      enum:
        - lord
        - bdo
        - sapisu
      type: string
    DataFrequency:
      enum:
        - pt1m
        - pt5m
        - pt15m
        - pt30m
        - pt1h
        - p1d
        - na
      type: string
    DataImportCommunicationType:
      enum:
        - sftp
        - ftp
        - ftps
        - inboundemail
        - manualupload
        - configuredplugin
        - inboundapi
      type: string
    DataImportMeteringFormatType:
      enum:
        - elvaco_1104
        - elvaco_1112
        - customcsv
        - kamstrupready_v1
        - izarcenter
        - flamco
        - cadis
        - climaways
        - equinox_sinapsi
        - siemens_synco
        - cadislora
        - ycongouda
        - synergirbisgen3
        - synergirbisgen1_2
        - engelmann
        - inboundapi
        - synergirbisgen4
      type: string
    DataImportMigrationFormatType:
      enum:
        - zf_bulkimport
      type: string
    DataType:
      enum:
        - text
        - number
        - date
        - dateandtime
        - enumeration
      type: string
    DateRange:
      type: object
      properties:
        startDateTime:
          type: string
          format: date-time
        endDateTime:
          type: string
          format: date-time
      additionalProperties: false
    DateTimeFormatInfo:
      type: object
      properties:
        amDesignator:
          type: string
          nullable: true
        calendar:
          allOf:
            - $ref: '#/components/schemas/Calendar'
          nullable: true
        dateSeparator:
          type: string
          nullable: true
        firstDayOfWeek:
          allOf:
            - $ref: '#/components/schemas/DayOfWeek'
        calendarWeekRule:
          allOf:
            - $ref: '#/components/schemas/CalendarWeekRule'
        fullDateTimePattern:
          type: string
          nullable: true
        longDatePattern:
          type: string
          nullable: true
        longTimePattern:
          type: string
          nullable: true
        monthDayPattern:
          type: string
          nullable: true
        pmDesignator:
          type: string
          nullable: true
        rfC1123Pattern:
          type: string
          nullable: true
          readOnly: true
        shortDatePattern:
          type: string
          nullable: true
        shortTimePattern:
          type: string
          nullable: true
        sortableDateTimePattern:
          type: string
          nullable: true
          readOnly: true
        timeSeparator:
          type: string
          nullable: true
        universalSortableDateTimePattern:
          type: string
          nullable: true
          readOnly: true
        yearMonthPattern:
          type: string
          nullable: true
        abbreviatedDayNames:
          type: array
          items:
            type: string
          nullable: true
        shortestDayNames:
          type: array
          items:
            type: string
          nullable: true
        dayNames:
          type: array
          items:
            type: string
          nullable: true
        abbreviatedMonthNames:
          type: array
          items:
            type: string
          nullable: true
        monthNames:
          type: array
          items:
            type: string
          nullable: true
        isReadOnly:
          type: boolean
          readOnly: true
        nativeCalendarName:
          type: string
          nullable: true
          readOnly: true
        abbreviatedMonthGenitiveNames:
          type: array
          items:
            type: string
          nullable: true
        monthGenitiveNames:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
    DayOfWeek:
      enum:
        - Sunday
        - Monday
        - Tuesday
        - Wednesday
        - Thursday
        - Friday
        - Saturday
      type: string
    DeletePropertyGroupRequest:
      type: object
      properties:
        mutationDateTime:
          type: string
          format: date-time
      additionalProperties: false
    DigitShapes:
      enum:
        - Context
        - None
        - NativeNational
      type: string
    Direction:
      enum:
        - offtake
        - injection
        - na
      type: string
    DnsRecordMeaning:
      enum:
        - mailcname
        - mx
        - spf
        - dkim1
        - dkim2
      type: string
    DnsRecordStatus:
      enum:
        - unverified
        - valid
        - error
      type: string
    DocumentOutputFormat:
      enum:
        - pdf
        - html
        - xml
      type: string
    DomainProblemDataType:
      enum:
        - generalproductissue
        - generalbillingitemissue
        - generalcompanybankaccountissue
        - message
        - generalexportjobissue
        - generaltemplateissue
        - serviceconsumptioncalculationissue
        - billingcalculationissue
        - mandateissue
        - tariffcalculationissue
        - allocationcalculationissue
        - daterangeissue
        - taxperiodissue
      type: string
    EavEstimationRunStatus:
      enum:
        - gatheringdata
        - estimating
      type: string
    EmailConfirmationType:
      enum:
        - advanceamountchanged
        - ibanchanged
        - paymentmethodchanged
      type: string
    EntityAttachmentGroupQuickFilter:
      enum:
        - all
      type: string
    EntityAttachmentOrigin:
      enum:
        - customer
        - contract
        - product
        - entityattachmentgroup
      type: string
    EntityAttachmentQuickFilter:
      enum:
        - all
        - visibletocustomer
      type: string
    EntityAttributeType:
      enum:
        - capacity
        - quota
        - surface
        - occupants
        - propertyquota
      type: string
    EntitySubjectType:
      enum:
        - none
        - customer
        - contract
        - meter
        - servicelocation
        - invoice
        - importjob
        - propertygroup
        - payment
        - communicationentry
        - exportjob
        - dataexport
        - dataimport
        - entityattribute
        - asset
        - bankaccount
        - billingitem
        - billingtariff
        - costcomponent
        - costcomponentvalue
        - model
        - numbersequence
        - billingparameters
        - product
        - taxcode
        - template
        - billingrelation
        - transaction
        - dataimportfileformat
        - dataexportfileformat
        - tenant
        - consumption
        - attachment
        - exportjobline
        - culturetable
        - collectioncase
        - collectionflowstep
        - consumptionunittype
        - incominginvoice
        - moverequest
        - activityentry
        - commententry
        - problem
        - relatedentity
        - customeragingreport
        - billingcompleteness
        - propertygroupbillingconfiguration
        - propertygroupbillingperiod
        - collectionflow
        - configuredplugin
        - organizationscenarios
        - paymentterms
        - paymentdelaysetting
        - paymentparameters
        - domainauthenticationparameters
        - communicationparameters
        - organization
        - incominginvoicecomponent
        - costallocationcomponent
        - scheduledattempt
        - plugintrigger
        - exportentitycontainer
        - externalbankstatement
        - externalbanktransaction
        - externalmeasurement
        - importjobentityissue
        - intermediateexportformat
        - consumptionunit
        - calculatedconsumption
        - propertygroupmeteringconfiguration
        - measurement
        - externalchannel
        - serviceconsumption
        - purgerequest
        - migrationversion
        - formulaconsumption
        - templatedataobject
        - dataupgradebaseline
        - processrequest
        - validationrequest
        - postprocessrequest
        - outgoingbankingtransaction
        - incomingmutation
        - outgoingmutation
        - incomingbankingtransaction
        - customerbankaccount
        - pluginmanualtrigger
        - billingcustomer
        - enumsymboltranslation
        - scenariotranslation
        - syntheticloadprofile
        - consumergroup
        - estimablecontract
        - plugininboundwebhooktrigger
        - pluginmappingentry
        - eavestimationrun
        - customentitypropertytype
        - customentityproperty
        - pluginfeedentry
        - regionalregulationsconfiguration
        - entityattachment
        - entityattachmentgroup
        - propertygroupforecastingconfiguration
        - prepaymenttransaction
        - customeragingheader
        - estimatedbillingcompleteness
        - estimatedinvoice
        - customergroup
        - meteringissue
        - meteringparameters
        - mutingrule
        - reportmappingentry
        - meteringimport
        - prepaymentaccount
        - user
        - role
        - baseimport
        - systemusagerecord
        - portalsettings
        - annualstatement
        - organizationscenario
        - accounting
        - socialtariffexport
        - socialtariffimportheader
        - socialtariffimportline
      type: string
    Enumeration:
      type: string
    EnvelopePosition:
      enum:
        - left
        - right
      type: string
    ErrorCode:
      enum:
        - ASSET_ALREADY_EXISTS
        - ASSET_DOES_NOT_EXIST
        - TRANSLATION_ALREADY_EXISTS
        - TRANSLATION_DOES_NOT_EXIST
        - TRANSLATION_HAS_NO_CHANGES
        - TRANSLATION_HAS_NO_DEFAULT
        - NUMBER_SEQUENCE_DOES_NOT_EXIST
        - BANK_ACCOUNT_NOT_FOUND
        - BANK_ACCOUNT_ALREADY_EXISTS
        - BILLING_ITEM_ALREADY_EXISTS
        - BILLING_RELATION_NOT_BLOCKED
        - BILLING_RELATION_BLOCKED
        - BILLING_RELATION_DOES_NOT_EXIST
        - BILLING_RELATION_NOT_DUE
        - CANNOT_CREATE_ORG_FROM_ORG
        - CHANNEL_NOT_FOUND
        - CONTRACT_HAS_NO_ADVANCE_FREQUENCY
        - CONTACT_ENTRY_NOT_FOUND
        - CONTRACTUAL_ADVANCE_AMOUNT_CANNOT_BE_EMPTY_WHEN_ADVANCE_FREQUENCY_IS_NOT_NONE
        - CONTRACT_HAS_NO_SERVICES
        - CONTRACT_IS_ALREADY_SIGNED
        - CONTRACT_IS_NOT_SIGNED
        - CONTRACT_NOT_FOUND
        - COULD_NOT_APPROVE_INVOICE
        - COULD_NOT_CREATE_BILLED_SERVICE
        - COULD_NOT_CREATE_BILLING_RELATION
        - COULD_NOT_CREATE_CONTRACT
        - COULD_NOT_CREATE_CUSTOMER
        - COULD_NOT_CREATE_INVOICE
        - COULD_NOT_CREATE_METER
        - COULD_NOT_CREATE_SERVICELOCATION
        - COULD_NOT_GENERATE_CONTRACT_NUMBER
        - COULD_NOT_GENERATE_CUSTOMER_NUMBER
        - COULD_NOT_GENERATE_INVOICE_NUMBER
        - COULD_NOT_UPLOAD_FILE
        - CUSTOMER_ALREADY_EXISTS
        - CUSTOMER_DOES_NOT_EXIST
        - CUSTOMER_IS_NOT_AN_ORGANIZATION
        - CUSTOMER_IS_NOT_A_PERSON
        - DATAIMPORT_DOES_NOT_EXIST
        - DATAIMPORT_NAME_ALREADY_EXISTS
        - DOCUMENT_CATEGORY_NOT_SUPPORTED
        - DUPLICATE_CHANNEL
        - DUPLICATE_FORMAT_PROVIDER_NAME
        - DUPLICATE_SERVICE
        - DUPLICATE_SERVICELOCATION
        - END_DATE_NOT_AFTER_GIVEN_DATE
        - END_DATE_NOT_AFTER_OR_EQUAL_TO_GIVEN_DATE
        - FIELD_CANNOT_BE_EMPTY
        - FIELD_CANNOT_BE_LOWER_OR_EQUAL_TO_ZERO
        - FIELD_CANNOT_BE_NULL
        - FIELD_CANNOT_CONTAIN_SPECIAL_CHARACTERS
        - FIELD_NOT_AN_ENUM
        - FIELD_NOT_A_COUNTRY
        - FIELD_NOT_A_GUID
        - FIELD_MUST_BE_HIGHER_THAN_OR_EQUAL_TO_ZERO
        - FIELD_CAN_ONLY_CONTAIN_ALPHANUMERICAL_CHARACTERS
        - FIELDS_MUST_BE_EQUAL
        - FILEFORMATPROVIDER_ALREADY_EXISTS
        - FILEFORMATPROVIDER_DOES_NOT_EXIST
        - FILEFORMATPROVIDER_WITH_THIS_NAME_ALREADY_EXISTS
        - IBAN_EMPTY
        - IBAN_INVALID_COUNTRY
        - IBAN_MODULE_CHECK_FAILED
        - IBAN_TOO_BIG
        - IBAN_TOO_SHORT
        - INSTANCE_NAME_ALREADY_USED
        - INSTANCE_DUPLICATE_IN_LIST
        - INVALID_ENDDATETIME
        - INVALID_ENDDATETIME_OR_FORMAT
        - INVALID_CULTURE_NAME
        - INVALID_INTERVAL
        - INVALID_NUMBERFORMAT
        - INVALID_NUMBERSEQUENCE_REFERENCE_ENTITY
        - INVALID_NUMBERSEQUENCE_SEGMENT_TYPE
        - INVALID_STARTDATETIME
        - INVALID_STARTDATETIME_OR_FORMAT
        - INVALID_TIMEZONE
        - INVALID_VALUE
        - INVOICE_DOES_NOT_EXIST
        - INVOICE_LINE_SPANS_MULTIPLE_TAX_RATE_PERIODS
        - INVOICE_LINE_SPANS_NO_TAX_RATE_PERIODS
        - INVOICE_NOT_APPROVED_STATUS
        - INVOICE_NOT_CREATED_STATUS
        - INVOICE_TEMPLATE_NOT_CONFIGURED
        - INVOICE_TYPE_NOT_SUPPORTED_FOR_GENERATION
        - LIST_CANNOT_BE_EMPTY
        - METER_ALREADY_EXISTS
        - METER_DOES_NOT_EXIST
        - METER_NOT_CONFIRMED
        - METER_NOT_REQUESTED_OR_REMOVED
        - METER_REMOVED
        - MISSING_DATETIMEFORMAT
        - MISSING_DELIMITER
        - MISSING_ENDDATETIME
        - MISSING_METERSN_OR_EXTERNAL_IDENTIFIER
        - MISSING_NAME
        - MISSING_NUMBERDECIMALSEPERATOR
        - MISSING_NUMBERTHOUSANDSSEPERATOR
        - MISSING_TIMEZONE
        - MODEL_ALREADY_EXISTS
        - MODEL_BRANDNAME_EMPTY
        - MODEL_DOES_NOT_EXIST
        - MODEL_NAME_EMPTY
        - NOT_ALL_SEGMENTS_PROVIDED
        - NO_ADVANCE_FREQUENCY_BUT_AMOUNT_PROVIDED
        - NO_CONTRACTUAL_AMOUNT_BUT_ADVANCE_FREQUENCY_PROVIDED
        - NO_DEFAULT_TAXCODE_FOR_ADVANCES_SPECIFIED
        - NO_FILES_PROVIDED
        - ONE_OR_MORE_FILES_NOT_CORRECT_TYPE
        - PAYMENT_METHOD_ALREADY_USED
        - PAYMENT_METHOD_EMPTY
        - PRODUCT_DOES_NOT_EXIST
        - PROVIDER_ALREADY_CONTAINS_INSTANCE_FOR_ORG_AND_DIR
        - PROVIDER_ALREADY_CONTAINS_INSTANCE_WITH_SAME_NAME
        - SDD_REQUIRES_BANK_ACCOUNT
        - SERVICELOCATION_DOES_NOT_EXIST
        - SERVICE_ALREADY_EXISTS
        - TAXCODE_FOR_DEFAULT_ADVANCE_RATE_CANNOT_BE_DELETED
        - TAXCODE_ALREADY_EXISTS
        - TAXCODE_DOES_NOT_EXIST
        - TAX_CODE_NOT_FOUND
        - TEMPLATE_ALREADY_CONTAINS_DOCUMENT_FOR_CATEGORY_AND_TYPE
        - TEMPLATE_ALREADY_EXISTS
        - TEMPLATE_DOES_NOT_EXIST
        - TEMPLATE_HAS_ERRORS
        - VALUE_DIRECTION_MISMATCH
        - VALUE_METERINGTYPE_MISMATCH
        - VALUE_MULTIPLE_CHANNEL_CANDIDATES
        - VALUE_NO_CHANNEL_CANDIDATES
        - VALUE_TIMEOFUSE_MISMATCH
        - VALUE_UNITOFMEASURE_MISMATCH
        - BILLING_RELATION_NOT_FOUND
        - INVALID_BILLING_CALCULATION_TYPE
        - PRODUCT_ALREADY_EXISTS
        - BILLING_ITEM_DOES_NOT_EXIST
        - CANCELLATION_ITEM_DOES_NOT_EXIST
        - BILLING_TARIFF_DOES_NOT_EXIST
        - TARIFF_PERIOD_INCOMPLETE
        - DATE_CANNOT_BE_BEFORE_1900_01_01
        - FIELD_MUST_BE_EMPTY_FEATURE_NOT_YET_AVAILABLE
        - CONSUMPTION_PERIOD_INCOMPLETE
        - DUPLICATE_CONTRACT_NUMBER
        - INVOICE_NOT_GENERATED_STATUS
        - PRODUCT_HAS_NO_BILLING_ITEMS
        - INVOICE_RECALCULATION_NOT_SUPPORTED
        - ARCHIVE_DIRECTORY_CANNOT_BE_EMPTY_WHEN_DELETE_AFTER_UPLOAD
        - FIELD_NOT_AN_EMAILADRESS
        - COST_COMPONENT_DOES_NOT_EXIST
        - COST_COMPONENT_ALREADY_EXISTS
        - COST_COMPONENT_VALUE_DOES_NOT_EXIST
        - BILLING_TARIFF_UNIT_PRICE_NOT_ALLOWED_FOR_FORMULA
        - BILLING_TARIFF_MISSING_EXPRESSION
        - BILLING_TARIFF_INPUT_MISSING_REFERENCE
        - BILLING_TARIFF_INPUT_INVALID_REFERENCE
        - TARIFF_INPUT_UNSUPPORTED_INPUT_TYPE
        - TARIFF_INPUT_VARIABLE_NOT_DEFINED
        - TARIFF_INPUT_EXPRESSION_UNPARSABLE
        - TARIFF_INPUT_CANNOT_PROCESS_EXPRESSION
        - ENTITY_ATTRIBUTE_DOES_NOT_EXIST
        - ENTITY_ATTRIBUTE_ALREADY_EXISTS_FOR_SUBJECT_ID_AND_TYPE_AND_ATTRIBUTE_TYPE
        - ORGANIZATION_CODE_ALREADY_EXISTS
        - ORGANIZATION_DOES_NOT_EXIST
        - ORGANIZATION_NOT_FOUND
        - MISSING_ORGANIZATION_LOGO
        - ASSET_IS_NOT_AN_IMAGE
        - CULTURE_NOT_FOUND
        - DATA_PROVIDER_PARAMETERS_DO_NOT_MATCH_TYPE
        - CANNOT_BILL_UNBILLED_PERIODS
        - INVOICE_IS_ALREADY_CREDITED
        - NEED_DEFAULT_BANK_ACCOUNT
        - NEED_DEFAULT_BANK_ACCOUNT_FOR_SDD
        - PAYMENT_DOES_NOT_EXIST
        - PAYMENT_IS_NOT_CREATED
        - PAYMENT_CANNOT_BE_PROCESSED
        - CONTRACT_NUMBER_CANNOT_BE_EMPTY
        - ACCOUNT_NUMBER_CANNOT_BE_EMPTY
        - COMMUNICATION_TYPES_DO_NOT_MATCH
        - INVOICE_ALREADY_EXISTS
        - APPROVED_INVOICES_CANNOT_BE_DELETED
        - CREATED_INVOICES_CANNOT_BE_CREDITED
        - CATCH_ALL_COMMUNICATION_PREFERENCE_CANNOT_BE_ADDED_WHEN_OTHERS_EXIST
        - TEMPLATE_HAS_WRONG_USECASE
        - ATTACHMENT_FILE_DOES_NOT_EXIST
        - NO_TAXCODE_SPECIFIED
        - TEMPLATE_DATATYPE_NOT_CONFIGURED
        - USER_HAS_NO_EMAIL_ADDRESS
        - USER_HAS_NO_POSTAL_ADDRESS
        - NO_TEMPLATE_FOR_EMAIL_BODY
        - CANNOT_PROVIDE_VALUES_FOR_BUILTIN_FILE_FORMAT
        - CANNOT_PROVIDE_VALUES_FOR_OTHER_IMPORT_THAN_METERING
        - IMPORTJOB_DOES_NOT_EXIST
        - IMPORTJOB_HAS_INCORRECT_STATUS
        - MISSING_CUSTOMER_BANK_ACCOUNT
        - PAYMENTS_ARE_DISABLED
        - ONLY_INBOUND_PAYMENTS_CAN_BE_MATCHED
        - NO_CUSTOMER_FOUND_FOR_PAYMENT
        - CREDITED_INVOICES_FOLLOWED_BY_A_NEWER_INVOICE_CANNONT_BE_DELETED
        - NOT_A_VALID_FORMAT_STRING
        - DATE_IS_NOT_VALID
        - EMAIL_COMMUNICATION_PREFERENCE_REQUIRES_EMAILADDRESS_CONTACT_ENTRY
        - TRANSACTION_REFERENCE_DOES_NOT_EXIST
        - EXPORTJOB_HAS_INCORRECT_STATUS
        - INVALID_DEBIT_CREDIT_INDICATOR
        - INVALID_TRANSACTION_TO_SETTLE
        - COMPANY_BANK_ACCOUNT_NOT_FOUND
        - DATAEXPORT_ALREADY_EXISTS
        - DATAEXPORT_DOES_NOT_EXIST
        - COULD_NOT_CREATE_DOMAIN_WITH_SENDGRID
        - NO_DOMAIN_AUTHENTICATION_PARAMETERS_EXIST_FOR_ORGANISATION
        - COULD_NOT_VALIDATE_DOMAIN_WITH_SENDGRID
        - SENDER_EMAIL_DOMAIN_NOT_AUTHENTICATED
        - PROPERTY_DOES_NOT_EXIST
        - INVOICE_MONTH_MUST_BE_EMPTY_WHEN_INVOICE_FREQUENCY_IS_NOT_YEARLY
        - PROPERTY_WITH_GIVEN_NAME_ALREADY_EXISTS
        - MANAGEMENT_DETAILS_CANNOT_CONTAIN_DOUBLES
        - SANDBOX_MODE_NEEDS_RECIPIENT_EMAIL
        - POSTAL_NOT_SUPPORTED_FOR_NOW
        - SERVICE_LOCATION_RELATION_DOES_NOT_EXIST
        - TEMPLATE_HAS_NO_USECASE
        - PROBLEM_NOT_FOUND
        - PROBLEM_ALREADY_RESOLVED
        - ALREADY_ACTIVE_MANDATE
        - MANDATE_DOES_NOT_EXIST
        - MANDATE_IS_NOT_REQUESTED
        - COULD_NOT_GENERATE_MANDATE_NUMBER
        - PROPERTY_FOR_THIS_ADDRESS_ALREADY_EXISTS
        - SERVICE_LOCATION_IS_ALREADY_PART_OF_A_PROPERTY_AT_THIS_MOMENT
        - UNSUPPORTED_DATA_FORMAT_FOR_PAYMENT_REQUEST_DATA_EXPORT
        - FILE_COULD_NOT_BE_GENERATED
        - MISSING_ACTIVE_MANDATE
        - NO_SERVICE_LOCATION_FOUND
        - NO_PROTOCOL_SPECIFIED
        - SSH_CONNECTION_FAILED
        - FAILED_CONNECTING_TO_SOURCE
        - MISSING_COMMUNICATION_SCENARIO
        - UNKNOWN_TEMPLATE_DATA_TYPE
        - FIELD_NOT_A_VALID_TIMEZONE
        - MISSING_INTERNAL_PAYMENT_REFUND_DATAEXPORT
        - ADVANCE_FREQUENCY_CANNOT_BE_SLOWER_THAN_INVOICE_FREQUENCY
        - CANNOT_ADD_MULTIPLE_VALUES_FOR_CONSTANT_SEGMENT_TYPE
        - CREDITED_INVOICE_NOT_FOUND
        - NOT_IMPLEMENTED_YET
        - AT_LEAST_ONE_ENTITY_MUST_EXIST_FOR_REQUIRE_ATTENTION
        - MISSING_INTERNAL_PAYMENT_REQUEST_DATAEXPORT
        - EXPORTJOB_DOES_NOT_EXIST
        - NO_PROBLEMS_FOUND
        - FIELD_MUST_BE_EMPTY
        - FILE_TOO_BIG
        - DATAEXPORT_FILEFORMAT_DOES_NOT_EXISTS
        - DATAEXPORT_FILEFORMAT_SETTINGS_CATEGORY_DOES_NOT_MATCH
        - DATAEXPORT_FILEFORMAT_ALREADY_EXISTS
        - NO_PAYMENT_PARAMETERS_FOUND
        - NO_EXTERNAL_BANK_TRANSACTION_FOUND
        - PROCESSED_TRANSACTIONS_CANNOT_BE_IGNORED
        - RESUBMISSION_LIMIT_REACHED
        - TRANSACTION_NOT_A_SDD_REVERSAL
        - DATE_IS_IN_THE_PAST
        - TRANSACTION_DOES_NOT_EXIST
        - DATE_FORMAT_NOT_VALID
        - TENANT_NOT_FOUND
        - TENANT_NAME_TAKEN
        - EXPORTJOBLINE_DOES_NOT_EXIST
        - DATAIMPORT_FILEFORMAT_DOES_NOT_EXISTS
        - DATAIMPORT_FILEFORMAT_SETTINGS_CATEGORY_DOES_NOT_MATCH
        - DATAIMPORT_FILEFORMAT_ALREADY_EXISTS
        - DUPLICATE_ENTITY_ATTRIBUTE_VALUES
        - ENTITY_ATTRIBUTE_NOT_COMPATIBLE_WITH_SUBJECT_TYPE
        - METER_NOT_INSTALLED
        - PROPERTY_SERVICE_LOCATIONS_INCORRECT
        - PROPERTY_MANAGEMENT_DETAILS_INCORRECT
        - FTP_FILE_UPLOAD_FAILED
        - EXPORTJOB_HAS_NO_DATA
        - BILLING_ITEM_CALCULATION_CAN_NOT_BE_CHANGED
        - PORT_OUT_OF_RANGE
        - EXTERNAL_BANK_TRANSACTION_ALREADY_PROCESSED
        - PAYMENT_IGNORED
        - TRANSACTIONS_ALREADY_LINKED
        - DOMAIN_NAME_ALREADY_TAKEN
        - MEASUREMENT_CONTEXT_INVALID
        - MEASUREMENTS_UNLINKED
        - MEASUREMENT_NOT_FOUND
        - BANK_TRANSACTIONS_FAILED_PROCESSING
        - ACCOUNT_HOLDER_EMPTY
        - CUSTOMER_ID_MISSING
        - COULD_NOT_REVERSE_TRANSACTION
        - PAYMENT_TERMS_DO_NOT_EXIST
        - PAYMENT_TERMS_USED_BY_ORGANISATION_CANNOT_BE_DELETED
        - PAYMENT_TERMS_ALREADY_EXIST
        - SIGNED_MANDATES_NEED_AN_IBAN
        - UNITOFMEASURE_NOT_SUPPORTED_FOR_SUBSCRIPTION
        - UNITOFMEASURE_NOT_SUPPORTED_FOR_CONSUMPTION
        - UNITOFMEASURE_NOT_SUPPORTED
        - UNITOFMEASURE_NOT_SUPPORTED_FOR_ATTRIBUTE
        - UNITOFMEASURE_NOT_SUPPORTED_FOR_CONSUMPTIONUNIT
        - UNITOFMEASURE_NOT_SUPPORTED_FOR_CUSTOMENTITYPROPERTY
        - CONTRACT_NOT_SUPPORTED_FOR_NOW
        - UTILITY_TYPE_NOT_SUPPORTED_FOR_SUBSCRIPTION
        - METERING_TYPE_NOT_SUPPORTED_FOR_SUBSCRIPTION
        - LIST_CONTAINS_DUPLICATES
        - PROPERTY_HAS_NO_QUOTA
        - SERVICELOCATION_HAS_NO_QUOTA
        - PROPERTY_HAS_NO_MATCHING_AGGREGATING_METERS
        - PROPERTY_HAS_NO_MATCHING_COMMUNAL_METERS
        - FIELD_CANNOT_BE_LOWER_THAN_ZERO
        - CREDIT_NOTE_IN_UNSUPPLIED_PERIOD_CANNOT_BE_REMOVED
        - INVOICED_ADVANCES_CANNOT_BE_CREDITED
        - CREDIT_NOTE_CANNOT_BE_CREDITED
        - ONLY_CORE_SUPPORTED_FOR_NOW
        - CHANNEL_NOT_ACTIVE
        - ENTITY_TRANSLATION_ALREADY_EXISTS
        - NO_CULTURE_TABLE_FOUND_FOR_THIS_TENANT
        - ENTITY_TRANSLATION_DOES_NOT_EXIST
        - LIST_DOES_NOT_CONTAIN_GIVEN_CULTURE
        - CULTURE_NOT_SUPPORTED_BY_TENANT
        - TRANSLATED_FIELDS_CANNOT_BE_EMPTY
        - UNSUPPORTED_FILE_EXTENSION
        - INVOICE_NOT_SETTLED
        - BILLING_COMPLETENESS_ALREADY_CALCULATING
        - BILLING_COMPLETENESS_NOT_FOUND
        - BILLING_COMPLETENESS_WRONG_STATUS
        - SERVICELOCATION_EXTERNALID_ALREADY_USED
        - MANDATE_ALREADY_EXISTS
        - MISSING_RECEIVER
        - CONTRACT_TERMINATION_NOT_ON_OR_AFTER_SUPPLYSTARTDATE
        - NO_LOCK_CREATED
        - PAYMENT_DELAY_DOES_NOT_EXIST
        - PAYMENT_DELAY_ALREADY_EXISTS_FOR_TYPE
        - PAYMENT_RETRY_PARAMETERS_HAS_DUPLICATE_RETRY_ATTEMPT
        - PAYMENT_RETRY_PARAMETERS_HAS_MISSING_RETRY_ATTEMPT
        - DUPLICATE_INVOICE_NUMBER
        - INVOICE_NOT_FOUND
        - INVOICE_DOCUMENT_NOT_INCLUDED_IN_IMPORTJOB
        - IMPORTED_CONTRACTS_HAVE_NO_BILLING_RELATION
        - DUPLICATE_METER_NUMBER
        - METER_CANNOT_BE_INSTALLED_IN_MULTIPLE_LOCATIONS
        - PREVIOUS_COMPLETENESS_PERIOD_NOT_CLOSED
        - UNSUPPORTED_ENTITY_SUBJECT_TYPE
        - PRODUCT_MISSES_GIVEN_SERVICE
        - COLLECTION_CASE_DOES_NOT_EXIST
        - COLLECTION_CASE_ALREADY_CLOSED
        - INVOICE_ALREADY_IN_COLLECTION
        - COLLECTION_CASE_WORKLOW_NOT_FOUND
        - COLLECTION_CASE_MANUAL_INTERVENTION_NOT_ALLOWED
        - COLLECTION_STEP_NOT_FOUND
        - RANGE_UPPER_LIMIT_MUST_BE_HIGHER_THAN_LOWER_LIMIT
        - COLLECTION_STEP_PARAMETERS_DO_NOT_MATCH_CHARGE_TYPE
        - COLLECTION_STEP_TIER_FROMT_TO_RANGE_OVERLAPS
        - COULD_NOT_GENERATE_COLLECTION_CASE_NUMBER
        - TEMPLATE_HAS_WRONG_TARGET_TYPE
        - TEMPLATE_HAS_NO_TARGET_TYPE
        - COLLECTION_TEMPLATE_NOT_CONFIGURED
        - COLLECTION_NOT_ENABLED
        - INVOICE_CREATION_DATE_BEFORE_COLLECTION_BORDER_DATE
        - INVALID_WRITE_OFF
        - COLLECTION_STEP_ALREADY_CLOSED
        - COLLECTION_STEP_HAS_WRONG_STATUS
        - COLLECTION_FLOW_NOT_FOUND
        - COLLECTION_CASE_ALREADY_EXISTS
        - FIELD_MUST_BE_NULL_WHEN_NO_COMMUNICATION
        - FIELD_MUST_BE_NULL_WHEN_NO_CHARGE
        - NO_DATA_EXPORT_EXISTS_FOR_TYPE
        - DEBIT_SCT_PAYMENT_ALREADY_EXISTS
        - BILLING_TARIFF_EXPRESSION_NOT_ALLOWED_FOR_FORMULA
        - BILLING_TARIFF_MISSING_UNIT_PRICE
        - TRANSACTION_HAS_NO_OPEN_AMOUNT
        - PREVIOUS_COLLECTION_STEP_NOT_EXECUTED
        - NEXT_COLLECTION_STEP_ALREADY_EXECUTED
        - STEP_HAS_NO_DOCUMENT
        - CONSUMPTION_UNIT_TYPE_ALREADY_EXISTS
        - CONSUMPTION_UNIT_TYPE_DOES_NOT_EXIST
        - CONSUMPTION_UNIT_DOES_NOT_EXIST
        - CONSUMPTION_UNIT_UNIQUE_CONSTRAINT
        - INVALID_TARIFF_CALCULATION_TYPE
        - FILE_NOT_FOUND
        - TEMPLATE_IS_BUILTIN
        - CANNOT_BE_LARGER_THAN_140_CHARACTERS
        - MANDATE_WITH_IBAN_ALREADY_EXISTS
        - IBAN_ALREADY_EXISTS_FOR_CUSTOMER
        - ENDNOTE_ENDDATE_MUST_MATCH_CONTRACT_ENDDATE
        - UTILITY_TYPE_NOT_SUPPORTED_FOR_SUBSCRIPTION_ON_CONTRACT
        - COST_ALLOCATION_COMPONENT_ALREADY_EXISTS
        - COST_ALLOCATION_COMPONENT_DOES_NOT_EXIST
        - CONTRACT_CAN_ONLY_HAVE_SERVICES_OF_ONE_PROPERTY_GROUP
        - PRODUCT_NOT_PROVIDED
        - BILLING_COMPLETENESS_CAN_ONLY_BE_BILLED_VIA_PROPERTY_GROUP
        - PROP_GROUP_CALC_CONFIGURATION_ALREADY_EXISTS
        - PROP_GROUP_CALC_CONFIGURATION_CONTAINS_NO_BILLING_ITEMS
        - NO_CUSTOMER_BANK_ACCOUNT_EXISTS_WITH_GIVEN_IBAN
        - UTILITY_TYPE_REQUIRED_FOR_SUBSCRIPTION_ON_SERVICE
        - INTERMEDIATE_INVOICING_DATE_CANNOT_BE_OUTSIDE_COMPLETENESS_PERIOD
        - INTERMEDIATE_INVOICING_NOT_ALLOWED_BEFORE_CLOSED_BILLINGCOMPLETENESS_PERIODS
        - PROPERTY_METERING_CONFIGURATION_NOT_FOUND
        - DUPLICATE_OUTPUT_CHANNEL
        - PROPERTY_METERING_CONFIGURATION_NOT_VALIDATED
        - OUTPUT_CHANNEL_NOT_FOUND
        - NO_MATCHING_METERS_FOUND
        - NO_SERVICECONSUMPTIONS_FOUND
        - MISSING_SERVICECONSUMPTIONS
        - MISSING_SERVICECONSUMPTIONS_FOR_COMPLETE_PERIOD
        - NO_METERCONSUMPTIONS_FOUND
        - MISSING_METERCONSUMPTIONS_FOR_COMPLETE_PERIOD
        - BILLING_CONFIGURATION_FOR_PROPERTY_DOES_NOT_EXIST
        - PROP_GROUP_CALC_CONFIGURATION_NAMES_MUST_BE_UNIQUE
        - PROPERTY_GROUP_BILLING_CONFIGURATION_REQUIRED_INCOMING_INVOICE_COMPONENTS_MUST_BE_UNIQUE
        - INCOMING_INVOICE_ALREADY_EXISTS
        - INCOMING_INVOICE_COMPONENT_DOES_NOT_EXIST
        - SERVICE_LOCATION_ALREADY_USED_IN_OTHER_PROPERTY_GROUP_BILLING_CONFIGURATION
        - PROPERTY_GROUP_BILLING_CONFIGURATION_ALREADY_EXISTS
        - UNITOFMEASURE_ISNOT_PERIODBASED
        - INVOICE_FREQUENCY_MUST_BE_NULL_OR_EQUAL_TO_PROPERTY_GROUP_CONFIG_FOR_COST_ALLOCATION
        - ADVANCE_FREQUENCY_MUST_BE_NULL_OR_EQUAL_TO_PROPERTY_GROUP_CONFIG_FOR_COST_ALLOCATION
        - INCOMING_INVOICE_DOES_NOT_EXIST
        - PROPERTY_GROUP_BILLING_CONFIGURATION_COST_ALLOCATION_NOT_ENABLED
        - PROPERTY_GROUP_BILLING_PERIOD_DOES_NOT_EXIST
        - INCOMING_INVOICE_COMPONENT_NOT_LINKED_IN_PERIOD
        - NO_CHANNELS_FOUND
        - MISSING_CONSUMPTIONS
        - PROPERTY_GROUP_BILLING_CONFIGURATION_COST_ALLOCATION_NOT_VALIDATED
        - PROPERTY_GROUP_BILLING_PERIOD_LOCKED
        - PROPERTY_GROUP_BILLING_PERIOD_OVERLAP
        - PROPERTY_GROUP_BILLING_PERIOD_GAP
        - PROPERTY_GROUP_BILLING_PERIOD_MISSING_TARIFFS
        - PROPERTY_GROUP_BILLING_PERIOD_MISSING_CONFIGURATIONS
        - PROPERTY_GROUP_BILLING_PERIOD_NOT_LOCKED
        - PROPERTY_GROUP_BILLING_PERIOD_HAS_NO_SEQUENTIAL_PERIODS
        - NO_MATCHING_CHANNELS_FOUND
        - NEXT_INVOICE_DATE_NOT_ALLOWED_FOR_COST_ALLOCATION
        - CONTRACT_WRONG_STATUS
        - PROPERTY_GROUP_HAS_NO_LOCKED_BILLING_PERIOD
        - BILLING_RELATION_NOT_PART_OF_PROPERTY
        - CANNOT_INVOICE_UPFRONT_WITH_CONSUMPTION
        - CANNOT_HAVE_ADVANCE_FREQUENCY_AND_INVOICING_UPFRONT
        - PRODUCT_MUST_HAVE_ONE_REGULAR_BILLING_ITEM
        - CUSTOMER_DETAILS_MISSING
        - SERVICELOCATION_DETAILS_MISSING
        - MOVEREQUEST_NOT_FOUND
        - MOVEREQUEST_WRONG_STATUS
        - CUSTOMER_ALREADY_CREATED_OR_LINKED
        - MISSING_CUSTOMER_ID
        - MISSING_SERVICELOCATION_ID
        - MULTIPLE_CONTRACTS_FOUND
        - MISSING_METER
        - MOVEREQUEST_FAILED_PROCESSING
        - COULD_NOT_TERMINATE_CONTRACT
        - MOVEREQUEST_CONTRACT_ALREADY_PROCESSED
        - NO_TEMPLATE_FOR_LETTER
        - UNKNOWN_PLUGIN
        - PLUGIN_ALREADY_INSTALLED
        - INSTALLEDPLUGIN_NOT_FOUND
        - INVALID_PLUGIN_CONFIGURATION
        - MOVE_REQUEST_ALREADY_EXISTS
        - INVOICE_LINE_CANNOT_SPAN_MULTIPLE_YEARS
        - TOO_MANY_METERS
        - TOO_MANY_SERVICELOCATIONS
        - NO_MATCHING_STAIR_STEP
        - IBAN_INVALID
        - ADVANCE_AMOUNT_TO_LOW
        - DUPLICATE_MEASUREMENT_ENDDATETIME
        - NO_MATCHING_COMMUNICATION_PREFERENCE
        - COULD_NOT_UPDATE_CUSTOMER_INVOICE_ADDRESS
        - DUPLICATE_MEASUREMENT_FOR_ROUNDED_ENDDATETIME
        - FIELD_MUST_BE_TRUE
        - OUTGOING_BANKING_TRANSACTION_DOES_NOT_EXIST
        - OUTGOING_BANKING_TRANSACTION_INCORRECT_STATUS
        - OUTGOING_BANKING_TRANSACTION_INCORRECT_TYPE
        - OUTGOING_BANKING_TRANSACTION_COLLECTION_DATE_NOT_VALID
        - OUTGOING_BANKING_TRANSACTION_MISSING_INVOICEIDS
        - OUTGOING_BANKING_TRANSACTION_NO_ENTRIES_ADDED
        - OUTGOING_BANKING_TRANSACTION_LOCKED
        - OUTGOING_BANKING_TRANSACTION_CONTAINS_ERRORS
        - OUTGOING_BANKING_TRANSACTION_CONTAINS_INVOICES
        - OUTGOING_MUTATION_DOES_NOT_EXIST
        - OUTGOING_MUTATION_TRANSACTION_INCORRECT_STATUS
        - INVOICE_WRONG_PAYMENT_STATUS
        - AMOUNT_CANNOT_BE_ZERO_OR_NEGATIVE
        - AMOUNT_CANNOT_BE_ZERO_OR_POSITIVE
        - CANNOT_OVERWRITE_COLLECTION_DATE_WHEN_NO_NEW_BATCH
        - COULD_NOT_PARSE_BANK_FILE
        - BANK_FILE_CONTAINS_NO_STATEMENTS
        - PAYMENT_ALREADY_REVERSED
        - TRANSACTION_ALREADY_REVERSED
        - INVALID_BANK_STATEMENT_INCOMING_BANKING_TRANSACTION_FORMAT_TYPE
        - INVALID_PAYMENT_OUTGOING_BANKING_TRANSACTION_FORMAT_TYPE
        - UNSUPPORTED_OUTGOING_BANKING_TRANSACTION_FORMAT_TYPE
        - BIC_EMPTY
        - SEPA_CREDITOR_EMPTY
        - COMPANY_BANK_ACCOUNT_INVALID
        - INCOMING_BANKING_TRANSACTION_DOES_NOT_EXIST
        - INCOMING_BANKING_TRANSACTION_ALREADY_EXISTS
        - INCOMING_BANKING_TRANSACTION_INCORRECT_STATUS
        - INCOMING_MUTATION_NO_MATCH_FOUND
        - OUTGOING_BANKING_TRANSACTION_ALREADY_CONFIRMED
        - OUTGOING_MUTATION_ALREADY_CONFIRMED
        - INCOMING_MUTATION_IBAN_DOES_NOT_MATCH_OUTGOING_MUTATION_IBAN
        - NO_MATCHING_OUTGOING_PAYMENT_REQUEST_BANKING_TRANSACTION_FOUND
        - NO_MATCHING_OUTGOING_PAYMENT_REQUEST_MUTATION_FOUND
        - NO_MATCHING_OUTGOING_REFUND_BANKING_TRANSACTION_FOUND
        - NO_MATCHING_OUTGOING_REFUND_MUTATION_FOUND
        - NO_MATCHING_INCOMING_MUTATIONS_FOUND_FOR_IBAN
        - INCOMING_MUTATION_DOES_NOT_EXIST
        - INCOMING_MUTATION_INCORRECT_STATUS
        - PAYMENT_FOR_MUTATION_ALREADY_EXISTS
        - INVOICE_CHANGE_PAYMENT_METHOD_NOT_ALLOWED
        - INCOMING_MUTATION_INVALID_TYPE
        - OUTGOING_MUTATION_INVALID_TYPE
        - INVOICE_WRONG_STATUS
        - ACTION_NOT_SUPPORTED_FOR_MIGRATED_DATA
        - IMPORTJOB_DOES_NOT_SUPPORT_DOWNLOAD
        - NO_FUNCTIONS_IN_FORMULA
        - FUNCTION_NOT_FOUND
        - NO_MATCHING_INPUTPARAMETER_DEFINED
        - RUNTIMEPARAMETER_NOT_FOUND
        - RUNTIMEPARAMETER_TYPE_MISMATCH
        - FIXEDPARAMETER_TYPE_MISMATCH
        - OUTPUTPARAMETER_NOT_FOUND
        - MULTIPLE_OUTPUTPARAMETERS_FOUND
        - FUNCTION_REFERENCED_IS_AFTER_THIS_FUNCTION
        - FUNCTION_REFERENCED_OUTPUT_TYPE_MISMATCH
        - LAST_FUNCTION_OUTPUT_TYPE_INCORRECT
        - CREDIT_NOTE_NOT_APPROVED
        - PROCESSING_FAILED
        - PROCESSING_FINAL_UPDATE_FAILED
        - COULD_NOT_SIGN_MANDATE
        - COULD_NOT_UPDATE_PROPERTYYGROUPBILLINGCONFIGURATION
        - COULD_NOT_CREATE_ENTITY_ATTRIBUTE
        - COULD_NOT_CREATE_PROPERTYGROUP
        - PLUGINTRIGGER_NOT_FOUND
        - PLUGINTRIGGER_NOT_RUN_YET
        - INSTALLEDPLUGIN_NOT_ENABLED
        - INSTALLEDPLUGIN_DOES_NOT_SUPPORT_MANUAL_TRIGGER
        - INSTALLEDPLUGIN_DOES_NOT_SUPPORT_CONFIG_TRIGGER
        - MIGRATION_MODE_CANNOT_BE_REENABLED
        - ENUM_NOT_TRANSLATABLE
        - FIELD_MUST_BE_NULL
        - INVALID_TELEPHONE_NUMBER
        - INSTALLEDPLUGIN_DOES_NOT_SUPPORT_QUERY_TRIGGER
        - UNSUPPORTED_QUERY_TYPE
        - INCOMING_MUTATION_DUPLICATE
        - BILLING_ITEMS_HAS_DUPLICATE_ORDER
        - LIST_TOO_LARGE
        - DATAFREQUENCY_NOT_SUPPORTED
        - INSTALLEDPLUGIN_DOES_NOT_SUPPORT_INBOUND_WEBHOOK_TRIGGER
        - DOCUMENT_CANNOT_BE_EXTERNALLY_PRINTED
        - COLLECTION_CASE_COMMUNICATION_NOT_ALLOWED
        - CUSTOM_ENTITY_PROPERTY_TYPE_ALREADY_EXISTS
        - CUSTOM_ENTITY_PROPERTY_TYPE_DOES_NOT_EXIST
        - CUSTOM_ENTITY_PROPERTY_ALREADY_EXISTS_FOR_SUBJECT_ID_AND_TYPE_AND_PROPERTY_TYPE
        - CUSTOM_ENTITY_PROPERTY_DOES_NOT_EXIST
        - CONSUMER_GROUP_NOT_FOUND
        - LOAD_PROFILE_NOT_FOUND
        - LOAD_PROFILE_HAS_NO_DATA_FOR_THIS_YEAR
        - CANNOT_CONVERT_UNITOFMEASURE
        - CONTRACT_TERMINATED_BEFORE_YEAR
        - CONTRACT_HAS_NO_CONSUMPTION_SERVICES
        - ESTIMATION_RUN_IN_PROGRESS
        - ESTIMATION_RUN_NOT_FOUND
        - SERVICE_MISSING_ESTIMATION
        - ESTIMATION_NOT_POSSIBLE_BEFORE_FIRST_YEAR
        - SERVICE_MISSING_ESTIMATION_IN_UNIT_OF_MEASURE
        - UNSUPPORTED_AGGREGATION_FREQUENCY
        - NO_INVOICE_LINES
        - CUSTOM_ENTITY_PROPERTY_TYPE_NOT_SUPPORTED
        - SSIN_CANNOT_BE_PROVIDED_FOR_ORGANIZATIONS
        - SSIN_REQUIRED_WHEN_SSIN_COUNTRY_PROVIDED
        - SSIN_INVALID
        - SSIN_COUNTRY_REQUIRED_WHEN_SSIN_PROVIDED
        - COUNTRY_NOT_SUPPORTED_FOR_SSIN
        - EDIT_PRODUCT_NOT_ALLOWED_FOR_COST_ALLOCATION
        - NOT_CONFIGURED
        - SOCIAL_TARIFF_EXPORT_NOT_FOUND
        - SOCIAL_TARIFF_EXPORT_NOT_GENERATED
        - SOCIAL_TARIFF_EXPORT_ALREADY_EXISTS
        - ADVANCE_AMOUNT_NOT_IN_RANGE
        - INTERNAL_ATTACHMENTS_NOT_SUPPORTED
        - MOVE_IN_ATTACHMENTS_NOT_SUPPORTED
        - COULD_NOT_UPDATE_ATTACHMENT_FROM_OTHER_ENTITY
        - COULD_NOT_DELETE_ATTACHMENT_FROM_OTHER_ENTITY
        - APPROVAL_ONLY_AVAILABLE_ON_MOVE_IN
        - INVALID_FILE_SIZE
        - CUSTOMER_ALREADY_IN_COLLECTION
        - COULD_NOT_SIGN_ATTACHMENT
        - DUPLICATE_FORM_KEY
        - ATTACHMENT_FILE_ALREADY_EXISTS
        - ENTIY_ATTACHMENT_GROUP_DOES_NOT_EXISTS
        - ENTIY_ATTACHMENT_ALREADY_EXISTS
        - INVALID_INVOICE_TYPE
        - UNSUPPORTED_ORIGIN
        - FILEFORMAT_CONTAINS_ERRORS
        - COULD_NOT_DOWNLOAD_FILE
        - NO_MATCHING_CONTRACTS_FOR_ESTIMATION_FOUND
        - UNSUPPORTED_YEAR
        - INVALID_REGIONAL_REGULATIONS_CONFIG
        - CONSUMER_GROUP_NOT_MANUAL
        - AMOUNT_CANNOT_BE_NEGATIVE
        - CONSUMER_GROUP_CODE_IN_USE
        - PREPAYMENT_NOT_SUPPORTED
        - PREPAYMENT_ACTION_NOT_SUPPORTED
        - PREPAYMENT_METER_CANNOT_BE_PARENT_OF_PREPAYMENT_METER
        - METER_INVALID_TYPE
        - PERCENTAGE_NOT_IN_RANGE
        - BILLING_TARIFF_GAP_DETAILS
        - TAX_RATE_GAP_DETAILS
        - TAX_CODE_TAX_RATE_GAP_DETAILS
        - TARIFF_INPUT_GAP_DETAILS
        - TARIFF_INPUT_GAP_DETAILS_NAMED
        - COULD_NOT_ESTIMATE_INVOICE
        - MISSING_ESTIMABLE_BILLING_ITEMS
        - MISSING_RECEIVING_PERIOD
        - MISSING_RECEIVING_PERIOD_FOR_ESTIMATION
        - INVALID_COMMUNICATION_TYPE
        - FAILED_SENDING_EMAIL
        - FAILED_SENDING_SMS
        - MESSAGE_UNDELIVERABLE
        - INVALID_DELIVERY_ADDRESS
        - EMAIL_DROPPED
        - EMAIL_BLOCKED
        - EMAIL_INVALID
        - DATE_CANNOT_BE_OUTSIDE_COMPLETENESS_PERIOD
        - DATE_MUST_MATCH_ADVANCE_PERIOD
        - PERIOD_CANNOT_OVERLAP_WITH_ANOTHER_ADVANCE
        - CONTRACT_TERMINATION_NOT_AFTER_SUPPLYENDDATE
        - ACTIVE_PRODUCT_NOT_FOUND_FOR_CONTRACT
        - CONTRACT_ALREADY_TERMINATED_ON_ANOTHER_DATE
        - PERIOD_CANNOT_OVERLAP_PERIOD_WITH_OTHER_PRODUCT
        - ADVANCE_CANNOT_BE_APPROVED_WHEN_ENDNOTE_IS_ALREADY_MADE
        - TARIFFPERIOD_CAN_NOT_HAVE_TIERED_STAIRSTEP_VOLUME_TARIFF_WITH_OPEN_START_OR_END_DATES
        - TARIFFPERIOD_TIERED_STAIRSTEP_VOLUME_TARIFF_WITH_OPEN_START_OR_END_DATES_EXISTS
        - CUSTOMERGROUP_ALREADY_EXISTS
        - CUSTOMERGROUP_DOES_NOT_EXIST
        - COLLECTION_FLOW_ALREADY_EXISTS
        - MISSING_PROPERTY_GROUP_ON_SERVICE_LOCATION
        - MISSING_COMPANY_ON_PROPERTY_GROUP
        - MISSING_COMPANY_IBAN_ON_PROPERTY_GROUP
        - TRANSACTION_COULD_NOT_BE_MAPPED_TO_COMPANY
        - UNSUPPORTED_CONTRACTS_WITH_MULTIPLE_COMPANIES
        - UNSUPPORTED_COMPANY_BANK_ACCOUNTS_WITH_MULTIPLE_COMPANIES
        - MISSING_CONTRACT_ON_CUSTOMER
        - CONTRACTSERVICELOCATION_HAS_NO_SERVICES
        - CONTRACT_HAS_NO_SERVICELOCATIONS
        - BILLING_SCOPE_INVALID
        - BILLING_SCOPE_CONTRACT_NOT_SUPPORTED
        - UTILITY_TYPE_NOT_SUPPORTED_FOR_SCOPE_CONTRACT
        - BILLING_ITEM_CALCULATION_TYPE_NOT_SUPPORTED
        - DATE_NOT_IN_CONTRACT_SUPPLY_RANGE
        - NO_MATCHING_SERVICE_FOUND
        - METERINGISSUE_NOT_FOUND
        - METERINGISSUE_NOT_UNRESOLVED
        - CONTRACT_MAXIMUM_LOCATION_LIMIT_REACHED
        - INVOICE_ESTIMATION_NOT_ENABLED
        - ADVANCE_LIMIT_TYPE_NOT_SUPPORTED
        - VALIDATIONRULES_SHOULD_BE_UNIQUE
        - BULK_RESOLUTION_NOT_ALLOWED
        - INCORRECT_METERING_ISSUE_RESOLUTION
        - FIELD_MUST_BE_CHANGED
        - AWAITING_BANK_CONFIRMATION
        - CREATED_INVOICE_CANT_BE_PAID
        - CONSUMPTION_MEASUREMENT_MISMATCH
        - TRANSACTION_SETTLEMENT_NOT_FOUND
        - SERVICELOCATION_SERVICES_MISSING
        - POSTALCODE_IS_NOT_THE_CORRECT_LENGHT
        - UBL_COUNTRY_NOT_SUPPORTED
        - UBL_VATNUMBER_INVALID_FORMAT
        - UBL_VATNUMBER_INVALID_FORMAT_CUSTOMER
        - UBL_VATNUMBER_REQUIRED
        - UBL_VATNUMBER_REQUIRED_CUSTOMER
        - UBL_REGISTRATION_NAME_REQUIRED
        - UBL_VATNUMBER_EMPTY
        - UBL_EXPORT_CONTAINS_VALIDATION_ERRORS
        - UBL_EXPORT_NOT_GENERATED
        - UBL_INVOICE_NOT_GENERATED
        - UBL_INVOICES_NOT_GENERATED
        - UBL_INVOICE_IN_PROGRESS
        - UBL_INVOICES_IN_PROGRESS
        - UBL_INVOICE_INVALID_CUSTOMERTYPE
        - UBL_INVOICES_INVALID_CUSTOMERTYPE
        - UBL_INVOICE_AMOUNTS_INVALID
        - QR_GENERATION_FAILED
        - TOO_MANY_DECIMALS
        - CANNOT_CREATE_ADVANCE_TEMPLATE_DATAOBJECT_WITH_AMOUNT_NEGATIVE
        - INVALID_URL
        - TEMPLATE_DATA_CONTAINER_NOT_FOUND
        - INVALID_TEMPLATE_DATA_OBJECT_TYPE
        - PAYMENTLINK_GENERATION_FAILED
        - CANNOT_DISABLE_INVOICE_COLLECTION_ANYMORE
        - INVOICE_LINE_TYPE_NOT_SUPPORTED
        - VALUE_TOO_OLD
        - CANNOT_CHANGE_TIMEZONE_ANYMORE
        - PAYMENT_REFERENCE_INVALID
        - COULD_NOT_CALCULATE_DUE_DATE
        - BILLING_TARIFFS_INCOHERENT_CONDITIONS
        - PREPAYMENT_ACCOUNT_COULD_NOT_BE_SET
        - PREPAYMENT_SHARED_BALANCE_METER_CANNOT_BE_INSTALLED_ON_MULTI_CONTRACT_SERVICELOCATION
        - PREPAYMENT_MULTIPLE_CONTRACTS_FOR_SAME_UTILILTY_TYPE
        - TIER_CALCULATION_METHOD_CAN_NOT_BE_TARIFF_PERIOD_FOR_NON_CONSUMPTION_BILLING_ITEM
        - MEASUREMENT_READINGDATE_TOO_OLD
        - PREPAYMENT_ACCOUNT_DOES_NOT_EXIST
        - METERING_TYPE_NOT_SUPPORTED
        - UTILITY_TYPE_NOT_SUPPORTED
        - DIRECTION_VALUE_NOT_SUPPORTED
        - INVALID_CUSTOM_ENTITY_PROPERTY_ENTITY_SUBJECT_TYPE
        - INVALID_CUSTOM_ENTITY_PROPERTY_VALUE_TYPE
        - DEVICE_ID_NOT_FOUND
        - MISSING_METER_SERIAL_NUMBER
        - BILLING_METHODS_NOT_MATCHING
        - ADMIN_USER_NOT_FOUND
        - USER_ALREADY_EXISTS
        - USER_NOT_FOUND
        - ROLE_NOT_FOUND
        - ROLE_NOT_IN_SCOPE
        - ROLE_ALREADY_EXISTS
        - PERMISSION_INVALID
        - IMPORT_COLUMN_MISMATCH
        - IMPORT_INVALID_UNITPRICE
        - IMPORT_INVALID_ORIGIN
        - IMPORT_INVALID_TARIFFTYPE
        - IMPORT_BILLINGTARIFF_ALREADYEXISTS
        - IMPORT_PREVIOUS_BILLINGTARIFF_NOTFOUND
        - IMPORT_CALCULATIONTYPE_DOES_NOT_MATCH
        - IMPORT_NUMBER_IS_NOT_A_DECIMAL
        - IMPORT_TIER_KEY_IS_NOT_THE_SAME_AS_PREVIOUS_TARIFF
        - IMPORT_CEP_COLUMN_NOT_FOUND_IN_FILE
        - IMPORT_CEP_DOES_NOT_MATCH_PREVIOUS_TARIFF
        - IMPORT_NEED_BOTH_SDD_AND_SCT
        - IMPORT_MISSING_TARIFF_FOR_CEP
        - IMPORT_AMOUNT_OF_CEP_VALUES_DOES_NOT_MATCH
        - IMPORT_ALREADY_LOCKED
        - IMPORT_NOT_LOCKED
        - SERVICE_LOCATION_HAS_INSTALLED_METERS
        - SERVICE_LOCATION_IS_PART_OF_PROPERTY_GROUP
        - SERVICE_LOCATION_HAS_CONTRACTS
        - IMPORT_CANT_HAVE_ORIGIN_BILLINGITEM_WITH_PRODUCT
        - END_CANT_BE_BEFORE_START
        - CONSTANT_SEGMENT_TYPE_SINGLE_VALUE
        - SERVICELOCATIONS_DO_NOT_HAVE_PREPAYMENT_METERS_FOR_CONTRACT_DATE_RANGE
        - DIFFERENT_DECIMAL_SEPARATOR_CONFIGURED
        - DIFFERENT_THOUSANDS_SEPARATOR_CONFIGURED
        - DIFFERENT_THOUSANDS_OR_DECIMAL_SEPARATOR_CONFIGURED
        - DIFFERENT_DATE_FORMAT_CONFIGURED
        - DUPLICATE_TIER_IN_LIST
        - SERVICELOCATION_ALREADY_HAS_SHAREDBALANCEMETER_AND_SERVICE_SUPPLIED_FOR_CONTRACT_DATE_RANGE
        - UNINSTALL_METER_SERVICELOCATIONS_DO_NOT_HAVE_PREPAYMENT_METERS_FOR_CONTRACT_DATE_RANGE
        - INSTALL_SHARED_BALANCE_METER_SERVICELOCATION_HAS_MORE_THEN_ONE_CONTRACT
        - USER_HAS_NO_MOBILE_PHONENUMBER
        - INVOICE_NOT_APPROVALINPROGRESS_STATUS
        - INVALID_CONTRACT_BILLING_METHOD
        - FEATURE_NOT_YET_AVAILABLE
        - INVALID_NUMBER_SEPARATOR
        - INVALID_DATE_FORMAT
        - INVALID_TIMEZONE_CONFIGURED
        - INVALID_METERING_TYPE
        - METERING_IMPORT_UNITOFMEASURE_NOT_SUPPORTED
        - METERING_IMPORT_UNITOFMEASURE_NOT_SUPPORTED_INFO
        - INVALID_UTILITY_TYPE
        - INVALID_DIRECTION_VALUE
        - COLLECTION_STEP_EXECUTION_DATE_ALREADY_REACHED
        - COLLECTION_STEP_HAS_WRONG_TYPE
        - COLLECTION_STEP_HAS_WRONG_COMMUNICATION_TYPE
        - SANDBOX_MODE_NEEDS_RECIPIENT_PHONE
        - ANNUAL_STATEMENT_ALREADY_GENERATED
        - ANNUAL_STATEMENT_GENERATION_IN_PROGRESS
        - ANNUAL_STATEMENTS_FEATURE_NOT_ENABLED
        - TEMPLATE_NOT_FOUND
        - CONFIRMATION_TOKEN_MISSING
        - RESET_PASSWORD_TOKEN_MISSING
        - EMAIL_CANNOT_BE_CHANGED
        - USER_CANNOT_BE_CHANGED
        - ANNUAL_STATEMENT_WRONG_STATUS
        - ANNUAL_STATEMENT_DOES_NOT_EXIST
        - WRONG_STATUS
        - INVALID_FILE
        - COULD_NOT_PARSE_MEASUREMENT_FILE
        - DATE_IS_IN_FUTURE
        - CONFIRM_PASSWORD_DOES_NOT_MATCH
        - PASSWORD_MINIMUM_LENGTH_12
        - INCOMING_MUTATION_INVALID_AMOUNTS_TO_SETTLE
        - LIMIT_TOO_BIG
        - CUSTOMER_HAS_NO_DATA_FOR_ANNUAL_STATEMENT
        - FIELD_SHOULD_CONTAIN_AT_LEAST_ONE_CHARACTER
        - IMPORT_BILLINGTARIFF_ALREADYEXISTS_IN_THE_SAME_FILE
        - PINGEN_NOT_ENABLED
        - GENERAL_LEDGER_CATEGORY_NOT_FOUND
        - METERING_IMPORT_VALUE_WAS_EMPTY
        - PORTAL_PAGE_NOTIFICATION_ALREADY_EXISTS_FOR_PAGE_IDENTIFIER
        - METER_CANNOT_HAVE_ITSELF_AS_PARENT
        - REQUESTED_FILE_NOT_FOUND
        - BUILT_IN_FILE_FORMAT_MISSING
        - METERING_IMPORT_NO_ADDITIONAL_INFO
        - UNKNOWN
      type: string
      nullable: true
    EstimatedAnnualVolumeOrigin:
      enum:
        - manual
        - frompreviousyear
        - fromconsumergroup
        - forecast
      type: string
    ExecutionStatus:
      enum:
        - unknown
        - uploaded
        - ignored
        - processed
        - failed
        - processedwitherrors
        - readallcontents
        - processing
      type: string
    ExportJobLineStatus:
      enum:
        - created
        - gatheringdata
        - ready
      type: string
    ExportJobStatus:
      enum:
        - created
        - generating
        - generated
        - transferred
        - failed
        - gatheringdata
        - ready
        - gathereddata
        - transferring
      type: string
    ExportJobsQuickFilter:
      enum:
        - all
        - created
        - failed
        - generated
        - exported
        - requireattention
      type: string
    ExportOutgoingBankingTransactionPaymentRefundFormatType:
      enum:
        - pain_001001003
      type: string
    ExportOutgoingBankingTransactionPaymentRequestFormatType:
      enum:
        - pain_008001002
      type: string
    ExportSettingsCategoryType:
      enum:
        - invoice
      type: string
    ExportStatus:
      enum:
        - notexported
        - exported
      type: string
    ExternalChannelDTO:
      type: object
      properties:
        startDateTime:
          type: string
          format: date-time
        endDateTime:
          type: string
          format: date-time
        dataFrequency:
          allOf:
            - $ref: '#/components/schemas/DataFrequency'
          nullable: true
        incrementationType:
          allOf:
            - $ref: '#/components/schemas/IncrementationType'
          nullable: true
        meteringType:
          allOf:
            - $ref: '#/components/schemas/MeteringType'
          nullable: true
        utilityType:
          allOf:
            - $ref: '#/components/schemas/UtilityType'
          nullable: true
        direction:
          allOf:
            - $ref: '#/components/schemas/Direction'
          nullable: true
        unitOfMeasure:
          allOf:
            - $ref: '#/components/schemas/UnitOfMeasure'
          nullable: true
        timeOfUse:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        externalIdentifier:
          type: string
          nullable: true
        lastTimeReceivedData:
          type: string
          format: date-time
          nullable: true
        measurementsUntil:
          type: string
          format: date-time
          nullable: true
        relationExternalReference:
          type: string
          nullable: true
        issuesCount:
          type: integer
          format: int32
        hasIssue:
          type: boolean
          readOnly: true
        issues:
          type: array
          items:
            $ref: '#/components/schemas/MeteringIssueReference'
          nullable: true
          deprecated: true
        builtIn:
          type: boolean
        hidden:
          type: boolean
      additionalProperties: false
    ExternalChannelRequest:
      type: object
      properties:
        dataFrequency:
          allOf:
            - $ref: '#/components/schemas/DataFrequency'
          nullable: true
        meteringType:
          allOf:
            - $ref: '#/components/schemas/MeteringType'
          nullable: true
        utilityType:
          allOf:
            - $ref: '#/components/schemas/UtilityType'
          nullable: true
        direction:
          allOf:
            - $ref: '#/components/schemas/Direction'
          nullable: true
        incrementationType:
          allOf:
            - $ref: '#/components/schemas/IncrementationType'
          nullable: true
        timeOfUse:
          type: string
          nullable: true
        unitOfMeasure:
          allOf:
            - $ref: '#/components/schemas/UnitOfMeasure'
          nullable: true
        externalIdentifier:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        relationExternalReference:
          type: string
          nullable: true
      additionalProperties: false
    ExternalMeasurementsQuickFilter:
      enum:
        - all
        - contextinvalid
        - linked
        - unlinked
        - unprocessed
      type: string
    FileSizeType:
      enum:
        - b
        - kb
        - mb
        - gb
      type: string
    FlatConsumptionAggregates:
      enum:
        - min
        - max
        - avg
        - total
        - mindate
        - maxdate
      type: string
    FormulaFunctionCategory:
      enum:
        - billing
        - consumptions
        - contracts
        - math
        - meterconfig
        - meters
      type: string
    FormulaFunctionInputParameterReferenceType:
      enum:
        - fixed
        - runtimeparameter
        - formulafunctionoutput
      type: string
    FormulaFunctionType:
      enum:
        - getmeterslinkedtopropertygroup
        - getmatchingchannelsformeters
        - getserviceconsumptionsforexternalchannels
        - aggregateconsumptions
        - subtractconsumptions
        - getmeterconsumptionsforexternalchannels
        - gettotaloutputchannelconsumption
        - gettotalmonthssuppliedforproperty
        - dividevalues
        - multiplyvalues
        - gettotalincominginvoicecomponentvalue
        - aggregatetotalconsumptions
        - applycorrectionfactortoconsumptions
        - addvalues
        - subtractvalues
      type: string
    FormulaType:
      enum:
        - calculatedconsumption
        - calculatedtariff
      type: string
    FractionFrequency:
      enum:
        - daily
        - hourly
      type: string
    FtpProtocol:
      enum:
        - none
        - ssl2
        - ssl3
        - tls
        - default
        - tls11
        - tls12
      type: string
    GeneralLedgerCategory:
      enum:
        - product
        - billingitem
        - taxcode
        - collectionflow
        - bankaccount
        - waitingaccount
      type: string
    GeneralLedgerMappingStatus:
      enum:
        - unlinked
        - linked
      type: string
    GetContractsQueryParams:
      type: object
      properties:
        flexSearch:
          type: string
          nullable: true
        includeOnlyIds:
          type: array
          items:
            type: string
          nullable: true
        excludeIds:
          type: array
          items:
            type: string
          nullable: true
        serviceLocationId:
          type: string
          nullable: true
        propertyGroupIds:
          type: array
          items:
            type: string
          nullable: true
        customerGroupId:
          type: string
          nullable: true
        customerId:
          type: string
          nullable: true
        customerType:
          type: string
          nullable: true
        productId:
          type: string
          nullable: true
        excludeTerminatedContracts:
          type: boolean
      additionalProperties: false
    GetCustomersQueryParams:
      type: object
      properties:
        flexSearch:
          type: string
          nullable: true
        includeOnlyIds:
          type: array
          items:
            type: string
          nullable: true
        excludeIds:
          type: array
          items:
            type: string
          nullable: true
        customerType:
          type: string
          nullable: true
        defaultPaymentMethod:
          type: string
          nullable: true
        propertyGroupIds:
          type: array
          items:
            type: string
          nullable: true
        excludePropertyGroupId:
          type: string
          nullable: true
        customerGroupId:
          type: string
          nullable: true
        excludeCustomerGroupId:
          type: string
          nullable: true
        customerGroupName:
          type: string
          nullable: true
        nameContains:
          type: string
          nullable: true
        activationCode:
          type: string
          nullable: true
        priorityServiceRegisterPropertyTypeId:
          type: string
          nullable: true
        vulnerabilityRegisterPropertyTypeId:
          type: string
          nullable: true
        priorityServiceRegisterIds:
          type: array
          items:
            type: string
          nullable: true
        vulnerabilityRegisterIds:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
    GetMetersQueryParams:
      type: object
      properties:
        flexSearch:
          type: string
          nullable: true
        includeOnlyIds:
          type: array
          items:
            type: string
          nullable: true
        excludeIds:
          type: array
          items:
            type: string
          nullable: true
        servicelocationIds:
          type: array
          items:
            type: string
          nullable: true
        propertyGroupIds:
          type: array
          items:
            type: string
          nullable: true
        meterType:
          allOf:
            - $ref: '#/components/schemas/MeterType'
          nullable: true
        receivedMeteringDataStart:
          type: string
          format: date-time
          nullable: true
        receivedMeteringDataEnd:
          type: string
          format: date-time
          nullable: true
        nextExpectedReadingDateStart:
          type: string
          format: date-time
          nullable: true
        nextExpectedReadingDateEnd:
          type: string
          format: date-time
          nullable: true
        parentSerialNumber:
          type: string
          nullable: true
        filterByReadingFrequency:
          type: boolean
        readingFrequency:
          allOf:
            - $ref: '#/components/schemas/MeterReadingFrequency'
          nullable: true
        customerId:
          type: string
          nullable: true
        meterTypeGroup:
          type: string
          nullable: true
        meterSerialNumber:
          type: string
          nullable: true
      additionalProperties: false
    GetMoveRequestsQueryParams:
      type: object
      properties:
        flexSearch:
          type: string
          nullable: true
        includeOnlyIds:
          type: array
          items:
            type: string
          nullable: true
        excludeIds:
          type: array
          items:
            type: string
          nullable: true
        locationId:
          type: string
          nullable: true
        moveRequestTypeId:
          type: string
          nullable: true
      additionalProperties: false
    GetPrepaymentMetersInstalledOnServiceLocationsRequest:
      type: object
      properties:
        serviceLocationIds:
          type: array
          items:
            type: string
          nullable: true
        supplyPeriod:
          allOf:
            - $ref: '#/components/schemas/DateRange'
          nullable: true
      additionalProperties: false
    GetPropertyGroupsQueryParams:
      type: object
      properties:
        flexSearch:
          type: string
          nullable: true
        includeOnlyIds:
          type: array
          items:
            type: string
          nullable: true
        excludeIds:
          type: array
          items:
            type: string
          nullable: true
        nameContains:
          type: string
          nullable: true
      additionalProperties: false
    GetServiceLocationsQueryParams:
      type: object
      properties:
        flexSearch:
          type: string
          nullable: true
        includeOnlyIds:
          type: array
          items:
            type: string
          nullable: true
        excludeIds:
          type: array
          items:
            type: string
          nullable: true
        customerId:
          type: string
          nullable: true
        propertyGroupIds:
          type: array
          items:
            type: string
          nullable: true
        excludeServiceLocationsSuppliedInContractId:
          type: string
          nullable: true
        excludeServiceLocationsInPropertyGroupId:
          type: string
          nullable: true
        referenceDateTime:
          type: string
          format: date-time
          nullable: true
        postalCode:
          type: string
          nullable: true
        city:
          type: string
          nullable: true
        streetNumber:
          type: string
          nullable: true
      additionalProperties: false
    IbanConfirmationStatus:
      enum:
        - unspecified
        - known
        - unknownfirst
        - unknownsecond
      type: string
    ImportCategoryType:
      enum:
        - metering
        - bankstatement
        - migration
      type: string
    ImportContractInvoiceDateHandling:
      enum:
        - donothing
        - recalculateinvoicedates
        - nextinvoicedateminusfrequency
      type: string
    ImportJobEntityIssueStage:
      enum:
        - validation
        - processing
      type: string
    ImportJobEntityType:
      enum:
        - externalmeasurement
        - banktransaction
        - property
        - servicelocation
        - meter
        - calculationgroup
        - customer
        - customermandate
        - contract
        - payment
        - invoice
        - attachment
        - entityattribute
        - contractedservice
        - invoiceline
        - billingcompleteness
        - meterchannel
        - service
        - communicationpreferences
        - consumptionunit
        - intermediateinvoicing
        - propertygroupbillingconfiguration
        - prepaymentaccount
      type: string
    ImportJobStatus:
      enum:
        - created
        - reading
        - storing
        - stored
        - processing
        - processed
        - failed
        - validating
        - validated
        - invalid
        - postprocessing
        - finished
      type: string
    ImportJobsQuickFilter:
      enum:
        - all
        - stored
        - ongoing
        - requireattention
        - completed
      type: string
    ImportStatus:
      enum:
        - created
        - validating
        - processing
        - finished
        - failed
        - undone
      type: string
    ImportType:
      enum:
        - billingtariff
      type: string
    IncomingBankingTransactionFormatType:
      enum:
        - camt053_001_02
      type: string
    IncomingBankingTransactionQuickFilter:
      enum:
        - all
        - ready
        - closed
        - attention
        - resolveissues
        - requireattention
      type: string
    IncomingBankingTransactionStatus:
      enum:
        - created
        - processing
        - matching
        - resolveissues
        - readytoprocess
        - closed
      type: string
    IncomingMutationPaymentMethod:
      enum:
        - sddconfirmations
        - reversals
        - sct
        - unknown
      type: string
    IncomingMutationQuickFilter:
      enum:
        - all
        - banktransfers
        - bankconfirmations
        - reversals
        - resolveissues
      type: string
    IncomingMutationStatus:
      enum:
        - created
        - ignored
        - resolveissues
        - readytoprocess
        - processing
        - processed
        - failed
        - matched
      type: string
    IncomingMutationType:
      enum:
        - incomingtransfer
        - outgoingtransfer
        - paymentrequestreversal
        - refundreversal
        - unknown
        - paymentrequesttransactionconfirmation
        - paymentrequestmutationconfirmation
        - refundtransactionconfirmation
        - refundmutationconfirmation
        - requestconfirmation
        - refundconfirmation
      type: string
    IncrementationType:
      enum:
        - delta
        - cumul
        - na
      type: string
    InputMissingReason:
      enum:
        - unknown
        - missingadvances
        - missingreceivingperiods
        - missingtariffs
        - invoicecreationfailed
        - invoicelinecalculationfailed
        - missingreceivingperiodsfortieredtariffcalculation
        - missingbillingitems
        - missingcustomentityproperty
        - missingaskingperiods
        - askingperiodscontainsgap
        - missingtaxrate
        - missingpropertygrouponlocation
        - propertygroupnotfound
        - servicelocationnotfound
        - missingcep
        - missingmeter
        - firstmeasurementonwrongdate
        - nomeasurementonstart
        - nomeasurementonend
        - nomeasurementsfound
        - lastmeasurementonwrongdate
        - measurementnotwithindeviationwindow
        - noproductfound
      type: string
    InstallMeterRequest:
      type: object
      properties:
        mutationDateTime:
          type: string
          format: date-time
        serviceLocationId:
          type: string
          nullable: true
        propertyGroupId:
          type: string
          nullable: true
        addressInstalled:
          allOf:
            - $ref: '#/components/schemas/AddressDTO'
          nullable: true
        channelTemplates:
          type: array
          items:
            $ref: '#/components/schemas/ExternalChannelRequest'
          nullable: true
        nextExpectedReadingDate:
          type: string
          format: date-time
          nullable: true
        readingFrequency:
          allOf:
            - $ref: '#/components/schemas/MeterReadingFrequency'
          nullable: true
      additionalProperties: false
    InvoiceAmount:
      enum:
        - positive
        - negative
      type: string
    InvoiceCommunicationPreferenceDTO:
      type: object
      properties:
        invoiceType:
          allOf:
            - $ref: '#/components/schemas/InvoiceType'
          description: Type of invoice
          nullable: true
        communicationType:
          allOf:
            - $ref: '#/components/schemas/CommunicationType'
          description: Preferred communication type for invoices
          nullable: true
      additionalProperties: false
      description: Represents invoice communication preferences
    InvoiceExportType:
      enum:
        - invoicetoexcel
        - invoicelinestoexcel
        - createexportjob
        - invoicetoxml
        - integration
      type: string
    InvoiceFrequency:
      enum:
        - monthly
        - quarterly
        - halfyearly
        - yearly
      type: string
    InvoiceLineType:
      enum:
        - advance
        - previouslyadvanced
        - charge
        - vatpennydifference
      type: string
    InvoiceQuickFilter:
      enum:
        - all
        - toapprove
        - tosend
        - readyforpaymentcollection
        - toexport
        - unpaid
        - overdue
        - requireattention
      type: string
    InvoiceScenarioType:
      enum:
        - advance
        - correctionnote
        - creditnote
        - endnote
        - incidentalnote
        - invoice
      type: string
    InvoiceStatus:
      enum:
        - created
        - approvalinprogress
        - approved
        - settled
        - generated
        - generationfailed
      type: string
    InvoiceType:
      enum:
        - advance
        - invoice
        - endnote
        - creditnote
        - incidentalnote
        - correctionnote
      type: string
    Level:
      enum:
        - low
        - moderate
        - high
      type: string
    LocalisationLevel:
      enum:
        - none
        - partial
        - all
      type: string
    LocalisedErrorDTO:
      type: object
      properties:
        key:
          allOf:
            - $ref: '#/components/schemas/ErrorCode'
        correlationId:
          type: string
          nullable: true
        message:
          type: string
          nullable: true
        messageValues:
          type: array
          items:
            $ref: '#/components/schemas/LocalisedErrorDTOMessageValue'
          nullable: true
      additionalProperties: false
    LocalisedErrorDTOMessageValue:
      type: object
      properties:
        dataType:
          allOf:
            - $ref: '#/components/schemas/DataType'
          nullable: true
        value:
          type: string
          nullable: true
        capitalize:
          type: boolean
      additionalProperties: false
    ManagementRelationDTO:
      type: object
      properties:
        customerId:
          type: string
          nullable: true
        shortDisplayName:
          type: string
          nullable: true
        accountNumber:
          type: string
          nullable: true
        managementRelationType:
          allOf:
            - $ref: '#/components/schemas/ManagementRelationType'
          nullable: true
      additionalProperties: false
    ManagementRelationDTO2:
      type: object
      properties:
        customerId:
          type: string
          nullable: true
        shortDisplayName:
          type: string
          nullable: true
        accountNumber:
          type: string
          nullable: true
        managementRelationType:
          allOf:
            - $ref: '#/components/schemas/ManagementRelationType'
          nullable: true
      additionalProperties: false
    ManagementRelationRequest:
      type: object
      properties:
        customerId:
          type: string
          description: The unique identifier of the customer for whom the management relation is being created
          nullable: true
        managementRelationType:
          allOf:
            - $ref: '#/components/schemas/ManagementRelationType'
          description: The type of management relation being established between the entities
          nullable: true
      additionalProperties: false
      description: Represents a request to create or update a management relation between entities
    ManagementRelationType:
      enum:
        - owner
        - propertymanager
      type: string
    MandateStatus:
      enum:
        - requested
        - cancelled
        - signed
      type: string
    MandateType:
      enum:
        - core
        - b2b
      type: string
    MeasurementDetailsDTO:
      type: object
      properties:
        internalMeterId:
          type: string
          nullable: true
        externalChannelIdentifier:
          type: string
          nullable: true
        meterSerialNumber:
          type: string
          nullable: true
        utilityType:
          allOf:
            - $ref: '#/components/schemas/UtilityType'
          nullable: true
        unitOfMeasure:
          allOf:
            - $ref: '#/components/schemas/UnitOfMeasure'
          nullable: true
        timeOfUse:
          type: string
          nullable: true
        value:
          type: number
          format: double
        timeZone:
          type: string
          nullable: true
        errors:
          type: array
          items:
            $ref: '#/components/schemas/LocalisedErrorDTO'
          nullable: true
      additionalProperties: false
    MeasurementSource:
      enum:
        - importjob
        - moverequest
        - measurementimport
      type: string
    MessageType:
      enum:
        - informational
        - warning
        - error
      type: string
    MeterDTO:
      type: object
      properties:
        id:
          type: string
          description: Gets or sets the unique identifier.
          nullable: true
        entityType:
          allOf:
            - $ref: '#/components/schemas/EntitySubjectType'
          description: Gets or sets the type of the entity.
          nullable: true
        createdDateTime:
          type: string
          description: Gets or sets the date and time when the entity was created.
          format: date-time
        discriminator:
          type: string
          description: Gets or sets the discriminator value.
          nullable: true
        _etag:
          type: string
          description: Gets or sets the ETag value.
          nullable: true
        requireAttention:
          type: boolean
          description: Gets a value indicating whether the entity requires attention.
          readOnly: true
        hasErrors:
          type: boolean
          description: Gets or sets a value indicating whether the entity has errors.
        hasWarnings:
          type: boolean
          description: Gets or sets a value indicating whether the entity has warnings.
        isReadOnly:
          type: boolean
          description: Gets or sets a value indicating whether the entity is read-only.
        organisationId:
          type: string
          description: Gets or sets the organization identifier.
          nullable: true
        serialNumber:
          type: string
          nullable: true
        meterTag:
          type: string
          nullable: true
        meterType:
          allOf:
            - $ref: '#/components/schemas/MeterType'
          nullable: true
        modelId:
          type: string
          nullable: true
        statusHistory:
          type: array
          items:
            $ref: '#/components/schemas/MeterStatusHistoryDTO'
          nullable: true
        channels:
          type: array
          items:
            $ref: '#/components/schemas/ExternalChannelDTO'
          description: 'By default only contains not hidden channels. If you want to get hidden channels, call /md/meters/{meterId}?showhiddenchannels=true'
          nullable: true
        lastTimeReceivedData:
          type: string
          format: date-time
          nullable: true
          readOnly: true
        measurementsUntil:
          type: string
          format: date-time
          nullable: true
          readOnly: true
        parentMeterRelation:
          allOf:
            - $ref: '#/components/schemas/MeterRelationDTO'
          nullable: true
        propertyGroup:
          allOf:
            - $ref: '#/components/schemas/PropertyGroupReferenceDTO'
          nullable: true
        timeZone:
          type: string
          nullable: true
        meterProperties:
          allOf:
            - $ref: '#/components/schemas/MeterPropertiesBaseDTO'
          nullable: true
        customProperties:
          type: array
          items:
            $ref: '#/components/schemas/CustomEntityPropertyDTO'
          nullable: true
        measurementIssuesCount:
          type: integer
          format: int32
        meterIssuesCount:
          type: integer
          format: int32
        issuesCount:
          type: integer
          format: int32
          readOnly: true
        hasIssue:
          type: boolean
          readOnly: true
        issues:
          type: array
          items:
            $ref: '#/components/schemas/MeteringIssueReference'
          nullable: true
          deprecated: true
        readingFrequency:
          allOf:
            - $ref: '#/components/schemas/MeterReadingFrequency'
          nullable: true
        nextExpectedReadingDate:
          type: string
          format: date-time
          nullable: true
      additionalProperties: false
    MeterDTOApiResponseDTO:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/LocalisedErrorDTO'
          nullable: true
        success:
          type: boolean
        applicableEntitiesCount:
          type: integer
          format: int32
        requestedEntitiesCount:
          type: integer
          format: int32
        succeededEntitiesCount:
          type: integer
          format: int32
          readOnly: true
        isSynchronous:
          type: boolean
        data:
          allOf:
            - $ref: '#/components/schemas/MeterDTO'
          description: The updated entity in case of modifications or creation
          nullable: true
      additionalProperties: false
    MeterDTOPagedResponseModelDTO:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/MeterDTO'
          nullable: true
        hasNextPage:
          type: boolean
        nextPageToken:
          type: string
          nullable: true
        totalRecords:
          type: integer
          format: int32
        sortableFields:
          type: array
          items:
            type: string
          nullable: true
        aggregateDetails:
          type: array
          items:
            $ref: '#/components/schemas/AggregateDetailsDTO'
          nullable: true
      additionalProperties: false
    MeterDTOPagedResponseModelDTOApiResponseDTO:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/LocalisedErrorDTO'
          nullable: true
        success:
          type: boolean
        applicableEntitiesCount:
          type: integer
          format: int32
        requestedEntitiesCount:
          type: integer
          format: int32
        succeededEntitiesCount:
          type: integer
          format: int32
          readOnly: true
        isSynchronous:
          type: boolean
        data:
          allOf:
            - $ref: '#/components/schemas/MeterDTOPagedResponseModelDTO'
          description: The updated entity in case of modifications or creation
          nullable: true
      additionalProperties: false
    MeterOverviewCountDTO:
      type: object
      properties:
        all:
          type: integer
          format: int32
        installed:
          type: integer
          format: int32
        inactive:
          type: integer
          format: int32
      additionalProperties: false
    MeterOverviewCountDTOApiResponseDTO:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/LocalisedErrorDTO'
          nullable: true
        success:
          type: boolean
        applicableEntitiesCount:
          type: integer
          format: int32
        requestedEntitiesCount:
          type: integer
          format: int32
        succeededEntitiesCount:
          type: integer
          format: int32
          readOnly: true
        isSynchronous:
          type: boolean
        data:
          allOf:
            - $ref: '#/components/schemas/MeterOverviewCountDTO'
          description: The updated entity in case of modifications or creation
          nullable: true
      additionalProperties: false
    MeterPropertiesBaseDTO:
      type: object
      additionalProperties: false
    MeterQuickFilter:
      enum:
        - all
        - installed
        - inactive
        - requireattention
      type: string
    MeterReadingFrequency:
      enum:
        - hourly
        - daily
        - weekly
        - monthly
        - bimonthly
        - quarterly
        - halfyearly
        - yearly
      type: string
    MeterReference:
      type: object
      properties:
        meterId:
          type: string
          nullable: true
        serialNumber:
          type: string
          nullable: true
      additionalProperties: false
    MeterRelationDTO:
      type: object
      properties:
        meterId:
          type: string
          nullable: true
        serialNumber:
          type: string
          nullable: true
        externalReference:
          type: string
          nullable: true
      additionalProperties: false
    MeterStatus:
      enum:
        - requested
        - installed
        - removed
      type: string
    MeterStatusHistoryDTO:
      type: object
      properties:
        startDateTime:
          type: string
          format: date-time
        endDateTime:
          type: string
          format: date-time
        meterStatus:
          allOf:
            - $ref: '#/components/schemas/MeterStatus'
          nullable: true
        serviceLocationId:
          type: string
          nullable: true
        installedAtAddress:
          allOf:
            - $ref: '#/components/schemas/AddressDTO'
          nullable: true
        propertyGroup:
          allOf:
            - $ref: '#/components/schemas/PropertyGroupReferenceDTO'
          nullable: true
      additionalProperties: false
    MeterType:
      enum:
        - individual
        - aggregating
        - communal
        - root
        - prepayment
      type: string
    MeteringImportMeasurementsQuickFilter:
      enum:
        - invalid
        - valid
        - notprocessed
        - processed
      type: string
    MeteringImportQuickFilter:
      enum:
        - all
        - toprocess
        - processed
        - formatissues
        - invalid
        - issues
      type: string
    MeteringImportStatus:
      enum:
        - uploading
        - uploadfailed
        - invalidformat
        - validating
        - valid
        - validationfailed
        - toprocess
        - processing
        - processed
        - processedwithissues
      type: string
    MeteringImportType:
      enum:
        - measurements
      type: string
    MeteringIssueError:
      enum:
        - consumptionnegative
        - measurementfrequencytoolow
      type: string
    MeteringIssueErrorGroup:
      enum:
        - measurement
        - meterreadingfrequency
      type: string
    MeteringIssueQuickFilter:
      enum:
        - all
        - unresolved
        - requireattention
      type: string
    MeteringIssueReference:
      type: object
      properties:
        meteringIssueId:
          type: string
          nullable: true
        error:
          allOf:
            - $ref: '#/components/schemas/MeteringIssueError'
          nullable: true
        status:
          allOf:
            - $ref: '#/components/schemas/MeteringIssueStatus'
          nullable: true
        noticedDateTime:
          type: string
          format: date-time
      additionalProperties: false
    MeteringIssueResolutionReason:
      enum:
        - newmeasurementimportjob
        - measurementdeleted
        - newmeasurementmanuallyadded
        - newmeasurementmoverequest
        - measurementvalidated
      type: string
    MeteringIssueResolutionType:
      enum:
        - manual
        - automatic
      type: string
    MeteringIssueStatus:
      enum:
        - unresolved
        - ignored
        - resolved
        - muted
      type: string
    MeteringIssuesGroupBy:
      enum:
        - none
        - meter
      type: string
    MeteringType:
      enum:
        - none
        - energy
        - volume
        - volumeflow
        - flowtemp
        - returntemp
        - difftemp
        - balance
      type: string
    Month:
      enum:
        - january
        - february
        - march
        - april
        - may
        - june
        - july
        - august
        - september
        - october
        - november
        - december
      type: string
    MoveRequestAttachmentSignatureRequest:
      type: object
      properties:
        origin:
          allOf:
            - $ref: '#/components/schemas/EntityAttachmentOrigin'
          nullable: true
        culture:
          $ref: '#/components/schemas/CultureInfo'
          nullable: true
        productAttachmentId:
          type: string
          nullable: true
        entityAttachmentGroupId:
          type: string
          nullable: true
        signDate:
          type: string
          format: date-time
          nullable: true
        viewedDate:
          type: string
          format: date-time
          nullable: true
      additionalProperties: false
    MoveRequestContractDetailsDTO:
      type: object
      properties:
        contractId:
          type: string
          nullable: true
        contractNumber:
          type: string
          nullable: true
        contractSupplyStartDate:
          type: string
          format: date-time
        contractSupplyEndDate:
          type: string
          format: date-time
        customerId:
          type: string
          nullable: true
        customerDisplayName:
          type: string
          nullable: true
        customerAccountNumber:
          type: string
          nullable: true
      additionalProperties: false
    MoveRequestContractEstimationRequest:
      type: object
      properties:
        utilityType:
          allOf:
            - $ref: '#/components/schemas/UtilityType'
          nullable: true
        unitOfMeasure:
          allOf:
            - $ref: '#/components/schemas/UnitOfMeasure'
          nullable: true
        meteringType:
          allOf:
            - $ref: '#/components/schemas/MeteringType'
          nullable: true
        value:
          type: number
          format: double
        consumerGroupId:
          type: string
          nullable: true
      additionalProperties: false
    MoveRequestCustomerDetails:
      type: object
      properties:
        internalId:
          type: string
          nullable: true
        accountNumber:
          type: string
          nullable: true
        salutation:
          type: string
          nullable: true
        initials:
          type: string
          nullable: true
        firstName:
          type: string
          nullable: true
        lastName:
          type: string
          nullable: true
        birthDate:
          type: string
          format: date-time
          nullable: true
        ssin:
          type: string
          nullable: true
        ssinCountry:
          allOf:
            - $ref: '#/components/schemas/CountryCode'
          nullable: true
        customerType:
          allOf:
            - $ref: '#/components/schemas/CustomerType'
          nullable: true
        companyName:
          type: string
          nullable: true
        organizationNumber:
          type: string
          nullable: true
        vatNumber:
          type: string
          nullable: true
        defaultPaymentMethod:
          allOf:
            - $ref: '#/components/schemas/PaymentMethod'
          nullable: true
        invoiceAddress:
          allOf:
            - $ref: '#/components/schemas/AddressDTO'
          nullable: true
        bankAccount:
          type: string
          nullable: true
        emailAddress:
          type: string
          nullable: true
        telephoneNumber:
          type: string
          nullable: true
        mobileTelephoneNumber:
          type: string
          nullable: true
        website:
          type: string
          nullable: true
        culture:
          $ref: '#/components/schemas/CultureInfo'
          nullable: true
      additionalProperties: false
    MoveRequestDTO:
      type: object
      properties:
        id:
          type: string
          description: Gets or sets the unique identifier.
          nullable: true
        entityType:
          allOf:
            - $ref: '#/components/schemas/EntitySubjectType'
          description: Gets or sets the type of the entity.
          nullable: true
        createdDateTime:
          type: string
          description: Gets or sets the date and time when the entity was created.
          format: date-time
        discriminator:
          type: string
          description: Gets or sets the discriminator value.
          nullable: true
        _etag:
          type: string
          description: Gets or sets the ETag value.
          nullable: true
        requireAttention:
          type: boolean
          description: Gets a value indicating whether the entity requires attention.
          readOnly: true
        hasErrors:
          type: boolean
          description: Gets or sets a value indicating whether the entity has errors.
        hasWarnings:
          type: boolean
          description: Gets or sets a value indicating whether the entity has warnings.
        isReadOnly:
          type: boolean
          description: Gets or sets a value indicating whether the entity is read-only.
        organisationId:
          type: string
          description: Gets or sets the organization identifier.
          nullable: true
        externalId:
          type: string
          nullable: true
        customerDetails:
          allOf:
            - $ref: '#/components/schemas/CustomerDetailsDTO'
          nullable: true
        serviceLocationDetails:
          allOf:
            - $ref: '#/components/schemas/ServiceLocationDetailsDTO'
          nullable: true
        measurementDetails:
          type: array
          items:
            $ref: '#/components/schemas/MeasurementDetailsDTO'
          nullable: true
        contractDetails:
          allOf:
            - $ref: '#/components/schemas/ContractDetailsDTO'
          nullable: true
        moveRequestType:
          allOf:
            - $ref: '#/components/schemas/MoveRequestType'
          nullable: true
        status:
          allOf:
            - $ref: '#/components/schemas/MoveRequestStatus'
          nullable: true
        mutationDateTime:
          type: string
          format: date-time
        customMessage:
          type: string
          nullable: true
        attachmentSignatures:
          type: array
          items:
            $ref: '#/components/schemas/AttachmentSignature'
          nullable: true
        hasAnyErrors:
          type: boolean
      additionalProperties: false
    MoveRequestDTOApiResponseDTO:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/LocalisedErrorDTO'
          nullable: true
        success:
          type: boolean
        applicableEntitiesCount:
          type: integer
          format: int32
        requestedEntitiesCount:
          type: integer
          format: int32
        succeededEntitiesCount:
          type: integer
          format: int32
          readOnly: true
        isSynchronous:
          type: boolean
        data:
          allOf:
            - $ref: '#/components/schemas/MoveRequestDTO'
          description: The updated entity in case of modifications or creation
          nullable: true
      additionalProperties: false
    MoveRequestDTOPagedResponseModelDTO:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/MoveRequestDTO'
          nullable: true
        hasNextPage:
          type: boolean
        nextPageToken:
          type: string
          nullable: true
        totalRecords:
          type: integer
          format: int32
        sortableFields:
          type: array
          items:
            type: string
          nullable: true
        aggregateDetails:
          type: array
          items:
            $ref: '#/components/schemas/AggregateDetailsDTO'
          nullable: true
      additionalProperties: false
    MoveRequestDTOPagedResponseModelDTOApiResponseDTO:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/LocalisedErrorDTO'
          nullable: true
        success:
          type: boolean
        applicableEntitiesCount:
          type: integer
          format: int32
        requestedEntitiesCount:
          type: integer
          format: int32
        succeededEntitiesCount:
          type: integer
          format: int32
          readOnly: true
        isSynchronous:
          type: boolean
        data:
          allOf:
            - $ref: '#/components/schemas/MoveRequestDTOPagedResponseModelDTO'
          description: The updated entity in case of modifications or creation
          nullable: true
      additionalProperties: false
    MoveRequestMeasurementDetails:
      type: object
      properties:
        internalMeterId:
          type: string
          nullable: true
        externalChannelIdentifier:
          type: string
          nullable: true
        meterSerialNumber:
          type: string
          nullable: true
        utilityType:
          allOf:
            - $ref: '#/components/schemas/UtilityType'
          nullable: true
        unitOfMeasure:
          allOf:
            - $ref: '#/components/schemas/UnitOfMeasure'
          nullable: true
        timeOfUse:
          type: string
          nullable: true
        value:
          type: number
          format: double
      additionalProperties: false
    MoveRequestOverviewCountDTO:
      type: object
      properties:
        all:
          type: integer
          format: int32
        new:
          type: integer
          format: int32
        pending:
          type: integer
          format: int32
        processed:
          type: integer
          format: int32
        rejected:
          type: integer
          format: int32
        toBeProcessed:
          type: integer
          format: int32
      additionalProperties: false
    MoveRequestOverviewCountDTOApiResponseDTO:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/LocalisedErrorDTO'
          nullable: true
        success:
          type: boolean
        applicableEntitiesCount:
          type: integer
          format: int32
        requestedEntitiesCount:
          type: integer
          format: int32
        succeededEntitiesCount:
          type: integer
          format: int32
          readOnly: true
        isSynchronous:
          type: boolean
        data:
          allOf:
            - $ref: '#/components/schemas/MoveRequestOverviewCountDTO'
          description: The updated entity in case of modifications or creation
          nullable: true
      additionalProperties: false
    MoveRequestQuickFilter:
      enum:
        - all
        - tobeprocessed
        - processed
        - rejected
      type: string
    MoveRequestScenarioType:
      enum:
        - acknowledgemovein
        - rejectmovein
        - acknowledgemoveout
        - rejectmoveout
      type: string
    MoveRequestServiceLocationDetails:
      type: object
      properties:
        address:
          allOf:
            - $ref: '#/components/schemas/AddressDTO'
          nullable: true
        services:
          type: array
          items:
            $ref: '#/components/schemas/MoveRequestServiceLocationServiceDetailsRequest'
          nullable: true
        internalId:
          type: string
          nullable: true
      additionalProperties: false
    MoveRequestServiceLocationServiceDetailsRequest:
      type: object
      properties:
        externalIdentifier:
          type: string
          nullable: true
        utilityType:
          allOf:
            - $ref: '#/components/schemas/UtilityType'
          nullable: true
      additionalProperties: false
    MoveRequestStatus:
      enum:
        - new
        - pendingatcustomer
        - pendingatsupplier
        - processed
        - rejected
        - gatheringdata
      type: string
    MoveRequestType:
      enum:
        - movein
        - moveout
      type: string
    MutingRuleQuickFilter:
      enum:
        - all
        - expired
        - active
      type: string
    MutingRuleTimePeriod:
      enum:
        - day
        - week
        - month
      type: string
    NullQuickFilter:
      enum:
        - default
      type: string
    NumberFormatInfo:
      type: object
      properties:
        currencyDecimalDigits:
          type: integer
          format: int32
        currencyDecimalSeparator:
          type: string
          nullable: true
        isReadOnly:
          type: boolean
          readOnly: true
        currencyGroupSizes:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
        numberGroupSizes:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
        percentGroupSizes:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
        currencyGroupSeparator:
          type: string
          nullable: true
        currencySymbol:
          type: string
          nullable: true
        naNSymbol:
          type: string
          nullable: true
        currencyNegativePattern:
          type: integer
          format: int32
        numberNegativePattern:
          type: integer
          format: int32
        percentPositivePattern:
          type: integer
          format: int32
        percentNegativePattern:
          type: integer
          format: int32
        negativeInfinitySymbol:
          type: string
          nullable: true
        negativeSign:
          type: string
          nullable: true
        numberDecimalDigits:
          type: integer
          format: int32
        numberDecimalSeparator:
          type: string
          nullable: true
        numberGroupSeparator:
          type: string
          nullable: true
        currencyPositivePattern:
          type: integer
          format: int32
        positiveInfinitySymbol:
          type: string
          nullable: true
        positiveSign:
          type: string
          nullable: true
        percentDecimalDigits:
          type: integer
          format: int32
        percentDecimalSeparator:
          type: string
          nullable: true
        percentGroupSeparator:
          type: string
          nullable: true
        percentSymbol:
          type: string
          nullable: true
        perMilleSymbol:
          type: string
          nullable: true
        nativeDigits:
          type: array
          items:
            type: string
          nullable: true
        digitSubstitution:
          allOf:
            - $ref: '#/components/schemas/DigitShapes'
      additionalProperties: false
    NumberOfAddresses:
      enum:
        - one
        - multiple
      type: string
    NumberSequenceReferenceEntity:
      enum:
        - customer
        - contract
        - invoice
        - mandate
        - exportjob
        - collectioncase
        - bankingtransaction
      type: string
    NumberSequenceSegmentType:
      enum:
        - constant
        - year
        - invoicetype
        - date
      type: string
    NumberSign:
      enum:
        - negative
        - positive
      type: string
    OutgoingBankingTransactionQuickFilter:
      enum:
        - all
        - readytosend
        - toconfirm
        - closed
        - dateexpired
        - resolveissues
        - open
      type: string
    OutgoingBankingTransactionStatus:
      enum:
        - created
        - closed
        - toconfirmbybank
        - cancelled
        - readytosend
        - resolveissues
        - dateexpired
        - partiallyclosed
      type: string
    OutgoingBankingTransactionType:
      enum:
        - paymentrequests
        - paymentrefunds
      type: string
    OutgoingMutationQuickFilter:
      enum:
        - all
        - invoices
        - manualentries
        - resolveissues
      type: string
    OutgoingMutationStatus:
      enum:
        - created
        - readytosend
        - resolveissues
        - toconfirmbybank
        - closed
        - reversed
        - failedtoclose
        - failedtoreverse
        - cancelled
      type: string
    OutgoingMutationType:
      enum:
        - invoice
        - customer
      type: string
    PaymentDelay:
      enum:
        - delayuntilfixeddayofmonth
        - delaynumberofdays
      type: string
    PaymentMethod:
      enum:
        - sct
        - sdd
      type: string
    PaymentProcessStatus:
      enum:
        - readyforpaymentcollection
        - pendingpaymentexport
        - pendingpaymentcollectionconfirmation
        - paid
        - paymentrejected
        - waitingforpayment
      type: string
    PaymentQuickFilter:
      enum:
        - all
        - reversed
      type: string
    PaymentRetryAction:
      enum:
        - retryonfixedday
        - daysafterreversal
      type: string
    PaymentReversalReason:
      enum:
        - manualreverse
        - unpaiddirectdebit
        - reversalsepadirectdebit
        - rejectdomesticdirectdebit
        - unknownbankaccount
        - terminatedbankaccount
        - blockedbankaccount
        - unsupportedbankaccount
        - invalidsequencetype
        - insufficientfunds
        - invalidmandate
        - debtordeceased
        - refusalbydebtor
        - refusalotherreason
        - maximumamountperiodreached
      type: string
    PaymentReversalReasonCode:
      enum:
        - ac01
        - ac04
        - ac06
        - ag02
        - am04
        - md01
        - md06
        - md07
        - ms02
        - ms03
        - sl01
        - ag01
        - am02
      type: string
    PaymentTermsFrequency:
      enum:
        - day
        - week
        - month
      type: string
    PaymentType:
      enum:
        - incomingtransfer
        - outgoingtransfer
        - directdebit
      type: string
    PingenCulture:
      enum:
        - en
        - de
        - nl
        - fr
      type: string
    PluginFeedActivityType:
      enum:
        - movein
        - moveout
        - emailconfirmed
        - advanceamountchanged
        - attachmentviewed
        - attachmentsigned
        - invoicegenerated
      type: string
    PluginFeedStatus:
      enum:
        - new
        - pendingatcustomer
        - pendingatsupplier
        - processed
        - rejected
        - deleted
      type: string
    PluginFeedTopic:
      enum:
        - movein
        - moveout
        - communication
        - useraction
        - invoice
      type: string
    PluginTriggerDataType:
      enum:
        - cultureupdated
        - productcreated
        - productupdated
        - featureflagsupdated
        - customercreated
        - customerdetailschanged
        - servicelocationcreated
        - servicelocationupdated
        - servicelocationdeleted
        - contractremoved
        - contractsigned
        - contractservicesupdated
        - contractterminated
        - mailsent
        - generatepaymentlink
        - advanceamountupdated
        - invoiceavailable
        - invoicepaymentdetailschanged
        - meterinstalled
        - meterreconfigured
        - meteruninstalled
        - invoiceassignedtocollectioncase
        - collectioncaseclosed
        - documentprinted
        - documentprintingfailed
        - contractupdated
        - entityattachmentgroupcreated
        - entityattachmentgroupupdated
        - entityattachmentgroupdeleted
        - externaldocumentdeliveryfailed
        - invoiceregenerated
        - invoiceexportrequested
        - transactioncreated
        - measurementsstored
        - consumptionprocessed
        - consumptiondeleted
        - documentapprovedforprinting
        - productentityattachmentsforcustomerchanged
        - entityattachmentcreated
        - entityattachmentupdated
        - entityattachmentdeleted
      type: string
    PluginTriggerPriority:
      enum:
        - a
        - b
        - c
        - d
        - e
      type: string
    PluginType:
      enum:
        - enduserportal
        - httprequestwithpreviousresponse
        - brunatawms
        - zendeskcrm
        - freshdeskcrm
        - fortesmetering
        - pingendocumentprinting
        - zerofrictiondemometering
        - twikey
        - paytbillingplugin
        - sendgridemailsending
        - tkbtrustit
        - fortesmeteringv3
        - bergerlevrault
        - webhooksubscription
        - accounting
      type: string
    PortalEmailType:
      enum:
        - confirmemail
        - resetpassword
      type: string
    PortalNotificationType:
      enum:
        - neutral
        - warning
        - important
      type: string
    PortalPageIdentifier:
      enum:
        - startpage
        - login
        - register
        - movein
        - moveout
        - consumptions
        - invoices
        - mydetails
        - overview
        - forgotpassword
      type: string
    PostalCodeDTO:
      type: object
      properties:
        postalCode:
          type: string
          nullable: true
        city:
          type: string
          nullable: true
      additionalProperties: false
    PostalCodeDTOPagedResponseModelDTO:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/PostalCodeDTO'
          nullable: true
        hasNextPage:
          type: boolean
        nextPageToken:
          type: string
          nullable: true
        totalRecords:
          type: integer
          format: int32
        sortableFields:
          type: array
          items:
            type: string
          nullable: true
        aggregateDetails:
          type: array
          items:
            $ref: '#/components/schemas/AggregateDetailsDTO'
          nullable: true
      additionalProperties: false
    PostalCodeDTOPagedResponseModelDTOApiResponseDTO:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/LocalisedErrorDTO'
          nullable: true
        success:
          type: boolean
        applicableEntitiesCount:
          type: integer
          format: int32
        requestedEntitiesCount:
          type: integer
          format: int32
        succeededEntitiesCount:
          type: integer
          format: int32
          readOnly: true
        isSynchronous:
          type: boolean
        data:
          allOf:
            - $ref: '#/components/schemas/PostalCodeDTOPagedResponseModelDTO'
          description: The updated entity in case of modifications or creation
          nullable: true
      additionalProperties: false
    PrepaymentAccountDTO:
      type: object
      properties:
        id:
          type: string
          description: Gets or sets the unique identifier.
          nullable: true
        entityType:
          allOf:
            - $ref: '#/components/schemas/EntitySubjectType'
          description: Gets or sets the type of the entity.
          nullable: true
        createdDateTime:
          type: string
          description: Gets or sets the date and time when the entity was created.
          format: date-time
        discriminator:
          type: string
          description: Gets or sets the discriminator value.
          nullable: true
        _etag:
          type: string
          description: Gets or sets the ETag value.
          nullable: true
        requireAttention:
          type: boolean
          description: Gets a value indicating whether the entity requires attention.
          readOnly: true
        hasErrors:
          type: boolean
          description: Gets or sets a value indicating whether the entity has errors.
        hasWarnings:
          type: boolean
          description: Gets or sets a value indicating whether the entity has warnings.
        isReadOnly:
          type: boolean
          description: Gets or sets a value indicating whether the entity is read-only.
        organisationId:
          type: string
          description: Gets or sets the organization identifier.
          nullable: true
        status:
          allOf:
            - $ref: '#/components/schemas/PrepaymentAccountStatus'
          nullable: true
        meter:
          allOf:
            - $ref: '#/components/schemas/MeterReference'
          nullable: true
        shareBalanceAcrossUtilities:
          type: boolean
        channelIdentifier:
          type: string
          nullable: true
        customerId:
          type: string
          nullable: true
        contractId:
          type: string
          nullable: true
        serviceLocationId:
          type: string
          nullable: true
        externalReference:
          type: string
          nullable: true
        utilityType:
          allOf:
            - $ref: '#/components/schemas/UtilityType'
          nullable: true
        startDateTime:
          type: string
          format: date-time
        endDateTime:
          type: string
          format: date-time
        balance:
          type: number
          format: double
        debt:
          type: number
          format: double
        emergencyCredit:
          type: number
          format: double
        balanceUntil:
          type: string
          format: date-time
          nullable: true
        lastTimeReceivedPrepaymentTransactions:
          type: string
          format: date-time
          nullable: true
        prepaymentTransactionsUntil:
          type: string
          format: date-time
          nullable: true
      additionalProperties: false
    PrepaymentAccountDTOApiResponseDTO:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/LocalisedErrorDTO'
          nullable: true
        success:
          type: boolean
        applicableEntitiesCount:
          type: integer
          format: int32
        requestedEntitiesCount:
          type: integer
          format: int32
        succeededEntitiesCount:
          type: integer
          format: int32
          readOnly: true
        isSynchronous:
          type: boolean
        data:
          allOf:
            - $ref: '#/components/schemas/PrepaymentAccountDTO'
          description: The updated entity in case of modifications or creation
          nullable: true
      additionalProperties: false
    PrepaymentAccountDTOListApiResponseDTO:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/LocalisedErrorDTO'
          nullable: true
        success:
          type: boolean
        applicableEntitiesCount:
          type: integer
          format: int32
        requestedEntitiesCount:
          type: integer
          format: int32
        succeededEntitiesCount:
          type: integer
          format: int32
          readOnly: true
        isSynchronous:
          type: boolean
        data:
          type: array
          items:
            $ref: '#/components/schemas/PrepaymentAccountDTO'
          description: The updated entity in case of modifications or creation
          nullable: true
      additionalProperties: false
    PrepaymentAccountDTOPagedResponseModelDTO:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/PrepaymentAccountDTO'
          nullable: true
        hasNextPage:
          type: boolean
        nextPageToken:
          type: string
          nullable: true
        totalRecords:
          type: integer
          format: int32
        sortableFields:
          type: array
          items:
            type: string
          nullable: true
        aggregateDetails:
          type: array
          items:
            $ref: '#/components/schemas/AggregateDetailsDTO'
          nullable: true
      additionalProperties: false
    PrepaymentAccountDTOPagedResponseModelDTOApiResponseDTO:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/LocalisedErrorDTO'
          nullable: true
        success:
          type: boolean
        applicableEntitiesCount:
          type: integer
          format: int32
        requestedEntitiesCount:
          type: integer
          format: int32
        succeededEntitiesCount:
          type: integer
          format: int32
          readOnly: true
        isSynchronous:
          type: boolean
        data:
          allOf:
            - $ref: '#/components/schemas/PrepaymentAccountDTOPagedResponseModelDTO'
          description: The updated entity in case of modifications or creation
          nullable: true
      additionalProperties: false
    PrepaymentAccountStatus:
      enum:
        - draft
        - signed
      type: string
    PrepaymentMeterInstalledDTO:
      type: object
      properties:
        meter:
          allOf:
            - $ref: '#/components/schemas/MeterDTO'
          nullable: true
        utilityTypesOnStartDate:
          type: array
          items:
            $ref: '#/components/schemas/UtilityType'
          nullable: true
      additionalProperties: false
    PrepaymentMetersInstalledOnServiceLocationDTO:
      type: object
      properties:
        serviceLocationId:
          type: string
          nullable: true
        meters:
          type: array
          items:
            $ref: '#/components/schemas/PrepaymentMeterInstalledDTO'
          nullable: true
        hasPpmMeterCoverage:
          type: boolean
      additionalProperties: false
    PrepaymentMetersInstalledOnServiceLocationDTOListApiResponseDTO:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/LocalisedErrorDTO'
          nullable: true
        success:
          type: boolean
        applicableEntitiesCount:
          type: integer
          format: int32
        requestedEntitiesCount:
          type: integer
          format: int32
        succeededEntitiesCount:
          type: integer
          format: int32
          readOnly: true
        isSynchronous:
          type: boolean
        data:
          type: array
          items:
            $ref: '#/components/schemas/PrepaymentMetersInstalledOnServiceLocationDTO'
          description: The updated entity in case of modifications or creation
          nullable: true
      additionalProperties: false
    PrepaymentTransactionOrigin:
      enum:
        - paypoint
        - wiretransfer
        - stripe
      type: string
    PrepaymentTransactionStatus:
      enum:
        - pending
        - successful
        - failed
        - cancelled
      type: string
    PrepaymentTransactionType:
      enum:
        - creditreset
        - creditincrementaladjustment
        - credittopup
        - debitreset
        - debitincrementaladjustment
      type: string
    ProblemDetails:
      type: object
      properties:
        type:
          type: string
          nullable: true
        title:
          type: string
          nullable: true
        status:
          type: integer
          format: int32
          nullable: true
        detail:
          type: string
          nullable: true
        instance:
          type: string
          nullable: true
      additionalProperties: { }
    ProblemLevel:
      enum:
        - error
        - warning
      type: string
    ProblemResolutionStatus:
      enum:
        - unresolved
        - manualresolution
        - automaticresolution
      type: string
    ProductExportStatus:
      enum:
        - new
        - current
      type: string
    ProductItemPeriodicityType:
      enum:
        - regular
        - onmovein
        - onmoveout
        - fixedamount
        - fixedduration
      type: string
    ProductPeriodReferenceDTO:
      type: object
      properties:
        productId:
          type: string
          nullable: true
        productName:
          type: string
          nullable: true
        startDateTime:
          type: string
          format: date-time
        endDateTime:
          type: string
          format: date-time
      additionalProperties: false
    ProductReferenceDTO:
      type: object
      properties:
        id:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
          readOnly: true
        productId:
          type: string
          nullable: true
          readOnly: true
        productName:
          type: string
          nullable: true
      additionalProperties: false
    PropertyGroupBillingPeriodTariffStatus:
      enum:
        - nocalculatedtariffsrequired
        - calculatedtariffsmissing
        - calculatedtariffsavailable
      type: string
    PropertyGroupContactDetailsDTO:
      type: object
      properties:
        emailAddress:
          type: string
          nullable: true
        telephone:
          type: string
          nullable: true
        website:
          type: string
          nullable: true
        telephoneInterruptions:
          type: string
          nullable: true
      additionalProperties: false
    PropertyGroupContactDetailsRequest:
      type: object
      properties:
        emailAddress:
          type: string
          nullable: true
        telephone:
          type: string
          nullable: true
        website:
          type: string
          nullable: true
        telephoneInterruptions:
          type: string
          nullable: true
      additionalProperties: false
    PropertyGroupDTO:
      type: object
      properties:
        id:
          type: string
          description: Gets or sets the unique identifier.
          nullable: true
        entityType:
          allOf:
            - $ref: '#/components/schemas/EntitySubjectType'
          description: Gets or sets the type of the entity.
          nullable: true
        createdDateTime:
          type: string
          description: Gets or sets the date and time when the entity was created.
          format: date-time
        discriminator:
          type: string
          description: Gets or sets the discriminator value.
          nullable: true
        _etag:
          type: string
          description: Gets or sets the ETag value.
          nullable: true
        requireAttention:
          type: boolean
          description: Gets a value indicating whether the entity requires attention.
          readOnly: true
        hasErrors:
          type: boolean
          description: Gets or sets a value indicating whether the entity has errors.
        hasWarnings:
          type: boolean
          description: Gets or sets a value indicating whether the entity has warnings.
        isReadOnly:
          type: boolean
          description: Gets or sets a value indicating whether the entity is read-only.
        organisationId:
          type: string
          description: Gets or sets the organization identifier.
          nullable: true
        name:
          type: string
          nullable: true
        address:
          allOf:
            - $ref: '#/components/schemas/AddressDTO'
          nullable: true
        defaultManagementRelations:
          type: array
          items:
            $ref: '#/components/schemas/ManagementRelationDTO'
          nullable: true
        serviceLocationIds:
          type: array
          items:
            type: string
          nullable: true
        type:
          allOf:
            - $ref: '#/components/schemas/PropertyGroupType'
          nullable: true
        costAllocationEnabled:
          type: boolean
        communicationConfiguration:
          allOf:
            - $ref: '#/components/schemas/CommunicationConfigurationDTO'
          nullable: true
        customProperties:
          type: array
          items:
            $ref: '#/components/schemas/CustomEntityPropertyDTO'
          nullable: true
        deleted:
          type: boolean
      additionalProperties: false
    PropertyGroupDTOApiResponseDTO:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/LocalisedErrorDTO'
          nullable: true
        success:
          type: boolean
        applicableEntitiesCount:
          type: integer
          format: int32
        requestedEntitiesCount:
          type: integer
          format: int32
        succeededEntitiesCount:
          type: integer
          format: int32
          readOnly: true
        isSynchronous:
          type: boolean
        data:
          allOf:
            - $ref: '#/components/schemas/PropertyGroupDTO'
          description: The updated entity in case of modifications or creation
          nullable: true
      additionalProperties: false
    PropertyGroupDTOPagedResponseModelDTO:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/PropertyGroupDTO'
          nullable: true
        hasNextPage:
          type: boolean
        nextPageToken:
          type: string
          nullable: true
        totalRecords:
          type: integer
          format: int32
        sortableFields:
          type: array
          items:
            type: string
          nullable: true
        aggregateDetails:
          type: array
          items:
            $ref: '#/components/schemas/AggregateDetailsDTO'
          nullable: true
      additionalProperties: false
    PropertyGroupDTOPagedResponseModelDTOApiResponseDTO:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/LocalisedErrorDTO'
          nullable: true
        success:
          type: boolean
        applicableEntitiesCount:
          type: integer
          format: int32
        requestedEntitiesCount:
          type: integer
          format: int32
        succeededEntitiesCount:
          type: integer
          format: int32
          readOnly: true
        isSynchronous:
          type: boolean
        data:
          allOf:
            - $ref: '#/components/schemas/PropertyGroupDTOPagedResponseModelDTO'
          description: The updated entity in case of modifications or creation
          nullable: true
      additionalProperties: false
    PropertyGroupOverviewCountDTO:
      type: object
      properties:
        all:
          type: integer
          format: int32
      additionalProperties: false
    PropertyGroupOverviewCountDTOApiResponseDTO:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/LocalisedErrorDTO'
          nullable: true
        success:
          type: boolean
        applicableEntitiesCount:
          type: integer
          format: int32
        requestedEntitiesCount:
          type: integer
          format: int32
        succeededEntitiesCount:
          type: integer
          format: int32
          readOnly: true
        isSynchronous:
          type: boolean
        data:
          allOf:
            - $ref: '#/components/schemas/PropertyGroupOverviewCountDTO'
          description: The updated entity in case of modifications or creation
          nullable: true
      additionalProperties: false
    PropertyGroupQuickFilter:
      enum:
        - all
        - requireattention
      type: string
    PropertyGroupReferenceDTO:
      type: object
      properties:
        id:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
      additionalProperties: false
    PropertyGroupServiceLocationsRequest:
      type: object
      properties:
        serviceLocations:
          type: array
          items:
            type: string
          description: Ids of the service locations that need to be added to or removed from the location group
          nullable: true
        referenceDate:
          type: string
          description: "Reference date for keeping invoices and transactions at the current location group\r\nOnly applicable when adding a location to the current location group that is already in another location group"
          format: date
      additionalProperties: false
    PropertyGroupType:
      enum:
        - building
        - project
      type: string
    PropertyType:
      enum:
        - value
        - array
        - object
        - xmlattribute
      type: string
    RemoveContractRequest:
      type: object
      additionalProperties: false
    RemoveContractedServicesRequest:
      type: object
      properties:
        supplyEndDate:
          type: string
          format: date-time
        services:
          type: array
          items:
            $ref: '#/components/schemas/ChangeContractServiceLocationRequest'
          nullable: true
      additionalProperties: false
    ScenarioGroupingType:
      enum:
        - invoice
        - collectioncase
        - contract
        - moverequest
        - personalinformation
      type: string
    ScheduledJobRecurrence:
      enum:
        - none
        - pt5m
        - pt1h
        - pt1d
      type: string
    ScheduledJobType:
      enum:
        - billingadvancerun
        - meterdataimport
      type: string
    SearchCustomerRequest:
      type: object
      properties:
        name:
          type: string
          nullable: true
      additionalProperties: false
    SentStatus:
      enum:
        - notsent
        - sending
        - printing
        - skipped
        - sent
        - failed
      type: string
    ServiceContractDTO:
      type: object
      properties:
        contractId:
          type: string
          nullable: true
        contractNumber:
          type: string
          nullable: true
        contractorId:
          type: string
          nullable: true
        contractorAcountNumber:
          type: string
          nullable: true
        contractorDisplayName:
          type: string
          nullable: true
        supplyStartDateTime:
          type: string
          format: date-time
        supplyEndDateTime:
          type: string
          format: date-time
        currentContractStatus:
          allOf:
            - $ref: '#/components/schemas/ContractStatus'
          nullable: true
      additionalProperties: false
    ServiceDTO:
      type: object
      properties:
        externalIdentifier:
          type: string
          nullable: true
        utilityType:
          allOf:
            - $ref: '#/components/schemas/UtilityType'
          nullable: true
        statusHistory:
          type: array
          items:
            $ref: '#/components/schemas/ServiceStatusHistoryDTO'
          nullable: true
        contracts:
          type: array
          items:
            $ref: '#/components/schemas/ServiceContractDTO'
          nullable: true
      additionalProperties: false
    ServiceLocationDTO:
      type: object
      properties:
        id:
          type: string
          description: Gets or sets the unique identifier.
          nullable: true
        entityType:
          allOf:
            - $ref: '#/components/schemas/EntitySubjectType'
          description: Gets or sets the type of the entity.
          nullable: true
        createdDateTime:
          type: string
          description: Gets or sets the date and time when the entity was created.
          format: date-time
        discriminator:
          type: string
          description: Gets or sets the discriminator value.
          nullable: true
        _etag:
          type: string
          description: Gets or sets the ETag value.
          nullable: true
        requireAttention:
          type: boolean
          description: Gets a value indicating whether the entity requires attention.
          readOnly: true
        hasErrors:
          type: boolean
          description: Gets or sets a value indicating whether the entity has errors.
        hasWarnings:
          type: boolean
          description: Gets or sets a value indicating whether the entity has warnings.
        isReadOnly:
          type: boolean
          description: Gets or sets a value indicating whether the entity is read-only.
        organisationId:
          type: string
          description: Gets or sets the organization identifier.
          nullable: true
        address:
          allOf:
            - $ref: '#/components/schemas/AddressDTO'
          nullable: true
        displayAddress:
          type: string
          nullable: true
        propertyGroup:
          allOf:
            - $ref: '#/components/schemas/PropertyGroupReferenceDTO'
          nullable: true
        product:
          allOf:
            - $ref: '#/components/schemas/ProductReferenceDTO'
          nullable: true
        managementRelations:
          type: array
          items:
            $ref: '#/components/schemas/ManagementRelationDTO2'
          nullable: true
        services:
          type: array
          items:
            $ref: '#/components/schemas/ServiceDTO'
          nullable: true
        hasMeters:
          type: boolean
        externalId:
          type: string
          nullable: true
        timeZone:
          type: string
          nullable: true
        customProperties:
          type: array
          items:
            $ref: '#/components/schemas/CustomEntityPropertyDTO'
          nullable: true
        currentStatus:
          allOf:
            - $ref: '#/components/schemas/ServiceStatus'
          nullable: true
          readOnly: true
      additionalProperties: false
    ServiceLocationDTOApiResponseDTO:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/LocalisedErrorDTO'
          nullable: true
        success:
          type: boolean
        applicableEntitiesCount:
          type: integer
          format: int32
        requestedEntitiesCount:
          type: integer
          format: int32
        succeededEntitiesCount:
          type: integer
          format: int32
          readOnly: true
        isSynchronous:
          type: boolean
        data:
          allOf:
            - $ref: '#/components/schemas/ServiceLocationDTO'
          description: The updated entity in case of modifications or creation
          nullable: true
      additionalProperties: false
    ServiceLocationDTOPagedResponseModelDTO:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/ServiceLocationDTO'
          nullable: true
        hasNextPage:
          type: boolean
        nextPageToken:
          type: string
          nullable: true
        totalRecords:
          type: integer
          format: int32
        sortableFields:
          type: array
          items:
            type: string
          nullable: true
        aggregateDetails:
          type: array
          items:
            $ref: '#/components/schemas/AggregateDetailsDTO'
          nullable: true
      additionalProperties: false
    ServiceLocationDTOPagedResponseModelDTOApiResponseDTO:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/LocalisedErrorDTO'
          nullable: true
        success:
          type: boolean
        applicableEntitiesCount:
          type: integer
          format: int32
        requestedEntitiesCount:
          type: integer
          format: int32
        succeededEntitiesCount:
          type: integer
          format: int32
          readOnly: true
        isSynchronous:
          type: boolean
        data:
          allOf:
            - $ref: '#/components/schemas/ServiceLocationDTOPagedResponseModelDTO'
          description: The updated entity in case of modifications or creation
          nullable: true
      additionalProperties: false
    ServiceLocationDetailsDTO:
      type: object
      properties:
        previousContractDetails:
          allOf:
            - $ref: '#/components/schemas/MoveRequestContractDetailsDTO'
          nullable: true
        currentContractDetails:
          allOf:
            - $ref: '#/components/schemas/MoveRequestContractDetailsDTO'
          nullable: true
        owner:
          allOf:
            - $ref: '#/components/schemas/ManagementRelationDTO'
          nullable: true
        address:
          allOf:
            - $ref: '#/components/schemas/AddressDTO'
          nullable: true
        services:
          type: array
          items:
            $ref: '#/components/schemas/ServiceLocationServiceDetailsDTO'
          nullable: true
        linked:
          type: boolean
        internalId:
          type: string
          nullable: true
        errors:
          type: array
          items:
            $ref: '#/components/schemas/LocalisedErrorDTO'
          nullable: true
      additionalProperties: false
    ServiceLocationOverviewCountDTO:
      type: object
      properties:
        all:
          type: integer
          format: int32
        supplied:
          type: integer
          format: int32
        unsupplied:
          type: integer
          format: int32
      additionalProperties: false
    ServiceLocationOverviewCountDTOApiResponseDTO:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/LocalisedErrorDTO'
          nullable: true
        success:
          type: boolean
        applicableEntitiesCount:
          type: integer
          format: int32
        requestedEntitiesCount:
          type: integer
          format: int32
        succeededEntitiesCount:
          type: integer
          format: int32
          readOnly: true
        isSynchronous:
          type: boolean
        data:
          allOf:
            - $ref: '#/components/schemas/ServiceLocationOverviewCountDTO'
          description: The updated entity in case of modifications or creation
          nullable: true
      additionalProperties: false
    ServiceLocationQuickFilter:
      enum:
        - all
        - supplied
        - unsupplied
        - requireattention
      type: string
    ServiceLocationServiceDetailsDTO:
      type: object
      properties:
        externalIdentifier:
          type: string
          nullable: true
        utilityType:
          allOf:
            - $ref: '#/components/schemas/UtilityType'
          nullable: true
      additionalProperties: false
    ServiceStatus:
      enum:
        - supplied
        - unsupplied
        - requested
        - removed
      type: string
    ServiceStatusHistoryDTO:
      type: object
      properties:
        startDateTime:
          type: string
          format: date-time
        endDateTime:
          type: string
          format: date-time
        serviceStatus:
          allOf:
            - $ref: '#/components/schemas/ServiceStatus'
          nullable: true
      additionalProperties: false
    SetMoveRequestToPendingRequest:
      type: object
      properties:
        newStatus:
          allOf:
            - $ref: '#/components/schemas/MoveRequestStatus'
          nullable: true
      additionalProperties: false
    SignContractRequest:
      type: object
      properties:
        mutationDateTime:
          type: string
          format: date-time
        keepExistingInvoiceOnEndDate:
          type: boolean
          description: "When this flag is set, if an invoice exists with the end date equal to the move-out date,\r\nno credit note shall be created."
      additionalProperties: false
    SocialTariffExportType:
      enum:
        - customerportfolio
        - claimsprotectedcustomers
      type: string
    SortVersion:
      type: object
      properties:
        fullVersion:
          type: integer
          format: int32
        sortId:
          type: string
          format: uuid
      additionalProperties: false
    SshAuthenticationMethod:
      enum:
        - password
        - privatekey
      type: string
    StatusCode:
      enum:
        - active
        - inactive
        - failed
      type: string
    SyntheticLoadProfileOrigin:
      enum:
        - manual
        - systemgenerated
      type: string
    SystemUsageRecordType:
      enum:
        - servicelocationsactivewithoutservicesonly
        - servicelocationsactivewithservicesonly
        - servicelocationsinactivewithoutservicesonly
        - servicelocationsinactivewithservicesonly
        - servicelocationswithmorethanallowedmeters
        - metersreceivingmeteringwithoutlinkedaddress
        - measurementscreated
        - invoicescreated
        - documentssentviapostal
        - documentssentviaemail
        - contracthistoricalmoveins
        - contractmoveins
        - contracthistoricalmoveouts
        - contractmoveouts
        - users
        - activeintegration
        - servicelocationsactive
        - servicelocationsinactive
        - databasesize
        - filesize
        - smssent
      type: string
    TariffOrigin:
      enum:
        - product
        - billingitem
      type: string
    TemplateAssetType:
      enum:
        - css
        - headertemplate
        - footertemplate
        - image
        - constant
      type: string
    TemplateObjectType:
      enum:
        - invoice
        - collectioncase
        - moverequest
        - contract
        - billingrelation
        - invoiceubl
        - portalcustomer
        - annualstatement
      type: string
    TemplateUsecase:
      enum:
        - pdf
        - email
      type: string
    TerminateContractRequest:
      type: object
      properties:
        mutationDateTime:
          type: string
          format: date-time
        keepExistingInvoiceOnEndDate:
          type: boolean
          description: "When this flag is set, if an invoice exists with the end date equal to the move-out date,\r\nno credit note shall be created."
      additionalProperties: false
    TextInfo:
      type: object
      properties:
        ansiCodePage:
          type: integer
          format: int32
          readOnly: true
        oemCodePage:
          type: integer
          format: int32
          readOnly: true
        macCodePage:
          type: integer
          format: int32
          readOnly: true
        ebcdicCodePage:
          type: integer
          format: int32
          readOnly: true
        lcid:
          type: integer
          format: int32
          readOnly: true
        cultureName:
          type: string
          nullable: true
          readOnly: true
        isReadOnly:
          type: boolean
          readOnly: true
        listSeparator:
          type: string
          nullable: true
        isRightToLeft:
          type: boolean
          readOnly: true
      additionalProperties: false
    TierCalculationMethod:
      enum:
        - invoiceperiod
        - tariffperiod
      type: string
    TransactionQuickFilter:
      enum:
        - all
        - topay
        - torefund
        - onlyopen
        - onlyclosed
      type: string
    TransactionReferenceType:
      enum:
        - payment
        - invoice
        - collectionstep
      type: string
    TransactionStatus:
      enum:
        - notsettled
        - partiallysettled
        - settled
        - reversed
      type: string
    TransactionSubType:
      enum:
        - adjustbalance
        - incomingpayment
        - outgoingpayment
      type: string
    TransactionType:
      enum:
        - invoice
        - payment
        - reversal
        - collectionfee
        - writeoff
      type: string
    TranslationStatus:
      enum:
        - defaulttranslation
        - missingtranslation
        - translated
      type: string
    UblTranslations:
      enum:
        - invoices
        - vatnumber
        - invoice
        - vatnumberorganisationnumber
      type: string
    UnblockContractRequest:
      type: object
      additionalProperties: false
    UninstallMeterRequest:
      type: object
      properties:
        removeDate:
          type: string
          format: date-time
      additionalProperties: false
    UnitOfMeasure:
      enum:
        - none
        - wh
        - kwh
        - mwh
        - gwh
        - j
        - kj
        - mj
        - gj
        - day
        - month
        - year
        - litre
        - m3
        - units
        - m3_h
        - celcius
        - k
        - kw
      type: string
    UpdateContractBillingDetailsRequest:
      type: object
      properties:
        paymentTermsId:
          type: string
          nullable: true
      additionalProperties: false
    UpdateContractProductParameter:
      enum:
        - fromcontractstartdate
        - fromfirstopenperiod
        - fromsupplieddate
        - fromdatebasedonspecificperiod
      type: string
    UpdateContractProductRequest:
      type: object
      properties:
        startDate:
          type: string
          format: date-time
        productId:
          type: string
          nullable: true
        parameter:
          allOf:
            - $ref: '#/components/schemas/UpdateContractProductParameter'
          nullable: true
      additionalProperties: false
    UpdateContractsForCostAllocationRequest:
      type: object
      properties:
        contractIds:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
    UpdateCustomEntityPropertiesRequest:
      type: object
      properties:
        properties:
          type: array
          items:
            $ref: '#/components/schemas/UpdateCustomEntityPropertyRequest'
          nullable: true
      additionalProperties: false
    UpdateCustomEntityPropertyRequest:
      type: object
      properties:
        customEntityPropertyTypeId:
          type: string
          nullable: true
        values:
          type: array
          items:
            $ref: '#/components/schemas/UpdateCustomEntityPropertyValueRequest'
          nullable: true
      additionalProperties: false
    UpdateCustomEntityPropertyValueRequest:
      type: object
      properties:
        startDateTime:
          type: string
          format: date-time
        endDateTime:
          type: string
          format: date-time
        valueDecimal:
          type: number
          format: double
        valueString:
          type: string
          nullable: true
        valueBoolean:
          type: boolean
        valueNumber:
          type: integer
          format: int64
        valueDateTime:
          type: string
          format: date-time
          nullable: true
        valueDropdown:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
    UpdateCustomerBillingDetailsRequest:
      type: object
      properties:
        paymentTermsId:
          type: string
          nullable: true
        defaultPaymentMethod:
          allOf:
            - $ref: '#/components/schemas/PaymentMethod'
          nullable: true
      additionalProperties: false
    UpdateCustomerGroupNameRequest:
      type: object
      properties:
        name:
          type: string
          nullable: true
      additionalProperties: false
    UpdateCustomerGroupSettingsAutomaticSettlementRequest:
      type: object
      properties:
        automaticSettlement:
          type: boolean
          nullable: true
      additionalProperties: false
    UpdateCustomerPortalDetailsRequest:
      type: object
      properties:
        applicationUserId:
          type: string
          nullable: true
        resetPasswordToken:
          type: string
          nullable: true
        confirmAccountToken:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        sendCommunication:
          type: boolean
      additionalProperties: false
    UpdateExternalContractReferenceRequest:
      type: object
      properties:
        externalContractReference:
          type: string
          nullable: true
      additionalProperties: false
    UpdateExternalIdRequest:
      type: object
      properties:
        externalId:
          type: string
          nullable: true
      additionalProperties: false
    UpdateInvoiceAddressRequest:
      type: object
      properties:
        invoiceAddress:
          allOf:
            - $ref: '#/components/schemas/AddressDTO'
          nullable: true
      additionalProperties: false
    UpdateManagementRelationsRequest:
      type: object
      properties:
        managementRelations:
          type: array
          items:
            $ref: '#/components/schemas/ManagementRelationRequest'
          description: Collection of management relations to be updated
          nullable: true
      additionalProperties: false
      description: Represents a request to update multiple management relations in a single operation
    UpdateMeterChannelsRequest:
      type: object
      properties:
        mutationDateTime:
          type: string
          format: date-time
        channelTemplates:
          type: array
          items:
            $ref: '#/components/schemas/ExternalChannelRequest'
          nullable: true
      additionalProperties: false
    UpdateMeterDetailsRequest:
      type: object
      properties:
        meterType:
          allOf:
            - $ref: '#/components/schemas/MeterType'
          nullable: true
        nextExpectedReadingDate:
          type: string
          format: date-time
          nullable: true
        meterReadingFrequency:
          allOf:
            - $ref: '#/components/schemas/MeterReadingFrequency'
          nullable: true
      additionalProperties: false
    UpdateMeterTagRequest:
      type: object
      properties:
        meterTag:
          type: string
          nullable: true
      additionalProperties: false
    UpdateMoveRequestCustomerDetailsRequest:
      type: object
      properties:
        accountNumber:
          type: string
          nullable: true
        salutation:
          type: string
          nullable: true
        initials:
          type: string
          nullable: true
        firstName:
          type: string
          nullable: true
        lastName:
          type: string
          nullable: true
        birthDate:
          type: string
          format: date-time
        ssin:
          type: string
          nullable: true
        ssinCountry:
          allOf:
            - $ref: '#/components/schemas/CountryCode'
          nullable: true
        customerType:
          allOf:
            - $ref: '#/components/schemas/CustomerType'
          nullable: true
        companyName:
          type: string
          nullable: true
        organizationNumber:
          type: string
          nullable: true
        vatNumber:
          type: string
          nullable: true
        defaultPaymentMethod:
          allOf:
            - $ref: '#/components/schemas/PaymentMethod'
          nullable: true
        invoiceAddress:
          allOf:
            - $ref: '#/components/schemas/AddressDTO'
          nullable: true
        bankAccount:
          type: string
          nullable: true
        emailAddress:
          type: string
          nullable: true
        telephoneNumber:
          type: string
          nullable: true
        mobileTelephoneNumber:
          type: string
          nullable: true
        website:
          type: string
          nullable: true
        culture:
          $ref: '#/components/schemas/CultureInfo'
          nullable: true
        internalId:
          type: string
          nullable: true
        customerGroupId:
          type: string
          nullable: true
      additionalProperties: false
    UpdateMoveRequestMeasurementDetailsRequest:
      type: object
      properties:
        measurements:
          type: array
          items:
            $ref: '#/components/schemas/MoveRequestMeasurementDetails'
          nullable: true
      additionalProperties: false
    UpdateMoveRequestMutationDateTimeRequest:
      type: object
      properties:
        mutationDateTime:
          type: string
          format: date-time
      additionalProperties: false
    UpdateMoveRequestRequest:
      type: object
      properties:
        productId:
          type: string
          nullable: true
        usePropertyGroupProduct:
          type: boolean
        contractNumber:
          type: string
          nullable: true
        estimations:
          type: array
          items:
            $ref: '#/components/schemas/MoveRequestContractEstimationRequest'
          nullable: true
        billingProperties:
          allOf:
            - $ref: '#/components/schemas/ContractDetailsBillingPropertiesBaseDTO'
          nullable: true
      additionalProperties: false
    UpdateMoveRequestServiceLocationDetailsRequest:
      type: object
      properties:
        address:
          allOf:
            - $ref: '#/components/schemas/AddressDTO'
          nullable: true
        services:
          type: array
          items:
            $ref: '#/components/schemas/MoveRequestServiceLocationServiceDetailsRequest'
          nullable: true
        internalId:
          type: string
          nullable: true
      additionalProperties: false
    UpdateParentRelationRequest:
      type: object
      properties:
        meterId:
          type: string
          nullable: true
        externalReference:
          type: string
          nullable: true
      additionalProperties: false
    UpdatePrepaymentAccountsExternalReferencesRequest:
      type: object
      properties:
        externalReferencesForPrepaymentAccounts:
          type: object
          additionalProperties:
            type: string
            nullable: true
          description: 'Collection of new external references, where a key is the ID of ZFH.DataTransfer.MasterData.DTO.v1.Responses.PrepaymentAccounts.PrepaymentAccountDTO and a value is the new value of ZFH.DataTransfer.MasterData.DTO.v1.Responses.PrepaymentAccounts.PrepaymentAccountDTO.ExternalReference.'
          nullable: true
      additionalProperties: false
      description: Necessary information to update external references.
    UpdatePropertyGroupCommunicationConfigurationRequest:
      type: object
      properties:
        companyName:
          type: string
          nullable: true
        vatAccountNumber:
          type: string
          nullable: true
        companyAccountNumber:
          type: string
          nullable: true
        primaryColor:
          type: string
          nullable: true
        secondaryColor:
          type: string
          nullable: true
        address:
          allOf:
            - $ref: '#/components/schemas/AddressDTO'
          nullable: true
        logo:
          type: string
          nullable: true
        contactDetails:
          allOf:
            - $ref: '#/components/schemas/PropertyGroupContactDetailsRequest'
          nullable: true
      additionalProperties: false
    UpdatePropertyGroupManagementRelationsRequest:
      type: object
      properties:
        managementRelations:
          type: array
          items:
            $ref: '#/components/schemas/ManagementRelationRequest'
          nullable: true
      additionalProperties: false
    UpdatePropertyGroupRequest:
      type: object
      properties:
        name:
          type: string
          nullable: true
        type:
          allOf:
            - $ref: '#/components/schemas/PropertyGroupType'
          nullable: true
        address:
          allOf:
            - $ref: '#/components/schemas/AddressDTO'
          nullable: true
      additionalProperties: false
    UpdateServiceLocationAddressRequest:
      type: object
      properties:
        address:
          allOf:
            - $ref: '#/components/schemas/AddressDTO'
          nullable: true
      additionalProperties: false
    UpdateServiceLocationProductRequest:
      type: object
      properties:
        productId:
          type: string
          nullable: true
      additionalProperties: false
    UserQuickFilter:
      enum:
        - all
        - users
        - admins
        - customroles
      type: string
    UtilityType:
      enum:
        - none
        - heat
        - cooling
        - hottapwater
        - water
        - electricity
        - gas
        - rainwater
        - services
      type: string
    ValueProviderType:
      enum:
        - servicelocationidfrominvoicelines
        - attachmentidfrominvoice
        - contractidfrominvoice
        - servicelocationidfrominvoicelinesfallbacktocontractservicelocationid
        - customeridfrominvoice
      type: string
    WriteOffHandlingType:
      enum:
        - nowriteoff
        - openamount
        - chargeamount
      type: string
  securitySchemes:
    apiKeyHeader:
      type: apiKey
      name: apim-sub
      in: header
    apiKeyQuery:
      type: apiKey
      name: subscription-key
      in: query
security:
  - apiKeyHeader: [ ]
  - apiKeyQuery: [ ]