# coding: utf-8

"""
    Masterdata

    MasterData API

    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from masterdata_client.models.service_location_details_dto import ServiceLocationDetailsDTO

class TestServiceLocationDetailsDTO(unittest.TestCase):
    """ServiceLocationDetailsDTO unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ServiceLocationDetailsDTO:
        """Test ServiceLocationDetailsDTO
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ServiceLocationDetailsDTO`
        """
        model = ServiceLocationDetailsDTO()
        if include_optional:
            return ServiceLocationDetailsDTO(
                previous_contract_details = masterdata_client.models.move_request_contract_details_dto.MoveRequestContractDetailsDTO(
                    contract_id = '', 
                    contract_number = '', 
                    contract_supply_start_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    contract_supply_end_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    customer_id = '', 
                    customer_display_name = '', 
                    customer_account_number = '', ),
                current_contract_details = masterdata_client.models.move_request_contract_details_dto.MoveRequestContractDetailsDTO(
                    contract_id = '', 
                    contract_number = '', 
                    contract_supply_start_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    contract_supply_end_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    customer_id = '', 
                    customer_display_name = '', 
                    customer_account_number = '', ),
                owner = masterdata_client.models.management_relation_dto.ManagementRelationDTO(
                    customer_id = '', 
                    short_display_name = '', 
                    account_number = '', 
                    management_relation_type = null, ),
                address = masterdata_client.models.address_dto.AddressDTO(
                    street_name = '', 
                    street_number = '', 
                    street_number_addition = '', 
                    postal_code = '', 
                    building_name = '', 
                    locality = '', 
                    city = '', 
                    country = null, 
                    localized_display = '', 
                    line_one = '', 
                    line_two = '', ),
                services = [
                    masterdata_client.models.service_location_service_details_dto.ServiceLocationServiceDetailsDTO(
                        external_identifier = '', 
                        utility_type = null, )
                    ],
                linked = True,
                internal_id = '',
                errors = [
                    masterdata_client.models.localised_error_dto.LocalisedErrorDTO(
                        key = null, 
                        correlation_id = '', 
                        message = '', 
                        message_values = [
                            masterdata_client.models.localised_error_dto_message_value.LocalisedErrorDTOMessageValue(
                                data_type = null, 
                                value = '', 
                                capitalize = True, )
                            ], )
                    ]
            )
        else:
            return ServiceLocationDetailsDTO(
        )
        """

    def testServiceLocationDetailsDTO(self):
        """Test ServiceLocationDetailsDTO"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
