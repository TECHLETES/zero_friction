# coding: utf-8

"""
    Masterdata

    MasterData API

    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from masterdata_client.api.customers_api import CustomersApi


class TestCustomersApi(unittest.TestCase):
    """CustomersApi unit test stubs"""

    def setUp(self) -> None:
        self.api = CustomersApi()

    def tearDown(self) -> None:
        pass

    def test_bulk_change_customer_group(self) -> None:
        """Test case for bulk_change_customer_group

        Move multiple customers to customer group in bulk.
        """
        pass

    def test_change_customer_billing_details(self) -> None:
        """Test case for change_customer_billing_details

        Update billing details of a customer.
        """
        pass

    def test_change_customer_communication_preferences(self) -> None:
        """Test case for change_customer_communication_preferences

        Update communication preferences of a customer.
        """
        pass

    def test_change_customer_contact_details(self) -> None:
        """Test case for change_customer_contact_details

        Update contact details of a customer.
        """
        pass

    def test_change_customer_details(self) -> None:
        """Test case for change_customer_details

        Update details of a customer.
        """
        pass

    def test_change_customer_group(self) -> None:
        """Test case for change_customer_group

        Move customer to a different customer group.
        """
        pass

    def test_change_customer_invoice_address(self) -> None:
        """Test case for change_customer_invoice_address

        Update invoice address of a customer.
        """
        pass

    def test_change_portal_details(self) -> None:
        """Test case for change_portal_details

        Update customer portal details of a customer.
        """
        pass

    def test_create_customer(self) -> None:
        """Test case for create_customer

        Create new customer.
        """
        pass

    def test_filter_all_customers(self) -> None:
        """Test case for filter_all_customers

        Retrieve customers based on the provided query parameters.
        """
        pass

    def test_filter_overview_count_customers(self) -> None:
        """Test case for filter_overview_count_customers

        Retrieve the overview count of customers based on the provided query parameters.
        """
        pass

    def test_get_customer(self) -> None:
        """Test case for get_customer

        Retrieve a customer by its ID.
        """
        pass

    def test_get_customer_by_account_number(self) -> None:
        """Test case for get_customer_by_account_number

        Retrieve a customer by its account number.
        """
        pass

    def test_post_customers_annualstatement_year_filter_overviewcount(self) -> None:
        """Test case for post_customers_annualstatement_year_filter_overviewcount

        Retrieve the overview count of annual statements for filtered customers based on the provided query parameters.
        """
        pass

    def test_post_customers_bulk_createannualstatement(self) -> None:
        """Test case for post_customers_bulk_createannualstatement

        Create and generate annual statements for multiple customers in bulk.
        """
        pass

    def test_post_customers_entityid_customproperties(self) -> None:
        """Test case for post_customers_entityid_customproperties

        /Customers/{entityId}/customproperties - POST
        """
        pass

    def test_send_customer_communication_via_email(self) -> None:
        """Test case for send_customer_communication_via_email

        Send email to a customer.
        """
        pass


if __name__ == '__main__':
    unittest.main()
