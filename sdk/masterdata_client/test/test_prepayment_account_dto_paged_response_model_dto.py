# coding: utf-8

"""
    Masterdata

    MasterData API

    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from masterdata_client.models.prepayment_account_dto_paged_response_model_dto import PrepaymentAccountDTOPagedResponseModelDTO

class TestPrepaymentAccountDTOPagedResponseModelDTO(unittest.TestCase):
    """PrepaymentAccountDTOPagedResponseModelDTO unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PrepaymentAccountDTOPagedResponseModelDTO:
        """Test PrepaymentAccountDTOPagedResponseModelDTO
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PrepaymentAccountDTOPagedResponseModelDTO`
        """
        model = PrepaymentAccountDTOPagedResponseModelDTO()
        if include_optional:
            return PrepaymentAccountDTOPagedResponseModelDTO(
                results = [
                    masterdata_client.models.prepayment_account_dto.PrepaymentAccountDTO(
                        id = '', 
                        entity_type = null, 
                        created_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        discriminator = '', 
                        _etag = '', 
                        require_attention = True, 
                        has_errors = True, 
                        has_warnings = True, 
                        is_read_only = True, 
                        organisation_id = '', 
                        status = null, 
                        meter = null, 
                        share_balance_across_utilities = True, 
                        channel_identifier = '', 
                        customer_id = '', 
                        contract_id = '', 
                        service_location_id = '', 
                        external_reference = '', 
                        utility_type = null, 
                        start_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        end_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        balance = 1.337, 
                        debt = 1.337, 
                        emergency_credit = 1.337, 
                        balance_until = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        last_time_received_prepayment_transactions = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        prepayment_transactions_until = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                    ],
                has_next_page = True,
                next_page_token = '',
                total_records = 56,
                sortable_fields = [
                    ''
                    ],
                aggregate_details = [
                    masterdata_client.models.aggregate_details_dto.AggregateDetailsDTO(
                        code = '', 
                        translation = '', 
                        value = 1.337, 
                        value_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                    ]
            )
        else:
            return PrepaymentAccountDTOPagedResponseModelDTO(
        )
        """

    def testPrepaymentAccountDTOPagedResponseModelDTO(self):
        """Test PrepaymentAccountDTOPagedResponseModelDTO"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
