# coding: utf-8

"""
    Masterdata

    MasterData API

    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from masterdata_client.models.create_contract_service_location_request import CreateContractServiceLocationRequest

class TestCreateContractServiceLocationRequest(unittest.TestCase):
    """CreateContractServiceLocationRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CreateContractServiceLocationRequest:
        """Test CreateContractServiceLocationRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CreateContractServiceLocationRequest`
        """
        model = CreateContractServiceLocationRequest()
        if include_optional:
            return CreateContractServiceLocationRequest(
                service_location_id = '',
                utility_type = 'none',
                external_identifier = '',
                estimated_consumptions = [
                    masterdata_client.models.create_contract_service_estimated_consumption_request.CreateContractServiceEstimatedConsumptionRequest(
                        consumer_group_id = '', 
                        value = 1.337, 
                        unit_of_measure = null, 
                        metering_type = null, 
                        is_manual_entry = True, )
                    ]
            )
        else:
            return CreateContractServiceLocationRequest(
        )
        """

    def testCreateContractServiceLocationRequest(self):
        """Test CreateContractServiceLocationRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
