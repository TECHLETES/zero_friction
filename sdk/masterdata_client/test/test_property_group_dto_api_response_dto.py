# coding: utf-8

"""
    Masterdata

    MasterData API

    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from masterdata_client.models.property_group_dto_api_response_dto import PropertyGroupDTOApiResponseDTO

class TestPropertyGroupDTOApiResponseDTO(unittest.TestCase):
    """PropertyGroupDTOApiResponseDTO unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PropertyGroupDTOApiResponseDTO:
        """Test PropertyGroupDTOApiResponseDTO
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PropertyGroupDTOApiResponseDTO`
        """
        model = PropertyGroupDTOApiResponseDTO()
        if include_optional:
            return PropertyGroupDTOApiResponseDTO(
                errors = [
                    masterdata_client.models.localised_error_dto.LocalisedErrorDTO(
                        key = null, 
                        correlation_id = '', 
                        message = '', 
                        message_values = [
                            masterdata_client.models.localised_error_dto_message_value.LocalisedErrorDTOMessageValue(
                                data_type = null, 
                                value = '', 
                                capitalize = True, )
                            ], )
                    ],
                success = True,
                applicable_entities_count = 56,
                requested_entities_count = 56,
                succeeded_entities_count = 56,
                is_synchronous = True,
                data = masterdata_client.models.property_group_dto.PropertyGroupDTO(
                    id = '', 
                    entity_type = null, 
                    created_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    discriminator = '', 
                    _etag = '', 
                    require_attention = True, 
                    has_errors = True, 
                    has_warnings = True, 
                    is_read_only = True, 
                    organisation_id = '', 
                    name = '', 
                    address = null, 
                    default_management_relations = [
                        masterdata_client.models.management_relation_dto.ManagementRelationDTO(
                            customer_id = '', 
                            short_display_name = '', 
                            account_number = '', 
                            management_relation_type = null, )
                        ], 
                    service_location_ids = [
                        ''
                        ], 
                    type = null, 
                    cost_allocation_enabled = True, 
                    communication_configuration = null, 
                    custom_properties = [
                        masterdata_client.models.custom_entity_property_dto.CustomEntityPropertyDTO(
                            custom_entity_property_type_id = '', 
                            values = [
                                masterdata_client.models.custom_entity_property_value_dto.CustomEntityPropertyValueDTO(
                                    value_decimal = 1.337, 
                                    value_string = '', 
                                    value_boolean = True, 
                                    value_number = 56, 
                                    value_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                    value_dropdown = [
                                        ''
                                        ], 
                                    start_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                    end_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                                ], )
                        ], 
                    deleted = True, )
            )
        else:
            return PropertyGroupDTOApiResponseDTO(
        )
        """

    def testPropertyGroupDTOApiResponseDTO(self):
        """Test PropertyGroupDTOApiResponseDTO"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
