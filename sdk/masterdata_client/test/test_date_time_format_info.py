# coding: utf-8

"""
    Masterdata

    MasterData API

    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from masterdata_client.models.date_time_format_info import DateTimeFormatInfo

class TestDateTimeFormatInfo(unittest.TestCase):
    """DateTimeFormatInfo unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> DateTimeFormatInfo:
        """Test DateTimeFormatInfo
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `DateTimeFormatInfo`
        """
        model = DateTimeFormatInfo()
        if include_optional:
            return DateTimeFormatInfo(
                am_designator = '',
                calendar = masterdata_client.models.calendar.Calendar(
                    min_supported_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    max_supported_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    algorithm_type = null, 
                    is_read_only = True, 
                    eras = [
                        56
                        ], 
                    two_digit_year_max = 56, ),
                date_separator = '',
                first_day_of_week = 'Sunday',
                calendar_week_rule = 'FirstDay',
                full_date_time_pattern = '',
                long_date_pattern = '',
                long_time_pattern = '',
                month_day_pattern = '',
                pm_designator = '',
                rf_c1123_pattern = '',
                short_date_pattern = '',
                short_time_pattern = '',
                sortable_date_time_pattern = '',
                time_separator = '',
                universal_sortable_date_time_pattern = '',
                year_month_pattern = '',
                abbreviated_day_names = [
                    ''
                    ],
                shortest_day_names = [
                    ''
                    ],
                day_names = [
                    ''
                    ],
                abbreviated_month_names = [
                    ''
                    ],
                month_names = [
                    ''
                    ],
                is_read_only = True,
                native_calendar_name = '',
                abbreviated_month_genitive_names = [
                    ''
                    ],
                month_genitive_names = [
                    ''
                    ]
            )
        else:
            return DateTimeFormatInfo(
        )
        """

    def testDateTimeFormatInfo(self):
        """Test DateTimeFormatInfo"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
