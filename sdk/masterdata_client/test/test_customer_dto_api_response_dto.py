# coding: utf-8

"""
    Masterdata

    MasterData API

    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from masterdata_client.models.customer_dto_api_response_dto import CustomerDTOApiResponseDTO

class TestCustomerDTOApiResponseDTO(unittest.TestCase):
    """CustomerDTOApiResponseDTO unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CustomerDTOApiResponseDTO:
        """Test CustomerDTOApiResponseDTO
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CustomerDTOApiResponseDTO`
        """
        model = CustomerDTOApiResponseDTO()
        if include_optional:
            return CustomerDTOApiResponseDTO(
                errors = [
                    masterdata_client.models.localised_error_dto.LocalisedErrorDTO(
                        key = null, 
                        correlation_id = '', 
                        message = '', 
                        message_values = [
                            masterdata_client.models.localised_error_dto_message_value.LocalisedErrorDTOMessageValue(
                                data_type = null, 
                                value = '', 
                                capitalize = True, )
                            ], )
                    ],
                success = True,
                applicable_entities_count = 56,
                requested_entities_count = 56,
                succeeded_entities_count = 56,
                is_synchronous = True,
                data = masterdata_client.models.customer_dto.CustomerDTO(
                    id = '', 
                    entity_type = null, 
                    created_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    discriminator = '', 
                    _etag = '', 
                    require_attention = True, 
                    has_errors = True, 
                    has_warnings = True, 
                    is_read_only = True, 
                    organisation_id = '', 
                    account_number = '', 
                    salutation = '', 
                    initials = '', 
                    first_name = '', 
                    last_name = '', 
                    birth_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    ssin = '', 
                    ssin_country = null, 
                    short_display_name = '', 
                    customer_type = null, 
                    company_name = '', 
                    organization_number = '', 
                    vat_number = '', 
                    payment_terms_id = '', 
                    default_payment_method = null, 
                    invoice_address = null, 
                    bank_account_ibans = [
                        masterdata_client.models.bank_account_dto.BankAccountDTO(
                            iban = '', 
                            is_default = True, )
                        ], 
                    contact_details = [
                        masterdata_client.models.contact_entry_dto.ContactEntryDTO(
                            contact_type = null, 
                            value = '', 
                            description = '', 
                            primary_for_type = True, )
                        ], 
                    contracts = [
                        masterdata_client.models.customer_contract_dto.CustomerContractDTO(
                            contract_id = '', 
                            contract_number = '', 
                            supply_start_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            supply_end_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            current_contract_status = null, 
                            contract_billing_method = null, )
                        ], 
                    communication_preferences = null, 
                    property_groups = [
                        masterdata_client.models.property_group_reference_dto.PropertyGroupReferenceDTO(
                            id = '', 
                            name = '', )
                        ], 
                    customer_group = null, 
                    billing_settings = null, 
                    custom_properties = [
                        masterdata_client.models.custom_entity_property_dto.CustomEntityPropertyDTO(
                            custom_entity_property_type_id = '', 
                            values = [
                                masterdata_client.models.custom_entity_property_value_dto.CustomEntityPropertyValueDTO(
                                    value_decimal = 1.337, 
                                    value_string = '', 
                                    value_boolean = True, 
                                    value_number = 56, 
                                    value_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                    value_dropdown = [
                                        ''
                                        ], 
                                    start_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                    end_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                                ], )
                        ], 
                    activation_code = '', 
                    portal_properties = null, 
                    generated_annual_statements = [
                        masterdata_client.models.annual_statement_reference.AnnualStatementReference(
                            annual_statement_id = '', 
                            annual_statement_number = '', 
                            year = 56, 
                            version = 56, 
                            status = null, )
                        ], )
            )
        else:
            return CustomerDTOApiResponseDTO(
        )
        """

    def testCustomerDTOApiResponseDTO(self):
        """Test CustomerDTOApiResponseDTO"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
