# coding: utf-8

"""
    Masterdata

    MasterData API

    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from masterdata_client.models.customer_dto import CustomerDTO

class TestCustomerDTO(unittest.TestCase):
    """CustomerDTO unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CustomerDTO:
        """Test CustomerDTO
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CustomerDTO`
        """
        model = CustomerDTO()
        if include_optional:
            return CustomerDTO(
                id = '',
                entity_type = 'none',
                created_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                discriminator = '',
                etag = '',
                require_attention = True,
                has_errors = True,
                has_warnings = True,
                is_read_only = True,
                organisation_id = '',
                account_number = '',
                salutation = '',
                initials = '',
                first_name = '',
                last_name = '',
                birth_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                ssin = '',
                ssin_country = 'aut',
                short_display_name = '',
                customer_type = 'person',
                company_name = '',
                organization_number = '',
                vat_number = '',
                payment_terms_id = '',
                default_payment_method = 'sct',
                invoice_address = masterdata_client.models.address_dto.AddressDTO(
                    street_name = '', 
                    street_number = '', 
                    street_number_addition = '', 
                    postal_code = '', 
                    building_name = '', 
                    locality = '', 
                    city = '', 
                    country = null, 
                    localized_display = '', 
                    line_one = '', 
                    line_two = '', ),
                bank_account_ibans = [
                    masterdata_client.models.bank_account_dto.BankAccountDTO(
                        iban = '', 
                        is_default = True, )
                    ],
                contact_details = [
                    masterdata_client.models.contact_entry_dto.ContactEntryDTO(
                        contact_type = null, 
                        value = '', 
                        description = '', 
                        primary_for_type = True, )
                    ],
                contracts = [
                    masterdata_client.models.customer_contract_dto.CustomerContractDTO(
                        contract_id = '', 
                        contract_number = '', 
                        supply_start_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        supply_end_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        current_contract_status = null, 
                        contract_billing_method = null, )
                    ],
                communication_preferences = masterdata_client.models.customer_communication_preferences_dto.CustomerCommunicationPreferencesDTO(
                    culture = null, 
                    invoice_communication_preferences = [
                        masterdata_client.models.invoice_communication_preference_dto.InvoiceCommunicationPreferenceDTO(
                            invoice_type = null, 
                            communication_type = null, )
                        ], 
                    annual_statement_communication_preference = null, 
                    collection_flow_id = '', ),
                property_groups = [
                    masterdata_client.models.property_group_reference_dto.PropertyGroupReferenceDTO(
                        id = '', 
                        name = '', )
                    ],
                customer_group = masterdata_client.models.customer_group_reference_dto.CustomerGroupReferenceDTO(
                    id = '', 
                    name = '', ),
                billing_settings = masterdata_client.models.customer_billing_settings_dto.CustomerBillingSettingsDTO(
                    automatic_settlement_setting = null, ),
                custom_properties = [
                    masterdata_client.models.custom_entity_property_dto.CustomEntityPropertyDTO(
                        custom_entity_property_type_id = '', 
                        values = [
                            masterdata_client.models.custom_entity_property_value_dto.CustomEntityPropertyValueDTO(
                                value_decimal = 1.337, 
                                value_string = '', 
                                value_boolean = True, 
                                value_number = 56, 
                                value_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                value_dropdown = [
                                    ''
                                    ], 
                                start_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                end_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                            ], )
                    ],
                activation_code = '',
                portal_properties = masterdata_client.models.customer_portal_properties_dto.CustomerPortalPropertiesDTO(
                    application_user_id = '', 
                    confirm_account_token = '', 
                    reset_password_token = '', 
                    email = '', ),
                generated_annual_statements = [
                    masterdata_client.models.annual_statement_reference.AnnualStatementReference(
                        annual_statement_id = '', 
                        annual_statement_number = '', 
                        year = 56, 
                        version = 56, 
                        status = null, )
                    ]
            )
        else:
            return CustomerDTO(
        )
        """

    def testCustomerDTO(self):
        """Test CustomerDTO"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
