# coding: utf-8

"""
    Masterdata

    MasterData API

    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from masterdata_client.models.contract_dto_list_api_response_dto import ContractDTOListApiResponseDTO

class TestContractDTOListApiResponseDTO(unittest.TestCase):
    """ContractDTOListApiResponseDTO unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ContractDTOListApiResponseDTO:
        """Test ContractDTOListApiResponseDTO
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ContractDTOListApiResponseDTO`
        """
        model = ContractDTOListApiResponseDTO()
        if include_optional:
            return ContractDTOListApiResponseDTO(
                errors = [
                    masterdata_client.models.localised_error_dto.LocalisedErrorDTO(
                        key = null, 
                        correlation_id = '', 
                        message = '', 
                        message_values = [
                            masterdata_client.models.localised_error_dto_message_value.LocalisedErrorDTOMessageValue(
                                data_type = null, 
                                value = '', 
                                capitalize = True, )
                            ], )
                    ],
                success = True,
                applicable_entities_count = 56,
                requested_entities_count = 56,
                succeeded_entities_count = 56,
                is_synchronous = True,
                data = [
                    masterdata_client.models.contract_dto.ContractDTO(
                        id = '', 
                        entity_type = null, 
                        created_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        discriminator = '', 
                        _etag = '', 
                        require_attention = True, 
                        has_errors = True, 
                        has_warnings = True, 
                        is_read_only = True, 
                        organisation_id = '', 
                        contract_number = '', 
                        contractor = null, 
                        supply_start_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        supply_end_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        service_locations = [
                            masterdata_client.models.contract_service_location_dto.ContractServiceLocationDTO(
                                id = '', 
                                address = null, 
                                property_group_id = '', 
                                services = [
                                    masterdata_client.models.contracted_service_dto.ContractedServiceDTO(
                                        start_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                        end_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                        utility_type = null, 
                                        external_identifier = '', 
                                        is_consumption_based = True, 
                                        estimated_consumptions = [
                                            masterdata_client.models.contracted_service_estimated_consumption_dto.ContractedServiceEstimatedConsumptionDTO(
                                                consumer_group_id = '', 
                                                value = 1.337, 
                                                unit_of_measure = null, 
                                                metering_type = null, 
                                                is_manual_entry = True, )
                                            ], )
                                    ], )
                            ], 
                        status_history = [
                            masterdata_client.models.contract_status_history_dto.ContractStatusHistoryDTO(
                                contract_status = null, 
                                mutation_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                            ], 
                        current_contract_status = null, 
                        billing_details = null, 
                        external_contract_reference = '', 
                        payment_terms_id = '', 
                        blocked_for_deletion = True, 
                        expect_advances_to_be_imported_periodically = True, 
                        use_property_group_product = True, 
                        property_groups = [
                            masterdata_client.models.property_group_reference_dto.PropertyGroupReferenceDTO(
                                id = '', 
                                name = '', )
                            ], 
                        attachment_signatures = [
                            masterdata_client.models.attachment_signature.AttachmentSignature(
                                culture = null, 
                                attachment_file_name = '', 
                                error_code = null, 
                                origin = null, 
                                product_attachment_id = '', 
                                attachment_file_id = '', 
                                entity_attachment_group_id = '', 
                                sign_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                viewed_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                            ], 
                        custom_properties = [
                            masterdata_client.models.custom_entity_property_dto.CustomEntityPropertyDTO(
                                custom_entity_property_type_id = '', 
                                values = [
                                    masterdata_client.models.custom_entity_property_value_dto.CustomEntityPropertyValueDTO(
                                        value_decimal = 1.337, 
                                        value_string = '', 
                                        value_boolean = True, 
                                        value_number = 56, 
                                        value_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                        value_dropdown = [
                                            ''
                                            ], 
                                        start_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                        end_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                                    ], )
                            ], )
                    ]
            )
        else:
            return ContractDTOListApiResponseDTO(
        )
        """

    def testContractDTOListApiResponseDTO(self):
        """Test ContractDTOListApiResponseDTO"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
