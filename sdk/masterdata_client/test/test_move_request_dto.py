# coding: utf-8

"""
    Masterdata

    MasterData API

    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from masterdata_client.models.move_request_dto import MoveRequestDTO

class TestMoveRequestDTO(unittest.TestCase):
    """MoveRequestDTO unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> MoveRequestDTO:
        """Test MoveRequestDTO
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `MoveRequestDTO`
        """
        model = MoveRequestDTO()
        if include_optional:
            return MoveRequestDTO(
                id = '',
                entity_type = 'none',
                created_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                discriminator = '',
                etag = '',
                require_attention = True,
                has_errors = True,
                has_warnings = True,
                is_read_only = True,
                organisation_id = '',
                external_id = '',
                customer_details = masterdata_client.models.customer_details_dto.CustomerDetailsDTO(
                    account_number = '', 
                    salutation = '', 
                    initials = '', 
                    first_name = '', 
                    last_name = '', 
                    birth_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    ssin = '', 
                    ssin_country = null, 
                    customer_type = null, 
                    company_name = '', 
                    organization_number = '', 
                    vat_number = '', 
                    default_payment_method = null, 
                    invoice_address = null, 
                    bank_account = '', 
                    email_address = '', 
                    telephone_number = '', 
                    mobile_telephone_number = '', 
                    website = '', 
                    culture = null, 
                    internal_id = '', 
                    created_or_linked = True, 
                    errors = [
                        masterdata_client.models.localised_error_dto.LocalisedErrorDTO(
                            key = null, 
                            correlation_id = '', 
                            message = '', 
                            message_values = [
                                masterdata_client.models.localised_error_dto_message_value.LocalisedErrorDTOMessageValue(
                                    data_type = null, 
                                    value = '', 
                                    capitalize = True, )
                                ], )
                        ], 
                    customer_group_id = '', ),
                service_location_details = masterdata_client.models.service_location_details_dto.ServiceLocationDetailsDTO(
                    previous_contract_details = null, 
                    current_contract_details = null, 
                    owner = null, 
                    address = null, 
                    services = [
                        masterdata_client.models.service_location_service_details_dto.ServiceLocationServiceDetailsDTO(
                            external_identifier = '', 
                            utility_type = null, )
                        ], 
                    linked = True, 
                    internal_id = '', 
                    errors = [
                        masterdata_client.models.localised_error_dto.LocalisedErrorDTO(
                            key = null, 
                            correlation_id = '', 
                            message = '', 
                            message_values = [
                                masterdata_client.models.localised_error_dto_message_value.LocalisedErrorDTOMessageValue(
                                    data_type = null, 
                                    value = '', 
                                    capitalize = True, )
                                ], )
                        ], ),
                measurement_details = [
                    masterdata_client.models.measurement_details_dto.MeasurementDetailsDTO(
                        internal_meter_id = '', 
                        external_channel_identifier = '', 
                        meter_serial_number = '', 
                        utility_type = null, 
                        unit_of_measure = null, 
                        time_of_use = '', 
                        value = 1.337, 
                        time_zone = '', 
                        errors = [
                            masterdata_client.models.localised_error_dto.LocalisedErrorDTO(
                                key = null, 
                                correlation_id = '', 
                                message = '', 
                                message_values = [
                                    masterdata_client.models.localised_error_dto_message_value.LocalisedErrorDTOMessageValue(
                                        data_type = null, 
                                        value = '', 
                                        capitalize = True, )
                                    ], )
                            ], )
                    ],
                contract_details = masterdata_client.models.contract_details_dto.ContractDetailsDTO(
                    product_id = '', 
                    use_property_group_product = True, 
                    estimations = [
                        masterdata_client.models.contract_estimation_dto.ContractEstimationDTO(
                            utility_type = null, 
                            unit_of_measure = null, 
                            metering_type = null, 
                            value = 1.337, 
                            consumer_group_id = '', )
                        ], 
                    errors = [
                        masterdata_client.models.localised_error_dto.LocalisedErrorDTO(
                            key = null, 
                            correlation_id = '', 
                            message = '', 
                            message_values = [
                                masterdata_client.models.localised_error_dto_message_value.LocalisedErrorDTOMessageValue(
                                    data_type = null, 
                                    value = '', 
                                    capitalize = True, )
                                ], )
                        ], 
                    internal_contract_id = '', 
                    external_contract_id = '', 
                    contract_number = '', 
                    created_or_linked = True, 
                    service_locations_count = 56, 
                    billing_properties = null, ),
                move_request_type = 'movein',
                status = 'new',
                mutation_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                custom_message = '',
                attachment_signatures = [
                    masterdata_client.models.attachment_signature.AttachmentSignature(
                        culture = null, 
                        attachment_file_name = '', 
                        error_code = null, 
                        origin = null, 
                        product_attachment_id = '', 
                        attachment_file_id = '', 
                        entity_attachment_group_id = '', 
                        sign_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        viewed_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                    ],
                has_any_errors = True
            )
        else:
            return MoveRequestDTO(
        )
        """

    def testMoveRequestDTO(self):
        """Test MoveRequestDTO"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
