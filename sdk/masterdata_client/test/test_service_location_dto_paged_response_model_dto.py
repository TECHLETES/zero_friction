# coding: utf-8

"""
    Masterdata

    MasterData API

    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from masterdata_client.models.service_location_dto_paged_response_model_dto import ServiceLocationDTOPagedResponseModelDTO

class TestServiceLocationDTOPagedResponseModelDTO(unittest.TestCase):
    """ServiceLocationDTOPagedResponseModelDTO unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ServiceLocationDTOPagedResponseModelDTO:
        """Test ServiceLocationDTOPagedResponseModelDTO
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ServiceLocationDTOPagedResponseModelDTO`
        """
        model = ServiceLocationDTOPagedResponseModelDTO()
        if include_optional:
            return ServiceLocationDTOPagedResponseModelDTO(
                results = [
                    masterdata_client.models.service_location_dto.ServiceLocationDTO(
                        id = '', 
                        entity_type = null, 
                        created_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        discriminator = '', 
                        _etag = '', 
                        require_attention = True, 
                        has_errors = True, 
                        has_warnings = True, 
                        is_read_only = True, 
                        organisation_id = '', 
                        address = null, 
                        display_address = '', 
                        property_group = null, 
                        product = null, 
                        management_relations = [
                            masterdata_client.models.management_relation_dto2.ManagementRelationDTO2(
                                customer_id = '', 
                                short_display_name = '', 
                                account_number = '', 
                                management_relation_type = null, )
                            ], 
                        services = [
                            masterdata_client.models.service_dto.ServiceDTO(
                                external_identifier = '', 
                                utility_type = null, 
                                status_history = [
                                    masterdata_client.models.service_status_history_dto.ServiceStatusHistoryDTO(
                                        start_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                        end_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                        service_status = null, )
                                    ], 
                                contracts = [
                                    masterdata_client.models.service_contract_dto.ServiceContractDTO(
                                        contract_id = '', 
                                        contract_number = '', 
                                        contractor_id = '', 
                                        contractor_acount_number = '', 
                                        contractor_display_name = '', 
                                        supply_start_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                        supply_end_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                        current_contract_status = null, )
                                    ], )
                            ], 
                        has_meters = True, 
                        external_id = '', 
                        time_zone = '', 
                        custom_properties = [
                            masterdata_client.models.custom_entity_property_dto.CustomEntityPropertyDTO(
                                custom_entity_property_type_id = '', 
                                values = [
                                    masterdata_client.models.custom_entity_property_value_dto.CustomEntityPropertyValueDTO(
                                        value_decimal = 1.337, 
                                        value_string = '', 
                                        value_boolean = True, 
                                        value_number = 56, 
                                        value_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                        value_dropdown = [
                                            ''
                                            ], 
                                        start_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                        end_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                                    ], )
                            ], 
                        current_status = null, )
                    ],
                has_next_page = True,
                next_page_token = '',
                total_records = 56,
                sortable_fields = [
                    ''
                    ],
                aggregate_details = [
                    masterdata_client.models.aggregate_details_dto.AggregateDetailsDTO(
                        code = '', 
                        translation = '', 
                        value = 1.337, 
                        value_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                    ]
            )
        else:
            return ServiceLocationDTOPagedResponseModelDTO(
        )
        """

    def testServiceLocationDTOPagedResponseModelDTO(self):
        """Test ServiceLocationDTOPagedResponseModelDTO"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
