# coding: utf-8

"""
    Attachments

    Attachments API

    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from attachments_client.models.entity_attachment_dto_paged_response_model_dto_api_response_dto import EntityAttachmentDTOPagedResponseModelDTOApiResponseDTO

class TestEntityAttachmentDTOPagedResponseModelDTOApiResponseDTO(unittest.TestCase):
    """EntityAttachmentDTOPagedResponseModelDTOApiResponseDTO unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> EntityAttachmentDTOPagedResponseModelDTOApiResponseDTO:
        """Test EntityAttachmentDTOPagedResponseModelDTOApiResponseDTO
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `EntityAttachmentDTOPagedResponseModelDTOApiResponseDTO`
        """
        model = EntityAttachmentDTOPagedResponseModelDTOApiResponseDTO()
        if include_optional:
            return EntityAttachmentDTOPagedResponseModelDTOApiResponseDTO(
                errors = [
                    attachments_client.models.localised_error_dto.LocalisedErrorDTO(
                        key = null, 
                        correlation_id = '', 
                        message = '', 
                        message_values = [
                            attachments_client.models.localised_error_dto_message_value.LocalisedErrorDTOMessageValue(
                                data_type = null, 
                                value = '', 
                                capitalize = True, )
                            ], )
                    ],
                success = True,
                applicable_entities_count = 56,
                requested_entities_count = 56,
                succeeded_entities_count = 56,
                is_synchronous = True,
                data = attachments_client.models.entity_attachment_dto_paged_response_model_dto.EntityAttachmentDTOPagedResponseModelDTO(
                    results = [
                        attachments_client.models.entity_attachment_dto.EntityAttachmentDTO(
                            id = '', 
                            entity_type = null, 
                            created_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            discriminator = '', 
                            _etag = '', 
                            require_attention = True, 
                            has_errors = True, 
                            has_warnings = True, 
                            is_read_only = True, 
                            customer_id = '', 
                            origin = null, 
                            parameters = null, 
                            visibility = null, 
                            include_in_welcome_email = True, 
                            approval_required = True, 
                            viewed_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                        ], 
                    has_next_page = True, 
                    next_page_token = '', 
                    total_records = 56, 
                    sortable_fields = [
                        ''
                        ], 
                    aggregate_details = [
                        attachments_client.models.aggregate_details_dto.AggregateDetailsDTO(
                            code = '', 
                            translation = '', 
                            value = 1.337, 
                            value_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                        ], )
            )
        else:
            return EntityAttachmentDTOPagedResponseModelDTOApiResponseDTO(
        )
        """

    def testEntityAttachmentDTOPagedResponseModelDTOApiResponseDTO(self):
        """Test EntityAttachmentDTOPagedResponseModelDTOApiResponseDTO"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
