# coding: utf-8

"""
    Communication

    Communication API

    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from communication_client.models.get_communication_entries_query_params import GetCommunicationEntriesQueryParams

class TestGetCommunicationEntriesQueryParams(unittest.TestCase):
    """GetCommunicationEntriesQueryParams unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetCommunicationEntriesQueryParams:
        """Test GetCommunicationEntriesQueryParams
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetCommunicationEntriesQueryParams`
        """
        model = GetCommunicationEntriesQueryParams()
        if include_optional:
            return GetCommunicationEntriesQueryParams(
                flex_search = '',
                include_only_ids = [
                    ''
                    ],
                exclude_ids = [
                    ''
                    ],
                communication_type = 'postal',
                entity_subject_type = 'none',
                entity_subject_id = '',
                failure_reason_code = 'ASSET_ALREADY_EXISTS',
                sent_start_date_time_offset = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                sent_end_date_time_offset = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f')
            )
        else:
            return GetCommunicationEntriesQueryParams(
        )
        """

    def testGetCommunicationEntriesQueryParams(self):
        """Test GetCommunicationEntriesQueryParams"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
