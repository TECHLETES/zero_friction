# coding: utf-8

"""
    Billing

    Billing API

    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from billing_client.models.update_property_group_billing_configuration_request import UpdatePropertyGroupBillingConfigurationRequest

class TestUpdatePropertyGroupBillingConfigurationRequest(unittest.TestCase):
    """UpdatePropertyGroupBillingConfigurationRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> UpdatePropertyGroupBillingConfigurationRequest:
        """Test UpdatePropertyGroupBillingConfigurationRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `UpdatePropertyGroupBillingConfigurationRequest`
        """
        model = UpdatePropertyGroupBillingConfigurationRequest()
        if include_optional:
            return UpdatePropertyGroupBillingConfigurationRequest(
                property_group = billing_client.models.property_group_reference_dto.PropertyGroupReferenceDTO(
                    id = '', 
                    name = '', ),
                company_bank_account_id = '',
                advance_frequency = 'none',
                invoice_frequency = 'monthly',
                invoice_day = 56,
                invoice_month = 56,
                product_id = '',
                payment_terms_id = ''
            )
        else:
            return UpdatePropertyGroupBillingConfigurationRequest(
        )
        """

    def testUpdatePropertyGroupBillingConfigurationRequest(self):
        """Test UpdatePropertyGroupBillingConfigurationRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
