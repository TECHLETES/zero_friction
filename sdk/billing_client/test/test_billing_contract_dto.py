# coding: utf-8

"""
    Billing

    Billing API

    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from billing_client.models.billing_contract_dto import BillingContractDTO

class TestBillingContractDTO(unittest.TestCase):
    """BillingContractDTO unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> BillingContractDTO:
        """Test BillingContractDTO
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `BillingContractDTO`
        """
        model = BillingContractDTO()
        if include_optional:
            return BillingContractDTO(
                contract_id = '',
                contract_number = '',
                products = [
                    billing_client.models.product_period_reference_dto.ProductPeriodReferenceDTO(
                        product_id = '', 
                        product_name = '', 
                        start_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        end_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                    ],
                services = [
                    billing_client.models.billed_service_dto.BilledServiceDTO(
                        utility_type = null, 
                        service_location_id = '', 
                        supply_start_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        supply_end_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        external_identifier = '', )
                    ],
                use_property_group_product = True,
                property_groups = [
                    billing_client.models.property_group_reference_dto.PropertyGroupReferenceDTO(
                        id = '', 
                        name = '', )
                    ],
                billing_method = 'credit'
            )
        else:
            return BillingContractDTO(
        )
        """

    def testBillingContractDTO(self):
        """Test BillingContractDTO"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
