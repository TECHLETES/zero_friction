# coding: utf-8

"""
    Billing

    Billing API

    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from billing_client.models.collection_case_dto import CollectionCaseDTO

class TestCollectionCaseDTO(unittest.TestCase):
    """CollectionCaseDTO unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CollectionCaseDTO:
        """Test CollectionCaseDTO
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CollectionCaseDTO`
        """
        model = CollectionCaseDTO()
        if include_optional:
            return CollectionCaseDTO(
                id = '',
                entity_type = 'none',
                created_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                discriminator = '',
                etag = '',
                require_attention = True,
                has_errors = True,
                has_warnings = True,
                is_read_only = True,
                organisation_id = '',
                collection_num = '',
                sequence_num = 56,
                workflow_id = '',
                workflow_name = '',
                debtor = billing_client.models.debtor_dto.DebtorDTO(
                    customer_id = '', 
                    display_name = '', 
                    customer_account_number = '', 
                    customer_type = null, 
                    customer_group = null, ),
                manual_intervention_required = True,
                status = 'active',
                steps = [
                    billing_client.models.collection_case_step_dto.CollectionCaseStepDTO(
                        id = '', 
                        step_id = '', 
                        order = 56, 
                        name = '', 
                        trigger_days = 56, 
                        execute_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        step_type = null, 
                        communication_type = null, 
                        communication_level = null, 
                        charge_type = null, 
                        charges = null, 
                        executed_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        documents_sent_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        document_id = '', 
                        email_id = '', 
                        status = null, 
                        failure_reason_code = null, 
                        failure_details = '', 
                        supports_external_printing = True, 
                        retry_count = 56, )
                    ],
                last_step = billing_client.models.collection_case_step_dto.CollectionCaseStepDTO(
                    id = '', 
                    step_id = '', 
                    order = 56, 
                    name = '', 
                    trigger_days = 56, 
                    execute_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    step_type = null, 
                    communication_type = null, 
                    communication_level = null, 
                    charge_type = null, 
                    charges = null, 
                    executed_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    documents_sent_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    document_id = '', 
                    email_id = '', 
                    status = null, 
                    failure_reason_code = null, 
                    failure_details = '', 
                    supports_external_printing = True, 
                    retry_count = 56, ),
                next_step = billing_client.models.collection_case_step_dto.CollectionCaseStepDTO(
                    id = '', 
                    step_id = '', 
                    order = 56, 
                    name = '', 
                    trigger_days = 56, 
                    execute_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    step_type = null, 
                    communication_type = null, 
                    communication_level = null, 
                    charge_type = null, 
                    charges = null, 
                    executed_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    documents_sent_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    document_id = '', 
                    email_id = '', 
                    status = null, 
                    failure_reason_code = null, 
                    failure_details = '', 
                    supports_external_printing = True, 
                    retry_count = 56, ),
                next_action_due = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                referenced_transactions = [
                    ''
                    ],
                payment_reference = '',
                property_groups = [
                    billing_client.models.property_group_reference_dto.PropertyGroupReferenceDTO(
                        id = '', 
                        name = '', )
                    ],
                total_open_amount_incl_vat = 1.337,
                custom_properties = [
                    billing_client.models.custom_entity_property_dto.CustomEntityPropertyDTO(
                        custom_entity_property_type_id = '', 
                        values = [
                            billing_client.models.custom_entity_property_value_dto.CustomEntityPropertyValueDTO(
                                value_decimal = 1.337, 
                                value_string = '', 
                                value_boolean = True, 
                                value_number = 56, 
                                value_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                value_dropdown = [
                                    ''
                                    ], 
                                start_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                end_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                            ], )
                    ]
            )
        else:
            return CollectionCaseDTO(
        )
        """

    def testCollectionCaseDTO(self):
        """Test CollectionCaseDTO"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
