# coding: utf-8

"""
    Billing

    Billing API

    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from billing_client.models.invoice_ubl_validation_specific_error_dto import InvoiceUBLValidationSpecificErrorDTO

class TestInvoiceUBLValidationSpecificErrorDTO(unittest.TestCase):
    """InvoiceUBLValidationSpecificErrorDTO unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> InvoiceUBLValidationSpecificErrorDTO:
        """Test InvoiceUBLValidationSpecificErrorDTO
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `InvoiceUBLValidationSpecificErrorDTO`
        """
        model = InvoiceUBLValidationSpecificErrorDTO()
        if include_optional:
            return InvoiceUBLValidationSpecificErrorDTO(
                invoice_id = '',
                invoice_number = '',
                error_subject = 'none',
                error_subject_id = '',
                error_message = billing_client.models.localised_error_dto.LocalisedErrorDTO(
                    key = null, 
                    correlation_id = '', 
                    message = '', 
                    message_values = [
                        billing_client.models.localised_error_dto_message_value.LocalisedErrorDTOMessageValue(
                            data_type = null, 
                            value = '', 
                            capitalize = True, )
                        ], )
            )
        else:
            return InvoiceUBLValidationSpecificErrorDTO(
        )
        """

    def testInvoiceUBLValidationSpecificErrorDTO(self):
        """Test InvoiceUBLValidationSpecificErrorDTO"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
