# coding: utf-8

"""
    Billing

    Billing API

    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from billing_client.models.bulk_reverse_payment_request import BulkReversePaymentRequest

class TestBulkReversePaymentRequest(unittest.TestCase):
    """BulkReversePaymentRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> BulkReversePaymentRequest:
        """Test BulkReversePaymentRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `BulkReversePaymentRequest`
        """
        model = BulkReversePaymentRequest()
        if include_optional:
            return BulkReversePaymentRequest(
                reversal_additional_information = '',
                only_validate = True,
                var_query_params = billing_client.models.get_payments_query_params.GetPaymentsQueryParams(
                    flex_search = '', 
                    include_only_ids = [
                        ''
                        ], 
                    exclude_ids = [
                        ''
                        ], 
                    payment_type = '', 
                    customer_id = '', 
                    start_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    end_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    batch_mutation_id = '', ),
                quick_filter = ''
            )
        else:
            return BulkReversePaymentRequest(
        )
        """

    def testBulkReversePaymentRequest(self):
        """Test BulkReversePaymentRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
