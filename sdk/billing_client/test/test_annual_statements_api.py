# coding: utf-8

"""
    Billing

    Billing API

    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from billing_client.api.annual_statements_api import AnnualStatementsApi


class TestAnnualStatementsApi(unittest.TestCase):
    """AnnualStatementsApi unit test stubs"""

    def setUp(self) -> None:
        self.api = AnnualStatementsApi()

    def tearDown(self) -> None:
        pass

    def test_get_annualstatements_annualstatementuuid(self) -> None:
        """Test case for get_annualstatements_annualstatementuuid

        Retrieves an annual statement by its UUID.
        """
        pass

    def test_post_annualstatements_annualstatementuuid_send(self) -> None:
        """Test case for post_annualstatements_annualstatementuuid_send

        Sends an annual statement via email.
        """
        pass

    def test_post_annualstatements_annualstatementuuid_sendviapostal(self) -> None:
        """Test case for post_annualstatements_annualstatementuuid_sendviapostal

        Sends an annual statement via postal mail.
        """
        pass

    def test_post_annualstatements_bulk_send(self) -> None:
        """Test case for post_annualstatements_bulk_send

        Sends multiple annual statements via email in bulk.
        """
        pass

    def test_post_annualstatements_bulk_sendviapostal(self) -> None:
        """Test case for post_annualstatements_bulk_sendviapostal

        Sends multiple annual statements via postal mail in bulk.
        """
        pass

    def test_post_annualstatements_customer_customerid(self) -> None:
        """Test case for post_annualstatements_customer_customerid

        Creates a new annual statement for a specific customer.
        """
        pass

    def test_post_annualstatements_filter(self) -> None:
        """Test case for post_annualstatements_filter

        Retrieves all annual statements based on the provided query parameters.
        """
        pass


if __name__ == '__main__':
    unittest.main()
