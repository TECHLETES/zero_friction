# coding: utf-8

"""
    Billing

    Billing API

    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from billing_client.models.billing_item_details_dto import BillingItemDetailsDTO

class TestBillingItemDetailsDTO(unittest.TestCase):
    """BillingItemDetailsDTO unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> BillingItemDetailsDTO:
        """Test BillingItemDetailsDTO
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `BillingItemDetailsDTO`
        """
        model = BillingItemDetailsDTO()
        if include_optional:
            return BillingItemDetailsDTO(
                billing_item_id = '',
                deviating_tariffs = [
                    billing_client.models.calculated_tariff_dto.CalculatedTariffDTO(
                        tariff = 1.337, 
                        start_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        end_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                    ],
                tariff_execution_errors = [
                    billing_client.models.formula_function_exception_dto.FormulaFunctionExceptionDTO(
                        function_position = 56, 
                        error = null, 
                        message = '', 
                        parameters = [
                            ''
                            ], )
                    ]
            )
        else:
            return BillingItemDetailsDTO(
        )
        """

    def testBillingItemDetailsDTO(self):
        """Test BillingItemDetailsDTO"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
