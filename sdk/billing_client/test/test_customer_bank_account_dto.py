# coding: utf-8

"""
    Billing

    Billing API

    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from billing_client.models.customer_bank_account_dto import CustomerBankAccountDTO

class TestCustomerBankAccountDTO(unittest.TestCase):
    """CustomerBankAccountDTO unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CustomerBankAccountDTO:
        """Test CustomerBankAccountDTO
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CustomerBankAccountDTO`
        """
        model = CustomerBankAccountDTO()
        if include_optional:
            return CustomerBankAccountDTO(
                id = '',
                entity_type = 'none',
                created_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                discriminator = '',
                etag = '',
                require_attention = True,
                has_errors = True,
                has_warnings = True,
                is_read_only = True,
                organisation_id = '',
                customer_id = '',
                active_mandate = billing_client.models.customer_mandate_dto.CustomerMandateDTO(
                    number = '', 
                    signed_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    cancelled_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    type = null, 
                    status = null, ),
                customer_mandates = [
                    billing_client.models.customer_mandate_dto.CustomerMandateDTO(
                        number = '', 
                        signed_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        cancelled_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        type = null, 
                        status = null, )
                    ],
                iban = '',
                bic = '',
                added_from_incoming_banking_transaction = True,
                is_default = True,
                last_used_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f')
            )
        else:
            return CustomerBankAccountDTO(
        )
        """

    def testCustomerBankAccountDTO(self):
        """Test CustomerBankAccountDTO"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
