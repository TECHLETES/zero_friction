# coding: utf-8

"""
    Billing

    Billing API

    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from billing_client.models.property_group_calculation_configuration_dto import PropertyGroupCalculationConfigurationDTO

class TestPropertyGroupCalculationConfigurationDTO(unittest.TestCase):
    """PropertyGroupCalculationConfigurationDTO unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PropertyGroupCalculationConfigurationDTO:
        """Test PropertyGroupCalculationConfigurationDTO
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PropertyGroupCalculationConfigurationDTO`
        """
        model = PropertyGroupCalculationConfigurationDTO()
        if include_optional:
            return PropertyGroupCalculationConfigurationDTO(
                name = '',
                id = '',
                service_location_ids = [
                    ''
                    ],
                billing_items = [
                    billing_client.models.calculation_configuration_billing_item_dto.CalculationConfigurationBillingItemDTO(
                        billing_item_id = '', 
                        deviating_tariff_calculation = True, 
                        tariff_formula = null, 
                        tariff_validation_result = null, )
                    ]
            )
        else:
            return PropertyGroupCalculationConfigurationDTO(
        )
        """

    def testPropertyGroupCalculationConfigurationDTO(self):
        """Test PropertyGroupCalculationConfigurationDTO"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
