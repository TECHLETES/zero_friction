# coding: utf-8

"""
    Billing

    Billing API

    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from billing_client.api.billing_completenesses_api import BillingCompletenessesApi


class TestBillingCompletenessesApi(unittest.TestCase):
    """BillingCompletenessesApi unit test stubs"""

    def setUp(self) -> None:
        self.api = BillingCompletenessesApi()

    def tearDown(self) -> None:
        pass

    def test_filter_all_billing_completenesses(self) -> None:
        """Test case for filter_all_billing_completenesses

        Retrieves all billing completenesses based on the provided query parameters.
        """
        pass

    def test_get_billing_completeness(self) -> None:
        """Test case for get_billing_completeness

        Retrieves a specific billing completeness by its ID.
        """
        pass

    def test_get_billingcompletenesses_billingcompletenessid_estimations_errors(self) -> None:
        """Test case for get_billingcompletenesses_billingcompletenessid_estimations_errors

        Retrieves validation errors for the estimated billing completeness by its ID.
        """
        pass

    def test_get_billingcompletenesses_billingrelationid_insights(self) -> None:
        """Test case for get_billingcompletenesses_billingrelationid_insights

        Retrieves billing completeness insights for a specific billing relation ID.
        """
        pass

    def test_get_estimated_billing_completeness(self) -> None:
        """Test case for get_estimated_billing_completeness

        Retrieves the estimated billing completeness for a specific billing completeness ID.
        """
        pass

    def test_post_billingcompletenesses_billingcompletenessid(self) -> None:
        """Test case for post_billingcompletenesses_billingcompletenessid

        Triggers billing for a specific billing completeness.
        """
        pass

    def test_post_billingcompletenesses_billingcompletenessid_billintermediately(self) -> None:
        """Test case for post_billingcompletenesses_billingcompletenessid_billintermediately

        Bills a specific billing completeness intermediately.
        """
        pass

    def test_post_billingcompletenesses_billingcompletenessid_manuallyclose(self) -> None:
        """Test case for post_billingcompletenesses_billingcompletenessid_manuallyclose

        Manually closes a specific billing completeness.
        """
        pass

    def test_post_billingcompletenesses_billingcompletenessid_reopen(self) -> None:
        """Test case for post_billingcompletenesses_billingcompletenessid_reopen

        Reopens a manually closed billing completeness.
        """
        pass

    def test_post_billingcompletenesses_billingrelationid_changenextinvoiceenddate(self) -> None:
        """Test case for post_billingcompletenesses_billingrelationid_changenextinvoiceenddate

        Changes the next invoice end date for a specific billing relation.
        """
        pass

    def test_post_billingcompletenesses_bulk_billintermediately(self) -> None:
        """Test case for post_billingcompletenesses_bulk_billintermediately

        Bills multiple billing completenesses intermediately in bulk.
        """
        pass

    def test_post_billingcompletenesses_bulk_manuallyclose(self) -> None:
        """Test case for post_billingcompletenesses_bulk_manuallyclose

        Manually closes multiple billing completenesses in bulk.
        """
        pass

    def test_post_billingcompletenesses_bulk_reopen(self) -> None:
        """Test case for post_billingcompletenesses_bulk_reopen

        Reopens multiple manually closed billing completenesses in bulk.
        """
        pass

    def test_post_billingcompletenesses_bulk_triggerbilling(self) -> None:
        """Test case for post_billingcompletenesses_bulk_triggerbilling

        Triggers billing for multiple billing completenesses in bulk.
        """
        pass

    def test_post_billingcompletenesses_filter_overviewcount(self) -> None:
        """Test case for post_billingcompletenesses_filter_overviewcount

        Retrieves the overview count of billing completeness based on the provided query parameters.
        """
        pass


if __name__ == '__main__':
    unittest.main()
