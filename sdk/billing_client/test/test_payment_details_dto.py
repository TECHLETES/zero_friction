# coding: utf-8

"""
    Billing

    Billing API

    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from billing_client.models.payment_details_dto import PaymentDetailsDTO

class TestPaymentDetailsDTO(unittest.TestCase):
    """PaymentDetailsDTO unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PaymentDetailsDTO:
        """Test PaymentDetailsDTO
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PaymentDetailsDTO`
        """
        model = PaymentDetailsDTO()
        if include_optional:
            return PaymentDetailsDTO(
                paid = True,
                current_payment_status = 'readyforpaymentcollection',
                payment_reference = '',
                payment_method = 'sct',
                direct_debit_collection_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                amount_of_times_retried = 56,
                status_history = [
                    billing_client.models.payment_status_history_dto.PaymentStatusHistoryDTO(
                        payment_status = null, 
                        outgoing_banking_transaction_id = '', 
                        outgoing_banking_transaction_identification = '', 
                        outgoing_mutation_id = '', 
                        outgoing_mutation_description = '', 
                        incoming_banking_transaction_id = '', 
                        incoming_banking_transaction_identification = '', 
                        incoming_mutation_id = '', 
                        incoming_mutation_description = '', 
                        reversal_reason = null, 
                        reversal_additional_information = '', 
                        mutation_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                    ]
            )
        else:
            return PaymentDetailsDTO(
        )
        """

    def testPaymentDetailsDTO(self):
        """Test PaymentDetailsDTO"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
