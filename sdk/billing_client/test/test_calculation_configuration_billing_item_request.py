# coding: utf-8

"""
    Billing

    Billing API

    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from billing_client.models.calculation_configuration_billing_item_request import CalculationConfigurationBillingItemRequest

class TestCalculationConfigurationBillingItemRequest(unittest.TestCase):
    """CalculationConfigurationBillingItemRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CalculationConfigurationBillingItemRequest:
        """Test CalculationConfigurationBillingItemRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CalculationConfigurationBillingItemRequest`
        """
        model = CalculationConfigurationBillingItemRequest()
        if include_optional:
            return CalculationConfigurationBillingItemRequest(
                billing_item_id = '',
                deviating_tariff_calculation = True,
                tariff_formula = billing_client.models.tariff_formula_dto.TariffFormulaDTO(
                    functions = {
                        'key' : billing_client.models.formula_function_instance_dto.FormulaFunctionInstanceDTO(
                            function_type = null, 
                            input_parameters = [
                                billing_client.models.formula_function_input_parameter_dto.FormulaFunctionInputParameterDTO(
                                    name = '', 
                                    reference_type = null, 
                                    reference_type_parameters = null, )
                                ], 
                            output_parameter_name = '', )
                        }, )
            )
        else:
            return CalculationConfigurationBillingItemRequest(
        )
        """

    def testCalculationConfigurationBillingItemRequest(self):
        """Test CalculationConfigurationBillingItemRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
