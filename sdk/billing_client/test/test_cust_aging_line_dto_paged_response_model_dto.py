# coding: utf-8

"""
    Billing

    Billing API

    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from billing_client.models.cust_aging_line_dto_paged_response_model_dto import CustAgingLineDTOPagedResponseModelDTO

class TestCustAgingLineDTOPagedResponseModelDTO(unittest.TestCase):
    """CustAgingLineDTOPagedResponseModelDTO unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CustAgingLineDTOPagedResponseModelDTO:
        """Test CustAgingLineDTOPagedResponseModelDTO
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CustAgingLineDTOPagedResponseModelDTO`
        """
        model = CustAgingLineDTOPagedResponseModelDTO()
        if include_optional:
            return CustAgingLineDTOPagedResponseModelDTO(
                results = [
                    billing_client.models.cust_aging_line_dto.CustAgingLineDTO(
                        transaction_id = '', 
                        transaction_reference_type = '', 
                        transaction_reference_id = '', 
                        reference_number = '', 
                        open_amount = 1.337, 
                        display_name = '', 
                        customer_account_number = '', 
                        customer_type = null, 
                        transaction_type = null, 
                        transaction_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        transaction_due_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        open_credit = 1.337, 
                        total_open_not_overdue = 1.337, 
                        total_overdue30_d = 1.337, 
                        total_overdue60_d = 1.337, 
                        total_overdue90_d = 1.337, 
                        total_overdue_over90_d = 1.337, 
                        property_groups = [
                            billing_client.models.property_group_reference_dto.PropertyGroupReferenceDTO(
                                id = '', 
                                name = '', )
                            ], 
                        collection_case_details = null, )
                    ],
                has_next_page = True,
                next_page_token = '',
                total_records = 56,
                sortable_fields = [
                    ''
                    ],
                aggregate_details = [
                    billing_client.models.aggregate_details_dto.AggregateDetailsDTO(
                        code = '', 
                        translation = '', 
                        value = 1.337, 
                        value_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                    ]
            )
        else:
            return CustAgingLineDTOPagedResponseModelDTO(
        )
        """

    def testCustAgingLineDTOPagedResponseModelDTO(self):
        """Test CustAgingLineDTOPagedResponseModelDTO"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
