# coding: utf-8

"""
    Billing

    Billing API

    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from billing_client.models.create_invoice_request import CreateInvoiceRequest

class TestCreateInvoiceRequest(unittest.TestCase):
    """CreateInvoiceRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CreateInvoiceRequest:
        """Test CreateInvoiceRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CreateInvoiceRequest`
        """
        model = CreateInvoiceRequest()
        if include_optional:
            return CreateInvoiceRequest(
                invoice_num = '',
                status = 'created',
                invoice_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                invoice_type = 'advance',
                remaining_invoice_amount = 1.337,
                total_invoice_amount_excl_vat = 1.337,
                total_invoice_amount_incl_vat = 1.337,
                contract_id = '',
                credited_invoice_id = '',
                contract_number = '',
                customer_id = '',
                company_bank_account_id = '',
                property_groups = [
                    billing_client.models.property_group_reference_dto.PropertyGroupReferenceDTO(
                        id = '', 
                        name = '', )
                    ],
                payment_method = 'sct',
                payment_reference = '',
                external_reference = '',
                period_start_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                period_end_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                due_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                note_to_customer = '',
                sent = 'notsent',
                lines = [
                    billing_client.models.create_invoice_lines_request.CreateInvoiceLinesRequest(
                        quantity = 1.337, 
                        unit_of_measure = null, 
                        billing_item_id = '', 
                        unit_price = 1.337, 
                        amount_incl_vat = 1.337, 
                        amount_excl_vat = 1.337, 
                        line_type = null, 
                        service_location_id = '', 
                        start_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        end_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        tax_code_id = '', 
                        description = '', )
                    ]
            )
        else:
            return CreateInvoiceRequest(
        )
        """

    def testCreateInvoiceRequest(self):
        """Test CreateInvoiceRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
