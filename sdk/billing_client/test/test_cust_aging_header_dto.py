# coding: utf-8

"""
    Billing

    Billing API

    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from billing_client.models.cust_aging_header_dto import CustAgingHeaderDTO

class TestCustAgingHeaderDTO(unittest.TestCase):
    """CustAgingHeaderDTO unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CustAgingHeaderDTO:
        """Test CustAgingHeaderDTO
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CustAgingHeaderDTO`
        """
        model = CustAgingHeaderDTO()
        if include_optional:
            return CustAgingHeaderDTO(
                debtor = billing_client.models.debtor_dto.DebtorDTO(
                    customer_id = '', 
                    display_name = '', 
                    customer_account_number = '', 
                    customer_type = null, 
                    customer_group = null, ),
                last_payment_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                oldest_open_debit_transaction_reference = '',
                open_credits = 1.337,
                total_credit_tx_open = 56,
                open_debits = 1.337,
                total_debit_tx_open = 56,
                total_open_not_overdue = 1.337,
                total_open_not_overdue_tx = 1.337,
                total_overdue30_d = 1.337,
                total_overdue30_dtx = 56,
                total_overdue60_d = 1.337,
                total_overdue60_dtx = 56,
                total_overdue90_d = 1.337,
                total_overdue90_dtx = 56,
                total_overdue_over90_d = 1.337,
                total_overdue_over90_dtx = 56,
                total_collection_costs_open = 1.337,
                total_collection_cost_tx = 56,
                total_open = 1.337,
                total_open_tx = 56,
                flow_active = True,
                property_groups = [
                    billing_client.models.property_group_reference_dto.PropertyGroupReferenceDTO(
                        id = '', 
                        name = '', )
                    ]
            )
        else:
            return CustAgingHeaderDTO(
        )
        """

    def testCustAgingHeaderDTO(self):
        """Test CustAgingHeaderDTO"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
