# coding: utf-8

"""
    Forecasting

    Forecasting API

    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from forecasting_client.models.consumer_group_dto import ConsumerGroupDTO

class TestConsumerGroupDTO(unittest.TestCase):
    """ConsumerGroupDTO unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ConsumerGroupDTO:
        """Test ConsumerGroupDTO
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ConsumerGroupDTO`
        """
        model = ConsumerGroupDTO()
        if include_optional:
            return ConsumerGroupDTO(
                id = '',
                entity_type = 'none',
                created_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                discriminator = '',
                etag = '',
                require_attention = True,
                has_errors = True,
                has_warnings = True,
                is_read_only = True,
                organisation_id = '',
                code = '',
                description = '',
                utility_type = 'none',
                unit_of_measure = 'none',
                estimated_annual_volume = 1.337,
                load_profile_id = '',
                origin = 'manual',
                last_recalculated = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                deleted = True
            )
        else:
            return ConsumerGroupDTO(
        )
        """

    def testConsumerGroupDTO(self):
        """Test ConsumerGroupDTO"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
