# coding: utf-8

"""
    Forecasting

    Forecasting API

    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from forecasting_client.models.estimable_contract_dto import EstimableContractDTO

class TestEstimableContractDTO(unittest.TestCase):
    """EstimableContractDTO unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> EstimableContractDTO:
        """Test EstimableContractDTO
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `EstimableContractDTO`
        """
        model = EstimableContractDTO()
        if include_optional:
            return EstimableContractDTO(
                id = '',
                entity_type = 'none',
                created_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                discriminator = '',
                etag = '',
                require_attention = True,
                has_errors = True,
                has_warnings = True,
                is_read_only = True,
                organisation_id = '',
                contract_status = 'draft',
                supply_start_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                supply_end_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                supply_start_year = 56,
                supply_end_year = 56,
                contract_services = [
                    forecasting_client.models.estimable_contracted_service_dto.EstimableContractedServiceDTO(
                        service_location_id = '', 
                        property_group_id = '', 
                        utility_type = null, 
                        metering_type = null, 
                        unit_of_measure = null, 
                        external_identifier = '', 
                        consumer_group_id = '', 
                        supply_start_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        supply_end_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        supply_start_year = 56, 
                        supply_end_year = 56, 
                        estimated_annual_volumes = [
                            forecasting_client.models.estimated_annual_volume_dto.EstimatedAnnualVolumeDTO(
                                year = 56, 
                                value = 1.337, 
                                origin = null, 
                                last_recalculated = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                            ], )
                    ],
                calculation_years_in_progress = [
                    56
                    ],
                customer_id = '',
                time_zone = '',
                is_estimation_in_progress = True,
                is_invoice_estimation_in_progress = True
            )
        else:
            return EstimableContractDTO(
        )
        """

    def testEstimableContractDTO(self):
        """Test EstimableContractDTO"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
