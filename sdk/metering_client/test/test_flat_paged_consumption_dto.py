# coding: utf-8

"""
    Metering

    MeterData API

    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from metering_client.models.flat_paged_consumption_dto import FlatPagedConsumptionDTO

class TestFlatPagedConsumptionDTO(unittest.TestCase):
    """FlatPagedConsumptionDTO unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> FlatPagedConsumptionDTO:
        """Test FlatPagedConsumptionDTO
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `FlatPagedConsumptionDTO`
        """
        model = FlatPagedConsumptionDTO()
        if include_optional:
            return FlatPagedConsumptionDTO(
                external_channel_identifier = '',
                complete = True,
                user_id = '',
                production_day = 56,
                production_day_start_utc = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                production_day_end_utc = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                start_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                end_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                value = 1.337
            )
        else:
            return FlatPagedConsumptionDTO(
        )
        """

    def testFlatPagedConsumptionDTO(self):
        """Test FlatPagedConsumptionDTO"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
