# coding: utf-8

"""
    Metering

    MeterData API

    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from metering_client.models.property_group_metering_configuration_dto import PropertyGroupMeteringConfigurationDTO

class TestPropertyGroupMeteringConfigurationDTO(unittest.TestCase):
    """PropertyGroupMeteringConfigurationDTO unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PropertyGroupMeteringConfigurationDTO:
        """Test PropertyGroupMeteringConfigurationDTO
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PropertyGroupMeteringConfigurationDTO`
        """
        model = PropertyGroupMeteringConfigurationDTO()
        if include_optional:
            return PropertyGroupMeteringConfigurationDTO(
                id = '',
                entity_type = 'none',
                created_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                discriminator = '',
                etag = '',
                require_attention = True,
                has_errors = True,
                has_warnings = True,
                is_read_only = True,
                organisation_id = '',
                property_group = metering_client.models.property_group_reference_dto.PropertyGroupReferenceDTO(
                    id = '', 
                    name = '', ),
                output_channels = [
                    metering_client.models.output_channel_dto.OutputChannelDTO(
                        id = '', 
                        name = '', 
                        formula = null, 
                        unit_of_measure = null, 
                        metering_type = null, 
                        utility_type = null, 
                        validation_result = null, )
                    ],
                validated = True
            )
        else:
            return PropertyGroupMeteringConfigurationDTO(
        )
        """

    def testPropertyGroupMeteringConfigurationDTO(self):
        """Test PropertyGroupMeteringConfigurationDTO"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
