# coding: utf-8

"""
    Metering

    MeterData API

    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from metering_client.models.imported_measurements_overview_dto import ImportedMeasurementsOverviewDTO

class TestImportedMeasurementsOverviewDTO(unittest.TestCase):
    """ImportedMeasurementsOverviewDTO unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ImportedMeasurementsOverviewDTO:
        """Test ImportedMeasurementsOverviewDTO
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ImportedMeasurementsOverviewDTO`
        """
        model = ImportedMeasurementsOverviewDTO()
        if include_optional:
            return ImportedMeasurementsOverviewDTO(
                measurements = metering_client.models.imported_measurement_processing_result_dto_paged_response_model_dto.ImportedMeasurementProcessingResultDTOPagedResponseModelDTO(
                    results = [
                        metering_client.models.imported_measurement_processing_result_dto.ImportedMeasurementProcessingResultDTO(
                            meter_serial_number = '', 
                            external_channel_identifier = '', 
                            external_reference = '', 
                            metering_type = null, 
                            utility_type = null, 
                            direction = null, 
                            unit_of_measure = null, 
                            reading_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            time_of_use = '', 
                            reading_value = 1.337, 
                            error_code = '', 
                            line_number = 56, 
                            processed_on = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            was_ignored = True, )
                        ], 
                    has_next_page = True, 
                    next_page_token = '', 
                    total_records = 56, 
                    sortable_fields = [
                        ''
                        ], 
                    aggregate_details = [
                        metering_client.models.aggregate_details_dto.AggregateDetailsDTO(
                            code = '', 
                            translation = '', 
                            value = 1.337, 
                            value_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                        ], ),
                total_invalid_measurements = 56,
                total_valid_measurements = 56,
                total_measurements_not_processed = 56,
                total_measurements_processed = 56,
                total_lines_with_format_issues = 56
            )
        else:
            return ImportedMeasurementsOverviewDTO(
        )
        """

    def testImportedMeasurementsOverviewDTO(self):
        """Test ImportedMeasurementsOverviewDTO"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
