# coding: utf-8

"""
    Metering

    MeterData API

    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from metering_client.models.update_property_group_metering_configuration_request import UpdatePropertyGroupMeteringConfigurationRequest

class TestUpdatePropertyGroupMeteringConfigurationRequest(unittest.TestCase):
    """UpdatePropertyGroupMeteringConfigurationRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> UpdatePropertyGroupMeteringConfigurationRequest:
        """Test UpdatePropertyGroupMeteringConfigurationRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `UpdatePropertyGroupMeteringConfigurationRequest`
        """
        model = UpdatePropertyGroupMeteringConfigurationRequest()
        if include_optional:
            return UpdatePropertyGroupMeteringConfigurationRequest(
                output_channels = [
                    metering_client.models.property_group_metering_configuration_output_channel_request.PropertyGroupMeteringConfigurationOutputChannelRequest(
                        id = '', 
                        name = '', 
                        unit_of_measure = null, 
                        metering_type = null, 
                        formula = null, 
                        utility_type = null, )
                    ]
            )
        else:
            return UpdatePropertyGroupMeteringConfigurationRequest(
        )
        """

    def testUpdatePropertyGroupMeteringConfigurationRequest(self):
        """Test UpdatePropertyGroupMeteringConfigurationRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
