# coding: utf-8

"""
    Metering

    MeterData API

    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from metering_client.models.metering_import_dto import MeteringImportDTO

class TestMeteringImportDTO(unittest.TestCase):
    """MeteringImportDTO unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> MeteringImportDTO:
        """Test MeteringImportDTO
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `MeteringImportDTO`
        """
        model = MeteringImportDTO()
        if include_optional:
            return MeteringImportDTO(
                id = '',
                entity_type = 'none',
                created_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                discriminator = '',
                etag = '',
                require_attention = True,
                has_errors = True,
                has_warnings = True,
                is_read_only = True,
                organisation_id = '',
                type = 'measurements',
                custom_file_format_id = '',
                data_import = metering_client.models.metering_import_data_import_dto.MeteringImportDataImportDto(
                    id = '', 
                    name = '', ),
                data_file_format_settings = metering_client.models.metering_import_data_file_format_dto.MeteringImportDataFileFormatDto(
                    name = '', 
                    delimiter = '', 
                    date_time_format = '', 
                    time_zone = '', 
                    decimal_separator = '', 
                    thousands_separator = '', 
                    culture = '', 
                    first_line_is_header = True, ),
                metering_format = 'elvaco_1104',
                communication_type = 'sftp',
                automatically_process = True,
                status = 'uploading',
                file_name = '',
                source = '',
                interpretation_result = metering_client.models.metering_import_statistic_dto.MeteringImportStatisticDTO(
                    amount_success = 56, 
                    amount_failed = 56, 
                    amount_ignored = 56, ),
                validation_result = metering_client.models.metering_import_statistic_dto.MeteringImportStatisticDTO(
                    amount_success = 56, 
                    amount_failed = 56, 
                    amount_ignored = 56, ),
                processing_result = metering_client.models.metering_import_statistic_dto.MeteringImportStatisticDTO(
                    amount_success = 56, 
                    amount_failed = 56, 
                    amount_ignored = 56, )
            )
        else:
            return MeteringImportDTO(
        )
        """

    def testMeteringImportDTO(self):
        """Test MeteringImportDTO"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
