# coding: utf-8

"""
    Metering

    MeterData API

    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from metering_client.api.measurements_api import MeasurementsApi


class TestMeasurementsApi(unittest.TestCase):
    """MeasurementsApi unit test stubs"""

    def setUp(self) -> None:
        self.api = MeasurementsApi()

    def tearDown(self) -> None:
        pass

    def test_delete_measurements_extchuuid_delete_measurementid(self) -> None:
        """Test case for delete_measurements_extchuuid_delete_measurementid

        Deletes a specific measurement from an external channel.
        """
        pass

    def test_get_measurements_extchuuid(self) -> None:
        """Test case for get_measurements_extchuuid

        Gets measurement values for a specific external channel identifier within a date range.
        """
        pass

    def test_get_measurements_extchuuid_flat(self) -> None:
        """Test case for get_measurements_extchuuid_flat

        Gets flat (non-paged) measurement values for a specific external channel within a date range.
        """
        pass

    def test_get_measurements_m_meteruuid(self) -> None:
        """Test case for get_measurements_m_meteruuid

        Gets adjacent measurement pairs for a meter at a specific measurement date.
        """
        pass

    def test_post_measurements(self) -> None:
        """Test case for post_measurements

        Adds a new measurement for an external channel.
        """
        pass

    def test_post_measurements_bulk_delete(self) -> None:
        """Test case for post_measurements_bulk_delete

        Bulk deletes measurements based on specified criteria.
        """
        pass

    def test_post_measurements_export_values(self) -> None:
        """Test case for post_measurements_export_values

        Exports measurement values for a list of meters within a date range.
        """
        pass

    def test_post_measurements_validate(self) -> None:
        """Test case for post_measurements_validate

        Validates measurements against business rules without persisting them.
        """
        pass


if __name__ == '__main__':
    unittest.main()
