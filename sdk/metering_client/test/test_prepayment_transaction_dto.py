# coding: utf-8

"""
    Metering

    MeterData API

    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from metering_client.models.prepayment_transaction_dto import PrepaymentTransactionDTO

class TestPrepaymentTransactionDTO(unittest.TestCase):
    """PrepaymentTransactionDTO unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PrepaymentTransactionDTO:
        """Test PrepaymentTransactionDTO
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PrepaymentTransactionDTO`
        """
        model = PrepaymentTransactionDTO()
        if include_optional:
            return PrepaymentTransactionDTO(
                id = '',
                entity_type = 'none',
                created_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                discriminator = '',
                etag = '',
                require_attention = True,
                has_errors = True,
                has_warnings = True,
                is_read_only = True,
                organisation_id = '',
                meter = metering_client.models.meter_reference.MeterReference(
                    meter_id = '', 
                    serial_number = '', ),
                channel_identfier = '',
                customer_id = '',
                contract_id = '',
                processed_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                amount = 1.337,
                type = 'creditreset',
                origin = 'paypoint',
                status = 'pending',
                external_reference = '',
                operation_id = '',
                deleted = True
            )
        else:
            return PrepaymentTransactionDTO(
        )
        """

    def testPrepaymentTransactionDTO(self):
        """Test PrepaymentTransactionDTO"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
