# coding: utf-8

"""
    Metering

    MeterData API

    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from metering_client.models.output_channel_dto import OutputChannelDTO

class TestOutputChannelDTO(unittest.TestCase):
    """OutputChannelDTO unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> OutputChannelDTO:
        """Test OutputChannelDTO
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `OutputChannelDTO`
        """
        model = OutputChannelDTO()
        if include_optional:
            return OutputChannelDTO(
                id = '',
                name = '',
                formula = metering_client.models.metering_formula_dto.MeteringFormulaDTO(
                    functions = {
                        'key' : metering_client.models.formula_function_instance_dto.FormulaFunctionInstanceDTO(
                            function_type = null, 
                            input_parameters = [
                                metering_client.models.formula_function_input_parameter_dto.FormulaFunctionInputParameterDTO(
                                    name = '', 
                                    reference_type = null, 
                                    reference_type_parameters = null, )
                                ], 
                            output_parameter_name = '', )
                        }, ),
                unit_of_measure = 'none',
                metering_type = 'none',
                utility_type = 'none',
                validation_result = metering_client.models.formula_validation_result_dto.FormulaValidationResultDTO(
                    valid = True, 
                    general_validation_errors = [
                        metering_client.models.localised_error_dto.LocalisedErrorDTO(
                            key = null, 
                            correlation_id = '', 
                            message = '', 
                            message_values = [
                                metering_client.models.localised_error_dto_message_value.LocalisedErrorDTOMessageValue(
                                    data_type = null, 
                                    value = '', 
                                    capitalize = True, )
                                ], )
                        ], 
                    function_validation_errors = [
                        metering_client.models.formula_validation_result_function_validation_error_dto.FormulaValidationResultFunctionValidationErrorDTO(
                            function_position = 56, 
                            error = null, 
                            value = '', )
                        ], )
            )
        else:
            return OutputChannelDTO(
        )
        """

    def testOutputChannelDTO(self):
        """Test OutputChannelDTO"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
