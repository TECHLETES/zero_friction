# coding: utf-8

"""
    Metering

    MeterData API

    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from metering_client.api.service_consumptions_api import ServiceConsumptionsApi


class TestServiceConsumptionsApi(unittest.TestCase):
    """ServiceConsumptionsApi unit test stubs"""

    def setUp(self) -> None:
        self.api = ServiceConsumptionsApi()

    def tearDown(self) -> None:
        pass

    def test_get_consumption_date_ranges_for_service_location(self) -> None:
        """Test case for get_consumption_date_ranges_for_service_location

        Gets consumption date ranges available for a service location
        """
        pass

    def test_get_consumptions_for_service_location_grouped_on_range(self) -> None:
        """Test case for get_consumptions_for_service_location_grouped_on_range

        Gets consumption data for a service location grouped by range
        """
        pass

    def test_get_serviceconsumptions_sluuid(self) -> None:
        """Test case for get_serviceconsumptions_sluuid

        Gets paginated consumption data for a service location
        """
        pass

    def test_get_serviceconsumptions_sluuid_flat(self) -> None:
        """Test case for get_serviceconsumptions_sluuid_flat

        Gets flat consumption data for a service location with optional grouping by period
        """
        pass

    def test_get_serviceconsumptions_sluuid_raw(self) -> None:
        """Test case for get_serviceconsumptions_sluuid_raw

        Gets raw consumption data for a service location
        """
        pass

    def test_get_serviceconsumptions_sluuid_types(self) -> None:
        """Test case for get_serviceconsumptions_sluuid_types

        Gets available consumption types for a service location
        """
        pass

    def test_post_serviceconsumptions_aggregatedperperiod(self) -> None:
        """Test case for post_serviceconsumptions_aggregatedperperiod

        Gets aggregated service consumptions per period for a list of service locations
        """
        pass

    def test_post_serviceconsumptions_buckets(self) -> None:
        """Test case for post_serviceconsumptions_buckets

        Gets consumption data for a service locations grouped by provided buckets
        """
        pass

    def test_post_serviceconsumptions_export_sum(self) -> None:
        """Test case for post_serviceconsumptions_export_sum

        Gets sum of consumption values for a list of service locations
        """
        pass

    def test_post_serviceconsumptions_yearlyaverage(self) -> None:
        """Test case for post_serviceconsumptions_yearlyaverage

        Gets yearly average consumption per service location
        """
        pass


if __name__ == '__main__':
    unittest.main()
