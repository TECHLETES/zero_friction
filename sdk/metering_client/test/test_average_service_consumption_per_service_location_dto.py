# coding: utf-8

"""
    Metering

    MeterData API

    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from metering_client.models.average_service_consumption_per_service_location_dto import AverageServiceConsumptionPerServiceLocationDTO

class TestAverageServiceConsumptionPerServiceLocationDTO(unittest.TestCase):
    """AverageServiceConsumptionPerServiceLocationDTO unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AverageServiceConsumptionPerServiceLocationDTO:
        """Test AverageServiceConsumptionPerServiceLocationDTO
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AverageServiceConsumptionPerServiceLocationDTO`
        """
        model = AverageServiceConsumptionPerServiceLocationDTO()
        if include_optional:
            return AverageServiceConsumptionPerServiceLocationDTO(
                total = 1.337,
                amount_of_days = 56,
                utility_type = 'none',
                unit_of_measure = 'none',
                service_location_id = '',
                average_per_year = 1.337,
                period = 56
            )
        else:
            return AverageServiceConsumptionPerServiceLocationDTO(
        )
        """

    def testAverageServiceConsumptionPerServiceLocationDTO(self):
        """Test AverageServiceConsumptionPerServiceLocationDTO"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
