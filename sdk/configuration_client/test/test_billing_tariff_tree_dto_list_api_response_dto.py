# coding: utf-8

"""
    Configuration

    Configuration API

    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from configuration_client.models.billing_tariff_tree_dto_list_api_response_dto import BillingTariffTreeDTOListApiResponseDTO

class TestBillingTariffTreeDTOListApiResponseDTO(unittest.TestCase):
    """BillingTariffTreeDTOListApiResponseDTO unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> BillingTariffTreeDTOListApiResponseDTO:
        """Test BillingTariffTreeDTOListApiResponseDTO
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `BillingTariffTreeDTOListApiResponseDTO`
        """
        model = BillingTariffTreeDTOListApiResponseDTO()
        if include_optional:
            return BillingTariffTreeDTOListApiResponseDTO(
                errors = [
                    configuration_client.models.localised_error_dto.LocalisedErrorDTO(
                        key = null, 
                        correlation_id = '', 
                        message = '', 
                        message_values = [
                            configuration_client.models.localised_error_dto_message_value.LocalisedErrorDTOMessageValue(
                                data_type = null, 
                                value = '', 
                                capitalize = True, )
                            ], )
                    ],
                success = True,
                applicable_entities_count = 56,
                requested_entities_count = 56,
                succeeded_entities_count = 56,
                is_synchronous = True,
                data = [
                    configuration_client.models.billing_tariff_tree_dto.BillingTariffTreeDTO(
                        id = '', 
                        billing_item_id = '', 
                        product_id = '', 
                        activity_period = null, 
                        currently_active = True, 
                        nodes = [
                            configuration_client.models.billing_tariff_node_dto.BillingTariffNodeDTO(
                                billing_tariff_id = '', 
                                calculation_parameters = null, 
                                condition = null, )
                            ], )
                    ]
            )
        else:
            return BillingTariffTreeDTOListApiResponseDTO(
        )
        """

    def testBillingTariffTreeDTOListApiResponseDTO(self):
        """Test BillingTariffTreeDTOListApiResponseDTO"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
