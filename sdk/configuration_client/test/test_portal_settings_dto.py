# coding: utf-8

"""
    Configuration

    Configuration API

    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from configuration_client.models.portal_settings_dto import PortalSettingsDTO

class TestPortalSettingsDTO(unittest.TestCase):
    """PortalSettingsDTO unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PortalSettingsDTO:
        """Test PortalSettingsDTO
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PortalSettingsDTO`
        """
        model = PortalSettingsDTO()
        if include_optional:
            return PortalSettingsDTO(
                id = '',
                entity_type = 'none',
                created_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                discriminator = '',
                etag = '',
                require_attention = True,
                has_errors = True,
                has_warnings = True,
                is_read_only = True,
                tenant_id = '',
                primary_color = '',
                secondary_color = '',
                fav_icon = '',
                logo = '',
                contact = configuration_client.models.portal_organisation_contact_settings_dto.PortalOrganisationContactSettingsDTO(
                    email_address = '', 
                    contact_url = '', 
                    telephone_number = '', 
                    sepa_mandate_terms_and_conditions_urls = {
                        'key' : ''
                        }, 
                    terms_and_conditions_urls = {
                        'key' : ''
                        }, ),
                portal_public_urls = [
                    ''
                    ],
                billing_settings = configuration_client.models.portal_billing_settings_dto.PortalBillingSettingsDTO(
                    allow_customer_to_change_advance_amount = True, 
                    hide_invoice_section = True, ),
                advance_change_limit = configuration_client.models.portal_advance_change_limit_dto.PortalAdvanceChangeLimitDTO(
                    range_min = 1.337, 
                    range_max = 1.337, 
                    type = null, ),
                is_enabled = True,
                page_notifications = [
                    configuration_client.models.portal_page_notification_dto.PortalPageNotificationDTO(
                        page_identifier = null, 
                        notification_type = null, 
                        translated_content = {
                            'key' : ''
                            }, )
                    ]
            )
        else:
            return PortalSettingsDTO(
        )
        """

    def testPortalSettingsDTO(self):
        """Test PortalSettingsDTO"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
