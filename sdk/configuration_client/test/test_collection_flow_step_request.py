# coding: utf-8

"""
    Configuration

    Configuration API

    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from configuration_client.models.collection_flow_step_request import CollectionFlowStepRequest

class TestCollectionFlowStepRequest(unittest.TestCase):
    """CollectionFlowStepRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CollectionFlowStepRequest:
        """Test CollectionFlowStepRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CollectionFlowStepRequest`
        """
        model = CollectionFlowStepRequest()
        if include_optional:
            return CollectionFlowStepRequest(
                id = '',
                name = '',
                trigger_days = 56,
                step_type = 'communication',
                charge_type = 'none',
                charge_parameters = configuration_client.models.collection_charge_parameters_dto.CollectionChargeParametersDTO(
                    tax_code_id = '', ),
                communication_type = 'postal',
                message_title = '',
                communication_level = 'collection',
                communication_attachments = [
                    configuration_client.models.template_attachment_request.TemplateAttachmentRequest(
                        id = '', 
                        internal_file_path = '', 
                        file_name = '', )
                    ],
                localisation_level = 'none',
                localised_fields = [
                    ''
                    ],
                translated_fields = {
                    'key' : {
                        'key' : ''
                        }
                    }
            )
        else:
            return CollectionFlowStepRequest(
        )
        """

    def testCollectionFlowStepRequest(self):
        """Test CollectionFlowStepRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
