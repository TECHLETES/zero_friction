# coding: utf-8

"""
    Configuration

    Configuration API

    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from configuration_client.models.payment_parameters_dto_api_response_dto import PaymentParametersDTOApiResponseDTO

class TestPaymentParametersDTOApiResponseDTO(unittest.TestCase):
    """PaymentParametersDTOApiResponseDTO unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PaymentParametersDTOApiResponseDTO:
        """Test PaymentParametersDTOApiResponseDTO
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PaymentParametersDTOApiResponseDTO`
        """
        model = PaymentParametersDTOApiResponseDTO()
        if include_optional:
            return PaymentParametersDTOApiResponseDTO(
                errors = [
                    configuration_client.models.localised_error_dto.LocalisedErrorDTO(
                        key = null, 
                        correlation_id = '', 
                        message = '', 
                        message_values = [
                            configuration_client.models.localised_error_dto_message_value.LocalisedErrorDTOMessageValue(
                                data_type = null, 
                                value = '', 
                                capitalize = True, )
                            ], )
                    ],
                success = True,
                applicable_entities_count = 56,
                requested_entities_count = 56,
                succeeded_entities_count = 56,
                is_synchronous = True,
                data = configuration_client.models.payment_parameters_dto.PaymentParametersDTO(
                    id = '', 
                    entity_type = null, 
                    created_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    discriminator = '', 
                    _etag = '', 
                    require_attention = True, 
                    has_errors = True, 
                    has_warnings = True, 
                    is_read_only = True, 
                    organisation_id = '', 
                    retry_parameters = [
                        configuration_client.models.payment_retry_parameter_dto.PaymentRetryParameterDTO(
                            retry_attempt = 56, 
                            retry_action = null, 
                            value = 56, )
                        ], 
                    block_automatic_settlement = True, 
                    refund_payment_delay_in_days = 56, 
                    payment_terms_id = '', 
                    only_use_invoice_number_in_payment_references = True, 
                    default_collection_flow_id = '', )
            )
        else:
            return PaymentParametersDTOApiResponseDTO(
        )
        """

    def testPaymentParametersDTOApiResponseDTO(self):
        """Test PaymentParametersDTOApiResponseDTO"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
