# coding: utf-8

"""
    Configuration

    Configuration API

    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from configuration_client.models.update_custom_entity_property_dropdown_options_request import UpdateCustomEntityPropertyDropdownOptionsRequest

class TestUpdateCustomEntityPropertyDropdownOptionsRequest(unittest.TestCase):
    """UpdateCustomEntityPropertyDropdownOptionsRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> UpdateCustomEntityPropertyDropdownOptionsRequest:
        """Test UpdateCustomEntityPropertyDropdownOptionsRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `UpdateCustomEntityPropertyDropdownOptionsRequest`
        """
        model = UpdateCustomEntityPropertyDropdownOptionsRequest()
        if include_optional:
            return UpdateCustomEntityPropertyDropdownOptionsRequest(
                custom_entity_property_type_id = '',
                options = [
                    configuration_client.models.custom_entity_property_type_dropdown_option_dto.CustomEntityPropertyTypeDropdownOptionDTO(
                        id = '', 
                        option = '', 
                        deleted = True, )
                    ]
            )
        else:
            return UpdateCustomEntityPropertyDropdownOptionsRequest(
        )
        """

    def testUpdateCustomEntityPropertyDropdownOptionsRequest(self):
        """Test UpdateCustomEntityPropertyDropdownOptionsRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
