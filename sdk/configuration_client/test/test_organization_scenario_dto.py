# coding: utf-8

"""
    Configuration

    Configuration API

    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from configuration_client.models.organization_scenario_dto import OrganizationScenarioDTO

class TestOrganizationScenarioDTO(unittest.TestCase):
    """OrganizationScenarioDTO unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> OrganizationScenarioDTO:
        """Test OrganizationScenarioDTO
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `OrganizationScenarioDTO`
        """
        model = OrganizationScenarioDTO()
        if include_optional:
            return OrganizationScenarioDTO(
                id = '',
                entity_type = configuration_client.models.entity_type_dto.EntityTypeDTO(
                    entity_subject_type = null, 
                    entity_subject_sub_type = '', ),
                created_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                discriminator = '',
                etag = '',
                require_attention = True,
                has_errors = True,
                has_warnings = True,
                is_read_only = True,
                organisation_id = '',
                pdf_template = configuration_client.models.base_pdf_template_dto.BasePdfTemplateDTO(
                    file_name = '', 
                    use_case = null, 
                    use_build_in = True, 
                    custom_template_internal_file_path = '', 
                    custom_template_file_name = '', 
                    translation_status = null, 
                    envelope_settings = null, 
                    render_header_footer = True, 
                    header_text = '', 
                    footer_text = '', 
                    override_external_printing_checks = True, 
                    supports_external_printing = True, ),
                email_template = configuration_client.models.base_email_template_dto.BaseEmailTemplateDTO(
                    file_name = '', 
                    use_case = null, 
                    use_build_in = True, 
                    custom_template_internal_file_path = '', 
                    custom_template_file_name = '', 
                    translation_status = null, 
                    subject = '', 
                    attachments = [
                        configuration_client.models.template_attachment_dto.TemplateAttachmentDTO(
                            id = '', 
                            internal_file_path = '', 
                            file_name = '', )
                        ], ),
                default_communication_type = 'postal',
                translation_list_id = '',
                translation_list_history_id = '',
                data_type = 'invoice',
                entity_subject_type = 'none',
                entity_subject_sub_type = '',
                grouping_type = 'invoice',
                available_communication_types = [
                    'postal'
                    ]
            )
        else:
            return OrganizationScenarioDTO(
        )
        """

    def testOrganizationScenarioDTO(self):
        """Test OrganizationScenarioDTO"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
