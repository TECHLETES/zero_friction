# coding: utf-8

"""
    Configuration

    Configuration API

    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from configuration_client.api.accounting_api import AccountingApi


class TestAccountingApi(unittest.TestCase):
    """AccountingApi unit test stubs"""

    def setUp(self) -> None:
        self.api = AccountingApi()

    def tearDown(self) -> None:
        pass

    def test_get_accounting_generalledgers(self) -> None:
        """Test case for get_accounting_generalledgers

        Retrieves a paged list of general ledger codes, with optional filtering and sorting.
        """
        pass

    def test_get_accounting_generalledgers_mapping(self) -> None:
        """Test case for get_accounting_generalledgers_mapping

        Retrieves a paged list of items that are mapped or need to be mapped to a general ledger code. A category needs to be provided.
        """
        pass

    def test_get_accounting_generalledgers_unmapped_overviewcount(self) -> None:
        """Test case for get_accounting_generalledgers_unmapped_overviewcount

        Retrieves an overview count of all general ledger categories and the amount of items that still need mapping
        """
        pass

    def test_post_accounting_costcenters(self) -> None:
        """Test case for post_accounting_costcenters

        Creates or updates cost centers.  If a cost center already exists in the system, it will be updated instead of creating a new one.                The system identifies existing codes by matching the SourceEntityId in the Metadata property.
        """
        pass

    def test_post_accounting_costunits(self) -> None:
        """Test case for post_accounting_costunits

        Creates or updates cost units.  If a cost unit already exists in the system, it will be updated instead of creating a new one.                The system identifies existing codes by matching the SourceEntityId in the Metadata property.
        """
        pass

    def test_post_accounting_financialperiods(self) -> None:
        """Test case for post_accounting_financialperiods

        Creates or updates financial periods.  If a financial period already exists in the system, it will be updated instead of creating a new one.                The system identifies existing codes by matching the SourceEntityId in the Metadata property.
        """
        pass

    def test_post_accounting_generalledgers(self) -> None:
        """Test case for post_accounting_generalledgers

        Creates or updates general ledger codes.  If a general ledger code already exists in the system, it will be updated instead of creating a new one.                The system identifies existing codes by matching the SourceEntityId in the Metadata property.
        """
        pass


if __name__ == '__main__':
    unittest.main()
