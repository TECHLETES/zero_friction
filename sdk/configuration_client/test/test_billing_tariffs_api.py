# coding: utf-8

"""
    Configuration

    Configuration API

    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from configuration_client.api.billing_tariffs_api import BillingTariffsApi


class TestBillingTariffsApi(unittest.TestCase):
    """BillingTariffsApi unit test stubs"""

    def setUp(self) -> None:
        self.api = BillingTariffsApi()

    def tearDown(self) -> None:
        pass

    def test_delete_billingtariffs_b_billingitemid(self) -> None:
        """Test case for delete_billingtariffs_b_billingitemid

        Deletes a billing tariff tree for a specific billing item.
        """
        pass

    def test_get_billingtariffs(self) -> None:
        """Test case for get_billingtariffs

        Retrieves a paged list of billing tariffs with optional filtering and sorting.
        """
        pass

    def test_get_billingtariffs_b_billingitemid(self) -> None:
        """Test case for get_billingtariffs_b_billingitemid

        Retrieves billing tariff trees for a specific billing item.
        """
        pass

    def test_get_billingtariffs_billingtariffuuid(self) -> None:
        """Test case for get_billingtariffs_billingtariffuuid

        Retrieves a specific billing tariff by its identifier.
        """
        pass

    def test_post_billingtariffs_b_billingitemid(self) -> None:
        """Test case for post_billingtariffs_b_billingitemid

        Creates a billing tariff tree for a specific billing item.
        """
        pass

    def test_put_billingtariffs_b_billingitemid(self) -> None:
        """Test case for put_billingtariffs_b_billingitemid

        Updates an existing billing tariff tree for a specific billing item.
        """
        pass

    def test_put_billingtariffs_b_billingitemid_period(self) -> None:
        """Test case for put_billingtariffs_b_billingitemid_period

        Updates the period of a billing tariff tree for a specific billing item.
        """
        pass


if __name__ == '__main__':
    unittest.main()
