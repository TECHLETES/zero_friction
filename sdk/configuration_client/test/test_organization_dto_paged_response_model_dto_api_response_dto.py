# coding: utf-8

"""
    Configuration

    Configuration API

    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from configuration_client.models.organization_dto_paged_response_model_dto_api_response_dto import OrganizationDTOPagedResponseModelDTOApiResponseDTO

class TestOrganizationDTOPagedResponseModelDTOApiResponseDTO(unittest.TestCase):
    """OrganizationDTOPagedResponseModelDTOApiResponseDTO unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> OrganizationDTOPagedResponseModelDTOApiResponseDTO:
        """Test OrganizationDTOPagedResponseModelDTOApiResponseDTO
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `OrganizationDTOPagedResponseModelDTOApiResponseDTO`
        """
        model = OrganizationDTOPagedResponseModelDTOApiResponseDTO()
        if include_optional:
            return OrganizationDTOPagedResponseModelDTOApiResponseDTO(
                errors = [
                    configuration_client.models.localised_error_dto.LocalisedErrorDTO(
                        key = null, 
                        correlation_id = '', 
                        message = '', 
                        message_values = [
                            configuration_client.models.localised_error_dto_message_value.LocalisedErrorDTOMessageValue(
                                data_type = null, 
                                value = '', 
                                capitalize = True, )
                            ], )
                    ],
                success = True,
                applicable_entities_count = 56,
                requested_entities_count = 56,
                succeeded_entities_count = 56,
                is_synchronous = True,
                data = configuration_client.models.organization_dto_paged_response_model_dto.OrganizationDTOPagedResponseModelDTO(
                    results = [
                        configuration_client.models.organization_dto.OrganizationDTO(
                            id = '', 
                            entity_type = null, 
                            created_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            discriminator = '', 
                            _etag = '', 
                            require_attention = True, 
                            has_errors = True, 
                            has_warnings = True, 
                            is_read_only = True, 
                            automatic_processing_enabled = True, 
                            migration_mode = True, 
                            code = '', 
                            description = '', 
                            vat_account_number = '', 
                            company_account_number = '', 
                            logo = '', 
                            logo_cdn_url = '', 
                            primary_color = '', 
                            secondary_color = '', 
                            persist_logo_in_portal = True, 
                            persist_color_in_portal = True, 
                            address = null, 
                            contact_details = null, 
                            time_zone = '', 
                            culture = null, 
                            manually_set_customer_number = True, 
                            manually_set_contract_number = True, 
                            marked_for_deletion = True, 
                            originally_enabled = True, 
                            features = null, )
                        ], 
                    has_next_page = True, 
                    next_page_token = '', 
                    total_records = 56, 
                    sortable_fields = [
                        ''
                        ], 
                    aggregate_details = [
                        configuration_client.models.aggregate_details_dto.AggregateDetailsDTO(
                            code = '', 
                            translation = '', 
                            value = 1.337, 
                            value_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                        ], )
            )
        else:
            return OrganizationDTOPagedResponseModelDTOApiResponseDTO(
        )
        """

    def testOrganizationDTOPagedResponseModelDTOApiResponseDTO(self):
        """Test OrganizationDTOPagedResponseModelDTOApiResponseDTO"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
