# coding: utf-8

"""
    Configuration

    Configuration API

    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from configuration_client.models.update_billing_parameters_request import UpdateBillingParametersRequest

class TestUpdateBillingParametersRequest(unittest.TestCase):
    """UpdateBillingParametersRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> UpdateBillingParametersRequest:
        """Test UpdateBillingParametersRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `UpdateBillingParametersRequest`
        """
        model = UpdateBillingParametersRequest()
        if include_optional:
            return UpdateBillingParametersRequest(
                skip_approval = True,
                skip_payment = True,
                enable_ubl = True,
                disable_automatic_billing_processes = True,
                days_after_invoice_checkpoint_date_to_create_invoice = 56,
                days_before_advance_start_date_to_create_advance = 56,
                enable_invoice_collection = True,
                collection_border_invoice_created_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                collection_write_off_handling = 'nowriteoff',
                group_invoice_collection_by_customer = True,
                do_not_credit_advances_when_unpaid = True,
                advance_amount_lower_threshold = 1.337,
                default_tax_code_for_person_advances = '',
                default_tax_code_for_organisation_advances = '',
                prepayment_parameters = configuration_client.models.update_prepayment_parameters_request.UpdatePrepaymentParametersRequest(
                    emergency_credit = 1.337, 
                    enable_deduction = True, 
                    deduction_rate = 1.337, ),
                advance_calculation_parameters = configuration_client.models.update_advance_calculation_parameters_request.UpdateAdvanceCalculationParametersRequest(
                    recalculation_type = null, 
                    advance_limit_type = null, 
                    advance_limit_lower_threshold = 1.337, 
                    advance_limit_upper_threshold = 1.337, 
                    minimum_accuracy = null, )
            )
        else:
            return UpdateBillingParametersRequest(
        )
        """

    def testUpdateBillingParametersRequest(self):
        """Test UpdateBillingParametersRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
