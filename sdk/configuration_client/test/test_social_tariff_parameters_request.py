# coding: utf-8

"""
    Configuration

    Configuration API

    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from configuration_client.models.social_tariff_parameters_request import SocialTariffParametersRequest

class TestSocialTariffParametersRequest(unittest.TestCase):
    """SocialTariffParametersRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SocialTariffParametersRequest:
        """Test SocialTariffParametersRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SocialTariffParametersRequest`
        """
        model = SocialTariffParametersRequest()
        if include_optional:
            return SocialTariffParametersRequest(
                kbo_number = '',
                gln_id = '',
                supplier_address = configuration_client.models.address_dto.AddressDTO(
                    street_name = '', 
                    street_number = '', 
                    street_number_addition = '', 
                    postal_code = '', 
                    building_name = '', 
                    locality = '', 
                    city = '', 
                    country = null, 
                    localized_display = '', 
                    line_one = '', 
                    line_two = '', ),
                contact_email_address = '',
                contact_telephone_number = '',
                contact_fax_number = '',
                contact_last_name = '',
                contact_first_name = '',
                social_tariff_custom_entity_property_id = '',
                share_props_with_government_custom_entity_property_id = '',
                bim_custom_entity_property_id = ''
            )
        else:
            return SocialTariffParametersRequest(
        )
        """

    def testSocialTariffParametersRequest(self):
        """Test SocialTariffParametersRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
