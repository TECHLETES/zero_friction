# coding: utf-8

"""
    Configuration

    Configuration API

    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from configuration_client.models.collection_pdf_template_dto import CollectionPdfTemplateDTO

class TestCollectionPdfTemplateDTO(unittest.TestCase):
    """CollectionPdfTemplateDTO unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CollectionPdfTemplateDTO:
        """Test CollectionPdfTemplateDTO
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CollectionPdfTemplateDTO`
        """
        model = CollectionPdfTemplateDTO()
        if include_optional:
            return CollectionPdfTemplateDTO(
                file_name = '',
                use_case = 'pdf',
                use_build_in = True,
                custom_template_internal_file_path = '',
                custom_template_file_name = '',
                translation_status = 'defaulttranslation',
                envelope_settings = configuration_client.models.envelope_settings_dto.EnvelopeSettingsDTO(
                    margin_position = null, 
                    margin = 56, 
                    margin_top = 56, ),
                render_header_footer = True,
                header_text = '',
                footer_text = '',
                override_external_printing_checks = True,
                supports_external_printing = True,
                show_country = True
            )
        else:
            return CollectionPdfTemplateDTO(
        )
        """

    def testCollectionPdfTemplateDTO(self):
        """Test CollectionPdfTemplateDTO"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
